package org.sqlproc.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sqlproc.dsl.services.ProcessorDslGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalProcessorDslParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_WS", "RULE_IDENT", "RULE_LPAREN", "RULE_NUMBER", "RULE_RPAREN", "RULE_COLON", "RULE_PLUS", "RULE_MINUS", "RULE_SEMICOLON", "RULE_REST", "RULE_IDENT_DOT", "RULE_STRING", "RULE_COMMA", "RULE_LBRACE", "RULE_RBRACE", "RULE_QUESTI", "RULE_NOT", "RULE_BAND", "RULE_BOR", "RULE_HASH", "RULE_AT", "RULE_CARET", "RULE_EQUALS", "RULE_LESS_THAN", "RULE_MORE_THAN", "RULE_PERCENT", "RULE_DOT", "RULE_AND", "RULE_OR", "RULE_ESC_CHAR", "RULE_ON_OFF", "RULE_STATEMENT_TYPE", "RULE_MAPPING_TYPE", "RULE_OPTION_TYPE", "RULE_STRING_VALUE", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "'->'", "'resolve-pojo-on'", "'resolve-pojo-off'", "'database-'", "'pojogen-'", "'metagen-'", "'daogen-'", "'replace-all-regex'", "'replace-all-replacement'", "'compress-meta-directives'", "'is-online'", "'is-offline'", "'has-url'", "'login-username'", "'login-password'", "'in-catalog'", "'active-schema'", "'jdbc-driver'", "'ddl-create'", "'ddl-drop'", "'index-types'", "'skip-indexes'", "'skip-functions-procedures'", "'skip-check-constraints'", "'is-of-type'", "'show-database-info'", "'show-driver-info'", "'show-driver-output'", "'debug-level'", "'take-comments'", "'lowercase-names'", "'uppercase-names'", "'types-sqltypes'", "'types-in-table'", "'types-for-columns'", "'types-for-procedure'", "'types-for-function'", "'show-type-for-column'", "'show-type-for-procedure'", "'show-type-for-function'", "'ignore-tables'", "'only-tables'", "'not-abstract-tables'", "'join-tables'", "'ignore-columns'", "'required-columns'", "'not-required-columns'", "'create-columns'", "'rename-tables'", "'rename-columns'", "'ignore-one-to-many'", "'ignore-many-to-one'", "'inherit-many-to-one'", "'create-one-to-many'", "'create-many-to-one'", "'table-many-to-many'", "'inherit-discriminator'", "'generate-methods'", "'generate-operators'", "'implements-interfaces'", "'extends-class'", "'implements-interfaces-generics'", "'extends-class-generics'", "'generate-wrappers'", "'generate-validation-annotations'", "'preserve-foreign-keys'", "'make-it-final'", "'version-column'", "'pojos-for-procedures'", "'pojos-for-functions'", "'active-filter'", "'package'", "'enum-for-check-constraints'", "'global-sequence'", "'table-sequence'", "'global-identity'", "'table-identity'", "'column-meta-type'", "'statement-meta-type'", "'like-columns'", "'not-like-columns'", "'generate-sequences'", "'generate-identities'", "'generate-idgenerators'", "'generate-default-idgenerators'", "'function-result'", "'function-result-set'", "'procedure-result-set'", "'optimize-insert'", "'optional-features'", "'pojo'", "'table'", "'procedure'", "'function'", "'[]'", "'#Suffix'", "'#Implementation'", "'#Conflict'", "'#Static'", "'#Constructor'", "'#Standard'", "'#Setter'", "'#Getter'", "'#Attribute'", "'import'", "'#Generics'", "'implements'", "'onlyPojos'", "'onlyDaos'", "'exceptPojos'", "'exceptDaos'", "'extends'", "'final'", "'abstract'", "'#ToString'", "'#Index'", "'#Operators'", "'#Serializable'", "'#InheritanceChild'", "'#Equals'", "'#HashCode'", "'#Required'", "'#PrimaryKey'", "'#InheritanceDiscriminator'", "'#Version'", "'#UpdateCol'", "'#CreateCol'", "'#ToInit'", "'#EnumInit'", "'#IsDef'", "'#EnumDef'", "'enum'", "'#Values'", "'#FunctionCallQuery'", "'#ProcedureCallQuery'", "'#FunctionCall'", "'#ProcedureUpdate'", "'#FunctionQuery'", "'#InheritanceHandler'", "'#CRUD'", "'#Query'", "'dao'", "'.*'"
    };
    public static final int T__159=159;
    public static final int T__158=158;
    public static final int RULE_OR=32;
    public static final int RULE_PERCENT=29;
    public static final int T__160=160;
    public static final int RULE_AND=31;
    public static final int T__167=167;
    public static final int T__168=168;
    public static final int EOF=-1;
    public static final int T__165=165;
    public static final int T__166=166;
    public static final int T__163=163;
    public static final int T__164=164;
    public static final int T__161=161;
    public static final int T__162=162;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int RULE_REST=13;
    public static final int T__148=148;
    public static final int T__147=147;
    public static final int T__90=90;
    public static final int T__149=149;
    public static final int RULE_LPAREN=6;
    public static final int T__154=154;
    public static final int RULE_IDENT_DOT=14;
    public static final int T__155=155;
    public static final int T__156=156;
    public static final int T__157=157;
    public static final int T__99=99;
    public static final int T__150=150;
    public static final int T__98=98;
    public static final int T__151=151;
    public static final int T__97=97;
    public static final int T__152=152;
    public static final int T__96=96;
    public static final int T__153=153;
    public static final int T__95=95;
    public static final int T__139=139;
    public static final int RULE_BAND=21;
    public static final int T__138=138;
    public static final int T__137=137;
    public static final int T__136=136;
    public static final int T__80=80;
    public static final int RULE_RBRACE=18;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_STRING_VALUE=38;
    public static final int RULE_HASH=23;
    public static final int RULE_COMMA=16;
    public static final int T__141=141;
    public static final int T__85=85;
    public static final int RULE_QUESTI=19;
    public static final int T__142=142;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__140=140;
    public static final int T__86=86;
    public static final int T__145=145;
    public static final int T__89=89;
    public static final int T__146=146;
    public static final int T__88=88;
    public static final int RULE_ML_COMMENT=39;
    public static final int T__143=143;
    public static final int T__144=144;
    public static final int RULE_ON_OFF=34;
    public static final int T__126=126;
    public static final int T__125=125;
    public static final int RULE_MINUS=11;
    public static final int T__128=128;
    public static final int RULE_STRING=15;
    public static final int T__127=127;
    public static final int T__71=71;
    public static final int T__129=129;
    public static final int T__72=72;
    public static final int T__70=70;
    public static final int RULE_IDENT=5;
    public static final int RULE_RPAREN=8;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__130=130;
    public static final int T__74=74;
    public static final int T__131=131;
    public static final int T__73=73;
    public static final int T__132=132;
    public static final int T__133=133;
    public static final int T__79=79;
    public static final int RULE_AT=24;
    public static final int T__134=134;
    public static final int T__78=78;
    public static final int T__135=135;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__118=118;
    public static final int RULE_SEMICOLON=12;
    public static final int T__119=119;
    public static final int T__116=116;
    public static final int T__117=117;
    public static final int T__114=114;
    public static final int T__115=115;
    public static final int RULE_OPTION_TYPE=37;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__120=120;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int RULE_NOT=20;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int RULE_DOT=30;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int RULE_NUMBER=7;
    public static final int T__107=107;
    public static final int T__108=108;
    public static final int T__109=109;
    public static final int RULE_STATEMENT_TYPE=35;
    public static final int T__59=59;
    public static final int T__103=103;
    public static final int T__104=104;
    public static final int T__105=105;
    public static final int T__106=106;
    public static final int T__111=111;
    public static final int T__110=110;
    public static final int T__113=113;
    public static final int T__112=112;
    public static final int RULE_LBRACE=17;
    public static final int RULE_BOR=22;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__183=183;
    public static final int T__43=43;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_CARET=25;
    public static final int T__48=48;
    public static final int RULE_MORE_THAN=28;
    public static final int T__49=49;
    public static final int T__180=180;
    public static final int RULE_PLUS=10;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__100=100;
    public static final int RULE_SL_COMMENT=40;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int RULE_COLON=9;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__177=177;
    public static final int RULE_ESC_CHAR=33;
    public static final int T__176=176;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int RULE_EQUALS=26;
    public static final int RULE_LESS_THAN=27;
    public static final int RULE_WS=4;
    public static final int T__169=169;
    public static final int RULE_MAPPING_TYPE=36;

    // delegates
    // delegators


        public InternalProcessorDslParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalProcessorDslParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalProcessorDslParser.tokenNames; }
    public String getGrammarFileName() { return "//home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g"; }



     	private ProcessorDslGrammarAccess grammarAccess;
     	
        public InternalProcessorDslParser(TokenStream input, ProcessorDslGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "Artifacts";	
       	}
       	
       	@Override
       	protected ProcessorDslGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleArtifacts"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:67:1: entryRuleArtifacts returns [EObject current=null] : iv_ruleArtifacts= ruleArtifacts EOF ;
    public final EObject entryRuleArtifacts() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArtifacts = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:68:2: (iv_ruleArtifacts= ruleArtifacts EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:69:2: iv_ruleArtifacts= ruleArtifacts EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArtifactsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleArtifacts_in_entryRuleArtifacts75);
            iv_ruleArtifacts=ruleArtifacts();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArtifacts; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleArtifacts85); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArtifacts"


    // $ANTLR start "ruleArtifacts"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:76:1: ruleArtifacts returns [EObject current=null] : ( () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )* ) )* ) ;
    public final EObject ruleArtifacts() throws RecognitionException {
        EObject current = null;

        Token this_WS_1=null;
        Token this_WS_3=null;
        Token this_WS_5=null;
        Token this_WS_7=null;
        Token this_WS_9=null;
        Token this_WS_11=null;
        Token this_WS_13=null;
        Token this_WS_15=null;
        Token this_WS_17=null;
        Token this_WS_19=null;
        EObject lv_properties_2_0 = null;

        EObject lv_pojos_4_0 = null;

        EObject lv_tables_6_0 = null;

        EObject lv_procedures_8_0 = null;

        EObject lv_functions_10_0 = null;

        EObject lv_statements_12_0 = null;

        EObject lv_mappings_14_0 = null;

        EObject lv_features_16_0 = null;

        EObject lv_packages_18_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:79:28: ( ( () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )* ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:80:1: ( () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )* ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:80:1: ( () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )* ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:80:2: () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )* ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:80:2: ()
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:81:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArtifactsAccess().getArtifactsAction_0(),
                          current);
                  
            }

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:86:2: (this_WS_1= RULE_WS )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_WS) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:86:3: this_WS_1= RULE_WS
            	    {
            	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts131); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_1, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:3: ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )* ) )*
            loop11:
            do {
                int alt11=10;
                alt11 = dfa11.predict(input);
                switch (alt11) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:4: ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:4: ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:5: ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:5: ( (lv_properties_2_0= ruleProperty ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:91:1: (lv_properties_2_0= ruleProperty )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:91:1: (lv_properties_2_0= ruleProperty )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:92:3: lv_properties_2_0= ruleProperty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getPropertiesPropertyParserRuleCall_2_0_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleProperty_in_ruleArtifacts155);
            	    lv_properties_2_0=ruleProperty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"properties",
            	              		lv_properties_2_0, 
            	              		"Property");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:108:2: (this_WS_3= RULE_WS )*
            	    loop2:
            	    do {
            	        int alt2=2;
            	        int LA2_0 = input.LA(1);

            	        if ( (LA2_0==RULE_WS) ) {
            	            alt2=1;
            	        }


            	        switch (alt2) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:108:3: this_WS_3= RULE_WS
            	    	    {
            	    	    this_WS_3=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts167); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_3, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_0_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop2;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:113:6: ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:113:6: ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:113:7: ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:113:7: ( (lv_pojos_4_0= rulePojoDefinition ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:114:1: (lv_pojos_4_0= rulePojoDefinition )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:114:1: (lv_pojos_4_0= rulePojoDefinition )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:115:3: lv_pojos_4_0= rulePojoDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getPojosPojoDefinitionParserRuleCall_2_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_rulePojoDefinition_in_ruleArtifacts197);
            	    lv_pojos_4_0=rulePojoDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pojos",
            	              		lv_pojos_4_0, 
            	              		"PojoDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:131:2: (this_WS_5= RULE_WS )*
            	    loop3:
            	    do {
            	        int alt3=2;
            	        int LA3_0 = input.LA(1);

            	        if ( (LA3_0==RULE_WS) ) {
            	            alt3=1;
            	        }


            	        switch (alt3) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:131:3: this_WS_5= RULE_WS
            	    	    {
            	    	    this_WS_5=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts209); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_5, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_1_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop3;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:136:6: ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:136:6: ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:136:7: ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:136:7: ( (lv_tables_6_0= ruleTableDefinition ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:137:1: (lv_tables_6_0= ruleTableDefinition )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:137:1: (lv_tables_6_0= ruleTableDefinition )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:138:3: lv_tables_6_0= ruleTableDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getTablesTableDefinitionParserRuleCall_2_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleTableDefinition_in_ruleArtifacts239);
            	    lv_tables_6_0=ruleTableDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"tables",
            	              		lv_tables_6_0, 
            	              		"TableDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:154:2: (this_WS_7= RULE_WS )*
            	    loop4:
            	    do {
            	        int alt4=2;
            	        int LA4_0 = input.LA(1);

            	        if ( (LA4_0==RULE_WS) ) {
            	            alt4=1;
            	        }


            	        switch (alt4) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:154:3: this_WS_7= RULE_WS
            	    	    {
            	    	    this_WS_7=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts251); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_7, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_2_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop4;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 4 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:159:6: ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:159:6: ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:159:7: ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:159:7: ( (lv_procedures_8_0= ruleProcedureDefinition ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:160:1: (lv_procedures_8_0= ruleProcedureDefinition )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:160:1: (lv_procedures_8_0= ruleProcedureDefinition )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:161:3: lv_procedures_8_0= ruleProcedureDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getProceduresProcedureDefinitionParserRuleCall_2_3_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleProcedureDefinition_in_ruleArtifacts281);
            	    lv_procedures_8_0=ruleProcedureDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"procedures",
            	              		lv_procedures_8_0, 
            	              		"ProcedureDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:177:2: (this_WS_9= RULE_WS )*
            	    loop5:
            	    do {
            	        int alt5=2;
            	        int LA5_0 = input.LA(1);

            	        if ( (LA5_0==RULE_WS) ) {
            	            alt5=1;
            	        }


            	        switch (alt5) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:177:3: this_WS_9= RULE_WS
            	    	    {
            	    	    this_WS_9=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts293); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_9, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_3_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop5;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 5 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:182:6: ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:182:6: ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:182:7: ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:182:7: ( (lv_functions_10_0= ruleFunctionDefinition ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:183:1: (lv_functions_10_0= ruleFunctionDefinition )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:183:1: (lv_functions_10_0= ruleFunctionDefinition )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:184:3: lv_functions_10_0= ruleFunctionDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getFunctionsFunctionDefinitionParserRuleCall_2_4_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleFunctionDefinition_in_ruleArtifacts323);
            	    lv_functions_10_0=ruleFunctionDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"functions",
            	              		lv_functions_10_0, 
            	              		"FunctionDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:200:2: (this_WS_11= RULE_WS )*
            	    loop6:
            	    do {
            	        int alt6=2;
            	        int LA6_0 = input.LA(1);

            	        if ( (LA6_0==RULE_WS) ) {
            	            alt6=1;
            	        }


            	        switch (alt6) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:200:3: this_WS_11= RULE_WS
            	    	    {
            	    	    this_WS_11=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts335); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_11, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_4_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop6;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 6 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:205:6: ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:205:6: ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:205:7: ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:205:7: ( (lv_statements_12_0= ruleMetaStatement ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:206:1: (lv_statements_12_0= ruleMetaStatement )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:206:1: (lv_statements_12_0= ruleMetaStatement )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:207:3: lv_statements_12_0= ruleMetaStatement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getStatementsMetaStatementParserRuleCall_2_5_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleMetaStatement_in_ruleArtifacts365);
            	    lv_statements_12_0=ruleMetaStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_12_0, 
            	              		"MetaStatement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:223:2: (this_WS_13= RULE_WS )*
            	    loop7:
            	    do {
            	        int alt7=2;
            	        int LA7_0 = input.LA(1);

            	        if ( (LA7_0==RULE_WS) ) {
            	            alt7=1;
            	        }


            	        switch (alt7) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:223:3: this_WS_13= RULE_WS
            	    	    {
            	    	    this_WS_13=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts377); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_13, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_5_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop7;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 7 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:228:6: ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:228:6: ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:228:7: ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:228:7: ( (lv_mappings_14_0= ruleMappingRule ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:229:1: (lv_mappings_14_0= ruleMappingRule )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:229:1: (lv_mappings_14_0= ruleMappingRule )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:230:3: lv_mappings_14_0= ruleMappingRule
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getMappingsMappingRuleParserRuleCall_2_6_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleMappingRule_in_ruleArtifacts407);
            	    lv_mappings_14_0=ruleMappingRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"mappings",
            	              		lv_mappings_14_0, 
            	              		"MappingRule");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:246:2: (this_WS_15= RULE_WS )*
            	    loop8:
            	    do {
            	        int alt8=2;
            	        int LA8_0 = input.LA(1);

            	        if ( (LA8_0==RULE_WS) ) {
            	            alt8=1;
            	        }


            	        switch (alt8) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:246:3: this_WS_15= RULE_WS
            	    	    {
            	    	    this_WS_15=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts419); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_15, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_6_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop8;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 8 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:251:6: ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:251:6: ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:251:7: ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:251:7: ( (lv_features_16_0= ruleOptionalFeature ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:252:1: (lv_features_16_0= ruleOptionalFeature )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:252:1: (lv_features_16_0= ruleOptionalFeature )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:253:3: lv_features_16_0= ruleOptionalFeature
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getFeaturesOptionalFeatureParserRuleCall_2_7_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleOptionalFeature_in_ruleArtifacts449);
            	    lv_features_16_0=ruleOptionalFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"features",
            	              		lv_features_16_0, 
            	              		"OptionalFeature");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:269:2: (this_WS_17= RULE_WS )*
            	    loop9:
            	    do {
            	        int alt9=2;
            	        int LA9_0 = input.LA(1);

            	        if ( (LA9_0==RULE_WS) ) {
            	            alt9=1;
            	        }


            	        switch (alt9) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:269:3: this_WS_17= RULE_WS
            	    	    {
            	    	    this_WS_17=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts461); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_17, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_7_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop9;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 9 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:274:6: ( ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:274:6: ( ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:274:7: ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:274:7: ( (lv_packages_18_0= rulePackage ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:275:1: (lv_packages_18_0= rulePackage )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:275:1: (lv_packages_18_0= rulePackage )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:276:3: lv_packages_18_0= rulePackage
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getPackagesPackageParserRuleCall_2_8_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_rulePackage_in_ruleArtifacts491);
            	    lv_packages_18_0=rulePackage();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"packages",
            	              		lv_packages_18_0, 
            	              		"Package");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:292:2: (this_WS_19= RULE_WS )*
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==RULE_WS) ) {
            	            alt10=1;
            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:292:3: this_WS_19= RULE_WS
            	    	    {
            	    	    this_WS_19=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts503); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_19, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_8_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop10;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArtifacts"


    // $ANTLR start "entryRuleDatabaseCatalogAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:304:1: entryRuleDatabaseCatalogAssignement returns [EObject current=null] : iv_ruleDatabaseCatalogAssignement= ruleDatabaseCatalogAssignement EOF ;
    public final EObject entryRuleDatabaseCatalogAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseCatalogAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:305:2: (iv_ruleDatabaseCatalogAssignement= ruleDatabaseCatalogAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:306:2: iv_ruleDatabaseCatalogAssignement= ruleDatabaseCatalogAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseCatalogAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseCatalogAssignement_in_entryRuleDatabaseCatalogAssignement543);
            iv_ruleDatabaseCatalogAssignement=ruleDatabaseCatalogAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseCatalogAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseCatalogAssignement553); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseCatalogAssignement"


    // $ANTLR start "ruleDatabaseCatalogAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:313:1: ruleDatabaseCatalogAssignement returns [EObject current=null] : ( (lv_dbCatalog_0_0= rulePropertyValue ) ) ;
    public final EObject ruleDatabaseCatalogAssignement() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_dbCatalog_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:316:28: ( ( (lv_dbCatalog_0_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:317:1: ( (lv_dbCatalog_0_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:317:1: ( (lv_dbCatalog_0_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:318:1: (lv_dbCatalog_0_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:318:1: (lv_dbCatalog_0_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:319:3: lv_dbCatalog_0_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDatabaseCatalogAssignementAccess().getDbCatalogPropertyValueParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseCatalogAssignement598);
            lv_dbCatalog_0_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDatabaseCatalogAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"dbCatalog",
                      		lv_dbCatalog_0_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseCatalogAssignement"


    // $ANTLR start "entryRuleDatabaseSchemaAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:343:1: entryRuleDatabaseSchemaAssignement returns [EObject current=null] : iv_ruleDatabaseSchemaAssignement= ruleDatabaseSchemaAssignement EOF ;
    public final EObject entryRuleDatabaseSchemaAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseSchemaAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:344:2: (iv_ruleDatabaseSchemaAssignement= ruleDatabaseSchemaAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:345:2: iv_ruleDatabaseSchemaAssignement= ruleDatabaseSchemaAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseSchemaAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseSchemaAssignement_in_entryRuleDatabaseSchemaAssignement633);
            iv_ruleDatabaseSchemaAssignement=ruleDatabaseSchemaAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseSchemaAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseSchemaAssignement643); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseSchemaAssignement"


    // $ANTLR start "ruleDatabaseSchemaAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:352:1: ruleDatabaseSchemaAssignement returns [EObject current=null] : ( (lv_dbSchema_0_0= rulePropertyValue ) ) ;
    public final EObject ruleDatabaseSchemaAssignement() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_dbSchema_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:355:28: ( ( (lv_dbSchema_0_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:356:1: ( (lv_dbSchema_0_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:356:1: ( (lv_dbSchema_0_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:357:1: (lv_dbSchema_0_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:357:1: (lv_dbSchema_0_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:358:3: lv_dbSchema_0_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDatabaseSchemaAssignementAccess().getDbSchemaPropertyValueParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseSchemaAssignement688);
            lv_dbSchema_0_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDatabaseSchemaAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"dbSchema",
                      		lv_dbSchema_0_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseSchemaAssignement"


    // $ANTLR start "entryRuleDatabaseTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:382:1: entryRuleDatabaseTypeAssignement returns [EObject current=null] : iv_ruleDatabaseTypeAssignement= ruleDatabaseTypeAssignement EOF ;
    public final EObject entryRuleDatabaseTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:383:2: (iv_ruleDatabaseTypeAssignement= ruleDatabaseTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:384:2: iv_ruleDatabaseTypeAssignement= ruleDatabaseTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseTypeAssignement_in_entryRuleDatabaseTypeAssignement723);
            iv_ruleDatabaseTypeAssignement=ruleDatabaseTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseTypeAssignement733); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseTypeAssignement"


    // $ANTLR start "ruleDatabaseTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:391:1: ruleDatabaseTypeAssignement returns [EObject current=null] : ( (lv_dbType_0_0= RULE_IDENT ) ) ;
    public final EObject ruleDatabaseTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbType_0_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:394:28: ( ( (lv_dbType_0_0= RULE_IDENT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:395:1: ( (lv_dbType_0_0= RULE_IDENT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:395:1: ( (lv_dbType_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:396:1: (lv_dbType_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:396:1: (lv_dbType_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:397:3: lv_dbType_0_0= RULE_IDENT
            {
            lv_dbType_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleDatabaseTypeAssignement774); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbType_0_0, grammarAccess.getDatabaseTypeAssignementAccess().getDbTypeIDENTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDatabaseTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbType",
                      		lv_dbType_0_0, 
                      		"IDENT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseTypeAssignement"


    // $ANTLR start "entryRuleDatabaseMetaInfoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:421:1: entryRuleDatabaseMetaInfoAssignement returns [EObject current=null] : iv_ruleDatabaseMetaInfoAssignement= ruleDatabaseMetaInfoAssignement EOF ;
    public final EObject entryRuleDatabaseMetaInfoAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseMetaInfoAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:422:2: (iv_ruleDatabaseMetaInfoAssignement= ruleDatabaseMetaInfoAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:423:2: iv_ruleDatabaseMetaInfoAssignement= ruleDatabaseMetaInfoAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseMetaInfoAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseMetaInfoAssignement_in_entryRuleDatabaseMetaInfoAssignement814);
            iv_ruleDatabaseMetaInfoAssignement=ruleDatabaseMetaInfoAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseMetaInfoAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseMetaInfoAssignement824); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseMetaInfoAssignement"


    // $ANTLR start "ruleDatabaseMetaInfoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:430:1: ruleDatabaseMetaInfoAssignement returns [EObject current=null] : ( (lv_dbMetaInfo_0_0= rulePropertyValue ) ) ;
    public final EObject ruleDatabaseMetaInfoAssignement() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_dbMetaInfo_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:433:28: ( ( (lv_dbMetaInfo_0_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:434:1: ( (lv_dbMetaInfo_0_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:434:1: ( (lv_dbMetaInfo_0_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:435:1: (lv_dbMetaInfo_0_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:435:1: (lv_dbMetaInfo_0_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:436:3: lv_dbMetaInfo_0_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDatabaseMetaInfoAssignementAccess().getDbMetaInfoPropertyValueParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseMetaInfoAssignement869);
            lv_dbMetaInfo_0_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDatabaseMetaInfoAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"dbMetaInfo",
                      		lv_dbMetaInfo_0_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseMetaInfoAssignement"


    // $ANTLR start "entryRuleDriverMetaInfoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:460:1: entryRuleDriverMetaInfoAssignement returns [EObject current=null] : iv_ruleDriverMetaInfoAssignement= ruleDriverMetaInfoAssignement EOF ;
    public final EObject entryRuleDriverMetaInfoAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDriverMetaInfoAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:461:2: (iv_ruleDriverMetaInfoAssignement= ruleDriverMetaInfoAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:462:2: iv_ruleDriverMetaInfoAssignement= ruleDriverMetaInfoAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDriverMetaInfoAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDriverMetaInfoAssignement_in_entryRuleDriverMetaInfoAssignement904);
            iv_ruleDriverMetaInfoAssignement=ruleDriverMetaInfoAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDriverMetaInfoAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDriverMetaInfoAssignement914); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDriverMetaInfoAssignement"


    // $ANTLR start "ruleDriverMetaInfoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:469:1: ruleDriverMetaInfoAssignement returns [EObject current=null] : ( (lv_dbDriverInfo_0_0= rulePropertyValue ) ) ;
    public final EObject ruleDriverMetaInfoAssignement() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_dbDriverInfo_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:472:28: ( ( (lv_dbDriverInfo_0_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:473:1: ( (lv_dbDriverInfo_0_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:473:1: ( (lv_dbDriverInfo_0_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:474:1: (lv_dbDriverInfo_0_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:474:1: (lv_dbDriverInfo_0_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:475:3: lv_dbDriverInfo_0_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDriverMetaInfoAssignementAccess().getDbDriverInfoPropertyValueParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDriverMetaInfoAssignement959);
            lv_dbDriverInfo_0_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDriverMetaInfoAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"dbDriverInfo",
                      		lv_dbDriverInfo_0_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDriverMetaInfoAssignement"


    // $ANTLR start "entryRuleDriverMethodOutputAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:499:1: entryRuleDriverMethodOutputAssignement returns [EObject current=null] : iv_ruleDriverMethodOutputAssignement= ruleDriverMethodOutputAssignement EOF ;
    public final EObject entryRuleDriverMethodOutputAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDriverMethodOutputAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:500:2: (iv_ruleDriverMethodOutputAssignement= ruleDriverMethodOutputAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:501:2: iv_ruleDriverMethodOutputAssignement= ruleDriverMethodOutputAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDriverMethodOutputAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDriverMethodOutputAssignement_in_entryRuleDriverMethodOutputAssignement994);
            iv_ruleDriverMethodOutputAssignement=ruleDriverMethodOutputAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDriverMethodOutputAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDriverMethodOutputAssignement1004); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDriverMethodOutputAssignement"


    // $ANTLR start "ruleDriverMethodOutputAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:508:1: ruleDriverMethodOutputAssignement returns [EObject current=null] : ( ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) ) ) ;
    public final EObject ruleDriverMethodOutputAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_driverMethod_0_0=null;
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_callOutput_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:511:28: ( ( ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:512:1: ( ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:512:1: ( ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:512:2: ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:512:2: ( (lv_driverMethod_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:513:1: (lv_driverMethod_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:513:1: (lv_driverMethod_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:514:3: lv_driverMethod_0_0= RULE_IDENT
            {
            lv_driverMethod_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleDriverMethodOutputAssignement1046); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_driverMethod_0_0, grammarAccess.getDriverMethodOutputAssignementAccess().getDriverMethodIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDriverMethodOutputAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"driverMethod",
                      		lv_driverMethod_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleDriverMethodOutputAssignement1063); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDriverMethodOutputAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:534:1: ( (lv_callOutput_2_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:535:1: (lv_callOutput_2_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:535:1: (lv_callOutput_2_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:536:3: lv_callOutput_2_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDriverMethodOutputAssignementAccess().getCallOutputPropertyValueParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDriverMethodOutputAssignement1084);
            lv_callOutput_2_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDriverMethodOutputAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"callOutput",
                      		lv_callOutput_2_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDriverMethodOutputAssignement"


    // $ANTLR start "entryRuleSqlTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:560:1: entryRuleSqlTypeAssignement returns [EObject current=null] : iv_ruleSqlTypeAssignement= ruleSqlTypeAssignement EOF ;
    public final EObject entryRuleSqlTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSqlTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:561:2: (iv_ruleSqlTypeAssignement= ruleSqlTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:562:2: iv_ruleSqlTypeAssignement= ruleSqlTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSqlTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleSqlTypeAssignement_in_entryRuleSqlTypeAssignement1120);
            iv_ruleSqlTypeAssignement=ruleSqlTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSqlTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleSqlTypeAssignement1130); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSqlTypeAssignement"


    // $ANTLR start "ruleSqlTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:569:1: ruleSqlTypeAssignement returns [EObject current=null] : ( ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) ) ) ;
    public final EObject ruleSqlTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_typeName_0_0=null;
        Token this_LPAREN_1=null;
        Token lv_size_2_0=null;
        Token this_RPAREN_3=null;
        Token otherlv_4=null;
        EObject lv_type_5_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:572:28: ( ( ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:573:1: ( ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:573:1: ( ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:573:2: ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:573:2: ( (lv_typeName_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:574:1: (lv_typeName_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:574:1: (lv_typeName_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:575:3: lv_typeName_0_0= RULE_IDENT
            {
            lv_typeName_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleSqlTypeAssignement1172); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_typeName_0_0, grammarAccess.getSqlTypeAssignementAccess().getTypeNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSqlTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"typeName",
                      		lv_typeName_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:591:2: (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_LPAREN) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:591:3: this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN
                    {
                    this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets000.FOLLOW_RULE_LPAREN_in_ruleSqlTypeAssignement1189); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_1, grammarAccess.getSqlTypeAssignementAccess().getLPARENTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:595:1: ( (lv_size_2_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:596:1: (lv_size_2_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:596:1: (lv_size_2_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:597:3: lv_size_2_0= RULE_NUMBER
                    {
                    lv_size_2_0=(Token)match(input,RULE_NUMBER,FollowSets000.FOLLOW_RULE_NUMBER_in_ruleSqlTypeAssignement1205); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_size_2_0, grammarAccess.getSqlTypeAssignementAccess().getSizeNUMBERTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSqlTypeAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"size",
                              		lv_size_2_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }

                    this_RPAREN_3=(Token)match(input,RULE_RPAREN,FollowSets000.FOLLOW_RULE_RPAREN_in_ruleSqlTypeAssignement1221); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_3, grammarAccess.getSqlTypeAssignementAccess().getRPARENTerminalRuleCall_1_2()); 
                          
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleSqlTypeAssignement1234); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSqlTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_2());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:621:1: ( (lv_type_5_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:622:1: (lv_type_5_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:622:1: (lv_type_5_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:623:3: lv_type_5_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSqlTypeAssignementAccess().getTypePojoTypeParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePojoType_in_ruleSqlTypeAssignement1255);
            lv_type_5_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSqlTypeAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_5_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSqlTypeAssignement"


    // $ANTLR start "entryRuleColumnTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:647:1: entryRuleColumnTypeAssignement returns [EObject current=null] : iv_ruleColumnTypeAssignement= ruleColumnTypeAssignement EOF ;
    public final EObject entryRuleColumnTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColumnTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:648:2: (iv_ruleColumnTypeAssignement= ruleColumnTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:649:2: iv_ruleColumnTypeAssignement= ruleColumnTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getColumnTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_entryRuleColumnTypeAssignement1291);
            iv_ruleColumnTypeAssignement=ruleColumnTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleColumnTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleColumnTypeAssignement1301); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColumnTypeAssignement"


    // $ANTLR start "ruleColumnTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:656:1: ruleColumnTypeAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) ) ) ;
    public final EObject ruleColumnTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        EObject lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:659:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:660:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:660:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:660:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:660:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:661:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:661:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:662:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleColumnTypeAssignement1343); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getColumnTypeAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getColumnTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleColumnTypeAssignement1360); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getColumnTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:682:1: ( (lv_type_2_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:683:1: (lv_type_2_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:683:1: (lv_type_2_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:684:3: lv_type_2_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getColumnTypeAssignementAccess().getTypePojoTypeParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePojoType_in_ruleColumnTypeAssignement1381);
            lv_type_2_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getColumnTypeAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColumnTypeAssignement"


    // $ANTLR start "entryRuleShowColumnTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:708:1: entryRuleShowColumnTypeAssignement returns [EObject current=null] : iv_ruleShowColumnTypeAssignement= ruleShowColumnTypeAssignement EOF ;
    public final EObject entryRuleShowColumnTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShowColumnTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:709:2: (iv_ruleShowColumnTypeAssignement= ruleShowColumnTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:710:2: iv_ruleShowColumnTypeAssignement= ruleShowColumnTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShowColumnTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleShowColumnTypeAssignement_in_entryRuleShowColumnTypeAssignement1417);
            iv_ruleShowColumnTypeAssignement=ruleShowColumnTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShowColumnTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleShowColumnTypeAssignement1427); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShowColumnTypeAssignement"


    // $ANTLR start "ruleShowColumnTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:717:1: ruleShowColumnTypeAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) ) ) ;
    public final EObject ruleShowColumnTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:720:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:721:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:721:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:721:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:721:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:722:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:722:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:723:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleShowColumnTypeAssignement1469); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getShowColumnTypeAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getShowColumnTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleShowColumnTypeAssignement1486); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getShowColumnTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:743:1: ( (lv_type_2_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:744:1: (lv_type_2_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:744:1: (lv_type_2_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:745:3: lv_type_2_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getShowColumnTypeAssignementAccess().getTypePropertyValueParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleShowColumnTypeAssignement1507);
            lv_type_2_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getShowColumnTypeAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShowColumnTypeAssignement"


    // $ANTLR start "entryRuleTableAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:769:1: entryRuleTableAssignement returns [EObject current=null] : iv_ruleTableAssignement= ruleTableAssignement EOF ;
    public final EObject entryRuleTableAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:770:2: (iv_ruleTableAssignement= ruleTableAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:771:2: iv_ruleTableAssignement= ruleTableAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleTableAssignement_in_entryRuleTableAssignement1543);
            iv_ruleTableAssignement=ruleTableAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleTableAssignement1553); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableAssignement"


    // $ANTLR start "ruleTableAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:778:1: ruleTableAssignement returns [EObject current=null] : ( ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) ) ;
    public final EObject ruleTableAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbTable_0_0=null;
        Token otherlv_1=null;
        Token lv_newName_2_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:781:28: ( ( ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:782:1: ( ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:782:1: ( ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:782:2: ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:782:2: ( (lv_dbTable_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:783:1: (lv_dbTable_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:783:1: (lv_dbTable_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:784:3: lv_dbTable_0_0= RULE_IDENT
            {
            lv_dbTable_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleTableAssignement1595); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbTable_0_0, grammarAccess.getTableAssignementAccess().getDbTableIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTableAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbTable",
                      		lv_dbTable_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleTableAssignement1612); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTableAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:804:1: ( (lv_newName_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:805:1: (lv_newName_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:805:1: (lv_newName_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:806:3: lv_newName_2_0= RULE_IDENT
            {
            lv_newName_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleTableAssignement1629); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_newName_2_0, grammarAccess.getTableAssignementAccess().getNewNameIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTableAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"newName",
                      		lv_newName_2_0, 
                      		"IDENT");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableAssignement"


    // $ANTLR start "entryRuleJoinTableAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:830:1: entryRuleJoinTableAssignement returns [EObject current=null] : iv_ruleJoinTableAssignement= ruleJoinTableAssignement EOF ;
    public final EObject entryRuleJoinTableAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJoinTableAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:831:2: (iv_ruleJoinTableAssignement= ruleJoinTableAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:832:2: iv_ruleJoinTableAssignement= ruleJoinTableAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJoinTableAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleJoinTableAssignement_in_entryRuleJoinTableAssignement1670);
            iv_ruleJoinTableAssignement=ruleJoinTableAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJoinTableAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleJoinTableAssignement1680); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJoinTableAssignement"


    // $ANTLR start "ruleJoinTableAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:839:1: ruleJoinTableAssignement returns [EObject current=null] : ( ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) ;
    public final EObject ruleJoinTableAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbTable_0_0=null;
        Token otherlv_1=null;
        Token lv_dbTables_2_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:842:28: ( ( ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:843:1: ( ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:843:1: ( ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:843:2: ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:843:2: ( (lv_dbTable_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:844:1: (lv_dbTable_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:844:1: (lv_dbTable_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:845:3: lv_dbTable_0_0= RULE_IDENT
            {
            lv_dbTable_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleJoinTableAssignement1722); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbTable_0_0, grammarAccess.getJoinTableAssignementAccess().getDbTableIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getJoinTableAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbTable",
                      		lv_dbTable_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:861:2: (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+
            int cnt13=0;
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==41) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:861:4: otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) )
            	    {
            	    otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleJoinTableAssignement1740); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getJoinTableAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:865:1: ( (lv_dbTables_2_0= RULE_IDENT ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:866:1: (lv_dbTables_2_0= RULE_IDENT )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:866:1: (lv_dbTables_2_0= RULE_IDENT )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:867:3: lv_dbTables_2_0= RULE_IDENT
            	    {
            	    lv_dbTables_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleJoinTableAssignement1757); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_dbTables_2_0, grammarAccess.getJoinTableAssignementAccess().getDbTablesIDENTTerminalRuleCall_1_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getJoinTableAssignementRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"dbTables",
            	              		lv_dbTables_2_0, 
            	              		"IDENT");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt13 >= 1 ) break loop13;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(13, input);
                        throw eee;
                }
                cnt13++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJoinTableAssignement"


    // $ANTLR start "entryRuleColumnAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:891:1: entryRuleColumnAssignement returns [EObject current=null] : iv_ruleColumnAssignement= ruleColumnAssignement EOF ;
    public final EObject entryRuleColumnAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColumnAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:892:2: (iv_ruleColumnAssignement= ruleColumnAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:893:2: iv_ruleColumnAssignement= ruleColumnAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getColumnAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleColumnAssignement_in_entryRuleColumnAssignement1800);
            iv_ruleColumnAssignement=ruleColumnAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleColumnAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleColumnAssignement1810); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColumnAssignement"


    // $ANTLR start "ruleColumnAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:900:1: ruleColumnAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) ) ;
    public final EObject ruleColumnAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_newName_2_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:903:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:904:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:904:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:904:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:904:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:905:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:905:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:906:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleColumnAssignement1852); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getColumnAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getColumnAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleColumnAssignement1869); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getColumnAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:926:1: ( (lv_newName_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:927:1: (lv_newName_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:927:1: (lv_newName_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:928:3: lv_newName_2_0= RULE_IDENT
            {
            lv_newName_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleColumnAssignement1886); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_newName_2_0, grammarAccess.getColumnAssignementAccess().getNewNameIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getColumnAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"newName",
                      		lv_newName_2_0, 
                      		"IDENT");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColumnAssignement"


    // $ANTLR start "entryRuleImportAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:952:1: entryRuleImportAssignement returns [EObject current=null] : iv_ruleImportAssignement= ruleImportAssignement EOF ;
    public final EObject entryRuleImportAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:953:2: (iv_ruleImportAssignement= ruleImportAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:954:2: iv_ruleImportAssignement= ruleImportAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleImportAssignement_in_entryRuleImportAssignement1927);
            iv_ruleImportAssignement=ruleImportAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleImportAssignement1937); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportAssignement"


    // $ANTLR start "ruleImportAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:961:1: ruleImportAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )? ) ;
    public final EObject ruleImportAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_pkTable_2_0=null;
        Token otherlv_3=null;
        Token lv_pkColumn_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:964:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:965:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:965:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:965:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:965:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:966:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:966:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:967:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImportAssignement1979); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getImportAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getImportAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleImportAssignement1996); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getImportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:987:1: ( (lv_pkTable_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:988:1: (lv_pkTable_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:988:1: (lv_pkTable_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:989:3: lv_pkTable_2_0= RULE_IDENT
            {
            lv_pkTable_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImportAssignement2013); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_pkTable_2_0, grammarAccess.getImportAssignementAccess().getPkTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getImportAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"pkTable",
                      		lv_pkTable_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1005:2: (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==41) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1005:4: otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) )
                    {
                    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleImportAssignement2031); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getImportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1009:1: ( (lv_pkColumn_4_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1010:1: (lv_pkColumn_4_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1010:1: (lv_pkColumn_4_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1011:3: lv_pkColumn_4_0= RULE_IDENT
                    {
                    lv_pkColumn_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImportAssignement2048); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_pkColumn_4_0, grammarAccess.getImportAssignementAccess().getPkColumnIDENTTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImportAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"pkColumn",
                              		lv_pkColumn_4_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportAssignement"


    // $ANTLR start "entryRuleExportAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1035:1: entryRuleExportAssignement returns [EObject current=null] : iv_ruleExportAssignement= ruleExportAssignement EOF ;
    public final EObject entryRuleExportAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1036:2: (iv_ruleExportAssignement= ruleExportAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1037:2: iv_ruleExportAssignement= ruleExportAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleExportAssignement_in_entryRuleExportAssignement2091);
            iv_ruleExportAssignement=ruleExportAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleExportAssignement2101); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExportAssignement"


    // $ANTLR start "ruleExportAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1044:1: ruleExportAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? ) ;
    public final EObject ruleExportAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_fkTable_2_0=null;
        Token otherlv_3=null;
        Token lv_fkColumn_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1047:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1048:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1048:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1048:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1048:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1049:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1049:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1050:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExportAssignement2143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getExportAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getExportAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleExportAssignement2160); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1070:1: ( (lv_fkTable_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1071:1: (lv_fkTable_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1071:1: (lv_fkTable_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1072:3: lv_fkTable_2_0= RULE_IDENT
            {
            lv_fkTable_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExportAssignement2177); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_fkTable_2_0, grammarAccess.getExportAssignementAccess().getFkTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getExportAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"fkTable",
                      		lv_fkTable_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1088:2: (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==41) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1088:4: otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) )
                    {
                    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleExportAssignement2195); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getExportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1092:1: ( (lv_fkColumn_4_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1093:1: (lv_fkColumn_4_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1093:1: (lv_fkColumn_4_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1094:3: lv_fkColumn_4_0= RULE_IDENT
                    {
                    lv_fkColumn_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExportAssignement2212); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_fkColumn_4_0, grammarAccess.getExportAssignementAccess().getFkColumnIDENTTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExportAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"fkColumn",
                              		lv_fkColumn_4_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExportAssignement"


    // $ANTLR start "entryRuleInheritanceAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1118:1: entryRuleInheritanceAssignement returns [EObject current=null] : iv_ruleInheritanceAssignement= ruleInheritanceAssignement EOF ;
    public final EObject entryRuleInheritanceAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInheritanceAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1119:2: (iv_ruleInheritanceAssignement= ruleInheritanceAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1120:2: iv_ruleInheritanceAssignement= ruleInheritanceAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInheritanceAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleInheritanceAssignement_in_entryRuleInheritanceAssignement2255);
            iv_ruleInheritanceAssignement=ruleInheritanceAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInheritanceAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleInheritanceAssignement2265); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInheritanceAssignement"


    // $ANTLR start "ruleInheritanceAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1127:1: ruleInheritanceAssignement returns [EObject current=null] : ( ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+ ) ;
    public final EObject ruleInheritanceAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_discriminator_0_0=null;
        Token otherlv_1=null;
        Token lv_dbTable_2_0=null;
        Token otherlv_3=null;
        Token lv_dbColumns_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1130:28: ( ( ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+ ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1131:1: ( ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+ )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1131:1: ( ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1131:2: ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1131:2: ( (lv_discriminator_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1132:1: (lv_discriminator_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1132:1: (lv_discriminator_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1133:3: lv_discriminator_0_0= RULE_IDENT
            {
            lv_discriminator_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2307); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_discriminator_0_0, grammarAccess.getInheritanceAssignementAccess().getDiscriminatorIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getInheritanceAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"discriminator",
                      		lv_discriminator_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleInheritanceAssignement2324); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInheritanceAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1153:1: ( (lv_dbTable_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1154:1: (lv_dbTable_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1154:1: (lv_dbTable_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1155:3: lv_dbTable_2_0= RULE_IDENT
            {
            lv_dbTable_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2341); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbTable_2_0, grammarAccess.getInheritanceAssignementAccess().getDbTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getInheritanceAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbTable",
                      		lv_dbTable_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1171:2: (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+
            int cnt16=0;
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==41) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1171:4: otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) )
            	    {
            	    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleInheritanceAssignement2359); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getInheritanceAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1175:1: ( (lv_dbColumns_4_0= RULE_IDENT ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1176:1: (lv_dbColumns_4_0= RULE_IDENT )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1176:1: (lv_dbColumns_4_0= RULE_IDENT )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1177:3: lv_dbColumns_4_0= RULE_IDENT
            	    {
            	    lv_dbColumns_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2376); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_dbColumns_4_0, grammarAccess.getInheritanceAssignementAccess().getDbColumnsIDENTTerminalRuleCall_3_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getInheritanceAssignementRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"dbColumns",
            	              		lv_dbColumns_4_0, 
            	              		"IDENT");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt16 >= 1 ) break loop16;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(16, input);
                        throw eee;
                }
                cnt16++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInheritanceAssignement"


    // $ANTLR start "entryRuleManyToManyAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1201:1: entryRuleManyToManyAssignement returns [EObject current=null] : iv_ruleManyToManyAssignement= ruleManyToManyAssignement EOF ;
    public final EObject entryRuleManyToManyAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleManyToManyAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1202:2: (iv_ruleManyToManyAssignement= ruleManyToManyAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1203:2: iv_ruleManyToManyAssignement= ruleManyToManyAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getManyToManyAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleManyToManyAssignement_in_entryRuleManyToManyAssignement2419);
            iv_ruleManyToManyAssignement=ruleManyToManyAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleManyToManyAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleManyToManyAssignement2429); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleManyToManyAssignement"


    // $ANTLR start "ruleManyToManyAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1210:1: ruleManyToManyAssignement returns [EObject current=null] : ( ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? ) ;
    public final EObject ruleManyToManyAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_pkColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_pkTable_2_0=null;
        Token otherlv_3=null;
        Token lv_fkColumn_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1213:28: ( ( ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1214:1: ( ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1214:1: ( ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1214:2: ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1214:2: ( (lv_pkColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1215:1: (lv_pkColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1215:1: (lv_pkColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1216:3: lv_pkColumn_0_0= RULE_IDENT
            {
            lv_pkColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2471); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_pkColumn_0_0, grammarAccess.getManyToManyAssignementAccess().getPkColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getManyToManyAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"pkColumn",
                      		lv_pkColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleManyToManyAssignement2488); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getManyToManyAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1236:1: ( (lv_pkTable_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1237:1: (lv_pkTable_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1237:1: (lv_pkTable_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1238:3: lv_pkTable_2_0= RULE_IDENT
            {
            lv_pkTable_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2505); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_pkTable_2_0, grammarAccess.getManyToManyAssignementAccess().getPkTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getManyToManyAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"pkTable",
                      		lv_pkTable_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1254:2: (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==41) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1254:4: otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) )
                    {
                    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleManyToManyAssignement2523); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getManyToManyAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1258:1: ( (lv_fkColumn_4_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1259:1: (lv_fkColumn_4_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1259:1: (lv_fkColumn_4_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1260:3: lv_fkColumn_4_0= RULE_IDENT
                    {
                    lv_fkColumn_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2540); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_fkColumn_4_0, grammarAccess.getManyToManyAssignementAccess().getFkColumnIDENTTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getManyToManyAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"fkColumn",
                              		lv_fkColumn_4_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleManyToManyAssignement"


    // $ANTLR start "entryRuleDebugLevelAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1284:1: entryRuleDebugLevelAssignement returns [EObject current=null] : iv_ruleDebugLevelAssignement= ruleDebugLevelAssignement EOF ;
    public final EObject entryRuleDebugLevelAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDebugLevelAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1285:2: (iv_ruleDebugLevelAssignement= ruleDebugLevelAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1286:2: iv_ruleDebugLevelAssignement= ruleDebugLevelAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDebugLevelAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDebugLevelAssignement_in_entryRuleDebugLevelAssignement2583);
            iv_ruleDebugLevelAssignement=ruleDebugLevelAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDebugLevelAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDebugLevelAssignement2593); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDebugLevelAssignement"


    // $ANTLR start "ruleDebugLevelAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1293:1: ruleDebugLevelAssignement returns [EObject current=null] : ( ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )? ) ;
    public final EObject ruleDebugLevelAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_debug_0_0=null;
        Token this_WS_1=null;
        AntlrDatatypeRuleToken lv_scope_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1296:28: ( ( ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1297:1: ( ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1297:1: ( ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1297:2: ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1297:2: ( (lv_debug_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1298:1: (lv_debug_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1298:1: (lv_debug_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1299:3: lv_debug_0_0= RULE_IDENT
            {
            lv_debug_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleDebugLevelAssignement2635); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_debug_0_0, grammarAccess.getDebugLevelAssignementAccess().getDebugIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDebugLevelAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"debug",
                      		lv_debug_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1315:2: ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_WS) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1315:3: (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1315:3: (this_WS_1= RULE_WS )+
                    int cnt18=0;
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==RULE_WS) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1315:4: this_WS_1= RULE_WS
                    	    {
                    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDebugLevelAssignement2653); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_1, grammarAccess.getDebugLevelAssignementAccess().getWSTerminalRuleCall_1_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt18 >= 1 ) break loop18;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(18, input);
                                throw eee;
                        }
                        cnt18++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1319:3: ( (lv_scope_2_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1320:1: (lv_scope_2_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1320:1: (lv_scope_2_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1321:3: lv_scope_2_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDebugLevelAssignementAccess().getScopePropertyValueParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDebugLevelAssignement2675);
                    lv_scope_2_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDebugLevelAssignementRule());
                      	        }
                             		set(
                             			current, 
                             			"scope",
                              		lv_scope_2_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDebugLevelAssignement"


    // $ANTLR start "entryRuleProcedurePojoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1345:1: entryRuleProcedurePojoAssignement returns [EObject current=null] : iv_ruleProcedurePojoAssignement= ruleProcedurePojoAssignement EOF ;
    public final EObject entryRuleProcedurePojoAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcedurePojoAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1346:2: (iv_ruleProcedurePojoAssignement= ruleProcedurePojoAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1347:2: iv_ruleProcedurePojoAssignement= ruleProcedurePojoAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcedurePojoAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleProcedurePojoAssignement_in_entryRuleProcedurePojoAssignement2713);
            iv_ruleProcedurePojoAssignement=ruleProcedurePojoAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcedurePojoAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleProcedurePojoAssignement2723); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcedurePojoAssignement"


    // $ANTLR start "ruleProcedurePojoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1354:1: ruleProcedurePojoAssignement returns [EObject current=null] : ( ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) ) ;
    public final EObject ruleProcedurePojoAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbProcedure_0_0=null;
        Token otherlv_1=null;
        EObject lv_pojo_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1357:28: ( ( ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1358:1: ( ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1358:1: ( ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1358:2: ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1358:2: ( (lv_dbProcedure_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1359:1: (lv_dbProcedure_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1359:1: (lv_dbProcedure_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1360:3: lv_dbProcedure_0_0= RULE_IDENT
            {
            lv_dbProcedure_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleProcedurePojoAssignement2765); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbProcedure_0_0, grammarAccess.getProcedurePojoAssignementAccess().getDbProcedureIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getProcedurePojoAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbProcedure",
                      		lv_dbProcedure_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleProcedurePojoAssignement2782); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getProcedurePojoAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1380:1: ( (lv_pojo_2_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1381:1: (lv_pojo_2_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1381:1: (lv_pojo_2_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1382:3: lv_pojo_2_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProcedurePojoAssignementAccess().getPojoPojoTypeParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePojoType_in_ruleProcedurePojoAssignement2803);
            lv_pojo_2_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProcedurePojoAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"pojo",
                      		lv_pojo_2_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcedurePojoAssignement"


    // $ANTLR start "entryRuleFunctionPojoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1406:1: entryRuleFunctionPojoAssignement returns [EObject current=null] : iv_ruleFunctionPojoAssignement= ruleFunctionPojoAssignement EOF ;
    public final EObject entryRuleFunctionPojoAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionPojoAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1407:2: (iv_ruleFunctionPojoAssignement= ruleFunctionPojoAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1408:2: iv_ruleFunctionPojoAssignement= ruleFunctionPojoAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionPojoAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFunctionPojoAssignement_in_entryRuleFunctionPojoAssignement2839);
            iv_ruleFunctionPojoAssignement=ruleFunctionPojoAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionPojoAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFunctionPojoAssignement2849); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionPojoAssignement"


    // $ANTLR start "ruleFunctionPojoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1415:1: ruleFunctionPojoAssignement returns [EObject current=null] : ( ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) ) ;
    public final EObject ruleFunctionPojoAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbFunction_0_0=null;
        Token otherlv_1=null;
        EObject lv_pojo_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1418:28: ( ( ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1419:1: ( ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1419:1: ( ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1419:2: ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1419:2: ( (lv_dbFunction_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1420:1: (lv_dbFunction_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1420:1: (lv_dbFunction_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1421:3: lv_dbFunction_0_0= RULE_IDENT
            {
            lv_dbFunction_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleFunctionPojoAssignement2891); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbFunction_0_0, grammarAccess.getFunctionPojoAssignementAccess().getDbFunctionIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFunctionPojoAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbFunction",
                      		lv_dbFunction_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleFunctionPojoAssignement2908); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFunctionPojoAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1441:1: ( (lv_pojo_2_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1442:1: (lv_pojo_2_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1442:1: (lv_pojo_2_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1443:3: lv_pojo_2_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionPojoAssignementAccess().getPojoPojoTypeParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePojoType_in_ruleFunctionPojoAssignement2929);
            lv_pojo_2_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionPojoAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"pojo",
                      		lv_pojo_2_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionPojoAssignement"


    // $ANTLR start "entryRuleImplementsAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1467:1: entryRuleImplementsAssignement returns [EObject current=null] : iv_ruleImplementsAssignement= ruleImplementsAssignement EOF ;
    public final EObject entryRuleImplementsAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplementsAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1468:2: (iv_ruleImplementsAssignement= ruleImplementsAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1469:2: iv_ruleImplementsAssignement= ruleImplementsAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplementsAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleImplementsAssignement_in_entryRuleImplementsAssignement2965);
            iv_ruleImplementsAssignement=ruleImplementsAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplementsAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleImplementsAssignement2975); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplementsAssignement"


    // $ANTLR start "ruleImplementsAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1476:1: ruleImplementsAssignement returns [EObject current=null] : (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? ) ;
    public final EObject ruleImplementsAssignement() throws RecognitionException {
        EObject current = null;

        Token this_COLON_0=null;
        Token this_WS_2=null;
        Token this_PLUS_3=null;
        Token this_WS_4=null;
        Token lv_dbTables_5_0=null;
        Token this_WS_6=null;
        Token this_MINUS_7=null;
        Token this_WS_8=null;
        Token lv_dbNotTables_9_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1479:28: ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1480:1: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1480:1: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1480:2: this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )?
            {
            this_COLON_0=(Token)match(input,RULE_COLON,FollowSets000.FOLLOW_RULE_COLON_in_ruleImplementsAssignement3011); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_0, grammarAccess.getImplementsAssignementAccess().getCOLONTerminalRuleCall_0()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1484:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1485:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1485:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1486:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getImplementsAssignementRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImplementsAssignementAccess().getToImplementJvmTypeCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleImplementsAssignement3033);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1499:2: ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )?
            int alt23=2;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1499:3: (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1499:3: (this_WS_2= RULE_WS )+
                    int cnt20=0;
                    loop20:
                    do {
                        int alt20=2;
                        int LA20_0 = input.LA(1);

                        if ( (LA20_0==RULE_WS) ) {
                            alt20=1;
                        }


                        switch (alt20) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1499:4: this_WS_2= RULE_WS
                    	    {
                    	    this_WS_2=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignement3046); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_2, grammarAccess.getImplementsAssignementAccess().getWSTerminalRuleCall_2_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt20 >= 1 ) break loop20;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(20, input);
                                throw eee;
                        }
                        cnt20++;
                    } while (true);

                    this_PLUS_3=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleImplementsAssignement3058); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_3, grammarAccess.getImplementsAssignementAccess().getPLUSTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1507:1: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+
                    int cnt22=0;
                    loop22:
                    do {
                        int alt22=2;
                        alt22 = dfa22.predict(input);
                        switch (alt22) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1507:2: (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1507:2: (this_WS_4= RULE_WS )+
                    	    int cnt21=0;
                    	    loop21:
                    	    do {
                    	        int alt21=2;
                    	        int LA21_0 = input.LA(1);

                    	        if ( (LA21_0==RULE_WS) ) {
                    	            alt21=1;
                    	        }


                    	        switch (alt21) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1507:3: this_WS_4= RULE_WS
                    	    	    {
                    	    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignement3070); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_4, grammarAccess.getImplementsAssignementAccess().getWSTerminalRuleCall_2_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt21 >= 1 ) break loop21;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(21, input);
                    	                throw eee;
                    	        }
                    	        cnt21++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1511:3: ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1512:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1512:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1513:3: lv_dbTables_5_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_5_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImplementsAssignement3088); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_5_0, grammarAccess.getImplementsAssignementAccess().getDbTablesIDENTTerminalRuleCall_2_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsAssignementRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_5_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt22 >= 1 ) break loop22;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(22, input);
                                throw eee;
                        }
                        cnt22++;
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1529:6: ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_WS) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1529:7: (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1529:7: (this_WS_6= RULE_WS )+
                    int cnt24=0;
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==RULE_WS) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1529:8: this_WS_6= RULE_WS
                    	    {
                    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignement3110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_6, grammarAccess.getImplementsAssignementAccess().getWSTerminalRuleCall_3_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt24 >= 1 ) break loop24;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(24, input);
                                throw eee;
                        }
                        cnt24++;
                    } while (true);

                    this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleImplementsAssignement3122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_7, grammarAccess.getImplementsAssignementAccess().getMINUSTerminalRuleCall_3_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1537:1: ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+
                    int cnt26=0;
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( (LA26_0==RULE_WS) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1537:2: (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1537:2: (this_WS_8= RULE_WS )+
                    	    int cnt25=0;
                    	    loop25:
                    	    do {
                    	        int alt25=2;
                    	        int LA25_0 = input.LA(1);

                    	        if ( (LA25_0==RULE_WS) ) {
                    	            alt25=1;
                    	        }


                    	        switch (alt25) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1537:3: this_WS_8= RULE_WS
                    	    	    {
                    	    	    this_WS_8=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignement3134); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_8, grammarAccess.getImplementsAssignementAccess().getWSTerminalRuleCall_3_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt25 >= 1 ) break loop25;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(25, input);
                    	                throw eee;
                    	        }
                    	        cnt25++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1541:3: ( (lv_dbNotTables_9_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1542:1: (lv_dbNotTables_9_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1542:1: (lv_dbNotTables_9_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1543:3: lv_dbNotTables_9_0= RULE_IDENT
                    	    {
                    	    lv_dbNotTables_9_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImplementsAssignement3152); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbNotTables_9_0, grammarAccess.getImplementsAssignementAccess().getDbNotTablesIDENTTerminalRuleCall_3_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsAssignementRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbNotTables",
                    	              		lv_dbNotTables_9_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt26 >= 1 ) break loop26;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(26, input);
                                throw eee;
                        }
                        cnt26++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplementsAssignement"


    // $ANTLR start "entryRuleExtendsAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1567:1: entryRuleExtendsAssignement returns [EObject current=null] : iv_ruleExtendsAssignement= ruleExtendsAssignement EOF ;
    public final EObject entryRuleExtendsAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendsAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1568:2: (iv_ruleExtendsAssignement= ruleExtendsAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1569:2: iv_ruleExtendsAssignement= ruleExtendsAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendsAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleExtendsAssignement_in_entryRuleExtendsAssignement3197);
            iv_ruleExtendsAssignement=ruleExtendsAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendsAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleExtendsAssignement3207); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendsAssignement"


    // $ANTLR start "ruleExtendsAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1576:1: ruleExtendsAssignement returns [EObject current=null] : (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? ) ;
    public final EObject ruleExtendsAssignement() throws RecognitionException {
        EObject current = null;

        Token this_COLON_0=null;
        Token this_WS_2=null;
        Token this_PLUS_3=null;
        Token this_WS_4=null;
        Token lv_dbTables_5_0=null;
        Token this_WS_6=null;
        Token this_MINUS_7=null;
        Token this_WS_8=null;
        Token lv_dbNotTables_9_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1579:28: ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1580:1: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1580:1: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1580:2: this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )?
            {
            this_COLON_0=(Token)match(input,RULE_COLON,FollowSets000.FOLLOW_RULE_COLON_in_ruleExtendsAssignement3243); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_0, grammarAccess.getExtendsAssignementAccess().getCOLONTerminalRuleCall_0()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1584:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1585:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1585:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1586:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExtendsAssignementRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendsAssignementAccess().getToExtendsJvmTypeCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleExtendsAssignement3265);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1599:2: ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )?
            int alt31=2;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1599:3: (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1599:3: (this_WS_2= RULE_WS )+
                    int cnt28=0;
                    loop28:
                    do {
                        int alt28=2;
                        int LA28_0 = input.LA(1);

                        if ( (LA28_0==RULE_WS) ) {
                            alt28=1;
                        }


                        switch (alt28) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1599:4: this_WS_2= RULE_WS
                    	    {
                    	    this_WS_2=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignement3278); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_2, grammarAccess.getExtendsAssignementAccess().getWSTerminalRuleCall_2_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt28 >= 1 ) break loop28;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(28, input);
                                throw eee;
                        }
                        cnt28++;
                    } while (true);

                    this_PLUS_3=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleExtendsAssignement3290); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_3, grammarAccess.getExtendsAssignementAccess().getPLUSTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1607:1: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+
                    int cnt30=0;
                    loop30:
                    do {
                        int alt30=2;
                        alt30 = dfa30.predict(input);
                        switch (alt30) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1607:2: (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1607:2: (this_WS_4= RULE_WS )+
                    	    int cnt29=0;
                    	    loop29:
                    	    do {
                    	        int alt29=2;
                    	        int LA29_0 = input.LA(1);

                    	        if ( (LA29_0==RULE_WS) ) {
                    	            alt29=1;
                    	        }


                    	        switch (alt29) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1607:3: this_WS_4= RULE_WS
                    	    	    {
                    	    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignement3302); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_4, grammarAccess.getExtendsAssignementAccess().getWSTerminalRuleCall_2_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt29 >= 1 ) break loop29;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(29, input);
                    	                throw eee;
                    	        }
                    	        cnt29++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1611:3: ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1612:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1612:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1613:3: lv_dbTables_5_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_5_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExtendsAssignement3320); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_5_0, grammarAccess.getExtendsAssignementAccess().getDbTablesIDENTTerminalRuleCall_2_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsAssignementRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_5_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt30 >= 1 ) break loop30;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(30, input);
                                throw eee;
                        }
                        cnt30++;
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1629:6: ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_WS) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1629:7: (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1629:7: (this_WS_6= RULE_WS )+
                    int cnt32=0;
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==RULE_WS) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1629:8: this_WS_6= RULE_WS
                    	    {
                    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignement3342); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_6, grammarAccess.getExtendsAssignementAccess().getWSTerminalRuleCall_3_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt32 >= 1 ) break loop32;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(32, input);
                                throw eee;
                        }
                        cnt32++;
                    } while (true);

                    this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleExtendsAssignement3354); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_7, grammarAccess.getExtendsAssignementAccess().getMINUSTerminalRuleCall_3_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1637:1: ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+
                    int cnt34=0;
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==RULE_WS) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1637:2: (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1637:2: (this_WS_8= RULE_WS )+
                    	    int cnt33=0;
                    	    loop33:
                    	    do {
                    	        int alt33=2;
                    	        int LA33_0 = input.LA(1);

                    	        if ( (LA33_0==RULE_WS) ) {
                    	            alt33=1;
                    	        }


                    	        switch (alt33) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1637:3: this_WS_8= RULE_WS
                    	    	    {
                    	    	    this_WS_8=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignement3366); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_8, grammarAccess.getExtendsAssignementAccess().getWSTerminalRuleCall_3_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt33 >= 1 ) break loop33;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(33, input);
                    	                throw eee;
                    	        }
                    	        cnt33++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1641:3: ( (lv_dbNotTables_9_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1642:1: (lv_dbNotTables_9_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1642:1: (lv_dbNotTables_9_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1643:3: lv_dbNotTables_9_0= RULE_IDENT
                    	    {
                    	    lv_dbNotTables_9_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExtendsAssignement3384); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbNotTables_9_0, grammarAccess.getExtendsAssignementAccess().getDbNotTablesIDENTTerminalRuleCall_3_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsAssignementRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbNotTables",
                    	              		lv_dbNotTables_9_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt34 >= 1 ) break loop34;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(34, input);
                                throw eee;
                        }
                        cnt34++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendsAssignement"


    // $ANTLR start "entryRuleImplementsAssignementGenerics"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1667:1: entryRuleImplementsAssignementGenerics returns [EObject current=null] : iv_ruleImplementsAssignementGenerics= ruleImplementsAssignementGenerics EOF ;
    public final EObject entryRuleImplementsAssignementGenerics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplementsAssignementGenerics = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1668:2: (iv_ruleImplementsAssignementGenerics= ruleImplementsAssignementGenerics EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1669:2: iv_ruleImplementsAssignementGenerics= ruleImplementsAssignementGenerics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplementsAssignementGenericsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleImplementsAssignementGenerics_in_entryRuleImplementsAssignementGenerics3429);
            iv_ruleImplementsAssignementGenerics=ruleImplementsAssignementGenerics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplementsAssignementGenerics; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleImplementsAssignementGenerics3439); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplementsAssignementGenerics"


    // $ANTLR start "ruleImplementsAssignementGenerics"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1676:1: ruleImplementsAssignementGenerics returns [EObject current=null] : (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? ) ;
    public final EObject ruleImplementsAssignementGenerics() throws RecognitionException {
        EObject current = null;

        Token this_COLON_0=null;
        Token this_WS_2=null;
        Token this_PLUS_3=null;
        Token this_WS_4=null;
        Token lv_dbTables_5_0=null;
        Token this_WS_6=null;
        Token this_MINUS_7=null;
        Token this_WS_8=null;
        Token lv_dbNotTables_9_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1679:28: ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1680:1: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1680:1: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1680:2: this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )?
            {
            this_COLON_0=(Token)match(input,RULE_COLON,FollowSets000.FOLLOW_RULE_COLON_in_ruleImplementsAssignementGenerics3475); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_0, grammarAccess.getImplementsAssignementGenericsAccess().getCOLONTerminalRuleCall_0()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1684:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1685:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1685:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1686:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getImplementsAssignementGenericsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImplementsAssignementGenericsAccess().getToImplementJvmTypeCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleImplementsAssignementGenerics3497);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1699:2: ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )?
            int alt39=2;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1699:3: (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1699:3: (this_WS_2= RULE_WS )+
                    int cnt36=0;
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==RULE_WS) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1699:4: this_WS_2= RULE_WS
                    	    {
                    	    this_WS_2=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3510); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_2, grammarAccess.getImplementsAssignementGenericsAccess().getWSTerminalRuleCall_2_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt36 >= 1 ) break loop36;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(36, input);
                                throw eee;
                        }
                        cnt36++;
                    } while (true);

                    this_PLUS_3=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleImplementsAssignementGenerics3522); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_3, grammarAccess.getImplementsAssignementGenericsAccess().getPLUSTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1707:1: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+
                    int cnt38=0;
                    loop38:
                    do {
                        int alt38=2;
                        alt38 = dfa38.predict(input);
                        switch (alt38) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1707:2: (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1707:2: (this_WS_4= RULE_WS )+
                    	    int cnt37=0;
                    	    loop37:
                    	    do {
                    	        int alt37=2;
                    	        int LA37_0 = input.LA(1);

                    	        if ( (LA37_0==RULE_WS) ) {
                    	            alt37=1;
                    	        }


                    	        switch (alt37) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1707:3: this_WS_4= RULE_WS
                    	    	    {
                    	    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3534); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_4, grammarAccess.getImplementsAssignementGenericsAccess().getWSTerminalRuleCall_2_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt37 >= 1 ) break loop37;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(37, input);
                    	                throw eee;
                    	        }
                    	        cnt37++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1711:3: ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1712:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1712:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1713:3: lv_dbTables_5_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_5_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImplementsAssignementGenerics3552); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_5_0, grammarAccess.getImplementsAssignementGenericsAccess().getDbTablesIDENTTerminalRuleCall_2_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsAssignementGenericsRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_5_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt38 >= 1 ) break loop38;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(38, input);
                                throw eee;
                        }
                        cnt38++;
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1729:6: ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_WS) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1729:7: (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1729:7: (this_WS_6= RULE_WS )+
                    int cnt40=0;
                    loop40:
                    do {
                        int alt40=2;
                        int LA40_0 = input.LA(1);

                        if ( (LA40_0==RULE_WS) ) {
                            alt40=1;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1729:8: this_WS_6= RULE_WS
                    	    {
                    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3574); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_6, grammarAccess.getImplementsAssignementGenericsAccess().getWSTerminalRuleCall_3_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt40 >= 1 ) break loop40;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(40, input);
                                throw eee;
                        }
                        cnt40++;
                    } while (true);

                    this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleImplementsAssignementGenerics3586); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_7, grammarAccess.getImplementsAssignementGenericsAccess().getMINUSTerminalRuleCall_3_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1737:1: ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+
                    int cnt42=0;
                    loop42:
                    do {
                        int alt42=2;
                        int LA42_0 = input.LA(1);

                        if ( (LA42_0==RULE_WS) ) {
                            alt42=1;
                        }


                        switch (alt42) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1737:2: (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1737:2: (this_WS_8= RULE_WS )+
                    	    int cnt41=0;
                    	    loop41:
                    	    do {
                    	        int alt41=2;
                    	        int LA41_0 = input.LA(1);

                    	        if ( (LA41_0==RULE_WS) ) {
                    	            alt41=1;
                    	        }


                    	        switch (alt41) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1737:3: this_WS_8= RULE_WS
                    	    	    {
                    	    	    this_WS_8=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3598); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_8, grammarAccess.getImplementsAssignementGenericsAccess().getWSTerminalRuleCall_3_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt41 >= 1 ) break loop41;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(41, input);
                    	                throw eee;
                    	        }
                    	        cnt41++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1741:3: ( (lv_dbNotTables_9_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1742:1: (lv_dbNotTables_9_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1742:1: (lv_dbNotTables_9_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1743:3: lv_dbNotTables_9_0= RULE_IDENT
                    	    {
                    	    lv_dbNotTables_9_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImplementsAssignementGenerics3616); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbNotTables_9_0, grammarAccess.getImplementsAssignementGenericsAccess().getDbNotTablesIDENTTerminalRuleCall_3_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsAssignementGenericsRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbNotTables",
                    	              		lv_dbNotTables_9_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt42 >= 1 ) break loop42;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(42, input);
                                throw eee;
                        }
                        cnt42++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplementsAssignementGenerics"


    // $ANTLR start "entryRuleExtendsAssignementGenerics"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1767:1: entryRuleExtendsAssignementGenerics returns [EObject current=null] : iv_ruleExtendsAssignementGenerics= ruleExtendsAssignementGenerics EOF ;
    public final EObject entryRuleExtendsAssignementGenerics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendsAssignementGenerics = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1768:2: (iv_ruleExtendsAssignementGenerics= ruleExtendsAssignementGenerics EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1769:2: iv_ruleExtendsAssignementGenerics= ruleExtendsAssignementGenerics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendsAssignementGenericsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleExtendsAssignementGenerics_in_entryRuleExtendsAssignementGenerics3661);
            iv_ruleExtendsAssignementGenerics=ruleExtendsAssignementGenerics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendsAssignementGenerics; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleExtendsAssignementGenerics3671); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendsAssignementGenerics"


    // $ANTLR start "ruleExtendsAssignementGenerics"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1776:1: ruleExtendsAssignementGenerics returns [EObject current=null] : (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? ) ;
    public final EObject ruleExtendsAssignementGenerics() throws RecognitionException {
        EObject current = null;

        Token this_COLON_0=null;
        Token this_WS_2=null;
        Token this_PLUS_3=null;
        Token this_WS_4=null;
        Token lv_dbTables_5_0=null;
        Token this_WS_6=null;
        Token this_MINUS_7=null;
        Token this_WS_8=null;
        Token lv_dbNotTables_9_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1779:28: ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1780:1: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1780:1: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1780:2: this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )? ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )?
            {
            this_COLON_0=(Token)match(input,RULE_COLON,FollowSets000.FOLLOW_RULE_COLON_in_ruleExtendsAssignementGenerics3707); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_0, grammarAccess.getExtendsAssignementGenericsAccess().getCOLONTerminalRuleCall_0()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1784:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1785:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1785:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1786:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExtendsAssignementGenericsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendsAssignementGenericsAccess().getToExtendsJvmTypeCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleExtendsAssignementGenerics3729);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1799:2: ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )?
            int alt47=2;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1799:3: (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1799:3: (this_WS_2= RULE_WS )+
                    int cnt44=0;
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==RULE_WS) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1799:4: this_WS_2= RULE_WS
                    	    {
                    	    this_WS_2=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3742); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_2, grammarAccess.getExtendsAssignementGenericsAccess().getWSTerminalRuleCall_2_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt44 >= 1 ) break loop44;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(44, input);
                                throw eee;
                        }
                        cnt44++;
                    } while (true);

                    this_PLUS_3=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleExtendsAssignementGenerics3754); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_3, grammarAccess.getExtendsAssignementGenericsAccess().getPLUSTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1807:1: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+
                    int cnt46=0;
                    loop46:
                    do {
                        int alt46=2;
                        alt46 = dfa46.predict(input);
                        switch (alt46) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1807:2: (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1807:2: (this_WS_4= RULE_WS )+
                    	    int cnt45=0;
                    	    loop45:
                    	    do {
                    	        int alt45=2;
                    	        int LA45_0 = input.LA(1);

                    	        if ( (LA45_0==RULE_WS) ) {
                    	            alt45=1;
                    	        }


                    	        switch (alt45) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1807:3: this_WS_4= RULE_WS
                    	    	    {
                    	    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3766); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_4, grammarAccess.getExtendsAssignementGenericsAccess().getWSTerminalRuleCall_2_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt45 >= 1 ) break loop45;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(45, input);
                    	                throw eee;
                    	        }
                    	        cnt45++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1811:3: ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1812:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1812:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1813:3: lv_dbTables_5_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_5_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExtendsAssignementGenerics3784); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_5_0, grammarAccess.getExtendsAssignementGenericsAccess().getDbTablesIDENTTerminalRuleCall_2_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsAssignementGenericsRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_5_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt46 >= 1 ) break loop46;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(46, input);
                                throw eee;
                        }
                        cnt46++;
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1829:6: ( (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+ )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_WS) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1829:7: (this_WS_6= RULE_WS )+ this_MINUS_7= RULE_MINUS ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1829:7: (this_WS_6= RULE_WS )+
                    int cnt48=0;
                    loop48:
                    do {
                        int alt48=2;
                        int LA48_0 = input.LA(1);

                        if ( (LA48_0==RULE_WS) ) {
                            alt48=1;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1829:8: this_WS_6= RULE_WS
                    	    {
                    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3806); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_6, grammarAccess.getExtendsAssignementGenericsAccess().getWSTerminalRuleCall_3_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt48 >= 1 ) break loop48;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(48, input);
                                throw eee;
                        }
                        cnt48++;
                    } while (true);

                    this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleExtendsAssignementGenerics3818); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_7, grammarAccess.getExtendsAssignementGenericsAccess().getMINUSTerminalRuleCall_3_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1837:1: ( (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) ) )+
                    int cnt50=0;
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==RULE_WS) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1837:2: (this_WS_8= RULE_WS )+ ( (lv_dbNotTables_9_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1837:2: (this_WS_8= RULE_WS )+
                    	    int cnt49=0;
                    	    loop49:
                    	    do {
                    	        int alt49=2;
                    	        int LA49_0 = input.LA(1);

                    	        if ( (LA49_0==RULE_WS) ) {
                    	            alt49=1;
                    	        }


                    	        switch (alt49) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1837:3: this_WS_8= RULE_WS
                    	    	    {
                    	    	    this_WS_8=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3830); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_8, grammarAccess.getExtendsAssignementGenericsAccess().getWSTerminalRuleCall_3_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt49 >= 1 ) break loop49;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(49, input);
                    	                throw eee;
                    	        }
                    	        cnt49++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1841:3: ( (lv_dbNotTables_9_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1842:1: (lv_dbNotTables_9_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1842:1: (lv_dbNotTables_9_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1843:3: lv_dbNotTables_9_0= RULE_IDENT
                    	    {
                    	    lv_dbNotTables_9_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExtendsAssignementGenerics3848); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbNotTables_9_0, grammarAccess.getExtendsAssignementGenericsAccess().getDbNotTablesIDENTTerminalRuleCall_3_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsAssignementGenericsRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbNotTables",
                    	              		lv_dbNotTables_9_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt50 >= 1 ) break loop50;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(50, input);
                                throw eee;
                        }
                        cnt50++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendsAssignementGenerics"


    // $ANTLR start "entryRuleProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1867:1: entryRuleProperty returns [EObject current=null] : iv_ruleProperty= ruleProperty EOF ;
    public final EObject entryRuleProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1868:2: (iv_ruleProperty= ruleProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1869:2: iv_ruleProperty= ruleProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleProperty_in_entryRuleProperty3893);
            iv_ruleProperty=ruleProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProperty; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleProperty3903); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProperty"


    // $ANTLR start "ruleProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1876:1: ruleProperty returns [EObject current=null] : ( ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) | ( (lv_name_20_0= 'compress-meta-directives' ) ) ) this_SEMICOLON_21= RULE_SEMICOLON ) ;
    public final EObject ruleProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_name_1_0=null;
        Token lv_name_2_0=null;
        Token lv_name_4_0=null;
        Token lv_name_6_0=null;
        Token lv_name_8_0=null;
        Token lv_name_10_0=null;
        Token this_WS_11=null;
        Token lv_replaceId_12_0=null;
        Token this_WS_13=null;
        Token lv_name_15_0=null;
        Token this_WS_16=null;
        Token lv_replaceId_17_0=null;
        Token this_WS_18=null;
        Token lv_name_20_0=null;
        Token this_SEMICOLON_21=null;
        EObject lv_database_3_0 = null;

        EObject lv_pojogen_5_0 = null;

        EObject lv_metagen_7_0 = null;

        EObject lv_daogen_9_0 = null;

        AntlrDatatypeRuleToken lv_regex_14_0 = null;

        AntlrDatatypeRuleToken lv_replacement_19_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1879:28: ( ( ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) | ( (lv_name_20_0= 'compress-meta-directives' ) ) ) this_SEMICOLON_21= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1880:1: ( ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) | ( (lv_name_20_0= 'compress-meta-directives' ) ) ) this_SEMICOLON_21= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1880:1: ( ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) | ( (lv_name_20_0= 'compress-meta-directives' ) ) ) this_SEMICOLON_21= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1880:2: ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) | ( (lv_name_20_0= 'compress-meta-directives' ) ) ) this_SEMICOLON_21= RULE_SEMICOLON
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1880:2: ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) | ( (lv_name_20_0= 'compress-meta-directives' ) ) )
            int alt56=9;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt56=1;
                }
                break;
            case 43:
                {
                alt56=2;
                }
                break;
            case 44:
                {
                alt56=3;
                }
                break;
            case 45:
                {
                alt56=4;
                }
                break;
            case 46:
                {
                alt56=5;
                }
                break;
            case 47:
                {
                alt56=6;
                }
                break;
            case 48:
                {
                alt56=7;
                }
                break;
            case 49:
                {
                alt56=8;
                }
                break;
            case 50:
                {
                alt56=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1880:3: ( (lv_name_0_0= 'resolve-pojo-on' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1880:3: ( (lv_name_0_0= 'resolve-pojo-on' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1881:1: (lv_name_0_0= 'resolve-pojo-on' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1881:1: (lv_name_0_0= 'resolve-pojo-on' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1882:3: lv_name_0_0= 'resolve-pojo-on'
                    {
                    lv_name_0_0=(Token)match(input,42,FollowSets000.FOLLOW_42_in_ruleProperty3947); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getPropertyAccess().getNameResolvePojoOnKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "resolve-pojo-on");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1896:6: ( (lv_name_1_0= 'resolve-pojo-off' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1896:6: ( (lv_name_1_0= 'resolve-pojo-off' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1897:1: (lv_name_1_0= 'resolve-pojo-off' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1897:1: (lv_name_1_0= 'resolve-pojo-off' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1898:3: lv_name_1_0= 'resolve-pojo-off'
                    {
                    lv_name_1_0=(Token)match(input,43,FollowSets000.FOLLOW_43_in_ruleProperty3984); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_1_0, grammarAccess.getPropertyAccess().getNameResolvePojoOffKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_1_0, "resolve-pojo-off");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1912:6: ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1912:6: ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1912:7: ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1912:7: ( (lv_name_2_0= 'database-' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1913:1: (lv_name_2_0= 'database-' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1913:1: (lv_name_2_0= 'database-' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1914:3: lv_name_2_0= 'database-'
                    {
                    lv_name_2_0=(Token)match(input,44,FollowSets000.FOLLOW_44_in_ruleProperty4022); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_2_0, grammarAccess.getPropertyAccess().getNameDatabaseKeyword_0_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_2_0, "database-");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1927:2: ( (lv_database_3_0= ruleDatabaseProperty ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1928:1: (lv_database_3_0= ruleDatabaseProperty )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1928:1: (lv_database_3_0= ruleDatabaseProperty )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1929:3: lv_database_3_0= ruleDatabaseProperty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getDatabaseDatabasePropertyParserRuleCall_0_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseProperty_in_ruleProperty4056);
                    lv_database_3_0=ruleDatabaseProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"database",
                              		lv_database_3_0, 
                              		"DatabaseProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1946:6: ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1946:6: ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1946:7: ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1946:7: ( (lv_name_4_0= 'pojogen-' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1947:1: (lv_name_4_0= 'pojogen-' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1947:1: (lv_name_4_0= 'pojogen-' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1948:3: lv_name_4_0= 'pojogen-'
                    {
                    lv_name_4_0=(Token)match(input,45,FollowSets000.FOLLOW_45_in_ruleProperty4082); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_4_0, grammarAccess.getPropertyAccess().getNamePojogenKeyword_0_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_4_0, "pojogen-");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1961:2: ( (lv_pojogen_5_0= rulePojogenProperty ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1962:1: (lv_pojogen_5_0= rulePojogenProperty )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1962:1: (lv_pojogen_5_0= rulePojogenProperty )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1963:3: lv_pojogen_5_0= rulePojogenProperty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getPojogenPojogenPropertyParserRuleCall_0_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePojogenProperty_in_ruleProperty4116);
                    lv_pojogen_5_0=rulePojogenProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"pojogen",
                              		lv_pojogen_5_0, 
                              		"PojogenProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1980:6: ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1980:6: ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1980:7: ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1980:7: ( (lv_name_6_0= 'metagen-' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1981:1: (lv_name_6_0= 'metagen-' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1981:1: (lv_name_6_0= 'metagen-' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1982:3: lv_name_6_0= 'metagen-'
                    {
                    lv_name_6_0=(Token)match(input,46,FollowSets000.FOLLOW_46_in_ruleProperty4142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_6_0, grammarAccess.getPropertyAccess().getNameMetagenKeyword_0_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_6_0, "metagen-");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1995:2: ( (lv_metagen_7_0= ruleMetagenProperty ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1996:1: (lv_metagen_7_0= ruleMetagenProperty )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1996:1: (lv_metagen_7_0= ruleMetagenProperty )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1997:3: lv_metagen_7_0= ruleMetagenProperty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getMetagenMetagenPropertyParserRuleCall_0_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleMetagenProperty_in_ruleProperty4176);
                    lv_metagen_7_0=ruleMetagenProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"metagen",
                              		lv_metagen_7_0, 
                              		"MetagenProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2014:6: ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2014:6: ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2014:7: ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2014:7: ( (lv_name_8_0= 'daogen-' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2015:1: (lv_name_8_0= 'daogen-' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2015:1: (lv_name_8_0= 'daogen-' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2016:3: lv_name_8_0= 'daogen-'
                    {
                    lv_name_8_0=(Token)match(input,47,FollowSets000.FOLLOW_47_in_ruleProperty4202); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_8_0, grammarAccess.getPropertyAccess().getNameDaogenKeyword_0_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_8_0, "daogen-");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2029:2: ( (lv_daogen_9_0= ruleDaogenProperty ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2030:1: (lv_daogen_9_0= ruleDaogenProperty )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2030:1: (lv_daogen_9_0= ruleDaogenProperty )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2031:3: lv_daogen_9_0= ruleDaogenProperty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getDaogenDaogenPropertyParserRuleCall_0_5_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDaogenProperty_in_ruleProperty4236);
                    lv_daogen_9_0=ruleDaogenProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"daogen",
                              		lv_daogen_9_0, 
                              		"DaogenProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2048:6: ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2048:6: ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2048:7: ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2048:7: ( (lv_name_10_0= 'replace-all-regex' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2049:1: (lv_name_10_0= 'replace-all-regex' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2049:1: (lv_name_10_0= 'replace-all-regex' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2050:3: lv_name_10_0= 'replace-all-regex'
                    {
                    lv_name_10_0=(Token)match(input,48,FollowSets000.FOLLOW_48_in_ruleProperty4262); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_10_0, grammarAccess.getPropertyAccess().getNameReplaceAllRegexKeyword_0_6_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_10_0, "replace-all-regex");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2063:2: (this_WS_11= RULE_WS )+
                    int cnt52=0;
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==RULE_WS) ) {
                            alt52=1;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2063:3: this_WS_11= RULE_WS
                    	    {
                    	    this_WS_11=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleProperty4287); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_11, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_6_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt52 >= 1 ) break loop52;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(52, input);
                                throw eee;
                        }
                        cnt52++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2067:3: ( (lv_replaceId_12_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2068:1: (lv_replaceId_12_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2068:1: (lv_replaceId_12_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2069:3: lv_replaceId_12_0= RULE_IDENT
                    {
                    lv_replaceId_12_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleProperty4305); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_replaceId_12_0, grammarAccess.getPropertyAccess().getReplaceIdIDENTTerminalRuleCall_0_6_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"replaceId",
                              		lv_replaceId_12_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2085:2: (this_WS_13= RULE_WS )+
                    int cnt53=0;
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==RULE_WS) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2085:3: this_WS_13= RULE_WS
                    	    {
                    	    this_WS_13=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleProperty4322); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_13, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_6_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt53 >= 1 ) break loop53;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(53, input);
                                throw eee;
                        }
                        cnt53++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2089:3: ( (lv_regex_14_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2090:1: (lv_regex_14_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2090:1: (lv_regex_14_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2091:3: lv_regex_14_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getRegexPropertyValueParserRuleCall_0_6_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleProperty4344);
                    lv_regex_14_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"regex",
                              		lv_regex_14_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2108:6: ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2108:6: ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2108:7: ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2108:7: ( (lv_name_15_0= 'replace-all-replacement' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2109:1: (lv_name_15_0= 'replace-all-replacement' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2109:1: (lv_name_15_0= 'replace-all-replacement' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2110:3: lv_name_15_0= 'replace-all-replacement'
                    {
                    lv_name_15_0=(Token)match(input,49,FollowSets000.FOLLOW_49_in_ruleProperty4370); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_15_0, grammarAccess.getPropertyAccess().getNameReplaceAllReplacementKeyword_0_7_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_15_0, "replace-all-replacement");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2123:2: (this_WS_16= RULE_WS )+
                    int cnt54=0;
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==RULE_WS) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2123:3: this_WS_16= RULE_WS
                    	    {
                    	    this_WS_16=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleProperty4395); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_16, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_7_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt54 >= 1 ) break loop54;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(54, input);
                                throw eee;
                        }
                        cnt54++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2127:3: ( (lv_replaceId_17_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2128:1: (lv_replaceId_17_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2128:1: (lv_replaceId_17_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2129:3: lv_replaceId_17_0= RULE_IDENT
                    {
                    lv_replaceId_17_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleProperty4413); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_replaceId_17_0, grammarAccess.getPropertyAccess().getReplaceIdIDENTTerminalRuleCall_0_7_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"replaceId",
                              		lv_replaceId_17_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2145:2: (this_WS_18= RULE_WS )+
                    int cnt55=0;
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==RULE_WS) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2145:3: this_WS_18= RULE_WS
                    	    {
                    	    this_WS_18=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleProperty4430); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_18, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_7_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt55 >= 1 ) break loop55;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(55, input);
                                throw eee;
                        }
                        cnt55++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2149:3: ( (lv_replacement_19_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2150:1: (lv_replacement_19_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2150:1: (lv_replacement_19_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2151:3: lv_replacement_19_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getReplacementPropertyValueParserRuleCall_0_7_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleProperty4452);
                    lv_replacement_19_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"replacement",
                              		lv_replacement_19_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2168:6: ( (lv_name_20_0= 'compress-meta-directives' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2168:6: ( (lv_name_20_0= 'compress-meta-directives' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2169:1: (lv_name_20_0= 'compress-meta-directives' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2169:1: (lv_name_20_0= 'compress-meta-directives' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2170:3: lv_name_20_0= 'compress-meta-directives'
                    {
                    lv_name_20_0=(Token)match(input,50,FollowSets000.FOLLOW_50_in_ruleProperty4477); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_20_0, grammarAccess.getPropertyAccess().getNameCompressMetaDirectivesKeyword_0_8_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_20_0, "compress-meta-directives");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            this_SEMICOLON_21=(Token)match(input,RULE_SEMICOLON,FollowSets000.FOLLOW_RULE_SEMICOLON_in_ruleProperty4502); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_21, grammarAccess.getPropertyAccess().getSEMICOLONTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProperty"


    // $ANTLR start "entryRuleDatabaseProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2195:1: entryRuleDatabaseProperty returns [EObject current=null] : iv_ruleDatabaseProperty= ruleDatabaseProperty EOF ;
    public final EObject entryRuleDatabaseProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2196:2: (iv_ruleDatabaseProperty= ruleDatabaseProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2197:2: iv_ruleDatabaseProperty= ruleDatabaseProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabasePropertyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseProperty_in_entryRuleDatabaseProperty4537);
            iv_ruleDatabaseProperty=ruleDatabaseProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseProperty; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseProperty4547); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseProperty"


    // $ANTLR start "ruleDatabaseProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2204:1: ruleDatabaseProperty returns [EObject current=null] : ( ( (lv_name_0_0= 'is-online' ) ) | ( (lv_name_1_0= 'is-offline' ) ) | ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) ) | ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) ) | ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) ) | ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) ) | ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) ) | ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) ) | ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) ) | ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) ) | ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) ) | ( (lv_name_31_0= 'skip-indexes' ) ) | ( (lv_name_32_0= 'skip-functions-procedures' ) ) | ( (lv_name_33_0= 'skip-check-constraints' ) ) | ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) ) | ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) ) | ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) ) | ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ ) | ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_49_0= 'take-comments' ) ) | ( (lv_name_50_0= 'lowercase-names' ) ) | ( (lv_name_51_0= 'uppercase-names' ) ) ) ;
    public final EObject ruleDatabaseProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_name_1_0=null;
        Token lv_name_2_0=null;
        Token this_WS_3=null;
        Token lv_name_5_0=null;
        Token this_WS_6=null;
        Token lv_name_8_0=null;
        Token this_WS_9=null;
        Token lv_name_11_0=null;
        Token this_WS_12=null;
        Token lv_name_14_0=null;
        Token this_WS_15=null;
        Token lv_name_17_0=null;
        Token this_WS_18=null;
        Token this_COLON_19=null;
        Token lv_name_22_0=null;
        Token this_WS_23=null;
        Token lv_name_25_0=null;
        Token this_WS_26=null;
        Token lv_name_28_0=null;
        Token this_WS_29=null;
        Token lv_name_31_0=null;
        Token lv_name_32_0=null;
        Token lv_name_33_0=null;
        Token lv_name_34_0=null;
        Token this_WS_35=null;
        Token lv_name_37_0=null;
        Token this_WS_38=null;
        Token lv_name_40_0=null;
        Token this_WS_41=null;
        Token lv_name_43_0=null;
        Token this_WS_44=null;
        Token lv_name_46_0=null;
        Token this_WS_47=null;
        Token lv_name_49_0=null;
        Token lv_name_50_0=null;
        Token lv_name_51_0=null;
        AntlrDatatypeRuleToken lv_dbUrl_4_0 = null;

        AntlrDatatypeRuleToken lv_dbUsername_7_0 = null;

        AntlrDatatypeRuleToken lv_dbPassword_10_0 = null;

        EObject lv_dbCatalog_13_0 = null;

        EObject lv_dbSchema_16_0 = null;

        AntlrDatatypeRuleToken lv_dbDriver_21_0 = null;

        AntlrDatatypeRuleToken lv_dbExecuteBefore_24_0 = null;

        AntlrDatatypeRuleToken lv_dbExecuteAfter_27_0 = null;

        AntlrDatatypeRuleToken lv_dbIndexTypes_30_0 = null;

        EObject lv_dbType_36_0 = null;

        EObject lv_dbMetaInfo_39_0 = null;

        EObject lv_dbDriverInfo_42_0 = null;

        EObject lv_dbMethodsCalls_45_0 = null;

        EObject lv_debug_48_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2207:28: ( ( ( (lv_name_0_0= 'is-online' ) ) | ( (lv_name_1_0= 'is-offline' ) ) | ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) ) | ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) ) | ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) ) | ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) ) | ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) ) | ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) ) | ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) ) | ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) ) | ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) ) | ( (lv_name_31_0= 'skip-indexes' ) ) | ( (lv_name_32_0= 'skip-functions-procedures' ) ) | ( (lv_name_33_0= 'skip-check-constraints' ) ) | ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) ) | ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) ) | ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) ) | ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ ) | ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_49_0= 'take-comments' ) ) | ( (lv_name_50_0= 'lowercase-names' ) ) | ( (lv_name_51_0= 'uppercase-names' ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2208:1: ( ( (lv_name_0_0= 'is-online' ) ) | ( (lv_name_1_0= 'is-offline' ) ) | ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) ) | ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) ) | ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) ) | ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) ) | ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) ) | ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) ) | ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) ) | ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) ) | ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) ) | ( (lv_name_31_0= 'skip-indexes' ) ) | ( (lv_name_32_0= 'skip-functions-procedures' ) ) | ( (lv_name_33_0= 'skip-check-constraints' ) ) | ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) ) | ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) ) | ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) ) | ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ ) | ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_49_0= 'take-comments' ) ) | ( (lv_name_50_0= 'lowercase-names' ) ) | ( (lv_name_51_0= 'uppercase-names' ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2208:1: ( ( (lv_name_0_0= 'is-online' ) ) | ( (lv_name_1_0= 'is-offline' ) ) | ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) ) | ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) ) | ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) ) | ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) ) | ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) ) | ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) ) | ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) ) | ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) ) | ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) ) | ( (lv_name_31_0= 'skip-indexes' ) ) | ( (lv_name_32_0= 'skip-functions-procedures' ) ) | ( (lv_name_33_0= 'skip-check-constraints' ) ) | ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) ) | ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) ) | ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) ) | ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ ) | ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_49_0= 'take-comments' ) ) | ( (lv_name_50_0= 'lowercase-names' ) ) | ( (lv_name_51_0= 'uppercase-names' ) ) )
            int alt73=22;
            switch ( input.LA(1) ) {
            case 51:
                {
                alt73=1;
                }
                break;
            case 52:
                {
                alt73=2;
                }
                break;
            case 53:
                {
                alt73=3;
                }
                break;
            case 54:
                {
                alt73=4;
                }
                break;
            case 55:
                {
                alt73=5;
                }
                break;
            case 56:
                {
                alt73=6;
                }
                break;
            case 57:
                {
                alt73=7;
                }
                break;
            case 58:
                {
                alt73=8;
                }
                break;
            case 59:
                {
                alt73=9;
                }
                break;
            case 60:
                {
                alt73=10;
                }
                break;
            case 61:
                {
                alt73=11;
                }
                break;
            case 62:
                {
                alt73=12;
                }
                break;
            case 63:
                {
                alt73=13;
                }
                break;
            case 64:
                {
                alt73=14;
                }
                break;
            case 65:
                {
                alt73=15;
                }
                break;
            case 66:
                {
                alt73=16;
                }
                break;
            case 67:
                {
                alt73=17;
                }
                break;
            case 68:
                {
                alt73=18;
                }
                break;
            case 69:
                {
                alt73=19;
                }
                break;
            case 70:
                {
                alt73=20;
                }
                break;
            case 71:
                {
                alt73=21;
                }
                break;
            case 72:
                {
                alt73=22;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }

            switch (alt73) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2208:2: ( (lv_name_0_0= 'is-online' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2208:2: ( (lv_name_0_0= 'is-online' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2209:1: (lv_name_0_0= 'is-online' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2209:1: (lv_name_0_0= 'is-online' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2210:3: lv_name_0_0= 'is-online'
                    {
                    lv_name_0_0=(Token)match(input,51,FollowSets000.FOLLOW_51_in_ruleDatabaseProperty4590); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getDatabasePropertyAccess().getNameIsOnlineKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "is-online");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2224:6: ( (lv_name_1_0= 'is-offline' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2224:6: ( (lv_name_1_0= 'is-offline' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2225:1: (lv_name_1_0= 'is-offline' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2225:1: (lv_name_1_0= 'is-offline' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2226:3: lv_name_1_0= 'is-offline'
                    {
                    lv_name_1_0=(Token)match(input,52,FollowSets000.FOLLOW_52_in_ruleDatabaseProperty4627); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_1_0, grammarAccess.getDatabasePropertyAccess().getNameIsOfflineKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_1_0, "is-offline");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2240:6: ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2240:6: ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2240:7: ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2240:7: ( (lv_name_2_0= 'has-url' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2241:1: (lv_name_2_0= 'has-url' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2241:1: (lv_name_2_0= 'has-url' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2242:3: lv_name_2_0= 'has-url'
                    {
                    lv_name_2_0=(Token)match(input,53,FollowSets000.FOLLOW_53_in_ruleDatabaseProperty4665); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_2_0, grammarAccess.getDatabasePropertyAccess().getNameHasUrlKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_2_0, "has-url");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2255:2: (this_WS_3= RULE_WS )+
                    int cnt57=0;
                    loop57:
                    do {
                        int alt57=2;
                        int LA57_0 = input.LA(1);

                        if ( (LA57_0==RULE_WS) ) {
                            alt57=1;
                        }


                        switch (alt57) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2255:3: this_WS_3= RULE_WS
                    	    {
                    	    this_WS_3=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4690); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_3, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_2_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt57 >= 1 ) break loop57;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(57, input);
                                throw eee;
                        }
                        cnt57++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2259:3: ( (lv_dbUrl_4_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2260:1: (lv_dbUrl_4_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2260:1: (lv_dbUrl_4_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2261:3: lv_dbUrl_4_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbUrlPropertyValueParserRuleCall_2_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4712);
                    lv_dbUrl_4_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbUrl",
                              		lv_dbUrl_4_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2278:6: ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2278:6: ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2278:7: ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2278:7: ( (lv_name_5_0= 'login-username' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2279:1: (lv_name_5_0= 'login-username' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2279:1: (lv_name_5_0= 'login-username' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2280:3: lv_name_5_0= 'login-username'
                    {
                    lv_name_5_0=(Token)match(input,54,FollowSets000.FOLLOW_54_in_ruleDatabaseProperty4738); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_5_0, grammarAccess.getDatabasePropertyAccess().getNameLoginUsernameKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_5_0, "login-username");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2293:2: (this_WS_6= RULE_WS )+
                    int cnt58=0;
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==RULE_WS) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2293:3: this_WS_6= RULE_WS
                    	    {
                    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4763); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_6, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_3_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt58 >= 1 ) break loop58;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(58, input);
                                throw eee;
                        }
                        cnt58++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2297:3: ( (lv_dbUsername_7_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2298:1: (lv_dbUsername_7_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2298:1: (lv_dbUsername_7_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2299:3: lv_dbUsername_7_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbUsernamePropertyValueParserRuleCall_3_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4785);
                    lv_dbUsername_7_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbUsername",
                              		lv_dbUsername_7_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2316:6: ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2316:6: ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2316:7: ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2316:7: ( (lv_name_8_0= 'login-password' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2317:1: (lv_name_8_0= 'login-password' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2317:1: (lv_name_8_0= 'login-password' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2318:3: lv_name_8_0= 'login-password'
                    {
                    lv_name_8_0=(Token)match(input,55,FollowSets000.FOLLOW_55_in_ruleDatabaseProperty4811); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_8_0, grammarAccess.getDatabasePropertyAccess().getNameLoginPasswordKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_8_0, "login-password");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2331:2: (this_WS_9= RULE_WS )+
                    int cnt59=0;
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( (LA59_0==RULE_WS) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2331:3: this_WS_9= RULE_WS
                    	    {
                    	    this_WS_9=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4836); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_9, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt59 >= 1 ) break loop59;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(59, input);
                                throw eee;
                        }
                        cnt59++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2335:3: ( (lv_dbPassword_10_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2336:1: (lv_dbPassword_10_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2336:1: (lv_dbPassword_10_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2337:3: lv_dbPassword_10_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbPasswordPropertyValueParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4858);
                    lv_dbPassword_10_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbPassword",
                              		lv_dbPassword_10_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2354:6: ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2354:6: ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2354:7: ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2354:7: ( (lv_name_11_0= 'in-catalog' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2355:1: (lv_name_11_0= 'in-catalog' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2355:1: (lv_name_11_0= 'in-catalog' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2356:3: lv_name_11_0= 'in-catalog'
                    {
                    lv_name_11_0=(Token)match(input,56,FollowSets000.FOLLOW_56_in_ruleDatabaseProperty4884); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_11_0, grammarAccess.getDatabasePropertyAccess().getNameInCatalogKeyword_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_11_0, "in-catalog");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2369:2: (this_WS_12= RULE_WS )+
                    int cnt60=0;
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==RULE_WS) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2369:3: this_WS_12= RULE_WS
                    	    {
                    	    this_WS_12=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4909); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_12, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_5_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt60 >= 1 ) break loop60;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(60, input);
                                throw eee;
                        }
                        cnt60++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2373:3: ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2374:1: (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2374:1: (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2375:3: lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbCatalogDatabaseCatalogAssignementParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseCatalogAssignement_in_ruleDatabaseProperty4931);
                    lv_dbCatalog_13_0=ruleDatabaseCatalogAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbCatalog",
                              		lv_dbCatalog_13_0, 
                              		"DatabaseCatalogAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2392:6: ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2392:6: ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2392:7: ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2392:7: ( (lv_name_14_0= 'active-schema' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2393:1: (lv_name_14_0= 'active-schema' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2393:1: (lv_name_14_0= 'active-schema' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2394:3: lv_name_14_0= 'active-schema'
                    {
                    lv_name_14_0=(Token)match(input,57,FollowSets000.FOLLOW_57_in_ruleDatabaseProperty4957); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_14_0, grammarAccess.getDatabasePropertyAccess().getNameActiveSchemaKeyword_6_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_14_0, "active-schema");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2407:2: (this_WS_15= RULE_WS )+
                    int cnt61=0;
                    loop61:
                    do {
                        int alt61=2;
                        int LA61_0 = input.LA(1);

                        if ( (LA61_0==RULE_WS) ) {
                            alt61=1;
                        }


                        switch (alt61) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2407:3: this_WS_15= RULE_WS
                    	    {
                    	    this_WS_15=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4982); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_15, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_6_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt61 >= 1 ) break loop61;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(61, input);
                                throw eee;
                        }
                        cnt61++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2411:3: ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2412:1: (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2412:1: (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2413:3: lv_dbSchema_16_0= ruleDatabaseSchemaAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbSchemaDatabaseSchemaAssignementParserRuleCall_6_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseSchemaAssignement_in_ruleDatabaseProperty5004);
                    lv_dbSchema_16_0=ruleDatabaseSchemaAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbSchema",
                              		lv_dbSchema_16_0, 
                              		"DatabaseSchemaAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2430:6: ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2430:6: ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2430:7: ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2430:7: ( (lv_name_17_0= 'jdbc-driver' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2431:1: (lv_name_17_0= 'jdbc-driver' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2431:1: (lv_name_17_0= 'jdbc-driver' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2432:3: lv_name_17_0= 'jdbc-driver'
                    {
                    lv_name_17_0=(Token)match(input,58,FollowSets000.FOLLOW_58_in_ruleDatabaseProperty5030); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_17_0, grammarAccess.getDatabasePropertyAccess().getNameJdbcDriverKeyword_7_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_17_0, "jdbc-driver");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2445:2: (this_WS_18= RULE_WS )+
                    int cnt62=0;
                    loop62:
                    do {
                        int alt62=2;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==RULE_WS) ) {
                            alt62=1;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2445:3: this_WS_18= RULE_WS
                    	    {
                    	    this_WS_18=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5055); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_18, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_7_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt62 >= 1 ) break loop62;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(62, input);
                                throw eee;
                        }
                        cnt62++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2449:3: ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) )
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==RULE_COLON) ) {
                        switch ( input.LA(2) ) {
                        case RULE_IDENT:
                            {
                            int LA63_3 = input.LA(3);

                            if ( (synpred1_InternalProcessorDsl()) ) {
                                alt63=1;
                            }
                            else if ( (true) ) {
                                alt63=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 63, 3, input);

                                throw nvae;
                            }
                            }
                            break;
                        case RULE_IDENT_DOT:
                            {
                            int LA63_4 = input.LA(3);

                            if ( (synpred1_InternalProcessorDsl()) ) {
                                alt63=1;
                            }
                            else if ( (true) ) {
                                alt63=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 63, 4, input);

                                throw nvae;
                            }
                            }
                            break;
                        case EOF:
                        case RULE_WS:
                        case RULE_LPAREN:
                        case RULE_NUMBER:
                        case RULE_RPAREN:
                        case RULE_COLON:
                        case RULE_PLUS:
                        case RULE_MINUS:
                        case RULE_SEMICOLON:
                        case RULE_REST:
                        case RULE_STRING:
                        case RULE_COMMA:
                        case RULE_LBRACE:
                        case RULE_RBRACE:
                        case RULE_QUESTI:
                        case RULE_NOT:
                        case RULE_BAND:
                        case RULE_BOR:
                        case RULE_HASH:
                        case RULE_AT:
                        case RULE_CARET:
                        case RULE_EQUALS:
                        case RULE_LESS_THAN:
                        case RULE_MORE_THAN:
                        case RULE_PERCENT:
                        case RULE_DOT:
                        case RULE_AND:
                        case RULE_OR:
                        case RULE_ESC_CHAR:
                        case RULE_ON_OFF:
                        case RULE_STATEMENT_TYPE:
                        case RULE_MAPPING_TYPE:
                        case RULE_OPTION_TYPE:
                            {
                            alt63=2;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 63, 1, input);

                            throw nvae;
                        }

                    }
                    else if ( ((LA63_0>=RULE_IDENT && LA63_0<=RULE_RPAREN)||(LA63_0>=RULE_PLUS && LA63_0<=RULE_MINUS)||(LA63_0>=RULE_REST && LA63_0<=RULE_STRING_VALUE)) ) {
                        alt63=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 63, 0, input);

                        throw nvae;
                    }
                    switch (alt63) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2449:4: ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2449:4: ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2449:5: ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2449:5: ( ( RULE_COLON )=>this_COLON_19= RULE_COLON )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2449:6: ( RULE_COLON )=>this_COLON_19= RULE_COLON
                            {
                            this_COLON_19=(Token)match(input,RULE_COLON,FollowSets000.FOLLOW_RULE_COLON_in_ruleDatabaseProperty5075); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_19, grammarAccess.getDatabasePropertyAccess().getCOLONTerminalRuleCall_7_2_0_0()); 
                                  
                            }

                            }

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2453:2: ( ( ruleQualifiedName ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2454:1: ( ruleQualifiedName )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2454:1: ( ruleQualifiedName )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2455:3: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbDriverxJvmTypeCrossReference_7_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleDatabaseProperty5098);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2469:6: ( (lv_dbDriver_21_0= rulePropertyValue ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2469:6: ( (lv_dbDriver_21_0= rulePropertyValue ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2470:1: (lv_dbDriver_21_0= rulePropertyValue )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2470:1: (lv_dbDriver_21_0= rulePropertyValue )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2471:3: lv_dbDriver_21_0= rulePropertyValue
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbDriverPropertyValueParserRuleCall_7_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5126);
                            lv_dbDriver_21_0=rulePropertyValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbDriver",
                                      		lv_dbDriver_21_0, 
                                      		"PropertyValue");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2488:6: ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2488:6: ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2488:7: ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2488:7: ( (lv_name_22_0= 'ddl-create' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2489:1: (lv_name_22_0= 'ddl-create' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2489:1: (lv_name_22_0= 'ddl-create' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2490:3: lv_name_22_0= 'ddl-create'
                    {
                    lv_name_22_0=(Token)match(input,59,FollowSets000.FOLLOW_59_in_ruleDatabaseProperty5153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_22_0, grammarAccess.getDatabasePropertyAccess().getNameDdlCreateKeyword_8_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_22_0, "ddl-create");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2503:2: (this_WS_23= RULE_WS )+
                    int cnt64=0;
                    loop64:
                    do {
                        int alt64=2;
                        int LA64_0 = input.LA(1);

                        if ( (LA64_0==RULE_WS) ) {
                            alt64=1;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2503:3: this_WS_23= RULE_WS
                    	    {
                    	    this_WS_23=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5178); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_23, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_8_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt64 >= 1 ) break loop64;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(64, input);
                                throw eee;
                        }
                        cnt64++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2507:3: ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2508:1: (lv_dbExecuteBefore_24_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2508:1: (lv_dbExecuteBefore_24_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2509:3: lv_dbExecuteBefore_24_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbExecuteBeforePropertyValueParserRuleCall_8_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5200);
                    lv_dbExecuteBefore_24_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbExecuteBefore",
                              		lv_dbExecuteBefore_24_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2526:6: ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2526:6: ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2526:7: ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2526:7: ( (lv_name_25_0= 'ddl-drop' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2527:1: (lv_name_25_0= 'ddl-drop' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2527:1: (lv_name_25_0= 'ddl-drop' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2528:3: lv_name_25_0= 'ddl-drop'
                    {
                    lv_name_25_0=(Token)match(input,60,FollowSets000.FOLLOW_60_in_ruleDatabaseProperty5226); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_25_0, grammarAccess.getDatabasePropertyAccess().getNameDdlDropKeyword_9_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_25_0, "ddl-drop");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2541:2: (this_WS_26= RULE_WS )+
                    int cnt65=0;
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==RULE_WS) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2541:3: this_WS_26= RULE_WS
                    	    {
                    	    this_WS_26=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5251); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_26, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_9_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt65 >= 1 ) break loop65;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(65, input);
                                throw eee;
                        }
                        cnt65++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2545:3: ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2546:1: (lv_dbExecuteAfter_27_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2546:1: (lv_dbExecuteAfter_27_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2547:3: lv_dbExecuteAfter_27_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbExecuteAfterPropertyValueParserRuleCall_9_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5273);
                    lv_dbExecuteAfter_27_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbExecuteAfter",
                              		lv_dbExecuteAfter_27_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2564:6: ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2564:6: ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2564:7: ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2564:7: ( (lv_name_28_0= 'index-types' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2565:1: (lv_name_28_0= 'index-types' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2565:1: (lv_name_28_0= 'index-types' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2566:3: lv_name_28_0= 'index-types'
                    {
                    lv_name_28_0=(Token)match(input,61,FollowSets000.FOLLOW_61_in_ruleDatabaseProperty5299); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_28_0, grammarAccess.getDatabasePropertyAccess().getNameIndexTypesKeyword_10_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_28_0, "index-types");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2579:2: (this_WS_29= RULE_WS )+
                    int cnt66=0;
                    loop66:
                    do {
                        int alt66=2;
                        int LA66_0 = input.LA(1);

                        if ( (LA66_0==RULE_WS) ) {
                            alt66=1;
                        }


                        switch (alt66) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2579:3: this_WS_29= RULE_WS
                    	    {
                    	    this_WS_29=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5324); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_29, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_10_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt66 >= 1 ) break loop66;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(66, input);
                                throw eee;
                        }
                        cnt66++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2583:3: ( (lv_dbIndexTypes_30_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2584:1: (lv_dbIndexTypes_30_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2584:1: (lv_dbIndexTypes_30_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2585:3: lv_dbIndexTypes_30_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbIndexTypesPropertyValueParserRuleCall_10_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5346);
                    lv_dbIndexTypes_30_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbIndexTypes",
                              		lv_dbIndexTypes_30_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2602:6: ( (lv_name_31_0= 'skip-indexes' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2602:6: ( (lv_name_31_0= 'skip-indexes' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2603:1: (lv_name_31_0= 'skip-indexes' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2603:1: (lv_name_31_0= 'skip-indexes' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2604:3: lv_name_31_0= 'skip-indexes'
                    {
                    lv_name_31_0=(Token)match(input,62,FollowSets000.FOLLOW_62_in_ruleDatabaseProperty5371); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_31_0, grammarAccess.getDatabasePropertyAccess().getNameSkipIndexesKeyword_11_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_31_0, "skip-indexes");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2618:6: ( (lv_name_32_0= 'skip-functions-procedures' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2618:6: ( (lv_name_32_0= 'skip-functions-procedures' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2619:1: (lv_name_32_0= 'skip-functions-procedures' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2619:1: (lv_name_32_0= 'skip-functions-procedures' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2620:3: lv_name_32_0= 'skip-functions-procedures'
                    {
                    lv_name_32_0=(Token)match(input,63,FollowSets000.FOLLOW_63_in_ruleDatabaseProperty5408); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_32_0, grammarAccess.getDatabasePropertyAccess().getNameSkipFunctionsProceduresKeyword_12_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_32_0, "skip-functions-procedures");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2634:6: ( (lv_name_33_0= 'skip-check-constraints' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2634:6: ( (lv_name_33_0= 'skip-check-constraints' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2635:1: (lv_name_33_0= 'skip-check-constraints' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2635:1: (lv_name_33_0= 'skip-check-constraints' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2636:3: lv_name_33_0= 'skip-check-constraints'
                    {
                    lv_name_33_0=(Token)match(input,64,FollowSets000.FOLLOW_64_in_ruleDatabaseProperty5445); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_33_0, grammarAccess.getDatabasePropertyAccess().getNameSkipCheckConstraintsKeyword_13_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_33_0, "skip-check-constraints");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2650:6: ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2650:6: ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2650:7: ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2650:7: ( (lv_name_34_0= 'is-of-type' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2651:1: (lv_name_34_0= 'is-of-type' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2651:1: (lv_name_34_0= 'is-of-type' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2652:3: lv_name_34_0= 'is-of-type'
                    {
                    lv_name_34_0=(Token)match(input,65,FollowSets000.FOLLOW_65_in_ruleDatabaseProperty5483); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_34_0, grammarAccess.getDatabasePropertyAccess().getNameIsOfTypeKeyword_14_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_34_0, "is-of-type");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2665:2: (this_WS_35= RULE_WS )+
                    int cnt67=0;
                    loop67:
                    do {
                        int alt67=2;
                        int LA67_0 = input.LA(1);

                        if ( (LA67_0==RULE_WS) ) {
                            alt67=1;
                        }


                        switch (alt67) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2665:3: this_WS_35= RULE_WS
                    	    {
                    	    this_WS_35=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5508); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_35, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_14_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt67 >= 1 ) break loop67;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(67, input);
                                throw eee;
                        }
                        cnt67++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2669:3: ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2670:1: (lv_dbType_36_0= ruleDatabaseTypeAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2670:1: (lv_dbType_36_0= ruleDatabaseTypeAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2671:3: lv_dbType_36_0= ruleDatabaseTypeAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbTypeDatabaseTypeAssignementParserRuleCall_14_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseTypeAssignement_in_ruleDatabaseProperty5530);
                    lv_dbType_36_0=ruleDatabaseTypeAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbType",
                              		lv_dbType_36_0, 
                              		"DatabaseTypeAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2688:6: ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2688:6: ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2688:7: ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2688:7: ( (lv_name_37_0= 'show-database-info' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2689:1: (lv_name_37_0= 'show-database-info' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2689:1: (lv_name_37_0= 'show-database-info' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2690:3: lv_name_37_0= 'show-database-info'
                    {
                    lv_name_37_0=(Token)match(input,66,FollowSets000.FOLLOW_66_in_ruleDatabaseProperty5556); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_37_0, grammarAccess.getDatabasePropertyAccess().getNameShowDatabaseInfoKeyword_15_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_37_0, "show-database-info");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2703:2: (this_WS_38= RULE_WS )+
                    int cnt68=0;
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==RULE_WS) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2703:3: this_WS_38= RULE_WS
                    	    {
                    	    this_WS_38=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5581); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_38, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_15_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt68 >= 1 ) break loop68;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(68, input);
                                throw eee;
                        }
                        cnt68++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2707:3: ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2708:1: (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2708:1: (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2709:3: lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbMetaInfoDatabaseMetaInfoAssignementParserRuleCall_15_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseMetaInfoAssignement_in_ruleDatabaseProperty5603);
                    lv_dbMetaInfo_39_0=ruleDatabaseMetaInfoAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbMetaInfo",
                              		lv_dbMetaInfo_39_0, 
                              		"DatabaseMetaInfoAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2726:6: ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2726:6: ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2726:7: ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2726:7: ( (lv_name_40_0= 'show-driver-info' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2727:1: (lv_name_40_0= 'show-driver-info' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2727:1: (lv_name_40_0= 'show-driver-info' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2728:3: lv_name_40_0= 'show-driver-info'
                    {
                    lv_name_40_0=(Token)match(input,67,FollowSets000.FOLLOW_67_in_ruleDatabaseProperty5629); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_40_0, grammarAccess.getDatabasePropertyAccess().getNameShowDriverInfoKeyword_16_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_40_0, "show-driver-info");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2741:2: (this_WS_41= RULE_WS )+
                    int cnt69=0;
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==RULE_WS) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2741:3: this_WS_41= RULE_WS
                    	    {
                    	    this_WS_41=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5654); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_41, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_16_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt69 >= 1 ) break loop69;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(69, input);
                                throw eee;
                        }
                        cnt69++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2745:3: ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2746:1: (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2746:1: (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2747:3: lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbDriverInfoDriverMetaInfoAssignementParserRuleCall_16_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDriverMetaInfoAssignement_in_ruleDatabaseProperty5676);
                    lv_dbDriverInfo_42_0=ruleDriverMetaInfoAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbDriverInfo",
                              		lv_dbDriverInfo_42_0, 
                              		"DriverMetaInfoAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2764:6: ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2764:6: ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2764:7: ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2764:7: ( (lv_name_43_0= 'show-driver-output' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2765:1: (lv_name_43_0= 'show-driver-output' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2765:1: (lv_name_43_0= 'show-driver-output' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2766:3: lv_name_43_0= 'show-driver-output'
                    {
                    lv_name_43_0=(Token)match(input,68,FollowSets000.FOLLOW_68_in_ruleDatabaseProperty5702); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_43_0, grammarAccess.getDatabasePropertyAccess().getNameShowDriverOutputKeyword_17_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_43_0, "show-driver-output");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2779:2: ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+
                    int cnt71=0;
                    loop71:
                    do {
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==RULE_WS) ) {
                            alt71=1;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2779:3: (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2779:3: (this_WS_44= RULE_WS )+
                    	    int cnt70=0;
                    	    loop70:
                    	    do {
                    	        int alt70=2;
                    	        int LA70_0 = input.LA(1);

                    	        if ( (LA70_0==RULE_WS) ) {
                    	            alt70=1;
                    	        }


                    	        switch (alt70) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2779:4: this_WS_44= RULE_WS
                    	    	    {
                    	    	    this_WS_44=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5728); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_44, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_17_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt70 >= 1 ) break loop70;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(70, input);
                    	                throw eee;
                    	        }
                    	        cnt70++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2783:3: ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2784:1: (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2784:1: (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2785:3: lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbMethodsCallsDriverMethodOutputAssignementParserRuleCall_17_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleDriverMethodOutputAssignement_in_ruleDatabaseProperty5750);
                    	    lv_dbMethodsCalls_45_0=ruleDriverMethodOutputAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"dbMethodsCalls",
                    	              		lv_dbMethodsCalls_45_0, 
                    	              		"DriverMethodOutputAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt71 >= 1 ) break loop71;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(71, input);
                                throw eee;
                        }
                        cnt71++;
                    } while (true);


                    }


                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2802:6: ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2802:6: ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2802:7: ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2802:7: ( (lv_name_46_0= 'debug-level' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2803:1: (lv_name_46_0= 'debug-level' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2803:1: (lv_name_46_0= 'debug-level' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2804:3: lv_name_46_0= 'debug-level'
                    {
                    lv_name_46_0=(Token)match(input,69,FollowSets000.FOLLOW_69_in_ruleDatabaseProperty5778); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_46_0, grammarAccess.getDatabasePropertyAccess().getNameDebugLevelKeyword_18_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_46_0, "debug-level");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2817:2: (this_WS_47= RULE_WS )+
                    int cnt72=0;
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==RULE_WS) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2817:3: this_WS_47= RULE_WS
                    	    {
                    	    this_WS_47=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5803); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_47, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_18_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt72 >= 1 ) break loop72;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(72, input);
                                throw eee;
                        }
                        cnt72++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2821:3: ( (lv_debug_48_0= ruleDebugLevelAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2822:1: (lv_debug_48_0= ruleDebugLevelAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2822:1: (lv_debug_48_0= ruleDebugLevelAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2823:3: lv_debug_48_0= ruleDebugLevelAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDebugDebugLevelAssignementParserRuleCall_18_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDebugLevelAssignement_in_ruleDatabaseProperty5825);
                    lv_debug_48_0=ruleDebugLevelAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"debug",
                              		lv_debug_48_0, 
                              		"DebugLevelAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2840:6: ( (lv_name_49_0= 'take-comments' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2840:6: ( (lv_name_49_0= 'take-comments' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2841:1: (lv_name_49_0= 'take-comments' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2841:1: (lv_name_49_0= 'take-comments' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2842:3: lv_name_49_0= 'take-comments'
                    {
                    lv_name_49_0=(Token)match(input,70,FollowSets000.FOLLOW_70_in_ruleDatabaseProperty5850); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_49_0, grammarAccess.getDatabasePropertyAccess().getNameTakeCommentsKeyword_19_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_49_0, "take-comments");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2856:6: ( (lv_name_50_0= 'lowercase-names' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2856:6: ( (lv_name_50_0= 'lowercase-names' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2857:1: (lv_name_50_0= 'lowercase-names' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2857:1: (lv_name_50_0= 'lowercase-names' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2858:3: lv_name_50_0= 'lowercase-names'
                    {
                    lv_name_50_0=(Token)match(input,71,FollowSets000.FOLLOW_71_in_ruleDatabaseProperty5887); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_50_0, grammarAccess.getDatabasePropertyAccess().getNameLowercaseNamesKeyword_20_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_50_0, "lowercase-names");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2872:6: ( (lv_name_51_0= 'uppercase-names' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2872:6: ( (lv_name_51_0= 'uppercase-names' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2873:1: (lv_name_51_0= 'uppercase-names' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2873:1: (lv_name_51_0= 'uppercase-names' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2874:3: lv_name_51_0= 'uppercase-names'
                    {
                    lv_name_51_0=(Token)match(input,72,FollowSets000.FOLLOW_72_in_ruleDatabaseProperty5924); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_51_0, grammarAccess.getDatabasePropertyAccess().getNameUppercaseNamesKeyword_21_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_51_0, "uppercase-names");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseProperty"


    // $ANTLR start "entryRulePojogenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2895:1: entryRulePojogenProperty returns [EObject current=null] : iv_rulePojogenProperty= rulePojogenProperty EOF ;
    public final EObject entryRulePojogenProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojogenProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2896:2: (iv_rulePojogenProperty= rulePojogenProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2897:2: iv_rulePojogenProperty= rulePojogenProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojogenPropertyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePojogenProperty_in_entryRulePojogenProperty5973);
            iv_rulePojogenProperty=rulePojogenProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojogenProperty; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePojogenProperty5983); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojogenProperty"


    // $ANTLR start "rulePojogenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2904:1: rulePojogenProperty returns [EObject current=null] : ( ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ ) | ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ ) | ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ ) | ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ ) | ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ ) | ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_133_0= 'generate-wrappers' ) ) | ( (lv_name_134_0= 'generate-validation-annotations' ) ) | ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* ) | ( (lv_name_138_0= 'make-it-final' ) ) | ( ( (lv_name_139_0= 'version-column' ) ) (this_WS_140= RULE_WS )+ ( (lv_version_141_0= RULE_IDENT ) ) ( (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+ )? ( (this_WS_146= RULE_WS )+ this_MINUS_147= RULE_MINUS ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_150_0= 'debug-level' ) ) (this_WS_151= RULE_WS )+ ( (lv_debug_152_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_153_0= 'pojos-for-procedures' ) ) ( (this_WS_154= RULE_WS )+ ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) ) )+ ) | ( ( (lv_name_156_0= 'pojos-for-functions' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) ) )+ ) | ( ( (lv_name_159_0= 'active-filter' ) ) (this_WS_160= RULE_WS )+ ( (lv_activeFilter_161_0= rulePropertyValue ) ) ) | ( ( (lv_name_162_0= 'package' ) ) (this_WS_163= RULE_WS )+ ( (lv_pckg_164_0= rulePropertyValue ) ) ) | ( ( (lv_name_165_0= 'enum-for-check-constraints' ) ) (this_WS_166= RULE_WS )+ ( (lv_enumName_167_0= RULE_IDENT ) ) ( (this_WS_168= RULE_WS )+ ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) ) )+ ) ) ;
    public final EObject rulePojogenProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_WS_1=null;
        Token lv_name_3_0=null;
        Token this_WS_4=null;
        Token lv_dbTable_5_0=null;
        Token this_WS_6=null;
        Token lv_name_8_0=null;
        Token this_WS_9=null;
        Token lv_dbTable_10_0=null;
        Token this_WS_11=null;
        Token lv_name_13_0=null;
        Token this_WS_14=null;
        Token lv_dbProcedure_15_0=null;
        Token this_WS_16=null;
        Token lv_name_18_0=null;
        Token this_WS_19=null;
        Token lv_dbFunction_20_0=null;
        Token this_WS_21=null;
        Token lv_name_23_0=null;
        Token this_WS_24=null;
        Token lv_dbTable_25_0=null;
        Token this_WS_26=null;
        Token lv_name_28_0=null;
        Token this_WS_29=null;
        Token lv_dbProcedure_30_0=null;
        Token this_WS_31=null;
        Token lv_name_33_0=null;
        Token this_WS_34=null;
        Token lv_dbFunction_35_0=null;
        Token this_WS_36=null;
        Token lv_name_38_0=null;
        Token this_WS_39=null;
        Token lv_dbTables_40_0=null;
        Token lv_name_41_0=null;
        Token this_WS_42=null;
        Token lv_dbTables_43_0=null;
        Token lv_name_44_0=null;
        Token this_WS_45=null;
        Token lv_dbTables_46_0=null;
        Token lv_name_47_0=null;
        Token this_WS_48=null;
        Token lv_name_50_0=null;
        Token this_WS_51=null;
        Token lv_dbTable_52_0=null;
        Token this_WS_53=null;
        Token lv_dbColumns_54_0=null;
        Token lv_name_55_0=null;
        Token this_WS_56=null;
        Token lv_dbTable_57_0=null;
        Token this_WS_58=null;
        Token lv_dbColumns_59_0=null;
        Token lv_name_60_0=null;
        Token this_WS_61=null;
        Token lv_dbTable_62_0=null;
        Token this_WS_63=null;
        Token lv_dbColumns_64_0=null;
        Token lv_name_65_0=null;
        Token this_WS_66=null;
        Token lv_dbTable_67_0=null;
        Token this_WS_68=null;
        Token lv_name_70_0=null;
        Token this_WS_71=null;
        Token lv_name_73_0=null;
        Token this_WS_74=null;
        Token lv_dbTable_75_0=null;
        Token this_WS_76=null;
        Token lv_name_78_0=null;
        Token this_WS_79=null;
        Token lv_dbTable_80_0=null;
        Token this_WS_81=null;
        Token lv_name_83_0=null;
        Token this_WS_84=null;
        Token lv_dbTable_85_0=null;
        Token this_WS_86=null;
        Token lv_name_88_0=null;
        Token this_WS_89=null;
        Token lv_dbTable_90_0=null;
        Token this_WS_91=null;
        Token lv_name_93_0=null;
        Token this_WS_94=null;
        Token lv_dbTable_95_0=null;
        Token this_WS_96=null;
        Token lv_name_98_0=null;
        Token this_WS_99=null;
        Token lv_dbTable_100_0=null;
        Token this_WS_101=null;
        Token lv_name_103_0=null;
        Token this_WS_104=null;
        Token lv_dbTable_105_0=null;
        Token this_WS_106=null;
        Token lv_name_108_0=null;
        Token this_WS_109=null;
        Token lv_dbTable_110_0=null;
        Token this_WS_111=null;
        Token lv_dbColumn_112_0=null;
        Token this_WS_113=null;
        Token lv_name_115_0=null;
        Token this_WS_116=null;
        Token lv_methods_117_0=null;
        Token lv_name_118_0=null;
        Token this_WS_119=null;
        Token lv_operatorsSuffix_120_0=null;
        Token lv_name_121_0=null;
        Token this_WS_122=null;
        Token lv_name_124_0=null;
        Token this_WS_125=null;
        Token lv_name_127_0=null;
        Token this_WS_128=null;
        Token lv_name_130_0=null;
        Token this_WS_131=null;
        Token lv_name_133_0=null;
        Token lv_name_134_0=null;
        Token lv_name_135_0=null;
        Token this_WS_136=null;
        Token lv_dbTables_137_0=null;
        Token lv_name_138_0=null;
        Token lv_name_139_0=null;
        Token this_WS_140=null;
        Token lv_version_141_0=null;
        Token this_WS_142=null;
        Token this_PLUS_143=null;
        Token this_WS_144=null;
        Token lv_dbTables_145_0=null;
        Token this_WS_146=null;
        Token this_MINUS_147=null;
        Token this_WS_148=null;
        Token lv_dbNotTables_149_0=null;
        Token lv_name_150_0=null;
        Token this_WS_151=null;
        Token lv_name_153_0=null;
        Token this_WS_154=null;
        Token lv_name_156_0=null;
        Token this_WS_157=null;
        Token lv_name_159_0=null;
        Token this_WS_160=null;
        Token lv_name_162_0=null;
        Token this_WS_163=null;
        Token lv_name_165_0=null;
        Token this_WS_166=null;
        Token lv_enumName_167_0=null;
        Token this_WS_168=null;
        Token lv_dbCheckConstraints_169_0=null;
        EObject lv_sqlTypes_2_0 = null;

        EObject lv_sqlTypes_7_0 = null;

        EObject lv_columnTypes_12_0 = null;

        EObject lv_columnTypes_17_0 = null;

        EObject lv_columnTypes_22_0 = null;

        EObject lv_columnType_27_0 = null;

        EObject lv_columnType_32_0 = null;

        EObject lv_columnType_37_0 = null;

        EObject lv_joinTables_49_0 = null;

        EObject lv_columnTypes_69_0 = null;

        EObject lv_tables_72_0 = null;

        EObject lv_columns_77_0 = null;

        EObject lv_exports_82_0 = null;

        EObject lv_imports_87_0 = null;

        EObject lv_imports_92_0 = null;

        EObject lv_exports_97_0 = null;

        EObject lv_imports_102_0 = null;

        EObject lv_many2s_107_0 = null;

        EObject lv_inheritance_114_0 = null;

        EObject lv_toImplements_123_0 = null;

        EObject lv_toExtends_126_0 = null;

        EObject lv_toImplementsGenerics_129_0 = null;

        EObject lv_toExtendsGenerics_132_0 = null;

        EObject lv_debug_152_0 = null;

        EObject lv_procPojos_155_0 = null;

        EObject lv_funPojos_158_0 = null;

        AntlrDatatypeRuleToken lv_activeFilter_161_0 = null;

        AntlrDatatypeRuleToken lv_pckg_164_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2907:28: ( ( ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ ) | ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ ) | ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ ) | ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ ) | ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ ) | ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_133_0= 'generate-wrappers' ) ) | ( (lv_name_134_0= 'generate-validation-annotations' ) ) | ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* ) | ( (lv_name_138_0= 'make-it-final' ) ) | ( ( (lv_name_139_0= 'version-column' ) ) (this_WS_140= RULE_WS )+ ( (lv_version_141_0= RULE_IDENT ) ) ( (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+ )? ( (this_WS_146= RULE_WS )+ this_MINUS_147= RULE_MINUS ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_150_0= 'debug-level' ) ) (this_WS_151= RULE_WS )+ ( (lv_debug_152_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_153_0= 'pojos-for-procedures' ) ) ( (this_WS_154= RULE_WS )+ ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) ) )+ ) | ( ( (lv_name_156_0= 'pojos-for-functions' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) ) )+ ) | ( ( (lv_name_159_0= 'active-filter' ) ) (this_WS_160= RULE_WS )+ ( (lv_activeFilter_161_0= rulePropertyValue ) ) ) | ( ( (lv_name_162_0= 'package' ) ) (this_WS_163= RULE_WS )+ ( (lv_pckg_164_0= rulePropertyValue ) ) ) | ( ( (lv_name_165_0= 'enum-for-check-constraints' ) ) (this_WS_166= RULE_WS )+ ( (lv_enumName_167_0= RULE_IDENT ) ) ( (this_WS_168= RULE_WS )+ ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) ) )+ ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2908:1: ( ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ ) | ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ ) | ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ ) | ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ ) | ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ ) | ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_133_0= 'generate-wrappers' ) ) | ( (lv_name_134_0= 'generate-validation-annotations' ) ) | ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* ) | ( (lv_name_138_0= 'make-it-final' ) ) | ( ( (lv_name_139_0= 'version-column' ) ) (this_WS_140= RULE_WS )+ ( (lv_version_141_0= RULE_IDENT ) ) ( (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+ )? ( (this_WS_146= RULE_WS )+ this_MINUS_147= RULE_MINUS ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_150_0= 'debug-level' ) ) (this_WS_151= RULE_WS )+ ( (lv_debug_152_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_153_0= 'pojos-for-procedures' ) ) ( (this_WS_154= RULE_WS )+ ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) ) )+ ) | ( ( (lv_name_156_0= 'pojos-for-functions' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) ) )+ ) | ( ( (lv_name_159_0= 'active-filter' ) ) (this_WS_160= RULE_WS )+ ( (lv_activeFilter_161_0= rulePropertyValue ) ) ) | ( ( (lv_name_162_0= 'package' ) ) (this_WS_163= RULE_WS )+ ( (lv_pckg_164_0= rulePropertyValue ) ) ) | ( ( (lv_name_165_0= 'enum-for-check-constraints' ) ) (this_WS_166= RULE_WS )+ ( (lv_enumName_167_0= RULE_IDENT ) ) ( (this_WS_168= RULE_WS )+ ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) ) )+ ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2908:1: ( ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ ) | ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ ) | ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ ) | ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ ) | ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ ) | ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_133_0= 'generate-wrappers' ) ) | ( (lv_name_134_0= 'generate-validation-annotations' ) ) | ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* ) | ( (lv_name_138_0= 'make-it-final' ) ) | ( ( (lv_name_139_0= 'version-column' ) ) (this_WS_140= RULE_WS )+ ( (lv_version_141_0= RULE_IDENT ) ) ( (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+ )? ( (this_WS_146= RULE_WS )+ this_MINUS_147= RULE_MINUS ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_150_0= 'debug-level' ) ) (this_WS_151= RULE_WS )+ ( (lv_debug_152_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_153_0= 'pojos-for-procedures' ) ) ( (this_WS_154= RULE_WS )+ ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) ) )+ ) | ( ( (lv_name_156_0= 'pojos-for-functions' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) ) )+ ) | ( ( (lv_name_159_0= 'active-filter' ) ) (this_WS_160= RULE_WS )+ ( (lv_activeFilter_161_0= rulePropertyValue ) ) ) | ( ( (lv_name_162_0= 'package' ) ) (this_WS_163= RULE_WS )+ ( (lv_pckg_164_0= rulePropertyValue ) ) ) | ( ( (lv_name_165_0= 'enum-for-check-constraints' ) ) (this_WS_166= RULE_WS )+ ( (lv_enumName_167_0= RULE_IDENT ) ) ( (this_WS_168= RULE_WS )+ ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) ) )+ ) )
            int alt170=42;
            switch ( input.LA(1) ) {
            case 73:
                {
                alt170=1;
                }
                break;
            case 74:
                {
                alt170=2;
                }
                break;
            case 75:
                {
                alt170=3;
                }
                break;
            case 76:
                {
                alt170=4;
                }
                break;
            case 77:
                {
                alt170=5;
                }
                break;
            case 78:
                {
                alt170=6;
                }
                break;
            case 79:
                {
                alt170=7;
                }
                break;
            case 80:
                {
                alt170=8;
                }
                break;
            case 81:
                {
                alt170=9;
                }
                break;
            case 82:
                {
                alt170=10;
                }
                break;
            case 83:
                {
                alt170=11;
                }
                break;
            case 84:
                {
                alt170=12;
                }
                break;
            case 85:
                {
                alt170=13;
                }
                break;
            case 86:
                {
                alt170=14;
                }
                break;
            case 87:
                {
                alt170=15;
                }
                break;
            case 88:
                {
                alt170=16;
                }
                break;
            case 89:
                {
                alt170=17;
                }
                break;
            case 90:
                {
                alt170=18;
                }
                break;
            case 91:
                {
                alt170=19;
                }
                break;
            case 92:
                {
                alt170=20;
                }
                break;
            case 93:
                {
                alt170=21;
                }
                break;
            case 94:
                {
                alt170=22;
                }
                break;
            case 95:
                {
                alt170=23;
                }
                break;
            case 96:
                {
                alt170=24;
                }
                break;
            case 97:
                {
                alt170=25;
                }
                break;
            case 98:
                {
                alt170=26;
                }
                break;
            case 99:
                {
                alt170=27;
                }
                break;
            case 100:
                {
                alt170=28;
                }
                break;
            case 101:
                {
                alt170=29;
                }
                break;
            case 102:
                {
                alt170=30;
                }
                break;
            case 103:
                {
                alt170=31;
                }
                break;
            case 104:
                {
                alt170=32;
                }
                break;
            case 105:
                {
                alt170=33;
                }
                break;
            case 106:
                {
                alt170=34;
                }
                break;
            case 107:
                {
                alt170=35;
                }
                break;
            case 108:
                {
                alt170=36;
                }
                break;
            case 69:
                {
                alt170=37;
                }
                break;
            case 109:
                {
                alt170=38;
                }
                break;
            case 110:
                {
                alt170=39;
                }
                break;
            case 111:
                {
                alt170=40;
                }
                break;
            case 112:
                {
                alt170=41;
                }
                break;
            case 113:
                {
                alt170=42;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }

            switch (alt170) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2908:2: ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2908:2: ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2908:3: ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2908:3: ( (lv_name_0_0= 'types-sqltypes' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2909:1: (lv_name_0_0= 'types-sqltypes' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2909:1: (lv_name_0_0= 'types-sqltypes' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2910:3: lv_name_0_0= 'types-sqltypes'
                    {
                    lv_name_0_0=(Token)match(input,73,FollowSets000.FOLLOW_73_in_rulePojogenProperty6027); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getPojogenPropertyAccess().getNameTypesSqltypesKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "types-sqltypes");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2923:2: ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+
                    int cnt75=0;
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==RULE_WS) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2923:3: (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2923:3: (this_WS_1= RULE_WS )+
                    	    int cnt74=0;
                    	    loop74:
                    	    do {
                    	        int alt74=2;
                    	        int LA74_0 = input.LA(1);

                    	        if ( (LA74_0==RULE_WS) ) {
                    	            alt74=1;
                    	        }


                    	        switch (alt74) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2923:4: this_WS_1= RULE_WS
                    	    	    {
                    	    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6053); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_1, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_0_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt74 >= 1 ) break loop74;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(74, input);
                    	                throw eee;
                    	        }
                    	        cnt74++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2927:3: ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2928:1: (lv_sqlTypes_2_0= ruleSqlTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2928:1: (lv_sqlTypes_2_0= ruleSqlTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2929:3: lv_sqlTypes_2_0= ruleSqlTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getSqlTypesSqlTypeAssignementParserRuleCall_0_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleSqlTypeAssignement_in_rulePojogenProperty6075);
                    	    lv_sqlTypes_2_0=ruleSqlTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"sqlTypes",
                    	              		lv_sqlTypes_2_0, 
                    	              		"SqlTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt75 >= 1 ) break loop75;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(75, input);
                                throw eee;
                        }
                        cnt75++;
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2946:6: ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2946:6: ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2946:7: ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2946:7: ( (lv_name_3_0= 'types-in-table' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2947:1: (lv_name_3_0= 'types-in-table' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2947:1: (lv_name_3_0= 'types-in-table' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2948:3: lv_name_3_0= 'types-in-table'
                    {
                    lv_name_3_0=(Token)match(input,74,FollowSets000.FOLLOW_74_in_rulePojogenProperty6103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_3_0, grammarAccess.getPojogenPropertyAccess().getNameTypesInTableKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_3_0, "types-in-table");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2961:2: (this_WS_4= RULE_WS )+
                    int cnt76=0;
                    loop76:
                    do {
                        int alt76=2;
                        int LA76_0 = input.LA(1);

                        if ( (LA76_0==RULE_WS) ) {
                            alt76=1;
                        }


                        switch (alt76) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2961:3: this_WS_4= RULE_WS
                    	    {
                    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6128); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_4, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_1_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt76 >= 1 ) break loop76;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(76, input);
                                throw eee;
                        }
                        cnt76++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2965:3: ( (lv_dbTable_5_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2966:1: (lv_dbTable_5_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2966:1: (lv_dbTable_5_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2967:3: lv_dbTable_5_0= RULE_IDENT
                    {
                    lv_dbTable_5_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_5_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_1_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_5_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2983:2: ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+
                    int cnt78=0;
                    loop78:
                    do {
                        int alt78=2;
                        int LA78_0 = input.LA(1);

                        if ( (LA78_0==RULE_WS) ) {
                            alt78=1;
                        }


                        switch (alt78) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2983:3: (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2983:3: (this_WS_6= RULE_WS )+
                    	    int cnt77=0;
                    	    loop77:
                    	    do {
                    	        int alt77=2;
                    	        int LA77_0 = input.LA(1);

                    	        if ( (LA77_0==RULE_WS) ) {
                    	            alt77=1;
                    	        }


                    	        switch (alt77) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2983:4: this_WS_6= RULE_WS
                    	    	    {
                    	    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6164); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_6, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_1_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt77 >= 1 ) break loop77;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(77, input);
                    	                throw eee;
                    	        }
                    	        cnt77++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2987:3: ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2988:1: (lv_sqlTypes_7_0= ruleSqlTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2988:1: (lv_sqlTypes_7_0= ruleSqlTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2989:3: lv_sqlTypes_7_0= ruleSqlTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getSqlTypesSqlTypeAssignementParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleSqlTypeAssignement_in_rulePojogenProperty6186);
                    	    lv_sqlTypes_7_0=ruleSqlTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"sqlTypes",
                    	              		lv_sqlTypes_7_0, 
                    	              		"SqlTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt78 >= 1 ) break loop78;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(78, input);
                                throw eee;
                        }
                        cnt78++;
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3006:6: ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3006:6: ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3006:7: ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3006:7: ( (lv_name_8_0= 'types-for-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3007:1: (lv_name_8_0= 'types-for-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3007:1: (lv_name_8_0= 'types-for-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3008:3: lv_name_8_0= 'types-for-columns'
                    {
                    lv_name_8_0=(Token)match(input,75,FollowSets000.FOLLOW_75_in_rulePojogenProperty6214); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_8_0, grammarAccess.getPojogenPropertyAccess().getNameTypesForColumnsKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_8_0, "types-for-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3021:2: (this_WS_9= RULE_WS )+
                    int cnt79=0;
                    loop79:
                    do {
                        int alt79=2;
                        int LA79_0 = input.LA(1);

                        if ( (LA79_0==RULE_WS) ) {
                            alt79=1;
                        }


                        switch (alt79) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3021:3: this_WS_9= RULE_WS
                    	    {
                    	    this_WS_9=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6239); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_9, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_2_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt79 >= 1 ) break loop79;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(79, input);
                                throw eee;
                        }
                        cnt79++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3025:3: ( (lv_dbTable_10_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3026:1: (lv_dbTable_10_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3026:1: (lv_dbTable_10_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3027:3: lv_dbTable_10_0= RULE_IDENT
                    {
                    lv_dbTable_10_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6257); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_10_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_2_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_10_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3043:2: ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+
                    int cnt81=0;
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==RULE_WS) ) {
                            alt81=1;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3043:3: (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3043:3: (this_WS_11= RULE_WS )+
                    	    int cnt80=0;
                    	    loop80:
                    	    do {
                    	        int alt80=2;
                    	        int LA80_0 = input.LA(1);

                    	        if ( (LA80_0==RULE_WS) ) {
                    	            alt80=1;
                    	        }


                    	        switch (alt80) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3043:4: this_WS_11= RULE_WS
                    	    	    {
                    	    	    this_WS_11=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6275); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_11, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_2_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt80 >= 1 ) break loop80;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(80, input);
                    	                throw eee;
                    	        }
                    	        cnt80++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3047:3: ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3048:1: (lv_columnTypes_12_0= ruleColumnTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3048:1: (lv_columnTypes_12_0= ruleColumnTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3049:3: lv_columnTypes_12_0= ruleColumnTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_2_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6297);
                    	    lv_columnTypes_12_0=ruleColumnTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columnTypes",
                    	              		lv_columnTypes_12_0, 
                    	              		"ColumnTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt81 >= 1 ) break loop81;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(81, input);
                                throw eee;
                        }
                        cnt81++;
                    } while (true);


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3066:6: ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3066:6: ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3066:7: ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3066:7: ( (lv_name_13_0= 'types-for-procedure' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3067:1: (lv_name_13_0= 'types-for-procedure' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3067:1: (lv_name_13_0= 'types-for-procedure' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3068:3: lv_name_13_0= 'types-for-procedure'
                    {
                    lv_name_13_0=(Token)match(input,76,FollowSets000.FOLLOW_76_in_rulePojogenProperty6325); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_13_0, grammarAccess.getPojogenPropertyAccess().getNameTypesForProcedureKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_13_0, "types-for-procedure");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3081:2: (this_WS_14= RULE_WS )+
                    int cnt82=0;
                    loop82:
                    do {
                        int alt82=2;
                        int LA82_0 = input.LA(1);

                        if ( (LA82_0==RULE_WS) ) {
                            alt82=1;
                        }


                        switch (alt82) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3081:3: this_WS_14= RULE_WS
                    	    {
                    	    this_WS_14=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6350); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_14, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_3_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt82 >= 1 ) break loop82;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(82, input);
                                throw eee;
                        }
                        cnt82++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3085:3: ( (lv_dbProcedure_15_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3086:1: (lv_dbProcedure_15_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3086:1: (lv_dbProcedure_15_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3087:3: lv_dbProcedure_15_0= RULE_IDENT
                    {
                    lv_dbProcedure_15_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6368); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbProcedure_15_0, grammarAccess.getPojogenPropertyAccess().getDbProcedureIDENTTerminalRuleCall_3_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbProcedure",
                              		lv_dbProcedure_15_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3103:2: ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+
                    int cnt84=0;
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

                        if ( (LA84_0==RULE_WS) ) {
                            alt84=1;
                        }


                        switch (alt84) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3103:3: (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3103:3: (this_WS_16= RULE_WS )+
                    	    int cnt83=0;
                    	    loop83:
                    	    do {
                    	        int alt83=2;
                    	        int LA83_0 = input.LA(1);

                    	        if ( (LA83_0==RULE_WS) ) {
                    	            alt83=1;
                    	        }


                    	        switch (alt83) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3103:4: this_WS_16= RULE_WS
                    	    	    {
                    	    	    this_WS_16=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6386); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_16, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_3_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt83 >= 1 ) break loop83;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(83, input);
                    	                throw eee;
                    	        }
                    	        cnt83++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3107:3: ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3108:1: (lv_columnTypes_17_0= ruleColumnTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3108:1: (lv_columnTypes_17_0= ruleColumnTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3109:3: lv_columnTypes_17_0= ruleColumnTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_3_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6408);
                    	    lv_columnTypes_17_0=ruleColumnTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columnTypes",
                    	              		lv_columnTypes_17_0, 
                    	              		"ColumnTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt84 >= 1 ) break loop84;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(84, input);
                                throw eee;
                        }
                        cnt84++;
                    } while (true);


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3126:6: ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3126:6: ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3126:7: ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3126:7: ( (lv_name_18_0= 'types-for-function' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3127:1: (lv_name_18_0= 'types-for-function' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3127:1: (lv_name_18_0= 'types-for-function' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3128:3: lv_name_18_0= 'types-for-function'
                    {
                    lv_name_18_0=(Token)match(input,77,FollowSets000.FOLLOW_77_in_rulePojogenProperty6436); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_18_0, grammarAccess.getPojogenPropertyAccess().getNameTypesForFunctionKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_18_0, "types-for-function");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3141:2: (this_WS_19= RULE_WS )+
                    int cnt85=0;
                    loop85:
                    do {
                        int alt85=2;
                        int LA85_0 = input.LA(1);

                        if ( (LA85_0==RULE_WS) ) {
                            alt85=1;
                        }


                        switch (alt85) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3141:3: this_WS_19= RULE_WS
                    	    {
                    	    this_WS_19=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6461); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_19, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt85 >= 1 ) break loop85;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(85, input);
                                throw eee;
                        }
                        cnt85++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3145:3: ( (lv_dbFunction_20_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3146:1: (lv_dbFunction_20_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3146:1: (lv_dbFunction_20_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3147:3: lv_dbFunction_20_0= RULE_IDENT
                    {
                    lv_dbFunction_20_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6479); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_20_0, grammarAccess.getPojogenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_4_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_20_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3163:2: ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+
                    int cnt87=0;
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==RULE_WS) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3163:3: (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3163:3: (this_WS_21= RULE_WS )+
                    	    int cnt86=0;
                    	    loop86:
                    	    do {
                    	        int alt86=2;
                    	        int LA86_0 = input.LA(1);

                    	        if ( (LA86_0==RULE_WS) ) {
                    	            alt86=1;
                    	        }


                    	        switch (alt86) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3163:4: this_WS_21= RULE_WS
                    	    	    {
                    	    	    this_WS_21=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6497); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_21, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_4_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt86 >= 1 ) break loop86;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(86, input);
                    	                throw eee;
                    	        }
                    	        cnt86++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3167:3: ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3168:1: (lv_columnTypes_22_0= ruleColumnTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3168:1: (lv_columnTypes_22_0= ruleColumnTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3169:3: lv_columnTypes_22_0= ruleColumnTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_4_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6519);
                    	    lv_columnTypes_22_0=ruleColumnTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columnTypes",
                    	              		lv_columnTypes_22_0, 
                    	              		"ColumnTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt87 >= 1 ) break loop87;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(87, input);
                                throw eee;
                        }
                        cnt87++;
                    } while (true);


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3186:6: ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3186:6: ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3186:7: ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3186:7: ( (lv_name_23_0= 'show-type-for-column' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3187:1: (lv_name_23_0= 'show-type-for-column' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3187:1: (lv_name_23_0= 'show-type-for-column' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3188:3: lv_name_23_0= 'show-type-for-column'
                    {
                    lv_name_23_0=(Token)match(input,78,FollowSets000.FOLLOW_78_in_rulePojogenProperty6547); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_23_0, grammarAccess.getPojogenPropertyAccess().getNameShowTypeForColumnKeyword_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_23_0, "show-type-for-column");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3201:2: (this_WS_24= RULE_WS )+
                    int cnt88=0;
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==RULE_WS) ) {
                            alt88=1;
                        }


                        switch (alt88) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3201:3: this_WS_24= RULE_WS
                    	    {
                    	    this_WS_24=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6572); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_24, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_5_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt88 >= 1 ) break loop88;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(88, input);
                                throw eee;
                        }
                        cnt88++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3205:3: ( (lv_dbTable_25_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3206:1: (lv_dbTable_25_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3206:1: (lv_dbTable_25_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3207:3: lv_dbTable_25_0= RULE_IDENT
                    {
                    lv_dbTable_25_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6590); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_25_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_5_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_25_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3223:2: (this_WS_26= RULE_WS )+
                    int cnt89=0;
                    loop89:
                    do {
                        int alt89=2;
                        int LA89_0 = input.LA(1);

                        if ( (LA89_0==RULE_WS) ) {
                            alt89=1;
                        }


                        switch (alt89) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3223:3: this_WS_26= RULE_WS
                    	    {
                    	    this_WS_26=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6607); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_26, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_5_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt89 >= 1 ) break loop89;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(89, input);
                                throw eee;
                        }
                        cnt89++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3227:3: ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3228:1: (lv_columnType_27_0= ruleShowColumnTypeAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3228:1: (lv_columnType_27_0= ruleShowColumnTypeAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3229:3: lv_columnType_27_0= ruleShowColumnTypeAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypeShowColumnTypeAssignementParserRuleCall_5_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6629);
                    lv_columnType_27_0=ruleShowColumnTypeAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"columnType",
                              		lv_columnType_27_0, 
                              		"ShowColumnTypeAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3246:6: ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3246:6: ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3246:7: ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3246:7: ( (lv_name_28_0= 'show-type-for-procedure' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3247:1: (lv_name_28_0= 'show-type-for-procedure' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3247:1: (lv_name_28_0= 'show-type-for-procedure' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3248:3: lv_name_28_0= 'show-type-for-procedure'
                    {
                    lv_name_28_0=(Token)match(input,79,FollowSets000.FOLLOW_79_in_rulePojogenProperty6655); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_28_0, grammarAccess.getPojogenPropertyAccess().getNameShowTypeForProcedureKeyword_6_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_28_0, "show-type-for-procedure");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3261:2: (this_WS_29= RULE_WS )+
                    int cnt90=0;
                    loop90:
                    do {
                        int alt90=2;
                        int LA90_0 = input.LA(1);

                        if ( (LA90_0==RULE_WS) ) {
                            alt90=1;
                        }


                        switch (alt90) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3261:3: this_WS_29= RULE_WS
                    	    {
                    	    this_WS_29=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6680); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_29, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_6_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt90 >= 1 ) break loop90;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(90, input);
                                throw eee;
                        }
                        cnt90++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3265:3: ( (lv_dbProcedure_30_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3266:1: (lv_dbProcedure_30_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3266:1: (lv_dbProcedure_30_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3267:3: lv_dbProcedure_30_0= RULE_IDENT
                    {
                    lv_dbProcedure_30_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6698); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbProcedure_30_0, grammarAccess.getPojogenPropertyAccess().getDbProcedureIDENTTerminalRuleCall_6_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbProcedure",
                              		lv_dbProcedure_30_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3283:2: (this_WS_31= RULE_WS )+
                    int cnt91=0;
                    loop91:
                    do {
                        int alt91=2;
                        int LA91_0 = input.LA(1);

                        if ( (LA91_0==RULE_WS) ) {
                            alt91=1;
                        }


                        switch (alt91) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3283:3: this_WS_31= RULE_WS
                    	    {
                    	    this_WS_31=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6715); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_31, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_6_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt91 >= 1 ) break loop91;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(91, input);
                                throw eee;
                        }
                        cnt91++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3287:3: ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3288:1: (lv_columnType_32_0= ruleShowColumnTypeAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3288:1: (lv_columnType_32_0= ruleShowColumnTypeAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3289:3: lv_columnType_32_0= ruleShowColumnTypeAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypeShowColumnTypeAssignementParserRuleCall_6_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6737);
                    lv_columnType_32_0=ruleShowColumnTypeAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"columnType",
                              		lv_columnType_32_0, 
                              		"ShowColumnTypeAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3306:6: ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3306:6: ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3306:7: ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3306:7: ( (lv_name_33_0= 'show-type-for-function' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3307:1: (lv_name_33_0= 'show-type-for-function' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3307:1: (lv_name_33_0= 'show-type-for-function' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3308:3: lv_name_33_0= 'show-type-for-function'
                    {
                    lv_name_33_0=(Token)match(input,80,FollowSets000.FOLLOW_80_in_rulePojogenProperty6763); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_33_0, grammarAccess.getPojogenPropertyAccess().getNameShowTypeForFunctionKeyword_7_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_33_0, "show-type-for-function");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3321:2: (this_WS_34= RULE_WS )+
                    int cnt92=0;
                    loop92:
                    do {
                        int alt92=2;
                        int LA92_0 = input.LA(1);

                        if ( (LA92_0==RULE_WS) ) {
                            alt92=1;
                        }


                        switch (alt92) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3321:3: this_WS_34= RULE_WS
                    	    {
                    	    this_WS_34=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6788); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_34, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_7_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt92 >= 1 ) break loop92;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(92, input);
                                throw eee;
                        }
                        cnt92++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3325:3: ( (lv_dbFunction_35_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3326:1: (lv_dbFunction_35_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3326:1: (lv_dbFunction_35_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3327:3: lv_dbFunction_35_0= RULE_IDENT
                    {
                    lv_dbFunction_35_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6806); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_35_0, grammarAccess.getPojogenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_7_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_35_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3343:2: (this_WS_36= RULE_WS )+
                    int cnt93=0;
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==RULE_WS) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3343:3: this_WS_36= RULE_WS
                    	    {
                    	    this_WS_36=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6823); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_36, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_7_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt93 >= 1 ) break loop93;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(93, input);
                                throw eee;
                        }
                        cnt93++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3347:3: ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3348:1: (lv_columnType_37_0= ruleShowColumnTypeAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3348:1: (lv_columnType_37_0= ruleShowColumnTypeAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3349:3: lv_columnType_37_0= ruleShowColumnTypeAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypeShowColumnTypeAssignementParserRuleCall_7_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6845);
                    lv_columnType_37_0=ruleShowColumnTypeAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"columnType",
                              		lv_columnType_37_0, 
                              		"ShowColumnTypeAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3366:6: ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3366:6: ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3366:7: ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3366:7: ( (lv_name_38_0= 'ignore-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3367:1: (lv_name_38_0= 'ignore-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3367:1: (lv_name_38_0= 'ignore-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3368:3: lv_name_38_0= 'ignore-tables'
                    {
                    lv_name_38_0=(Token)match(input,81,FollowSets000.FOLLOW_81_in_rulePojogenProperty6871); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_38_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreTablesKeyword_8_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_38_0, "ignore-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3381:2: ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+
                    int cnt95=0;
                    loop95:
                    do {
                        int alt95=2;
                        int LA95_0 = input.LA(1);

                        if ( (LA95_0==RULE_WS) ) {
                            alt95=1;
                        }


                        switch (alt95) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3381:3: (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3381:3: (this_WS_39= RULE_WS )+
                    	    int cnt94=0;
                    	    loop94:
                    	    do {
                    	        int alt94=2;
                    	        int LA94_0 = input.LA(1);

                    	        if ( (LA94_0==RULE_WS) ) {
                    	            alt94=1;
                    	        }


                    	        switch (alt94) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3381:4: this_WS_39= RULE_WS
                    	    	    {
                    	    	    this_WS_39=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6897); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_39, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_8_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt94 >= 1 ) break loop94;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(94, input);
                    	                throw eee;
                    	        }
                    	        cnt94++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3385:3: ( (lv_dbTables_40_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3386:1: (lv_dbTables_40_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3386:1: (lv_dbTables_40_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3387:3: lv_dbTables_40_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_40_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6915); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_40_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_8_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_40_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt95 >= 1 ) break loop95;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(95, input);
                                throw eee;
                        }
                        cnt95++;
                    } while (true);


                    }


                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3404:6: ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3404:6: ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3404:7: ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3404:7: ( (lv_name_41_0= 'only-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3405:1: (lv_name_41_0= 'only-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3405:1: (lv_name_41_0= 'only-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3406:3: lv_name_41_0= 'only-tables'
                    {
                    lv_name_41_0=(Token)match(input,82,FollowSets000.FOLLOW_82_in_rulePojogenProperty6948); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_41_0, grammarAccess.getPojogenPropertyAccess().getNameOnlyTablesKeyword_9_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_41_0, "only-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3419:2: ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+
                    int cnt97=0;
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==RULE_WS) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3419:3: (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3419:3: (this_WS_42= RULE_WS )+
                    	    int cnt96=0;
                    	    loop96:
                    	    do {
                    	        int alt96=2;
                    	        int LA96_0 = input.LA(1);

                    	        if ( (LA96_0==RULE_WS) ) {
                    	            alt96=1;
                    	        }


                    	        switch (alt96) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3419:4: this_WS_42= RULE_WS
                    	    	    {
                    	    	    this_WS_42=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6974); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_42, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_9_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt96 >= 1 ) break loop96;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(96, input);
                    	                throw eee;
                    	        }
                    	        cnt96++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3423:3: ( (lv_dbTables_43_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3424:1: (lv_dbTables_43_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3424:1: (lv_dbTables_43_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3425:3: lv_dbTables_43_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_43_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6992); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_43_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_9_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_43_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt97 >= 1 ) break loop97;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(97, input);
                                throw eee;
                        }
                        cnt97++;
                    } while (true);


                    }


                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3442:6: ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3442:6: ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3442:7: ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3442:7: ( (lv_name_44_0= 'not-abstract-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3443:1: (lv_name_44_0= 'not-abstract-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3443:1: (lv_name_44_0= 'not-abstract-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3444:3: lv_name_44_0= 'not-abstract-tables'
                    {
                    lv_name_44_0=(Token)match(input,83,FollowSets000.FOLLOW_83_in_rulePojogenProperty7025); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_44_0, grammarAccess.getPojogenPropertyAccess().getNameNotAbstractTablesKeyword_10_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_44_0, "not-abstract-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3457:2: ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+
                    int cnt99=0;
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==RULE_WS) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3457:3: (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3457:3: (this_WS_45= RULE_WS )+
                    	    int cnt98=0;
                    	    loop98:
                    	    do {
                    	        int alt98=2;
                    	        int LA98_0 = input.LA(1);

                    	        if ( (LA98_0==RULE_WS) ) {
                    	            alt98=1;
                    	        }


                    	        switch (alt98) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3457:4: this_WS_45= RULE_WS
                    	    	    {
                    	    	    this_WS_45=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7051); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_45, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_10_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt98 >= 1 ) break loop98;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(98, input);
                    	                throw eee;
                    	        }
                    	        cnt98++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3461:3: ( (lv_dbTables_46_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3462:1: (lv_dbTables_46_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3462:1: (lv_dbTables_46_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3463:3: lv_dbTables_46_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_46_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7069); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_46_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_10_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_46_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt99 >= 1 ) break loop99;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(99, input);
                                throw eee;
                        }
                        cnt99++;
                    } while (true);


                    }


                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3480:6: ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3480:6: ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3480:7: ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3480:7: ( (lv_name_47_0= 'join-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3481:1: (lv_name_47_0= 'join-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3481:1: (lv_name_47_0= 'join-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3482:3: lv_name_47_0= 'join-tables'
                    {
                    lv_name_47_0=(Token)match(input,84,FollowSets000.FOLLOW_84_in_rulePojogenProperty7102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_47_0, grammarAccess.getPojogenPropertyAccess().getNameJoinTablesKeyword_11_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_47_0, "join-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3495:2: ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+
                    int cnt101=0;
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==RULE_WS) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3495:3: (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3495:3: (this_WS_48= RULE_WS )+
                    	    int cnt100=0;
                    	    loop100:
                    	    do {
                    	        int alt100=2;
                    	        int LA100_0 = input.LA(1);

                    	        if ( (LA100_0==RULE_WS) ) {
                    	            alt100=1;
                    	        }


                    	        switch (alt100) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3495:4: this_WS_48= RULE_WS
                    	    	    {
                    	    	    this_WS_48=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7128); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_48, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_11_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt100 >= 1 ) break loop100;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(100, input);
                    	                throw eee;
                    	        }
                    	        cnt100++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3499:3: ( (lv_joinTables_49_0= ruleJoinTableAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3500:1: (lv_joinTables_49_0= ruleJoinTableAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3500:1: (lv_joinTables_49_0= ruleJoinTableAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3501:3: lv_joinTables_49_0= ruleJoinTableAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getJoinTablesJoinTableAssignementParserRuleCall_11_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleJoinTableAssignement_in_rulePojogenProperty7150);
                    	    lv_joinTables_49_0=ruleJoinTableAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"joinTables",
                    	              		lv_joinTables_49_0, 
                    	              		"JoinTableAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt101 >= 1 ) break loop101;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(101, input);
                                throw eee;
                        }
                        cnt101++;
                    } while (true);


                    }


                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3518:6: ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3518:6: ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3518:7: ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3518:7: ( (lv_name_50_0= 'ignore-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3519:1: (lv_name_50_0= 'ignore-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3519:1: (lv_name_50_0= 'ignore-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3520:3: lv_name_50_0= 'ignore-columns'
                    {
                    lv_name_50_0=(Token)match(input,85,FollowSets000.FOLLOW_85_in_rulePojogenProperty7178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_50_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreColumnsKeyword_12_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_50_0, "ignore-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3533:2: (this_WS_51= RULE_WS )+
                    int cnt102=0;
                    loop102:
                    do {
                        int alt102=2;
                        int LA102_0 = input.LA(1);

                        if ( (LA102_0==RULE_WS) ) {
                            alt102=1;
                        }


                        switch (alt102) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3533:3: this_WS_51= RULE_WS
                    	    {
                    	    this_WS_51=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7203); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_51, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_12_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt102 >= 1 ) break loop102;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(102, input);
                                throw eee;
                        }
                        cnt102++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3537:3: ( (lv_dbTable_52_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3538:1: (lv_dbTable_52_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3538:1: (lv_dbTable_52_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3539:3: lv_dbTable_52_0= RULE_IDENT
                    {
                    lv_dbTable_52_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7221); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_52_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_12_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_52_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3555:2: ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+
                    int cnt104=0;
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==RULE_WS) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3555:3: (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3555:3: (this_WS_53= RULE_WS )+
                    	    int cnt103=0;
                    	    loop103:
                    	    do {
                    	        int alt103=2;
                    	        int LA103_0 = input.LA(1);

                    	        if ( (LA103_0==RULE_WS) ) {
                    	            alt103=1;
                    	        }


                    	        switch (alt103) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3555:4: this_WS_53= RULE_WS
                    	    	    {
                    	    	    this_WS_53=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7239); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_53, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_12_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt103 >= 1 ) break loop103;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(103, input);
                    	                throw eee;
                    	        }
                    	        cnt103++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3559:3: ( (lv_dbColumns_54_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3560:1: (lv_dbColumns_54_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3560:1: (lv_dbColumns_54_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3561:3: lv_dbColumns_54_0= RULE_IDENT
                    	    {
                    	    lv_dbColumns_54_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7257); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbColumns_54_0, grammarAccess.getPojogenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_12_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbColumns",
                    	              		lv_dbColumns_54_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt104 >= 1 ) break loop104;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(104, input);
                                throw eee;
                        }
                        cnt104++;
                    } while (true);


                    }


                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3578:6: ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3578:6: ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3578:7: ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3578:7: ( (lv_name_55_0= 'required-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3579:1: (lv_name_55_0= 'required-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3579:1: (lv_name_55_0= 'required-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3580:3: lv_name_55_0= 'required-columns'
                    {
                    lv_name_55_0=(Token)match(input,86,FollowSets000.FOLLOW_86_in_rulePojogenProperty7290); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_55_0, grammarAccess.getPojogenPropertyAccess().getNameRequiredColumnsKeyword_13_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_55_0, "required-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3593:2: (this_WS_56= RULE_WS )+
                    int cnt105=0;
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==RULE_WS) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3593:3: this_WS_56= RULE_WS
                    	    {
                    	    this_WS_56=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7315); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_56, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_13_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt105 >= 1 ) break loop105;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(105, input);
                                throw eee;
                        }
                        cnt105++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3597:3: ( (lv_dbTable_57_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3598:1: (lv_dbTable_57_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3598:1: (lv_dbTable_57_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3599:3: lv_dbTable_57_0= RULE_IDENT
                    {
                    lv_dbTable_57_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7333); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_57_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_13_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_57_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3615:2: ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+
                    int cnt107=0;
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==RULE_WS) ) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3615:3: (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3615:3: (this_WS_58= RULE_WS )+
                    	    int cnt106=0;
                    	    loop106:
                    	    do {
                    	        int alt106=2;
                    	        int LA106_0 = input.LA(1);

                    	        if ( (LA106_0==RULE_WS) ) {
                    	            alt106=1;
                    	        }


                    	        switch (alt106) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3615:4: this_WS_58= RULE_WS
                    	    	    {
                    	    	    this_WS_58=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7351); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_58, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_13_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt106 >= 1 ) break loop106;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(106, input);
                    	                throw eee;
                    	        }
                    	        cnt106++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3619:3: ( (lv_dbColumns_59_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3620:1: (lv_dbColumns_59_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3620:1: (lv_dbColumns_59_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3621:3: lv_dbColumns_59_0= RULE_IDENT
                    	    {
                    	    lv_dbColumns_59_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7369); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbColumns_59_0, grammarAccess.getPojogenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_13_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbColumns",
                    	              		lv_dbColumns_59_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt107 >= 1 ) break loop107;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(107, input);
                                throw eee;
                        }
                        cnt107++;
                    } while (true);


                    }


                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3638:6: ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3638:6: ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3638:7: ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3638:7: ( (lv_name_60_0= 'not-required-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3639:1: (lv_name_60_0= 'not-required-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3639:1: (lv_name_60_0= 'not-required-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3640:3: lv_name_60_0= 'not-required-columns'
                    {
                    lv_name_60_0=(Token)match(input,87,FollowSets000.FOLLOW_87_in_rulePojogenProperty7402); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_60_0, grammarAccess.getPojogenPropertyAccess().getNameNotRequiredColumnsKeyword_14_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_60_0, "not-required-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3653:2: (this_WS_61= RULE_WS )+
                    int cnt108=0;
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==RULE_WS) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3653:3: this_WS_61= RULE_WS
                    	    {
                    	    this_WS_61=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7427); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_61, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_14_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt108 >= 1 ) break loop108;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(108, input);
                                throw eee;
                        }
                        cnt108++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3657:3: ( (lv_dbTable_62_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3658:1: (lv_dbTable_62_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3658:1: (lv_dbTable_62_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3659:3: lv_dbTable_62_0= RULE_IDENT
                    {
                    lv_dbTable_62_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7445); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_62_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_14_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_62_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3675:2: ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+
                    int cnt110=0;
                    loop110:
                    do {
                        int alt110=2;
                        int LA110_0 = input.LA(1);

                        if ( (LA110_0==RULE_WS) ) {
                            alt110=1;
                        }


                        switch (alt110) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3675:3: (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3675:3: (this_WS_63= RULE_WS )+
                    	    int cnt109=0;
                    	    loop109:
                    	    do {
                    	        int alt109=2;
                    	        int LA109_0 = input.LA(1);

                    	        if ( (LA109_0==RULE_WS) ) {
                    	            alt109=1;
                    	        }


                    	        switch (alt109) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3675:4: this_WS_63= RULE_WS
                    	    	    {
                    	    	    this_WS_63=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7463); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_63, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_14_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt109 >= 1 ) break loop109;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(109, input);
                    	                throw eee;
                    	        }
                    	        cnt109++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3679:3: ( (lv_dbColumns_64_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3680:1: (lv_dbColumns_64_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3680:1: (lv_dbColumns_64_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3681:3: lv_dbColumns_64_0= RULE_IDENT
                    	    {
                    	    lv_dbColumns_64_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7481); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbColumns_64_0, grammarAccess.getPojogenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_14_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbColumns",
                    	              		lv_dbColumns_64_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt110 >= 1 ) break loop110;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(110, input);
                                throw eee;
                        }
                        cnt110++;
                    } while (true);


                    }


                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3698:6: ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3698:6: ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3698:7: ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3698:7: ( (lv_name_65_0= 'create-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3699:1: (lv_name_65_0= 'create-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3699:1: (lv_name_65_0= 'create-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3700:3: lv_name_65_0= 'create-columns'
                    {
                    lv_name_65_0=(Token)match(input,88,FollowSets000.FOLLOW_88_in_rulePojogenProperty7514); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_65_0, grammarAccess.getPojogenPropertyAccess().getNameCreateColumnsKeyword_15_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_65_0, "create-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3713:2: (this_WS_66= RULE_WS )+
                    int cnt111=0;
                    loop111:
                    do {
                        int alt111=2;
                        int LA111_0 = input.LA(1);

                        if ( (LA111_0==RULE_WS) ) {
                            alt111=1;
                        }


                        switch (alt111) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3713:3: this_WS_66= RULE_WS
                    	    {
                    	    this_WS_66=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7539); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_66, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_15_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt111 >= 1 ) break loop111;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(111, input);
                                throw eee;
                        }
                        cnt111++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3717:3: ( (lv_dbTable_67_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3718:1: (lv_dbTable_67_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3718:1: (lv_dbTable_67_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3719:3: lv_dbTable_67_0= RULE_IDENT
                    {
                    lv_dbTable_67_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7557); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_67_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_15_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_67_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3735:2: ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+
                    int cnt113=0;
                    loop113:
                    do {
                        int alt113=2;
                        int LA113_0 = input.LA(1);

                        if ( (LA113_0==RULE_WS) ) {
                            alt113=1;
                        }


                        switch (alt113) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3735:3: (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3735:3: (this_WS_68= RULE_WS )+
                    	    int cnt112=0;
                    	    loop112:
                    	    do {
                    	        int alt112=2;
                    	        int LA112_0 = input.LA(1);

                    	        if ( (LA112_0==RULE_WS) ) {
                    	            alt112=1;
                    	        }


                    	        switch (alt112) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3735:4: this_WS_68= RULE_WS
                    	    	    {
                    	    	    this_WS_68=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7575); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_68, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_15_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt112 >= 1 ) break loop112;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(112, input);
                    	                throw eee;
                    	        }
                    	        cnt112++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3739:3: ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3740:1: (lv_columnTypes_69_0= ruleColumnTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3740:1: (lv_columnTypes_69_0= ruleColumnTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3741:3: lv_columnTypes_69_0= ruleColumnTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_15_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty7597);
                    	    lv_columnTypes_69_0=ruleColumnTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columnTypes",
                    	              		lv_columnTypes_69_0, 
                    	              		"ColumnTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt113 >= 1 ) break loop113;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(113, input);
                                throw eee;
                        }
                        cnt113++;
                    } while (true);


                    }


                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3758:6: ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3758:6: ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3758:7: ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3758:7: ( (lv_name_70_0= 'rename-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3759:1: (lv_name_70_0= 'rename-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3759:1: (lv_name_70_0= 'rename-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3760:3: lv_name_70_0= 'rename-tables'
                    {
                    lv_name_70_0=(Token)match(input,89,FollowSets000.FOLLOW_89_in_rulePojogenProperty7625); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_70_0, grammarAccess.getPojogenPropertyAccess().getNameRenameTablesKeyword_16_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_70_0, "rename-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3773:2: ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+
                    int cnt115=0;
                    loop115:
                    do {
                        int alt115=2;
                        int LA115_0 = input.LA(1);

                        if ( (LA115_0==RULE_WS) ) {
                            alt115=1;
                        }


                        switch (alt115) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3773:3: (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3773:3: (this_WS_71= RULE_WS )+
                    	    int cnt114=0;
                    	    loop114:
                    	    do {
                    	        int alt114=2;
                    	        int LA114_0 = input.LA(1);

                    	        if ( (LA114_0==RULE_WS) ) {
                    	            alt114=1;
                    	        }


                    	        switch (alt114) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3773:4: this_WS_71= RULE_WS
                    	    	    {
                    	    	    this_WS_71=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7651); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_71, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_16_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt114 >= 1 ) break loop114;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(114, input);
                    	                throw eee;
                    	        }
                    	        cnt114++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3777:3: ( (lv_tables_72_0= ruleTableAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3778:1: (lv_tables_72_0= ruleTableAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3778:1: (lv_tables_72_0= ruleTableAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3779:3: lv_tables_72_0= ruleTableAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getTablesTableAssignementParserRuleCall_16_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleTableAssignement_in_rulePojogenProperty7673);
                    	    lv_tables_72_0=ruleTableAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"tables",
                    	              		lv_tables_72_0, 
                    	              		"TableAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt115 >= 1 ) break loop115;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(115, input);
                                throw eee;
                        }
                        cnt115++;
                    } while (true);


                    }


                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3796:6: ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3796:6: ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3796:7: ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3796:7: ( (lv_name_73_0= 'rename-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3797:1: (lv_name_73_0= 'rename-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3797:1: (lv_name_73_0= 'rename-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3798:3: lv_name_73_0= 'rename-columns'
                    {
                    lv_name_73_0=(Token)match(input,90,FollowSets000.FOLLOW_90_in_rulePojogenProperty7701); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_73_0, grammarAccess.getPojogenPropertyAccess().getNameRenameColumnsKeyword_17_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_73_0, "rename-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3811:2: (this_WS_74= RULE_WS )+
                    int cnt116=0;
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==RULE_WS) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3811:3: this_WS_74= RULE_WS
                    	    {
                    	    this_WS_74=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7726); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_74, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_17_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt116 >= 1 ) break loop116;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(116, input);
                                throw eee;
                        }
                        cnt116++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3815:3: ( (lv_dbTable_75_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3816:1: (lv_dbTable_75_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3816:1: (lv_dbTable_75_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3817:3: lv_dbTable_75_0= RULE_IDENT
                    {
                    lv_dbTable_75_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7744); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_75_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_17_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_75_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3833:2: ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+
                    int cnt118=0;
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==RULE_WS) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3833:3: (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3833:3: (this_WS_76= RULE_WS )+
                    	    int cnt117=0;
                    	    loop117:
                    	    do {
                    	        int alt117=2;
                    	        int LA117_0 = input.LA(1);

                    	        if ( (LA117_0==RULE_WS) ) {
                    	            alt117=1;
                    	        }


                    	        switch (alt117) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3833:4: this_WS_76= RULE_WS
                    	    	    {
                    	    	    this_WS_76=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7762); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_76, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_17_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt117 >= 1 ) break loop117;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(117, input);
                    	                throw eee;
                    	        }
                    	        cnt117++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3837:3: ( (lv_columns_77_0= ruleColumnAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3838:1: (lv_columns_77_0= ruleColumnAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3838:1: (lv_columns_77_0= ruleColumnAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3839:3: lv_columns_77_0= ruleColumnAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnsColumnAssignementParserRuleCall_17_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnAssignement_in_rulePojogenProperty7784);
                    	    lv_columns_77_0=ruleColumnAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columns",
                    	              		lv_columns_77_0, 
                    	              		"ColumnAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt118 >= 1 ) break loop118;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(118, input);
                                throw eee;
                        }
                        cnt118++;
                    } while (true);


                    }


                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3856:6: ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3856:6: ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3856:7: ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3856:7: ( (lv_name_78_0= 'ignore-one-to-many' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3857:1: (lv_name_78_0= 'ignore-one-to-many' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3857:1: (lv_name_78_0= 'ignore-one-to-many' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3858:3: lv_name_78_0= 'ignore-one-to-many'
                    {
                    lv_name_78_0=(Token)match(input,91,FollowSets000.FOLLOW_91_in_rulePojogenProperty7812); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_78_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreOneToManyKeyword_18_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_78_0, "ignore-one-to-many");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3871:2: (this_WS_79= RULE_WS )+
                    int cnt119=0;
                    loop119:
                    do {
                        int alt119=2;
                        int LA119_0 = input.LA(1);

                        if ( (LA119_0==RULE_WS) ) {
                            alt119=1;
                        }


                        switch (alt119) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3871:3: this_WS_79= RULE_WS
                    	    {
                    	    this_WS_79=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7837); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_79, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_18_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt119 >= 1 ) break loop119;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(119, input);
                                throw eee;
                        }
                        cnt119++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3875:3: ( (lv_dbTable_80_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3876:1: (lv_dbTable_80_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3876:1: (lv_dbTable_80_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3877:3: lv_dbTable_80_0= RULE_IDENT
                    {
                    lv_dbTable_80_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7855); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_80_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_18_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_80_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3893:2: ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+
                    int cnt121=0;
                    loop121:
                    do {
                        int alt121=2;
                        int LA121_0 = input.LA(1);

                        if ( (LA121_0==RULE_WS) ) {
                            alt121=1;
                        }


                        switch (alt121) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3893:3: (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3893:3: (this_WS_81= RULE_WS )+
                    	    int cnt120=0;
                    	    loop120:
                    	    do {
                    	        int alt120=2;
                    	        int LA120_0 = input.LA(1);

                    	        if ( (LA120_0==RULE_WS) ) {
                    	            alt120=1;
                    	        }


                    	        switch (alt120) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3893:4: this_WS_81= RULE_WS
                    	    	    {
                    	    	    this_WS_81=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7873); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_81, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_18_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt120 >= 1 ) break loop120;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(120, input);
                    	                throw eee;
                    	        }
                    	        cnt120++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3897:3: ( (lv_exports_82_0= ruleExportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3898:1: (lv_exports_82_0= ruleExportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3898:1: (lv_exports_82_0= ruleExportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3899:3: lv_exports_82_0= ruleExportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getExportsExportAssignementParserRuleCall_18_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleExportAssignement_in_rulePojogenProperty7895);
                    	    lv_exports_82_0=ruleExportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exports",
                    	              		lv_exports_82_0, 
                    	              		"ExportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt121 >= 1 ) break loop121;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(121, input);
                                throw eee;
                        }
                        cnt121++;
                    } while (true);


                    }


                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3916:6: ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3916:6: ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3916:7: ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3916:7: ( (lv_name_83_0= 'ignore-many-to-one' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3917:1: (lv_name_83_0= 'ignore-many-to-one' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3917:1: (lv_name_83_0= 'ignore-many-to-one' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3918:3: lv_name_83_0= 'ignore-many-to-one'
                    {
                    lv_name_83_0=(Token)match(input,92,FollowSets000.FOLLOW_92_in_rulePojogenProperty7923); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_83_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreManyToOneKeyword_19_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_83_0, "ignore-many-to-one");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3931:2: (this_WS_84= RULE_WS )+
                    int cnt122=0;
                    loop122:
                    do {
                        int alt122=2;
                        int LA122_0 = input.LA(1);

                        if ( (LA122_0==RULE_WS) ) {
                            alt122=1;
                        }


                        switch (alt122) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3931:3: this_WS_84= RULE_WS
                    	    {
                    	    this_WS_84=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7948); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_84, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_19_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt122 >= 1 ) break loop122;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(122, input);
                                throw eee;
                        }
                        cnt122++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3935:3: ( (lv_dbTable_85_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3936:1: (lv_dbTable_85_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3936:1: (lv_dbTable_85_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3937:3: lv_dbTable_85_0= RULE_IDENT
                    {
                    lv_dbTable_85_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7966); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_85_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_19_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_85_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3953:2: ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+
                    int cnt124=0;
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==RULE_WS) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3953:3: (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3953:3: (this_WS_86= RULE_WS )+
                    	    int cnt123=0;
                    	    loop123:
                    	    do {
                    	        int alt123=2;
                    	        int LA123_0 = input.LA(1);

                    	        if ( (LA123_0==RULE_WS) ) {
                    	            alt123=1;
                    	        }


                    	        switch (alt123) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3953:4: this_WS_86= RULE_WS
                    	    	    {
                    	    	    this_WS_86=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7984); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_86, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_19_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt123 >= 1 ) break loop123;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(123, input);
                    	                throw eee;
                    	        }
                    	        cnt123++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3957:3: ( (lv_imports_87_0= ruleImportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3958:1: (lv_imports_87_0= ruleImportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3958:1: (lv_imports_87_0= ruleImportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3959:3: lv_imports_87_0= ruleImportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getImportsImportAssignementParserRuleCall_19_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleImportAssignement_in_rulePojogenProperty8006);
                    	    lv_imports_87_0=ruleImportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"imports",
                    	              		lv_imports_87_0, 
                    	              		"ImportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt124 >= 1 ) break loop124;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(124, input);
                                throw eee;
                        }
                        cnt124++;
                    } while (true);


                    }


                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3976:6: ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3976:6: ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3976:7: ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3976:7: ( (lv_name_88_0= 'inherit-many-to-one' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3977:1: (lv_name_88_0= 'inherit-many-to-one' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3977:1: (lv_name_88_0= 'inherit-many-to-one' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3978:3: lv_name_88_0= 'inherit-many-to-one'
                    {
                    lv_name_88_0=(Token)match(input,93,FollowSets000.FOLLOW_93_in_rulePojogenProperty8034); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_88_0, grammarAccess.getPojogenPropertyAccess().getNameInheritManyToOneKeyword_20_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_88_0, "inherit-many-to-one");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3991:2: (this_WS_89= RULE_WS )+
                    int cnt125=0;
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==RULE_WS) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3991:3: this_WS_89= RULE_WS
                    	    {
                    	    this_WS_89=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8059); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_89, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_20_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt125 >= 1 ) break loop125;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(125, input);
                                throw eee;
                        }
                        cnt125++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3995:3: ( (lv_dbTable_90_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3996:1: (lv_dbTable_90_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3996:1: (lv_dbTable_90_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3997:3: lv_dbTable_90_0= RULE_IDENT
                    {
                    lv_dbTable_90_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8077); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_90_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_20_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_90_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4013:2: ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+
                    int cnt127=0;
                    loop127:
                    do {
                        int alt127=2;
                        int LA127_0 = input.LA(1);

                        if ( (LA127_0==RULE_WS) ) {
                            alt127=1;
                        }


                        switch (alt127) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4013:3: (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4013:3: (this_WS_91= RULE_WS )+
                    	    int cnt126=0;
                    	    loop126:
                    	    do {
                    	        int alt126=2;
                    	        int LA126_0 = input.LA(1);

                    	        if ( (LA126_0==RULE_WS) ) {
                    	            alt126=1;
                    	        }


                    	        switch (alt126) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4013:4: this_WS_91= RULE_WS
                    	    	    {
                    	    	    this_WS_91=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8095); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_91, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_20_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt126 >= 1 ) break loop126;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(126, input);
                    	                throw eee;
                    	        }
                    	        cnt126++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4017:3: ( (lv_imports_92_0= ruleImportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4018:1: (lv_imports_92_0= ruleImportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4018:1: (lv_imports_92_0= ruleImportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4019:3: lv_imports_92_0= ruleImportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getImportsImportAssignementParserRuleCall_20_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleImportAssignement_in_rulePojogenProperty8117);
                    	    lv_imports_92_0=ruleImportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"imports",
                    	              		lv_imports_92_0, 
                    	              		"ImportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt127 >= 1 ) break loop127;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(127, input);
                                throw eee;
                        }
                        cnt127++;
                    } while (true);


                    }


                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4036:6: ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4036:6: ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4036:7: ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4036:7: ( (lv_name_93_0= 'create-one-to-many' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4037:1: (lv_name_93_0= 'create-one-to-many' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4037:1: (lv_name_93_0= 'create-one-to-many' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4038:3: lv_name_93_0= 'create-one-to-many'
                    {
                    lv_name_93_0=(Token)match(input,94,FollowSets000.FOLLOW_94_in_rulePojogenProperty8145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_93_0, grammarAccess.getPojogenPropertyAccess().getNameCreateOneToManyKeyword_21_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_93_0, "create-one-to-many");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4051:2: (this_WS_94= RULE_WS )+
                    int cnt128=0;
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==RULE_WS) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4051:3: this_WS_94= RULE_WS
                    	    {
                    	    this_WS_94=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8170); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_94, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_21_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt128 >= 1 ) break loop128;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(128, input);
                                throw eee;
                        }
                        cnt128++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4055:3: ( (lv_dbTable_95_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4056:1: (lv_dbTable_95_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4056:1: (lv_dbTable_95_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4057:3: lv_dbTable_95_0= RULE_IDENT
                    {
                    lv_dbTable_95_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8188); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_95_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_21_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_95_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4073:2: ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+
                    int cnt130=0;
                    loop130:
                    do {
                        int alt130=2;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==RULE_WS) ) {
                            alt130=1;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4073:3: (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4073:3: (this_WS_96= RULE_WS )+
                    	    int cnt129=0;
                    	    loop129:
                    	    do {
                    	        int alt129=2;
                    	        int LA129_0 = input.LA(1);

                    	        if ( (LA129_0==RULE_WS) ) {
                    	            alt129=1;
                    	        }


                    	        switch (alt129) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4073:4: this_WS_96= RULE_WS
                    	    	    {
                    	    	    this_WS_96=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8206); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_96, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_21_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt129 >= 1 ) break loop129;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(129, input);
                    	                throw eee;
                    	        }
                    	        cnt129++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4077:3: ( (lv_exports_97_0= ruleExportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4078:1: (lv_exports_97_0= ruleExportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4078:1: (lv_exports_97_0= ruleExportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4079:3: lv_exports_97_0= ruleExportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getExportsExportAssignementParserRuleCall_21_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleExportAssignement_in_rulePojogenProperty8228);
                    	    lv_exports_97_0=ruleExportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exports",
                    	              		lv_exports_97_0, 
                    	              		"ExportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt130 >= 1 ) break loop130;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(130, input);
                                throw eee;
                        }
                        cnt130++;
                    } while (true);


                    }


                    }
                    break;
                case 23 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4096:6: ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4096:6: ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4096:7: ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4096:7: ( (lv_name_98_0= 'create-many-to-one' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4097:1: (lv_name_98_0= 'create-many-to-one' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4097:1: (lv_name_98_0= 'create-many-to-one' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4098:3: lv_name_98_0= 'create-many-to-one'
                    {
                    lv_name_98_0=(Token)match(input,95,FollowSets000.FOLLOW_95_in_rulePojogenProperty8256); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_98_0, grammarAccess.getPojogenPropertyAccess().getNameCreateManyToOneKeyword_22_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_98_0, "create-many-to-one");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4111:2: (this_WS_99= RULE_WS )+
                    int cnt131=0;
                    loop131:
                    do {
                        int alt131=2;
                        int LA131_0 = input.LA(1);

                        if ( (LA131_0==RULE_WS) ) {
                            alt131=1;
                        }


                        switch (alt131) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4111:3: this_WS_99= RULE_WS
                    	    {
                    	    this_WS_99=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8281); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_99, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_22_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt131 >= 1 ) break loop131;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(131, input);
                                throw eee;
                        }
                        cnt131++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4115:3: ( (lv_dbTable_100_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4116:1: (lv_dbTable_100_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4116:1: (lv_dbTable_100_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4117:3: lv_dbTable_100_0= RULE_IDENT
                    {
                    lv_dbTable_100_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8299); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_100_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_22_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_100_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4133:2: ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+
                    int cnt133=0;
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==RULE_WS) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4133:3: (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4133:3: (this_WS_101= RULE_WS )+
                    	    int cnt132=0;
                    	    loop132:
                    	    do {
                    	        int alt132=2;
                    	        int LA132_0 = input.LA(1);

                    	        if ( (LA132_0==RULE_WS) ) {
                    	            alt132=1;
                    	        }


                    	        switch (alt132) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4133:4: this_WS_101= RULE_WS
                    	    	    {
                    	    	    this_WS_101=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8317); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_101, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_22_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt132 >= 1 ) break loop132;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(132, input);
                    	                throw eee;
                    	        }
                    	        cnt132++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4137:3: ( (lv_imports_102_0= ruleImportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4138:1: (lv_imports_102_0= ruleImportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4138:1: (lv_imports_102_0= ruleImportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4139:3: lv_imports_102_0= ruleImportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getImportsImportAssignementParserRuleCall_22_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleImportAssignement_in_rulePojogenProperty8339);
                    	    lv_imports_102_0=ruleImportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"imports",
                    	              		lv_imports_102_0, 
                    	              		"ImportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt133 >= 1 ) break loop133;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(133, input);
                                throw eee;
                        }
                        cnt133++;
                    } while (true);


                    }


                    }
                    break;
                case 24 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4156:6: ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4156:6: ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4156:7: ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4156:7: ( (lv_name_103_0= 'table-many-to-many' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4157:1: (lv_name_103_0= 'table-many-to-many' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4157:1: (lv_name_103_0= 'table-many-to-many' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4158:3: lv_name_103_0= 'table-many-to-many'
                    {
                    lv_name_103_0=(Token)match(input,96,FollowSets000.FOLLOW_96_in_rulePojogenProperty8367); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_103_0, grammarAccess.getPojogenPropertyAccess().getNameTableManyToManyKeyword_23_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_103_0, "table-many-to-many");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4171:2: (this_WS_104= RULE_WS )+
                    int cnt134=0;
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==RULE_WS) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4171:3: this_WS_104= RULE_WS
                    	    {
                    	    this_WS_104=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8392); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_104, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_23_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt134 >= 1 ) break loop134;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(134, input);
                                throw eee;
                        }
                        cnt134++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4175:3: ( (lv_dbTable_105_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4176:1: (lv_dbTable_105_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4176:1: (lv_dbTable_105_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4177:3: lv_dbTable_105_0= RULE_IDENT
                    {
                    lv_dbTable_105_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8410); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_105_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_23_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_105_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4193:2: ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+
                    int cnt136=0;
                    loop136:
                    do {
                        int alt136=2;
                        int LA136_0 = input.LA(1);

                        if ( (LA136_0==RULE_WS) ) {
                            alt136=1;
                        }


                        switch (alt136) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4193:3: (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4193:3: (this_WS_106= RULE_WS )+
                    	    int cnt135=0;
                    	    loop135:
                    	    do {
                    	        int alt135=2;
                    	        int LA135_0 = input.LA(1);

                    	        if ( (LA135_0==RULE_WS) ) {
                    	            alt135=1;
                    	        }


                    	        switch (alt135) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4193:4: this_WS_106= RULE_WS
                    	    	    {
                    	    	    this_WS_106=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8428); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_106, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_23_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt135 >= 1 ) break loop135;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(135, input);
                    	                throw eee;
                    	        }
                    	        cnt135++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4197:3: ( (lv_many2s_107_0= ruleManyToManyAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4198:1: (lv_many2s_107_0= ruleManyToManyAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4198:1: (lv_many2s_107_0= ruleManyToManyAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4199:3: lv_many2s_107_0= ruleManyToManyAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getMany2sManyToManyAssignementParserRuleCall_23_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleManyToManyAssignement_in_rulePojogenProperty8450);
                    	    lv_many2s_107_0=ruleManyToManyAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"many2s",
                    	              		lv_many2s_107_0, 
                    	              		"ManyToManyAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt136 >= 1 ) break loop136;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(136, input);
                                throw eee;
                        }
                        cnt136++;
                    } while (true);


                    }


                    }
                    break;
                case 25 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4216:6: ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4216:6: ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4216:7: ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4216:7: ( (lv_name_108_0= 'inherit-discriminator' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4217:1: (lv_name_108_0= 'inherit-discriminator' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4217:1: (lv_name_108_0= 'inherit-discriminator' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4218:3: lv_name_108_0= 'inherit-discriminator'
                    {
                    lv_name_108_0=(Token)match(input,97,FollowSets000.FOLLOW_97_in_rulePojogenProperty8478); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_108_0, grammarAccess.getPojogenPropertyAccess().getNameInheritDiscriminatorKeyword_24_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_108_0, "inherit-discriminator");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4231:2: (this_WS_109= RULE_WS )+
                    int cnt137=0;
                    loop137:
                    do {
                        int alt137=2;
                        int LA137_0 = input.LA(1);

                        if ( (LA137_0==RULE_WS) ) {
                            alt137=1;
                        }


                        switch (alt137) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4231:3: this_WS_109= RULE_WS
                    	    {
                    	    this_WS_109=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8503); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_109, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_24_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt137 >= 1 ) break loop137;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(137, input);
                                throw eee;
                        }
                        cnt137++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4235:3: ( (lv_dbTable_110_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4236:1: (lv_dbTable_110_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4236:1: (lv_dbTable_110_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4237:3: lv_dbTable_110_0= RULE_IDENT
                    {
                    lv_dbTable_110_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8521); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_110_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_24_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_110_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4253:2: (this_WS_111= RULE_WS )+
                    int cnt138=0;
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==RULE_WS) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4253:3: this_WS_111= RULE_WS
                    	    {
                    	    this_WS_111=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8538); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_111, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_24_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt138 >= 1 ) break loop138;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(138, input);
                                throw eee;
                        }
                        cnt138++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4257:3: ( (lv_dbColumn_112_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4258:1: (lv_dbColumn_112_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4258:1: (lv_dbColumn_112_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4259:3: lv_dbColumn_112_0= RULE_IDENT
                    {
                    lv_dbColumn_112_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8556); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbColumn_112_0, grammarAccess.getPojogenPropertyAccess().getDbColumnIDENTTerminalRuleCall_24_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbColumn",
                              		lv_dbColumn_112_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4275:2: ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+
                    int cnt140=0;
                    loop140:
                    do {
                        int alt140=2;
                        int LA140_0 = input.LA(1);

                        if ( (LA140_0==RULE_WS) ) {
                            alt140=1;
                        }


                        switch (alt140) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4275:3: (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4275:3: (this_WS_113= RULE_WS )+
                    	    int cnt139=0;
                    	    loop139:
                    	    do {
                    	        int alt139=2;
                    	        int LA139_0 = input.LA(1);

                    	        if ( (LA139_0==RULE_WS) ) {
                    	            alt139=1;
                    	        }


                    	        switch (alt139) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4275:4: this_WS_113= RULE_WS
                    	    	    {
                    	    	    this_WS_113=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8574); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_113, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_24_5_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt139 >= 1 ) break loop139;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(139, input);
                    	                throw eee;
                    	        }
                    	        cnt139++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4279:3: ( (lv_inheritance_114_0= ruleInheritanceAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4280:1: (lv_inheritance_114_0= ruleInheritanceAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4280:1: (lv_inheritance_114_0= ruleInheritanceAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4281:3: lv_inheritance_114_0= ruleInheritanceAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getInheritanceInheritanceAssignementParserRuleCall_24_5_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleInheritanceAssignement_in_rulePojogenProperty8596);
                    	    lv_inheritance_114_0=ruleInheritanceAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"inheritance",
                    	              		lv_inheritance_114_0, 
                    	              		"InheritanceAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt140 >= 1 ) break loop140;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(140, input);
                                throw eee;
                        }
                        cnt140++;
                    } while (true);


                    }


                    }
                    break;
                case 26 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4298:6: ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4298:6: ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4298:7: ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4298:7: ( (lv_name_115_0= 'generate-methods' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4299:1: (lv_name_115_0= 'generate-methods' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4299:1: (lv_name_115_0= 'generate-methods' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4300:3: lv_name_115_0= 'generate-methods'
                    {
                    lv_name_115_0=(Token)match(input,98,FollowSets000.FOLLOW_98_in_rulePojogenProperty8624); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_115_0, grammarAccess.getPojogenPropertyAccess().getNameGenerateMethodsKeyword_25_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_115_0, "generate-methods");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4313:2: ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+
                    int cnt142=0;
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==RULE_WS) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4313:3: (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4313:3: (this_WS_116= RULE_WS )+
                    	    int cnt141=0;
                    	    loop141:
                    	    do {
                    	        int alt141=2;
                    	        int LA141_0 = input.LA(1);

                    	        if ( (LA141_0==RULE_WS) ) {
                    	            alt141=1;
                    	        }


                    	        switch (alt141) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4313:4: this_WS_116= RULE_WS
                    	    	    {
                    	    	    this_WS_116=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8650); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_116, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_25_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt141 >= 1 ) break loop141;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(141, input);
                    	                throw eee;
                    	        }
                    	        cnt141++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4317:3: ( (lv_methods_117_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4318:1: (lv_methods_117_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4318:1: (lv_methods_117_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4319:3: lv_methods_117_0= RULE_IDENT
                    	    {
                    	    lv_methods_117_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8668); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_methods_117_0, grammarAccess.getPojogenPropertyAccess().getMethodsIDENTTerminalRuleCall_25_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"methods",
                    	              		lv_methods_117_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt142 >= 1 ) break loop142;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(142, input);
                                throw eee;
                        }
                        cnt142++;
                    } while (true);


                    }


                    }
                    break;
                case 27 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4336:6: ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4336:6: ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4336:7: ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4336:7: ( (lv_name_118_0= 'generate-operators' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4337:1: (lv_name_118_0= 'generate-operators' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4337:1: (lv_name_118_0= 'generate-operators' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4338:3: lv_name_118_0= 'generate-operators'
                    {
                    lv_name_118_0=(Token)match(input,99,FollowSets000.FOLLOW_99_in_rulePojogenProperty8701); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_118_0, grammarAccess.getPojogenPropertyAccess().getNameGenerateOperatorsKeyword_26_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_118_0, "generate-operators");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4351:2: ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )?
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==RULE_WS) ) {
                        alt144=1;
                    }
                    switch (alt144) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4351:3: (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4351:3: (this_WS_119= RULE_WS )+
                            int cnt143=0;
                            loop143:
                            do {
                                int alt143=2;
                                int LA143_0 = input.LA(1);

                                if ( (LA143_0==RULE_WS) ) {
                                    alt143=1;
                                }


                                switch (alt143) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4351:4: this_WS_119= RULE_WS
                            	    {
                            	    this_WS_119=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8727); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_119, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_26_1_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt143 >= 1 ) break loop143;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(143, input);
                                        throw eee;
                                }
                                cnt143++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4355:3: ( (lv_operatorsSuffix_120_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4356:1: (lv_operatorsSuffix_120_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4356:1: (lv_operatorsSuffix_120_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4357:3: lv_operatorsSuffix_120_0= RULE_IDENT
                            {
                            lv_operatorsSuffix_120_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8745); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_operatorsSuffix_120_0, grammarAccess.getPojogenPropertyAccess().getOperatorsSuffixIDENTTerminalRuleCall_26_1_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"operatorsSuffix",
                                      		lv_operatorsSuffix_120_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 28 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4374:6: ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4374:6: ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4374:7: ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4374:7: ( (lv_name_121_0= 'implements-interfaces' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4375:1: (lv_name_121_0= 'implements-interfaces' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4375:1: (lv_name_121_0= 'implements-interfaces' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4376:3: lv_name_121_0= 'implements-interfaces'
                    {
                    lv_name_121_0=(Token)match(input,100,FollowSets000.FOLLOW_100_in_rulePojogenProperty8778); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_121_0, grammarAccess.getPojogenPropertyAccess().getNameImplementsInterfacesKeyword_27_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_121_0, "implements-interfaces");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4389:2: (this_WS_122= RULE_WS )+
                    int cnt145=0;
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==RULE_WS) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4389:3: this_WS_122= RULE_WS
                    	    {
                    	    this_WS_122=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8803); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_122, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_27_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt145 >= 1 ) break loop145;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(145, input);
                                throw eee;
                        }
                        cnt145++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4393:3: ( (lv_toImplements_123_0= ruleImplementsAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4394:1: (lv_toImplements_123_0= ruleImplementsAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4394:1: (lv_toImplements_123_0= ruleImplementsAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4395:3: lv_toImplements_123_0= ruleImplementsAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToImplementsImplementsAssignementParserRuleCall_27_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleImplementsAssignement_in_rulePojogenProperty8825);
                    lv_toImplements_123_0=ruleImplementsAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toImplements",
                              		lv_toImplements_123_0, 
                              		"ImplementsAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 29 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4412:6: ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4412:6: ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4412:7: ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4412:7: ( (lv_name_124_0= 'extends-class' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4413:1: (lv_name_124_0= 'extends-class' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4413:1: (lv_name_124_0= 'extends-class' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4414:3: lv_name_124_0= 'extends-class'
                    {
                    lv_name_124_0=(Token)match(input,101,FollowSets000.FOLLOW_101_in_rulePojogenProperty8851); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_124_0, grammarAccess.getPojogenPropertyAccess().getNameExtendsClassKeyword_28_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_124_0, "extends-class");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4427:2: (this_WS_125= RULE_WS )+
                    int cnt146=0;
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==RULE_WS) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4427:3: this_WS_125= RULE_WS
                    	    {
                    	    this_WS_125=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8876); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_125, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_28_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt146 >= 1 ) break loop146;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(146, input);
                                throw eee;
                        }
                        cnt146++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4431:3: ( (lv_toExtends_126_0= ruleExtendsAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4432:1: (lv_toExtends_126_0= ruleExtendsAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4432:1: (lv_toExtends_126_0= ruleExtendsAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4433:3: lv_toExtends_126_0= ruleExtendsAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToExtendsExtendsAssignementParserRuleCall_28_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExtendsAssignement_in_rulePojogenProperty8898);
                    lv_toExtends_126_0=ruleExtendsAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toExtends",
                              		lv_toExtends_126_0, 
                              		"ExtendsAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 30 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4450:6: ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4450:6: ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4450:7: ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4450:7: ( (lv_name_127_0= 'implements-interfaces-generics' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4451:1: (lv_name_127_0= 'implements-interfaces-generics' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4451:1: (lv_name_127_0= 'implements-interfaces-generics' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4452:3: lv_name_127_0= 'implements-interfaces-generics'
                    {
                    lv_name_127_0=(Token)match(input,102,FollowSets000.FOLLOW_102_in_rulePojogenProperty8924); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_127_0, grammarAccess.getPojogenPropertyAccess().getNameImplementsInterfacesGenericsKeyword_29_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_127_0, "implements-interfaces-generics");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4465:2: (this_WS_128= RULE_WS )+
                    int cnt147=0;
                    loop147:
                    do {
                        int alt147=2;
                        int LA147_0 = input.LA(1);

                        if ( (LA147_0==RULE_WS) ) {
                            alt147=1;
                        }


                        switch (alt147) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4465:3: this_WS_128= RULE_WS
                    	    {
                    	    this_WS_128=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8949); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_128, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_29_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt147 >= 1 ) break loop147;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(147, input);
                                throw eee;
                        }
                        cnt147++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4469:3: ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4470:1: (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4470:1: (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4471:3: lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToImplementsGenericsImplementsAssignementGenericsParserRuleCall_29_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleImplementsAssignementGenerics_in_rulePojogenProperty8971);
                    lv_toImplementsGenerics_129_0=ruleImplementsAssignementGenerics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toImplementsGenerics",
                              		lv_toImplementsGenerics_129_0, 
                              		"ImplementsAssignementGenerics");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 31 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4488:6: ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4488:6: ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4488:7: ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4488:7: ( (lv_name_130_0= 'extends-class-generics' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4489:1: (lv_name_130_0= 'extends-class-generics' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4489:1: (lv_name_130_0= 'extends-class-generics' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4490:3: lv_name_130_0= 'extends-class-generics'
                    {
                    lv_name_130_0=(Token)match(input,103,FollowSets000.FOLLOW_103_in_rulePojogenProperty8997); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_130_0, grammarAccess.getPojogenPropertyAccess().getNameExtendsClassGenericsKeyword_30_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_130_0, "extends-class-generics");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4503:2: (this_WS_131= RULE_WS )+
                    int cnt148=0;
                    loop148:
                    do {
                        int alt148=2;
                        int LA148_0 = input.LA(1);

                        if ( (LA148_0==RULE_WS) ) {
                            alt148=1;
                        }


                        switch (alt148) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4503:3: this_WS_131= RULE_WS
                    	    {
                    	    this_WS_131=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9022); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_131, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_30_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt148 >= 1 ) break loop148;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(148, input);
                                throw eee;
                        }
                        cnt148++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4507:3: ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4508:1: (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4508:1: (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4509:3: lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToExtendsGenericsExtendsAssignementGenericsParserRuleCall_30_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExtendsAssignementGenerics_in_rulePojogenProperty9044);
                    lv_toExtendsGenerics_132_0=ruleExtendsAssignementGenerics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toExtendsGenerics",
                              		lv_toExtendsGenerics_132_0, 
                              		"ExtendsAssignementGenerics");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 32 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4526:6: ( (lv_name_133_0= 'generate-wrappers' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4526:6: ( (lv_name_133_0= 'generate-wrappers' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4527:1: (lv_name_133_0= 'generate-wrappers' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4527:1: (lv_name_133_0= 'generate-wrappers' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4528:3: lv_name_133_0= 'generate-wrappers'
                    {
                    lv_name_133_0=(Token)match(input,104,FollowSets000.FOLLOW_104_in_rulePojogenProperty9069); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_133_0, grammarAccess.getPojogenPropertyAccess().getNameGenerateWrappersKeyword_31_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_133_0, "generate-wrappers");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 33 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4542:6: ( (lv_name_134_0= 'generate-validation-annotations' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4542:6: ( (lv_name_134_0= 'generate-validation-annotations' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4543:1: (lv_name_134_0= 'generate-validation-annotations' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4543:1: (lv_name_134_0= 'generate-validation-annotations' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4544:3: lv_name_134_0= 'generate-validation-annotations'
                    {
                    lv_name_134_0=(Token)match(input,105,FollowSets000.FOLLOW_105_in_rulePojogenProperty9106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_134_0, grammarAccess.getPojogenPropertyAccess().getNameGenerateValidationAnnotationsKeyword_32_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_134_0, "generate-validation-annotations");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 34 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4558:6: ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4558:6: ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4558:7: ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4558:7: ( (lv_name_135_0= 'preserve-foreign-keys' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4559:1: (lv_name_135_0= 'preserve-foreign-keys' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4559:1: (lv_name_135_0= 'preserve-foreign-keys' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4560:3: lv_name_135_0= 'preserve-foreign-keys'
                    {
                    lv_name_135_0=(Token)match(input,106,FollowSets000.FOLLOW_106_in_rulePojogenProperty9144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_135_0, grammarAccess.getPojogenPropertyAccess().getNamePreserveForeignKeysKeyword_33_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_135_0, "preserve-foreign-keys");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4573:2: ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )*
                    loop150:
                    do {
                        int alt150=2;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==RULE_WS) ) {
                            alt150=1;
                        }


                        switch (alt150) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4573:3: (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4573:3: (this_WS_136= RULE_WS )+
                    	    int cnt149=0;
                    	    loop149:
                    	    do {
                    	        int alt149=2;
                    	        int LA149_0 = input.LA(1);

                    	        if ( (LA149_0==RULE_WS) ) {
                    	            alt149=1;
                    	        }


                    	        switch (alt149) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4573:4: this_WS_136= RULE_WS
                    	    	    {
                    	    	    this_WS_136=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9170); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_136, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_33_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt149 >= 1 ) break loop149;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(149, input);
                    	                throw eee;
                    	        }
                    	        cnt149++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4577:3: ( (lv_dbTables_137_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4578:1: (lv_dbTables_137_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4578:1: (lv_dbTables_137_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4579:3: lv_dbTables_137_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_137_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9188); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_137_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_33_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_137_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop150;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 35 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4596:6: ( (lv_name_138_0= 'make-it-final' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4596:6: ( (lv_name_138_0= 'make-it-final' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4597:1: (lv_name_138_0= 'make-it-final' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4597:1: (lv_name_138_0= 'make-it-final' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4598:3: lv_name_138_0= 'make-it-final'
                    {
                    lv_name_138_0=(Token)match(input,107,FollowSets000.FOLLOW_107_in_rulePojogenProperty9220); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_138_0, grammarAccess.getPojogenPropertyAccess().getNameMakeItFinalKeyword_34_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_138_0, "make-it-final");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 36 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4612:6: ( ( (lv_name_139_0= 'version-column' ) ) (this_WS_140= RULE_WS )+ ( (lv_version_141_0= RULE_IDENT ) ) ( (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+ )? ( (this_WS_146= RULE_WS )+ this_MINUS_147= RULE_MINUS ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+ )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4612:6: ( ( (lv_name_139_0= 'version-column' ) ) (this_WS_140= RULE_WS )+ ( (lv_version_141_0= RULE_IDENT ) ) ( (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+ )? ( (this_WS_146= RULE_WS )+ this_MINUS_147= RULE_MINUS ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+ )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4612:7: ( (lv_name_139_0= 'version-column' ) ) (this_WS_140= RULE_WS )+ ( (lv_version_141_0= RULE_IDENT ) ) ( (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+ )? ( (this_WS_146= RULE_WS )+ this_MINUS_147= RULE_MINUS ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+ )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4612:7: ( (lv_name_139_0= 'version-column' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4613:1: (lv_name_139_0= 'version-column' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4613:1: (lv_name_139_0= 'version-column' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4614:3: lv_name_139_0= 'version-column'
                    {
                    lv_name_139_0=(Token)match(input,108,FollowSets000.FOLLOW_108_in_rulePojogenProperty9258); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_139_0, grammarAccess.getPojogenPropertyAccess().getNameVersionColumnKeyword_35_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_139_0, "version-column");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4627:2: (this_WS_140= RULE_WS )+
                    int cnt151=0;
                    loop151:
                    do {
                        int alt151=2;
                        int LA151_0 = input.LA(1);

                        if ( (LA151_0==RULE_WS) ) {
                            alt151=1;
                        }


                        switch (alt151) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4627:3: this_WS_140= RULE_WS
                    	    {
                    	    this_WS_140=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9283); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_140, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_35_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt151 >= 1 ) break loop151;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(151, input);
                                throw eee;
                        }
                        cnt151++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4631:3: ( (lv_version_141_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4632:1: (lv_version_141_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4632:1: (lv_version_141_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4633:3: lv_version_141_0= RULE_IDENT
                    {
                    lv_version_141_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9301); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_version_141_0, grammarAccess.getPojogenPropertyAccess().getVersionIDENTTerminalRuleCall_35_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"version",
                              		lv_version_141_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4649:2: ( (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+ )?
                    int alt155=2;
                    alt155 = dfa155.predict(input);
                    switch (alt155) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4649:3: (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4649:3: (this_WS_142= RULE_WS )+
                            int cnt152=0;
                            loop152:
                            do {
                                int alt152=2;
                                int LA152_0 = input.LA(1);

                                if ( (LA152_0==RULE_WS) ) {
                                    alt152=1;
                                }


                                switch (alt152) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4649:4: this_WS_142= RULE_WS
                            	    {
                            	    this_WS_142=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9319); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_142, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_35_3_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt152 >= 1 ) break loop152;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(152, input);
                                        throw eee;
                                }
                                cnt152++;
                            } while (true);

                            this_PLUS_143=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_rulePojogenProperty9331); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PLUS_143, grammarAccess.getPojogenPropertyAccess().getPLUSTerminalRuleCall_35_3_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4657:1: ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+
                            int cnt154=0;
                            loop154:
                            do {
                                int alt154=2;
                                alt154 = dfa154.predict(input);
                                switch (alt154) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4657:2: (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4657:2: (this_WS_144= RULE_WS )+
                            	    int cnt153=0;
                            	    loop153:
                            	    do {
                            	        int alt153=2;
                            	        int LA153_0 = input.LA(1);

                            	        if ( (LA153_0==RULE_WS) ) {
                            	            alt153=1;
                            	        }


                            	        switch (alt153) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4657:3: this_WS_144= RULE_WS
                            	    	    {
                            	    	    this_WS_144=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9343); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_144, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_35_3_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt153 >= 1 ) break loop153;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(153, input);
                            	                throw eee;
                            	        }
                            	        cnt153++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4661:3: ( (lv_dbTables_145_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4662:1: (lv_dbTables_145_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4662:1: (lv_dbTables_145_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4663:3: lv_dbTables_145_0= RULE_IDENT
                            	    {
                            	    lv_dbTables_145_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9361); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbTables_145_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_35_3_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbTables",
                            	              		lv_dbTables_145_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt154 >= 1 ) break loop154;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(154, input);
                                        throw eee;
                                }
                                cnt154++;
                            } while (true);


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4679:6: ( (this_WS_146= RULE_WS )+ this_MINUS_147= RULE_MINUS ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+ )?
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( (LA159_0==RULE_WS) ) {
                        alt159=1;
                    }
                    switch (alt159) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4679:7: (this_WS_146= RULE_WS )+ this_MINUS_147= RULE_MINUS ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4679:7: (this_WS_146= RULE_WS )+
                            int cnt156=0;
                            loop156:
                            do {
                                int alt156=2;
                                int LA156_0 = input.LA(1);

                                if ( (LA156_0==RULE_WS) ) {
                                    alt156=1;
                                }


                                switch (alt156) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4679:8: this_WS_146= RULE_WS
                            	    {
                            	    this_WS_146=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9383); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_146, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_35_4_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt156 >= 1 ) break loop156;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(156, input);
                                        throw eee;
                                }
                                cnt156++;
                            } while (true);

                            this_MINUS_147=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_rulePojogenProperty9395); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MINUS_147, grammarAccess.getPojogenPropertyAccess().getMINUSTerminalRuleCall_35_4_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4687:1: ( (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) ) )+
                            int cnt158=0;
                            loop158:
                            do {
                                int alt158=2;
                                int LA158_0 = input.LA(1);

                                if ( (LA158_0==RULE_WS) ) {
                                    alt158=1;
                                }


                                switch (alt158) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4687:2: (this_WS_148= RULE_WS )+ ( (lv_dbNotTables_149_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4687:2: (this_WS_148= RULE_WS )+
                            	    int cnt157=0;
                            	    loop157:
                            	    do {
                            	        int alt157=2;
                            	        int LA157_0 = input.LA(1);

                            	        if ( (LA157_0==RULE_WS) ) {
                            	            alt157=1;
                            	        }


                            	        switch (alt157) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4687:3: this_WS_148= RULE_WS
                            	    	    {
                            	    	    this_WS_148=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9407); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_148, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_35_4_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt157 >= 1 ) break loop157;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(157, input);
                            	                throw eee;
                            	        }
                            	        cnt157++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4691:3: ( (lv_dbNotTables_149_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4692:1: (lv_dbNotTables_149_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4692:1: (lv_dbNotTables_149_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4693:3: lv_dbNotTables_149_0= RULE_IDENT
                            	    {
                            	    lv_dbNotTables_149_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9425); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbNotTables_149_0, grammarAccess.getPojogenPropertyAccess().getDbNotTablesIDENTTerminalRuleCall_35_4_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbNotTables",
                            	              		lv_dbNotTables_149_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt158 >= 1 ) break loop158;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(158, input);
                                        throw eee;
                                }
                                cnt158++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 37 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4710:6: ( ( (lv_name_150_0= 'debug-level' ) ) (this_WS_151= RULE_WS )+ ( (lv_debug_152_0= ruleDebugLevelAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4710:6: ( ( (lv_name_150_0= 'debug-level' ) ) (this_WS_151= RULE_WS )+ ( (lv_debug_152_0= ruleDebugLevelAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4710:7: ( (lv_name_150_0= 'debug-level' ) ) (this_WS_151= RULE_WS )+ ( (lv_debug_152_0= ruleDebugLevelAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4710:7: ( (lv_name_150_0= 'debug-level' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4711:1: (lv_name_150_0= 'debug-level' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4711:1: (lv_name_150_0= 'debug-level' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4712:3: lv_name_150_0= 'debug-level'
                    {
                    lv_name_150_0=(Token)match(input,69,FollowSets000.FOLLOW_69_in_rulePojogenProperty9460); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_150_0, grammarAccess.getPojogenPropertyAccess().getNameDebugLevelKeyword_36_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_150_0, "debug-level");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4725:2: (this_WS_151= RULE_WS )+
                    int cnt160=0;
                    loop160:
                    do {
                        int alt160=2;
                        int LA160_0 = input.LA(1);

                        if ( (LA160_0==RULE_WS) ) {
                            alt160=1;
                        }


                        switch (alt160) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4725:3: this_WS_151= RULE_WS
                    	    {
                    	    this_WS_151=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9485); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_151, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_36_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt160 >= 1 ) break loop160;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(160, input);
                                throw eee;
                        }
                        cnt160++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4729:3: ( (lv_debug_152_0= ruleDebugLevelAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4730:1: (lv_debug_152_0= ruleDebugLevelAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4730:1: (lv_debug_152_0= ruleDebugLevelAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4731:3: lv_debug_152_0= ruleDebugLevelAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getDebugDebugLevelAssignementParserRuleCall_36_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDebugLevelAssignement_in_rulePojogenProperty9507);
                    lv_debug_152_0=ruleDebugLevelAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"debug",
                              		lv_debug_152_0, 
                              		"DebugLevelAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 38 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4748:6: ( ( (lv_name_153_0= 'pojos-for-procedures' ) ) ( (this_WS_154= RULE_WS )+ ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4748:6: ( ( (lv_name_153_0= 'pojos-for-procedures' ) ) ( (this_WS_154= RULE_WS )+ ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4748:7: ( (lv_name_153_0= 'pojos-for-procedures' ) ) ( (this_WS_154= RULE_WS )+ ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4748:7: ( (lv_name_153_0= 'pojos-for-procedures' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4749:1: (lv_name_153_0= 'pojos-for-procedures' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4749:1: (lv_name_153_0= 'pojos-for-procedures' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4750:3: lv_name_153_0= 'pojos-for-procedures'
                    {
                    lv_name_153_0=(Token)match(input,109,FollowSets000.FOLLOW_109_in_rulePojogenProperty9533); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_153_0, grammarAccess.getPojogenPropertyAccess().getNamePojosForProceduresKeyword_37_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_153_0, "pojos-for-procedures");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4763:2: ( (this_WS_154= RULE_WS )+ ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) ) )+
                    int cnt162=0;
                    loop162:
                    do {
                        int alt162=2;
                        int LA162_0 = input.LA(1);

                        if ( (LA162_0==RULE_WS) ) {
                            alt162=1;
                        }


                        switch (alt162) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4763:3: (this_WS_154= RULE_WS )+ ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4763:3: (this_WS_154= RULE_WS )+
                    	    int cnt161=0;
                    	    loop161:
                    	    do {
                    	        int alt161=2;
                    	        int LA161_0 = input.LA(1);

                    	        if ( (LA161_0==RULE_WS) ) {
                    	            alt161=1;
                    	        }


                    	        switch (alt161) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4763:4: this_WS_154= RULE_WS
                    	    	    {
                    	    	    this_WS_154=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9559); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_154, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_37_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt161 >= 1 ) break loop161;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(161, input);
                    	                throw eee;
                    	        }
                    	        cnt161++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4767:3: ( (lv_procPojos_155_0= ruleProcedurePojoAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4768:1: (lv_procPojos_155_0= ruleProcedurePojoAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4768:1: (lv_procPojos_155_0= ruleProcedurePojoAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4769:3: lv_procPojos_155_0= ruleProcedurePojoAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getProcPojosProcedurePojoAssignementParserRuleCall_37_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleProcedurePojoAssignement_in_rulePojogenProperty9581);
                    	    lv_procPojos_155_0=ruleProcedurePojoAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"procPojos",
                    	              		lv_procPojos_155_0, 
                    	              		"ProcedurePojoAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt162 >= 1 ) break loop162;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(162, input);
                                throw eee;
                        }
                        cnt162++;
                    } while (true);


                    }


                    }
                    break;
                case 39 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4786:6: ( ( (lv_name_156_0= 'pojos-for-functions' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4786:6: ( ( (lv_name_156_0= 'pojos-for-functions' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4786:7: ( (lv_name_156_0= 'pojos-for-functions' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4786:7: ( (lv_name_156_0= 'pojos-for-functions' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4787:1: (lv_name_156_0= 'pojos-for-functions' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4787:1: (lv_name_156_0= 'pojos-for-functions' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4788:3: lv_name_156_0= 'pojos-for-functions'
                    {
                    lv_name_156_0=(Token)match(input,110,FollowSets000.FOLLOW_110_in_rulePojogenProperty9609); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_156_0, grammarAccess.getPojogenPropertyAccess().getNamePojosForFunctionsKeyword_38_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_156_0, "pojos-for-functions");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4801:2: ( (this_WS_157= RULE_WS )+ ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) ) )+
                    int cnt164=0;
                    loop164:
                    do {
                        int alt164=2;
                        int LA164_0 = input.LA(1);

                        if ( (LA164_0==RULE_WS) ) {
                            alt164=1;
                        }


                        switch (alt164) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4801:3: (this_WS_157= RULE_WS )+ ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4801:3: (this_WS_157= RULE_WS )+
                    	    int cnt163=0;
                    	    loop163:
                    	    do {
                    	        int alt163=2;
                    	        int LA163_0 = input.LA(1);

                    	        if ( (LA163_0==RULE_WS) ) {
                    	            alt163=1;
                    	        }


                    	        switch (alt163) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4801:4: this_WS_157= RULE_WS
                    	    	    {
                    	    	    this_WS_157=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9635); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_157, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_38_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt163 >= 1 ) break loop163;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(163, input);
                    	                throw eee;
                    	        }
                    	        cnt163++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4805:3: ( (lv_funPojos_158_0= ruleFunctionPojoAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4806:1: (lv_funPojos_158_0= ruleFunctionPojoAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4806:1: (lv_funPojos_158_0= ruleFunctionPojoAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4807:3: lv_funPojos_158_0= ruleFunctionPojoAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getFunPojosFunctionPojoAssignementParserRuleCall_38_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleFunctionPojoAssignement_in_rulePojogenProperty9657);
                    	    lv_funPojos_158_0=ruleFunctionPojoAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"funPojos",
                    	              		lv_funPojos_158_0, 
                    	              		"FunctionPojoAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt164 >= 1 ) break loop164;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(164, input);
                                throw eee;
                        }
                        cnt164++;
                    } while (true);


                    }


                    }
                    break;
                case 40 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4824:6: ( ( (lv_name_159_0= 'active-filter' ) ) (this_WS_160= RULE_WS )+ ( (lv_activeFilter_161_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4824:6: ( ( (lv_name_159_0= 'active-filter' ) ) (this_WS_160= RULE_WS )+ ( (lv_activeFilter_161_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4824:7: ( (lv_name_159_0= 'active-filter' ) ) (this_WS_160= RULE_WS )+ ( (lv_activeFilter_161_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4824:7: ( (lv_name_159_0= 'active-filter' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4825:1: (lv_name_159_0= 'active-filter' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4825:1: (lv_name_159_0= 'active-filter' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4826:3: lv_name_159_0= 'active-filter'
                    {
                    lv_name_159_0=(Token)match(input,111,FollowSets000.FOLLOW_111_in_rulePojogenProperty9685); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_159_0, grammarAccess.getPojogenPropertyAccess().getNameActiveFilterKeyword_39_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_159_0, "active-filter");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4839:2: (this_WS_160= RULE_WS )+
                    int cnt165=0;
                    loop165:
                    do {
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( (LA165_0==RULE_WS) ) {
                            alt165=1;
                        }


                        switch (alt165) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4839:3: this_WS_160= RULE_WS
                    	    {
                    	    this_WS_160=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9710); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_160, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_39_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt165 >= 1 ) break loop165;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(165, input);
                                throw eee;
                        }
                        cnt165++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4843:3: ( (lv_activeFilter_161_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4844:1: (lv_activeFilter_161_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4844:1: (lv_activeFilter_161_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4845:3: lv_activeFilter_161_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getActiveFilterPropertyValueParserRuleCall_39_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_rulePojogenProperty9732);
                    lv_activeFilter_161_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"activeFilter",
                              		lv_activeFilter_161_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 41 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4862:6: ( ( (lv_name_162_0= 'package' ) ) (this_WS_163= RULE_WS )+ ( (lv_pckg_164_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4862:6: ( ( (lv_name_162_0= 'package' ) ) (this_WS_163= RULE_WS )+ ( (lv_pckg_164_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4862:7: ( (lv_name_162_0= 'package' ) ) (this_WS_163= RULE_WS )+ ( (lv_pckg_164_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4862:7: ( (lv_name_162_0= 'package' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4863:1: (lv_name_162_0= 'package' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4863:1: (lv_name_162_0= 'package' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4864:3: lv_name_162_0= 'package'
                    {
                    lv_name_162_0=(Token)match(input,112,FollowSets000.FOLLOW_112_in_rulePojogenProperty9758); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_162_0, grammarAccess.getPojogenPropertyAccess().getNamePackageKeyword_40_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_162_0, "package");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4877:2: (this_WS_163= RULE_WS )+
                    int cnt166=0;
                    loop166:
                    do {
                        int alt166=2;
                        int LA166_0 = input.LA(1);

                        if ( (LA166_0==RULE_WS) ) {
                            alt166=1;
                        }


                        switch (alt166) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4877:3: this_WS_163= RULE_WS
                    	    {
                    	    this_WS_163=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9783); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_163, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_40_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt166 >= 1 ) break loop166;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(166, input);
                                throw eee;
                        }
                        cnt166++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4881:3: ( (lv_pckg_164_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4882:1: (lv_pckg_164_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4882:1: (lv_pckg_164_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4883:3: lv_pckg_164_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getPckgPropertyValueParserRuleCall_40_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_rulePojogenProperty9805);
                    lv_pckg_164_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"pckg",
                              		lv_pckg_164_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 42 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4900:6: ( ( (lv_name_165_0= 'enum-for-check-constraints' ) ) (this_WS_166= RULE_WS )+ ( (lv_enumName_167_0= RULE_IDENT ) ) ( (this_WS_168= RULE_WS )+ ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4900:6: ( ( (lv_name_165_0= 'enum-for-check-constraints' ) ) (this_WS_166= RULE_WS )+ ( (lv_enumName_167_0= RULE_IDENT ) ) ( (this_WS_168= RULE_WS )+ ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4900:7: ( (lv_name_165_0= 'enum-for-check-constraints' ) ) (this_WS_166= RULE_WS )+ ( (lv_enumName_167_0= RULE_IDENT ) ) ( (this_WS_168= RULE_WS )+ ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4900:7: ( (lv_name_165_0= 'enum-for-check-constraints' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4901:1: (lv_name_165_0= 'enum-for-check-constraints' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4901:1: (lv_name_165_0= 'enum-for-check-constraints' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4902:3: lv_name_165_0= 'enum-for-check-constraints'
                    {
                    lv_name_165_0=(Token)match(input,113,FollowSets000.FOLLOW_113_in_rulePojogenProperty9831); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_165_0, grammarAccess.getPojogenPropertyAccess().getNameEnumForCheckConstraintsKeyword_41_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_165_0, "enum-for-check-constraints");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4915:2: (this_WS_166= RULE_WS )+
                    int cnt167=0;
                    loop167:
                    do {
                        int alt167=2;
                        int LA167_0 = input.LA(1);

                        if ( (LA167_0==RULE_WS) ) {
                            alt167=1;
                        }


                        switch (alt167) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4915:3: this_WS_166= RULE_WS
                    	    {
                    	    this_WS_166=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9856); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_166, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_41_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt167 >= 1 ) break loop167;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(167, input);
                                throw eee;
                        }
                        cnt167++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4919:3: ( (lv_enumName_167_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4920:1: (lv_enumName_167_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4920:1: (lv_enumName_167_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4921:3: lv_enumName_167_0= RULE_IDENT
                    {
                    lv_enumName_167_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9874); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_enumName_167_0, grammarAccess.getPojogenPropertyAccess().getEnumNameIDENTTerminalRuleCall_41_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"enumName",
                              		lv_enumName_167_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4937:2: ( (this_WS_168= RULE_WS )+ ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) ) )+
                    int cnt169=0;
                    loop169:
                    do {
                        int alt169=2;
                        int LA169_0 = input.LA(1);

                        if ( (LA169_0==RULE_WS) ) {
                            alt169=1;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4937:3: (this_WS_168= RULE_WS )+ ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4937:3: (this_WS_168= RULE_WS )+
                    	    int cnt168=0;
                    	    loop168:
                    	    do {
                    	        int alt168=2;
                    	        int LA168_0 = input.LA(1);

                    	        if ( (LA168_0==RULE_WS) ) {
                    	            alt168=1;
                    	        }


                    	        switch (alt168) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4937:4: this_WS_168= RULE_WS
                    	    	    {
                    	    	    this_WS_168=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9892); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_168, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_41_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt168 >= 1 ) break loop168;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(168, input);
                    	                throw eee;
                    	        }
                    	        cnt168++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4941:3: ( (lv_dbCheckConstraints_169_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4942:1: (lv_dbCheckConstraints_169_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4942:1: (lv_dbCheckConstraints_169_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4943:3: lv_dbCheckConstraints_169_0= RULE_IDENT
                    	    {
                    	    lv_dbCheckConstraints_169_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9910); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbCheckConstraints_169_0, grammarAccess.getPojogenPropertyAccess().getDbCheckConstraintsIDENTTerminalRuleCall_41_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbCheckConstraints",
                    	              		lv_dbCheckConstraints_169_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt169 >= 1 ) break loop169;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(169, input);
                                throw eee;
                        }
                        cnt169++;
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojogenProperty"


    // $ANTLR start "entryRuleMetaTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4967:1: entryRuleMetaTypeAssignement returns [EObject current=null] : iv_ruleMetaTypeAssignement= ruleMetaTypeAssignement EOF ;
    public final EObject entryRuleMetaTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetaTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4968:2: (iv_ruleMetaTypeAssignement= ruleMetaTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4969:2: iv_ruleMetaTypeAssignement= ruleMetaTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleMetaTypeAssignement_in_entryRuleMetaTypeAssignement9954);
            iv_ruleMetaTypeAssignement=ruleMetaTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleMetaTypeAssignement9964); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaTypeAssignement"


    // $ANTLR start "ruleMetaTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4976:1: ruleMetaTypeAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )? ) ;
    public final EObject ruleMetaTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_type_2_0=null;
        Token otherlv_3=null;
        Token lv_extension_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4979:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4980:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4980:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4980:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4980:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4981:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4981:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4982:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement10006); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getMetaTypeAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMetaTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleMetaTypeAssignement10023); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMetaTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5002:1: ( (lv_type_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5003:1: (lv_type_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5003:1: (lv_type_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5004:3: lv_type_2_0= RULE_IDENT
            {
            lv_type_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement10040); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_type_2_0, grammarAccess.getMetaTypeAssignementAccess().getTypeIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMetaTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5020:2: (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==41) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5020:4: otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) )
                    {
                    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleMetaTypeAssignement10058); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMetaTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5024:1: ( (lv_extension_4_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5025:1: (lv_extension_4_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5025:1: (lv_extension_4_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5026:3: lv_extension_4_0= RULE_IDENT
                    {
                    lv_extension_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement10075); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_extension_4_0, grammarAccess.getMetaTypeAssignementAccess().getExtensionIDENTTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaTypeAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"extension",
                              		lv_extension_4_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaTypeAssignement"


    // $ANTLR start "entryRuleMetagenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5050:1: entryRuleMetagenProperty returns [EObject current=null] : iv_ruleMetagenProperty= ruleMetagenProperty EOF ;
    public final EObject entryRuleMetagenProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetagenProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5051:2: (iv_ruleMetagenProperty= ruleMetagenProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5052:2: iv_ruleMetagenProperty= ruleMetagenProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetagenPropertyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleMetagenProperty_in_entryRuleMetagenProperty10118);
            iv_ruleMetagenProperty=ruleMetagenProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetagenProperty; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleMetagenProperty10128); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetagenProperty"


    // $ANTLR start "ruleMetagenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5059:1: ruleMetagenProperty returns [EObject current=null] : ( ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ ) | ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ ) | ( (lv_name_48_0= 'make-it-final' ) ) | ( ( (lv_name_49_0= 'like-columns' ) ) ( (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_54_0= 'not-like-columns' ) ) ( (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )? ) | ( (lv_name_59_0= 'generate-sequences' ) ) | ( (lv_name_60_0= 'generate-identities' ) ) | ( (lv_name_61_0= 'generate-idgenerators' ) ) | ( (lv_name_62_0= 'generate-default-idgenerators' ) ) | ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) ) | ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) ) | ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) ) | ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_81_0= 'generate-operators' ) ) | ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) ) ) ;
    public final EObject ruleMetagenProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_WS_1=null;
        Token lv_sequence_2_0=null;
        Token lv_type_3_0=null;
        Token this_WS_4=null;
        Token this_PLUS_5=null;
        Token this_WS_6=null;
        Token lv_dbTables_7_0=null;
        Token this_WS_8=null;
        Token this_MINUS_9=null;
        Token this_WS_10=null;
        Token lv_dbNotTables_11_0=null;
        Token lv_name_12_0=null;
        Token this_WS_13=null;
        Token lv_dbTable_14_0=null;
        Token this_WS_15=null;
        Token lv_sequence_16_0=null;
        Token this_WS_17=null;
        Token lv_type_18_0=null;
        Token lv_name_19_0=null;
        Token this_WS_20=null;
        Token lv_identity_21_0=null;
        Token lv_type_22_0=null;
        Token this_WS_23=null;
        Token this_PLUS_24=null;
        Token this_WS_25=null;
        Token lv_dbTables_26_0=null;
        Token this_WS_27=null;
        Token this_MINUS_28=null;
        Token this_WS_29=null;
        Token lv_dbNotTables_30_0=null;
        Token lv_name_31_0=null;
        Token this_WS_32=null;
        Token lv_dbTable_33_0=null;
        Token this_WS_34=null;
        Token lv_identity_35_0=null;
        Token this_WS_36=null;
        Token lv_type_37_0=null;
        Token lv_name_38_0=null;
        Token this_WS_39=null;
        Token lv_dbTable_40_0=null;
        Token this_WS_41=null;
        Token lv_name_43_0=null;
        Token this_WS_44=null;
        Token lv_dbStatement_45_0=null;
        Token this_WS_46=null;
        Token lv_name_48_0=null;
        Token lv_name_49_0=null;
        Token this_WS_50=null;
        Token lv_dbTable_51_0=null;
        Token this_WS_52=null;
        Token lv_dbColumns_53_0=null;
        Token lv_name_54_0=null;
        Token this_WS_55=null;
        Token lv_dbTable_56_0=null;
        Token this_WS_57=null;
        Token lv_dbColumns_58_0=null;
        Token lv_name_59_0=null;
        Token lv_name_60_0=null;
        Token lv_name_61_0=null;
        Token lv_name_62_0=null;
        Token lv_name_63_0=null;
        Token this_WS_64=null;
        Token lv_dbFunction_65_0=null;
        Token this_WS_66=null;
        Token lv_type_67_0=null;
        Token lv_name_68_0=null;
        Token this_WS_69=null;
        Token lv_dbFunction_70_0=null;
        Token this_WS_71=null;
        Token lv_dbTable_72_0=null;
        Token lv_name_73_0=null;
        Token this_WS_74=null;
        Token lv_dbProcedure_75_0=null;
        Token this_WS_76=null;
        Token lv_dbTable_77_0=null;
        Token lv_name_78_0=null;
        Token this_WS_79=null;
        Token lv_name_81_0=null;
        Token lv_name_82_0=null;
        Token this_WS_83=null;
        Token lv_dbTables_84_0=null;
        Token lv_name_85_0=null;
        Token this_WS_86=null;
        Token lv_dbStatement_87_0=null;
        Token this_WS_88=null;
        Token lv_optionalFeatures_89_0=null;
        Token lv_name_90_0=null;
        Token this_WS_91=null;
        EObject lv_metaTypes_42_0 = null;

        EObject lv_metaTypes_47_0 = null;

        EObject lv_debug_80_0 = null;

        AntlrDatatypeRuleToken lv_activeFilter_92_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5062:28: ( ( ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ ) | ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ ) | ( (lv_name_48_0= 'make-it-final' ) ) | ( ( (lv_name_49_0= 'like-columns' ) ) ( (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_54_0= 'not-like-columns' ) ) ( (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )? ) | ( (lv_name_59_0= 'generate-sequences' ) ) | ( (lv_name_60_0= 'generate-identities' ) ) | ( (lv_name_61_0= 'generate-idgenerators' ) ) | ( (lv_name_62_0= 'generate-default-idgenerators' ) ) | ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) ) | ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) ) | ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) ) | ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_81_0= 'generate-operators' ) ) | ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5063:1: ( ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ ) | ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ ) | ( (lv_name_48_0= 'make-it-final' ) ) | ( ( (lv_name_49_0= 'like-columns' ) ) ( (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_54_0= 'not-like-columns' ) ) ( (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )? ) | ( (lv_name_59_0= 'generate-sequences' ) ) | ( (lv_name_60_0= 'generate-identities' ) ) | ( (lv_name_61_0= 'generate-idgenerators' ) ) | ( (lv_name_62_0= 'generate-default-idgenerators' ) ) | ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) ) | ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) ) | ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) ) | ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_81_0= 'generate-operators' ) ) | ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5063:1: ( ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ ) | ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ ) | ( (lv_name_48_0= 'make-it-final' ) ) | ( ( (lv_name_49_0= 'like-columns' ) ) ( (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_54_0= 'not-like-columns' ) ) ( (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )? ) | ( (lv_name_59_0= 'generate-sequences' ) ) | ( (lv_name_60_0= 'generate-identities' ) ) | ( (lv_name_61_0= 'generate-idgenerators' ) ) | ( (lv_name_62_0= 'generate-default-idgenerators' ) ) | ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) ) | ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) ) | ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) ) | ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_81_0= 'generate-operators' ) ) | ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) ) )
            int alt228=21;
            switch ( input.LA(1) ) {
            case 114:
                {
                alt228=1;
                }
                break;
            case 115:
                {
                alt228=2;
                }
                break;
            case 116:
                {
                alt228=3;
                }
                break;
            case 117:
                {
                alt228=4;
                }
                break;
            case 118:
                {
                alt228=5;
                }
                break;
            case 119:
                {
                alt228=6;
                }
                break;
            case 107:
                {
                alt228=7;
                }
                break;
            case 120:
                {
                alt228=8;
                }
                break;
            case 121:
                {
                alt228=9;
                }
                break;
            case 122:
                {
                alt228=10;
                }
                break;
            case 123:
                {
                alt228=11;
                }
                break;
            case 124:
                {
                alt228=12;
                }
                break;
            case 125:
                {
                alt228=13;
                }
                break;
            case 126:
                {
                alt228=14;
                }
                break;
            case 127:
                {
                alt228=15;
                }
                break;
            case 128:
                {
                alt228=16;
                }
                break;
            case 69:
                {
                alt228=17;
                }
                break;
            case 99:
                {
                alt228=18;
                }
                break;
            case 129:
                {
                alt228=19;
                }
                break;
            case 130:
                {
                alt228=20;
                }
                break;
            case 111:
                {
                alt228=21;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }

            switch (alt228) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5063:2: ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5063:2: ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5063:3: ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5063:3: ( (lv_name_0_0= 'global-sequence' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5064:1: (lv_name_0_0= 'global-sequence' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5064:1: (lv_name_0_0= 'global-sequence' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5065:3: lv_name_0_0= 'global-sequence'
                    {
                    lv_name_0_0=(Token)match(input,114,FollowSets000.FOLLOW_114_in_ruleMetagenProperty10172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getMetagenPropertyAccess().getNameGlobalSequenceKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "global-sequence");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5078:2: (this_WS_1= RULE_WS )+
                    int cnt172=0;
                    loop172:
                    do {
                        int alt172=2;
                        int LA172_0 = input.LA(1);

                        if ( (LA172_0==RULE_WS) ) {
                            alt172=1;
                        }


                        switch (alt172) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5078:3: this_WS_1= RULE_WS
                    	    {
                    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10197); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_1, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt172 >= 1 ) break loop172;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(172, input);
                                throw eee;
                        }
                        cnt172++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5082:3: ( (lv_sequence_2_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5083:1: (lv_sequence_2_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5083:1: (lv_sequence_2_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5084:3: lv_sequence_2_0= RULE_IDENT
                    {
                    lv_sequence_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10215); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_sequence_2_0, grammarAccess.getMetagenPropertyAccess().getSequenceIDENTTerminalRuleCall_0_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"sequence",
                              		lv_sequence_2_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5100:2: ( (lv_type_3_0= RULE_IDENT ) )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==RULE_IDENT) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5101:1: (lv_type_3_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5101:1: (lv_type_3_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5102:3: lv_type_3_0= RULE_IDENT
                            {
                            lv_type_3_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10237); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_type_3_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_0_3_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"type",
                                      		lv_type_3_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5118:3: ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )?
                    int alt177=2;
                    alt177 = dfa177.predict(input);
                    switch (alt177) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5118:4: (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5118:4: (this_WS_4= RULE_WS )+
                            int cnt174=0;
                            loop174:
                            do {
                                int alt174=2;
                                int LA174_0 = input.LA(1);

                                if ( (LA174_0==RULE_WS) ) {
                                    alt174=1;
                                }


                                switch (alt174) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5118:5: this_WS_4= RULE_WS
                            	    {
                            	    this_WS_4=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10256); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_4, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_4_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt174 >= 1 ) break loop174;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(174, input);
                                        throw eee;
                                }
                                cnt174++;
                            } while (true);

                            this_PLUS_5=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleMetagenProperty10268); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PLUS_5, grammarAccess.getMetagenPropertyAccess().getPLUSTerminalRuleCall_0_4_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5126:1: ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+
                            int cnt176=0;
                            loop176:
                            do {
                                int alt176=2;
                                alt176 = dfa176.predict(input);
                                switch (alt176) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5126:2: (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5126:2: (this_WS_6= RULE_WS )+
                            	    int cnt175=0;
                            	    loop175:
                            	    do {
                            	        int alt175=2;
                            	        int LA175_0 = input.LA(1);

                            	        if ( (LA175_0==RULE_WS) ) {
                            	            alt175=1;
                            	        }


                            	        switch (alt175) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5126:3: this_WS_6= RULE_WS
                            	    	    {
                            	    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10280); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_6, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_4_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt175 >= 1 ) break loop175;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(175, input);
                            	                throw eee;
                            	        }
                            	        cnt175++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5130:3: ( (lv_dbTables_7_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5131:1: (lv_dbTables_7_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5131:1: (lv_dbTables_7_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5132:3: lv_dbTables_7_0= RULE_IDENT
                            	    {
                            	    lv_dbTables_7_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10298); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbTables_7_0, grammarAccess.getMetagenPropertyAccess().getDbTablesIDENTTerminalRuleCall_0_4_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbTables",
                            	              		lv_dbTables_7_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt176 >= 1 ) break loop176;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(176, input);
                                        throw eee;
                                }
                                cnt176++;
                            } while (true);


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5148:6: ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )?
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==RULE_WS) ) {
                        alt181=1;
                    }
                    switch (alt181) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5148:7: (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5148:7: (this_WS_8= RULE_WS )+
                            int cnt178=0;
                            loop178:
                            do {
                                int alt178=2;
                                int LA178_0 = input.LA(1);

                                if ( (LA178_0==RULE_WS) ) {
                                    alt178=1;
                                }


                                switch (alt178) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5148:8: this_WS_8= RULE_WS
                            	    {
                            	    this_WS_8=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10320); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_8, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_5_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt178 >= 1 ) break loop178;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(178, input);
                                        throw eee;
                                }
                                cnt178++;
                            } while (true);

                            this_MINUS_9=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleMetagenProperty10332); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MINUS_9, grammarAccess.getMetagenPropertyAccess().getMINUSTerminalRuleCall_0_5_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5156:1: ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+
                            int cnt180=0;
                            loop180:
                            do {
                                int alt180=2;
                                int LA180_0 = input.LA(1);

                                if ( (LA180_0==RULE_WS) ) {
                                    alt180=1;
                                }


                                switch (alt180) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5156:2: (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5156:2: (this_WS_10= RULE_WS )+
                            	    int cnt179=0;
                            	    loop179:
                            	    do {
                            	        int alt179=2;
                            	        int LA179_0 = input.LA(1);

                            	        if ( (LA179_0==RULE_WS) ) {
                            	            alt179=1;
                            	        }


                            	        switch (alt179) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5156:3: this_WS_10= RULE_WS
                            	    	    {
                            	    	    this_WS_10=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10344); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_10, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_5_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt179 >= 1 ) break loop179;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(179, input);
                            	                throw eee;
                            	        }
                            	        cnt179++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5160:3: ( (lv_dbNotTables_11_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5161:1: (lv_dbNotTables_11_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5161:1: (lv_dbNotTables_11_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5162:3: lv_dbNotTables_11_0= RULE_IDENT
                            	    {
                            	    lv_dbNotTables_11_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10362); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbNotTables_11_0, grammarAccess.getMetagenPropertyAccess().getDbNotTablesIDENTTerminalRuleCall_0_5_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbNotTables",
                            	              		lv_dbNotTables_11_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt180 >= 1 ) break loop180;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(180, input);
                                        throw eee;
                                }
                                cnt180++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5179:6: ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5179:6: ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5179:7: ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5179:7: ( (lv_name_12_0= 'table-sequence' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5180:1: (lv_name_12_0= 'table-sequence' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5180:1: (lv_name_12_0= 'table-sequence' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5181:3: lv_name_12_0= 'table-sequence'
                    {
                    lv_name_12_0=(Token)match(input,115,FollowSets000.FOLLOW_115_in_ruleMetagenProperty10397); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_12_0, grammarAccess.getMetagenPropertyAccess().getNameTableSequenceKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_12_0, "table-sequence");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5194:2: (this_WS_13= RULE_WS )+
                    int cnt182=0;
                    loop182:
                    do {
                        int alt182=2;
                        int LA182_0 = input.LA(1);

                        if ( (LA182_0==RULE_WS) ) {
                            alt182=1;
                        }


                        switch (alt182) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5194:3: this_WS_13= RULE_WS
                    	    {
                    	    this_WS_13=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10422); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_13, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_1_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt182 >= 1 ) break loop182;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(182, input);
                                throw eee;
                        }
                        cnt182++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5198:3: ( (lv_dbTable_14_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5199:1: (lv_dbTable_14_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5199:1: (lv_dbTable_14_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5200:3: lv_dbTable_14_0= RULE_IDENT
                    {
                    lv_dbTable_14_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10440); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_14_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_1_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_14_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5216:2: (this_WS_15= RULE_WS )+
                    int cnt183=0;
                    loop183:
                    do {
                        int alt183=2;
                        int LA183_0 = input.LA(1);

                        if ( (LA183_0==RULE_WS) ) {
                            alt183=1;
                        }


                        switch (alt183) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5216:3: this_WS_15= RULE_WS
                    	    {
                    	    this_WS_15=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10457); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_15, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_1_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt183 >= 1 ) break loop183;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(183, input);
                                throw eee;
                        }
                        cnt183++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5220:3: ( (lv_sequence_16_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5221:1: (lv_sequence_16_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5221:1: (lv_sequence_16_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5222:3: lv_sequence_16_0= RULE_IDENT
                    {
                    lv_sequence_16_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10475); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_sequence_16_0, grammarAccess.getMetagenPropertyAccess().getSequenceIDENTTerminalRuleCall_1_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"sequence",
                              		lv_sequence_16_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5238:2: ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )?
                    int alt185=2;
                    int LA185_0 = input.LA(1);

                    if ( (LA185_0==RULE_WS) ) {
                        alt185=1;
                    }
                    switch (alt185) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5238:3: (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5238:3: (this_WS_17= RULE_WS )+
                            int cnt184=0;
                            loop184:
                            do {
                                int alt184=2;
                                int LA184_0 = input.LA(1);

                                if ( (LA184_0==RULE_WS) ) {
                                    alt184=1;
                                }


                                switch (alt184) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5238:4: this_WS_17= RULE_WS
                            	    {
                            	    this_WS_17=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10493); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_17, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_1_5_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt184 >= 1 ) break loop184;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(184, input);
                                        throw eee;
                                }
                                cnt184++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5242:3: ( (lv_type_18_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5243:1: (lv_type_18_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5243:1: (lv_type_18_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5244:3: lv_type_18_0= RULE_IDENT
                            {
                            lv_type_18_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10511); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_type_18_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_1_5_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"type",
                                      		lv_type_18_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5261:6: ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5261:6: ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5261:7: ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5261:7: ( (lv_name_19_0= 'global-identity' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5262:1: (lv_name_19_0= 'global-identity' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5262:1: (lv_name_19_0= 'global-identity' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5263:3: lv_name_19_0= 'global-identity'
                    {
                    lv_name_19_0=(Token)match(input,116,FollowSets000.FOLLOW_116_in_ruleMetagenProperty10544); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_19_0, grammarAccess.getMetagenPropertyAccess().getNameGlobalIdentityKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_19_0, "global-identity");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5276:2: ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )?
                    int alt188=2;
                    alt188 = dfa188.predict(input);
                    switch (alt188) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5276:3: (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )?
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5276:3: (this_WS_20= RULE_WS )+
                            int cnt186=0;
                            loop186:
                            do {
                                int alt186=2;
                                int LA186_0 = input.LA(1);

                                if ( (LA186_0==RULE_WS) ) {
                                    alt186=1;
                                }


                                switch (alt186) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5276:4: this_WS_20= RULE_WS
                            	    {
                            	    this_WS_20=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10570); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_20, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_1_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt186 >= 1 ) break loop186;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(186, input);
                                        throw eee;
                                }
                                cnt186++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5280:3: ( (lv_identity_21_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5281:1: (lv_identity_21_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5281:1: (lv_identity_21_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5282:3: lv_identity_21_0= RULE_IDENT
                            {
                            lv_identity_21_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10588); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_identity_21_0, grammarAccess.getMetagenPropertyAccess().getIdentityIDENTTerminalRuleCall_2_1_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"identity",
                                      		lv_identity_21_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5298:2: ( (lv_type_22_0= RULE_IDENT ) )?
                            int alt187=2;
                            int LA187_0 = input.LA(1);

                            if ( (LA187_0==RULE_IDENT) ) {
                                alt187=1;
                            }
                            switch (alt187) {
                                case 1 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5299:1: (lv_type_22_0= RULE_IDENT )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5299:1: (lv_type_22_0= RULE_IDENT )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5300:3: lv_type_22_0= RULE_IDENT
                                    {
                                    lv_type_22_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10610); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      			newLeafNode(lv_type_22_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_2_1_2_0()); 
                                      		
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                                      	        }
                                             		setWithLastConsumed(
                                             			current, 
                                             			"type",
                                              		lv_type_22_0, 
                                              		"IDENT");
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5316:5: ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )?
                    int alt192=2;
                    alt192 = dfa192.predict(input);
                    switch (alt192) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5316:6: (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5316:6: (this_WS_23= RULE_WS )+
                            int cnt189=0;
                            loop189:
                            do {
                                int alt189=2;
                                int LA189_0 = input.LA(1);

                                if ( (LA189_0==RULE_WS) ) {
                                    alt189=1;
                                }


                                switch (alt189) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5316:7: this_WS_23= RULE_WS
                            	    {
                            	    this_WS_23=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10631); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_23, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_2_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt189 >= 1 ) break loop189;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(189, input);
                                        throw eee;
                                }
                                cnt189++;
                            } while (true);

                            this_PLUS_24=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleMetagenProperty10643); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PLUS_24, grammarAccess.getMetagenPropertyAccess().getPLUSTerminalRuleCall_2_2_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5324:1: ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+
                            int cnt191=0;
                            loop191:
                            do {
                                int alt191=2;
                                alt191 = dfa191.predict(input);
                                switch (alt191) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5324:2: (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5324:2: (this_WS_25= RULE_WS )+
                            	    int cnt190=0;
                            	    loop190:
                            	    do {
                            	        int alt190=2;
                            	        int LA190_0 = input.LA(1);

                            	        if ( (LA190_0==RULE_WS) ) {
                            	            alt190=1;
                            	        }


                            	        switch (alt190) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5324:3: this_WS_25= RULE_WS
                            	    	    {
                            	    	    this_WS_25=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10655); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_25, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_2_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt190 >= 1 ) break loop190;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(190, input);
                            	                throw eee;
                            	        }
                            	        cnt190++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5328:3: ( (lv_dbTables_26_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5329:1: (lv_dbTables_26_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5329:1: (lv_dbTables_26_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5330:3: lv_dbTables_26_0= RULE_IDENT
                            	    {
                            	    lv_dbTables_26_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10673); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbTables_26_0, grammarAccess.getMetagenPropertyAccess().getDbTablesIDENTTerminalRuleCall_2_2_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbTables",
                            	              		lv_dbTables_26_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt191 >= 1 ) break loop191;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(191, input);
                                        throw eee;
                                }
                                cnt191++;
                            } while (true);


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5346:6: ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )?
                    int alt196=2;
                    int LA196_0 = input.LA(1);

                    if ( (LA196_0==RULE_WS) ) {
                        alt196=1;
                    }
                    switch (alt196) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5346:7: (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5346:7: (this_WS_27= RULE_WS )+
                            int cnt193=0;
                            loop193:
                            do {
                                int alt193=2;
                                int LA193_0 = input.LA(1);

                                if ( (LA193_0==RULE_WS) ) {
                                    alt193=1;
                                }


                                switch (alt193) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5346:8: this_WS_27= RULE_WS
                            	    {
                            	    this_WS_27=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10695); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_27, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_3_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt193 >= 1 ) break loop193;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(193, input);
                                        throw eee;
                                }
                                cnt193++;
                            } while (true);

                            this_MINUS_28=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleMetagenProperty10707); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MINUS_28, grammarAccess.getMetagenPropertyAccess().getMINUSTerminalRuleCall_2_3_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5354:1: ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+
                            int cnt195=0;
                            loop195:
                            do {
                                int alt195=2;
                                int LA195_0 = input.LA(1);

                                if ( (LA195_0==RULE_WS) ) {
                                    alt195=1;
                                }


                                switch (alt195) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5354:2: (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5354:2: (this_WS_29= RULE_WS )+
                            	    int cnt194=0;
                            	    loop194:
                            	    do {
                            	        int alt194=2;
                            	        int LA194_0 = input.LA(1);

                            	        if ( (LA194_0==RULE_WS) ) {
                            	            alt194=1;
                            	        }


                            	        switch (alt194) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5354:3: this_WS_29= RULE_WS
                            	    	    {
                            	    	    this_WS_29=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10719); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_29, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_3_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt194 >= 1 ) break loop194;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(194, input);
                            	                throw eee;
                            	        }
                            	        cnt194++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5358:3: ( (lv_dbNotTables_30_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5359:1: (lv_dbNotTables_30_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5359:1: (lv_dbNotTables_30_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5360:3: lv_dbNotTables_30_0= RULE_IDENT
                            	    {
                            	    lv_dbNotTables_30_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10737); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbNotTables_30_0, grammarAccess.getMetagenPropertyAccess().getDbNotTablesIDENTTerminalRuleCall_2_3_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbNotTables",
                            	              		lv_dbNotTables_30_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt195 >= 1 ) break loop195;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(195, input);
                                        throw eee;
                                }
                                cnt195++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5377:6: ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5377:6: ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5377:7: ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5377:7: ( (lv_name_31_0= 'table-identity' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5378:1: (lv_name_31_0= 'table-identity' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5378:1: (lv_name_31_0= 'table-identity' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5379:3: lv_name_31_0= 'table-identity'
                    {
                    lv_name_31_0=(Token)match(input,117,FollowSets000.FOLLOW_117_in_ruleMetagenProperty10772); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_31_0, grammarAccess.getMetagenPropertyAccess().getNameTableIdentityKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_31_0, "table-identity");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5392:2: (this_WS_32= RULE_WS )+
                    int cnt197=0;
                    loop197:
                    do {
                        int alt197=2;
                        int LA197_0 = input.LA(1);

                        if ( (LA197_0==RULE_WS) ) {
                            alt197=1;
                        }


                        switch (alt197) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5392:3: this_WS_32= RULE_WS
                    	    {
                    	    this_WS_32=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10797); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_32, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_3_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt197 >= 1 ) break loop197;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(197, input);
                                throw eee;
                        }
                        cnt197++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5396:3: ( (lv_dbTable_33_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5397:1: (lv_dbTable_33_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5397:1: (lv_dbTable_33_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5398:3: lv_dbTable_33_0= RULE_IDENT
                    {
                    lv_dbTable_33_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10815); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_33_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_3_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_33_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5414:2: (this_WS_34= RULE_WS )+
                    int cnt198=0;
                    loop198:
                    do {
                        int alt198=2;
                        int LA198_0 = input.LA(1);

                        if ( (LA198_0==RULE_WS) ) {
                            alt198=1;
                        }


                        switch (alt198) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5414:3: this_WS_34= RULE_WS
                    	    {
                    	    this_WS_34=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10832); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_34, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_3_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt198 >= 1 ) break loop198;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(198, input);
                                throw eee;
                        }
                        cnt198++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5418:3: ( (lv_identity_35_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5419:1: (lv_identity_35_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5419:1: (lv_identity_35_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5420:3: lv_identity_35_0= RULE_IDENT
                    {
                    lv_identity_35_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10850); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_identity_35_0, grammarAccess.getMetagenPropertyAccess().getIdentityIDENTTerminalRuleCall_3_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"identity",
                              		lv_identity_35_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5436:2: ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )?
                    int alt200=2;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==RULE_WS) ) {
                        alt200=1;
                    }
                    switch (alt200) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5436:3: (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5436:3: (this_WS_36= RULE_WS )+
                            int cnt199=0;
                            loop199:
                            do {
                                int alt199=2;
                                int LA199_0 = input.LA(1);

                                if ( (LA199_0==RULE_WS) ) {
                                    alt199=1;
                                }


                                switch (alt199) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5436:4: this_WS_36= RULE_WS
                            	    {
                            	    this_WS_36=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10868); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_36, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_3_5_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt199 >= 1 ) break loop199;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(199, input);
                                        throw eee;
                                }
                                cnt199++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5440:3: ( (lv_type_37_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5441:1: (lv_type_37_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5441:1: (lv_type_37_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5442:3: lv_type_37_0= RULE_IDENT
                            {
                            lv_type_37_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10886); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_type_37_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_3_5_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"type",
                                      		lv_type_37_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5459:6: ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5459:6: ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5459:7: ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5459:7: ( (lv_name_38_0= 'column-meta-type' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5460:1: (lv_name_38_0= 'column-meta-type' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5460:1: (lv_name_38_0= 'column-meta-type' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5461:3: lv_name_38_0= 'column-meta-type'
                    {
                    lv_name_38_0=(Token)match(input,118,FollowSets000.FOLLOW_118_in_ruleMetagenProperty10919); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_38_0, grammarAccess.getMetagenPropertyAccess().getNameColumnMetaTypeKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_38_0, "column-meta-type");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5474:2: (this_WS_39= RULE_WS )+
                    int cnt201=0;
                    loop201:
                    do {
                        int alt201=2;
                        int LA201_0 = input.LA(1);

                        if ( (LA201_0==RULE_WS) ) {
                            alt201=1;
                        }


                        switch (alt201) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5474:3: this_WS_39= RULE_WS
                    	    {
                    	    this_WS_39=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10944); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_39, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt201 >= 1 ) break loop201;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(201, input);
                                throw eee;
                        }
                        cnt201++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5478:3: ( (lv_dbTable_40_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5479:1: (lv_dbTable_40_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5479:1: (lv_dbTable_40_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5480:3: lv_dbTable_40_0= RULE_IDENT
                    {
                    lv_dbTable_40_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10962); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_40_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_4_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_40_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5496:2: ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+
                    int cnt203=0;
                    loop203:
                    do {
                        int alt203=2;
                        int LA203_0 = input.LA(1);

                        if ( (LA203_0==RULE_WS) ) {
                            alt203=1;
                        }


                        switch (alt203) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5496:3: (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5496:3: (this_WS_41= RULE_WS )+
                    	    int cnt202=0;
                    	    loop202:
                    	    do {
                    	        int alt202=2;
                    	        int LA202_0 = input.LA(1);

                    	        if ( (LA202_0==RULE_WS) ) {
                    	            alt202=1;
                    	        }


                    	        switch (alt202) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5496:4: this_WS_41= RULE_WS
                    	    	    {
                    	    	    this_WS_41=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10980); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_41, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_4_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt202 >= 1 ) break loop202;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(202, input);
                    	                throw eee;
                    	        }
                    	        cnt202++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5500:3: ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5501:1: (lv_metaTypes_42_0= ruleMetaTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5501:1: (lv_metaTypes_42_0= ruleMetaTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5502:3: lv_metaTypes_42_0= ruleMetaTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetagenPropertyAccess().getMetaTypesMetaTypeAssignementParserRuleCall_4_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleMetaTypeAssignement_in_ruleMetagenProperty11002);
                    	    lv_metaTypes_42_0=ruleMetaTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"metaTypes",
                    	              		lv_metaTypes_42_0, 
                    	              		"MetaTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt203 >= 1 ) break loop203;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(203, input);
                                throw eee;
                        }
                        cnt203++;
                    } while (true);


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5519:6: ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5519:6: ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5519:7: ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5519:7: ( (lv_name_43_0= 'statement-meta-type' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5520:1: (lv_name_43_0= 'statement-meta-type' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5520:1: (lv_name_43_0= 'statement-meta-type' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5521:3: lv_name_43_0= 'statement-meta-type'
                    {
                    lv_name_43_0=(Token)match(input,119,FollowSets000.FOLLOW_119_in_ruleMetagenProperty11030); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_43_0, grammarAccess.getMetagenPropertyAccess().getNameStatementMetaTypeKeyword_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_43_0, "statement-meta-type");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5534:2: (this_WS_44= RULE_WS )+
                    int cnt204=0;
                    loop204:
                    do {
                        int alt204=2;
                        int LA204_0 = input.LA(1);

                        if ( (LA204_0==RULE_WS) ) {
                            alt204=1;
                        }


                        switch (alt204) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5534:3: this_WS_44= RULE_WS
                    	    {
                    	    this_WS_44=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11055); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_44, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_5_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt204 >= 1 ) break loop204;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(204, input);
                                throw eee;
                        }
                        cnt204++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5538:3: ( (lv_dbStatement_45_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5539:1: (lv_dbStatement_45_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5539:1: (lv_dbStatement_45_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5540:3: lv_dbStatement_45_0= RULE_IDENT
                    {
                    lv_dbStatement_45_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11073); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbStatement_45_0, grammarAccess.getMetagenPropertyAccess().getDbStatementIDENTTerminalRuleCall_5_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbStatement",
                              		lv_dbStatement_45_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5556:2: ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+
                    int cnt206=0;
                    loop206:
                    do {
                        int alt206=2;
                        int LA206_0 = input.LA(1);

                        if ( (LA206_0==RULE_WS) ) {
                            alt206=1;
                        }


                        switch (alt206) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5556:3: (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5556:3: (this_WS_46= RULE_WS )+
                    	    int cnt205=0;
                    	    loop205:
                    	    do {
                    	        int alt205=2;
                    	        int LA205_0 = input.LA(1);

                    	        if ( (LA205_0==RULE_WS) ) {
                    	            alt205=1;
                    	        }


                    	        switch (alt205) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5556:4: this_WS_46= RULE_WS
                    	    	    {
                    	    	    this_WS_46=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11091); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_46, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_5_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt205 >= 1 ) break loop205;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(205, input);
                    	                throw eee;
                    	        }
                    	        cnt205++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5560:3: ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5561:1: (lv_metaTypes_47_0= ruleMetaTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5561:1: (lv_metaTypes_47_0= ruleMetaTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5562:3: lv_metaTypes_47_0= ruleMetaTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetagenPropertyAccess().getMetaTypesMetaTypeAssignementParserRuleCall_5_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleMetaTypeAssignement_in_ruleMetagenProperty11113);
                    	    lv_metaTypes_47_0=ruleMetaTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"metaTypes",
                    	              		lv_metaTypes_47_0, 
                    	              		"MetaTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt206 >= 1 ) break loop206;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(206, input);
                                throw eee;
                        }
                        cnt206++;
                    } while (true);


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5579:6: ( (lv_name_48_0= 'make-it-final' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5579:6: ( (lv_name_48_0= 'make-it-final' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5580:1: (lv_name_48_0= 'make-it-final' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5580:1: (lv_name_48_0= 'make-it-final' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5581:3: lv_name_48_0= 'make-it-final'
                    {
                    lv_name_48_0=(Token)match(input,107,FollowSets000.FOLLOW_107_in_ruleMetagenProperty11140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_48_0, grammarAccess.getMetagenPropertyAccess().getNameMakeItFinalKeyword_6_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_48_0, "make-it-final");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5595:6: ( ( (lv_name_49_0= 'like-columns' ) ) ( (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5595:6: ( ( (lv_name_49_0= 'like-columns' ) ) ( (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5595:7: ( (lv_name_49_0= 'like-columns' ) ) ( (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5595:7: ( (lv_name_49_0= 'like-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5596:1: (lv_name_49_0= 'like-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5596:1: (lv_name_49_0= 'like-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5597:3: lv_name_49_0= 'like-columns'
                    {
                    lv_name_49_0=(Token)match(input,120,FollowSets000.FOLLOW_120_in_ruleMetagenProperty11178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_49_0, grammarAccess.getMetagenPropertyAccess().getNameLikeColumnsKeyword_7_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_49_0, "like-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5610:2: ( (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )?
                    int alt210=2;
                    int LA210_0 = input.LA(1);

                    if ( (LA210_0==RULE_WS) ) {
                        alt210=1;
                    }
                    switch (alt210) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5610:3: (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5610:3: (this_WS_50= RULE_WS )+
                            int cnt207=0;
                            loop207:
                            do {
                                int alt207=2;
                                int LA207_0 = input.LA(1);

                                if ( (LA207_0==RULE_WS) ) {
                                    alt207=1;
                                }


                                switch (alt207) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5610:4: this_WS_50= RULE_WS
                            	    {
                            	    this_WS_50=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11204); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_50, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_7_1_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt207 >= 1 ) break loop207;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(207, input);
                                        throw eee;
                                }
                                cnt207++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5614:3: ( (lv_dbTable_51_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5615:1: (lv_dbTable_51_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5615:1: (lv_dbTable_51_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5616:3: lv_dbTable_51_0= RULE_IDENT
                            {
                            lv_dbTable_51_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11222); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_dbTable_51_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_7_1_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"dbTable",
                                      		lv_dbTable_51_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5632:2: ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+
                            int cnt209=0;
                            loop209:
                            do {
                                int alt209=2;
                                int LA209_0 = input.LA(1);

                                if ( (LA209_0==RULE_WS) ) {
                                    alt209=1;
                                }


                                switch (alt209) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5632:3: (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5632:3: (this_WS_52= RULE_WS )+
                            	    int cnt208=0;
                            	    loop208:
                            	    do {
                            	        int alt208=2;
                            	        int LA208_0 = input.LA(1);

                            	        if ( (LA208_0==RULE_WS) ) {
                            	            alt208=1;
                            	        }


                            	        switch (alt208) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5632:4: this_WS_52= RULE_WS
                            	    	    {
                            	    	    this_WS_52=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11240); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_52, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_7_1_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt208 >= 1 ) break loop208;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(208, input);
                            	                throw eee;
                            	        }
                            	        cnt208++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5636:3: ( (lv_dbColumns_53_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5637:1: (lv_dbColumns_53_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5637:1: (lv_dbColumns_53_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5638:3: lv_dbColumns_53_0= RULE_IDENT
                            	    {
                            	    lv_dbColumns_53_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11258); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbColumns_53_0, grammarAccess.getMetagenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_7_1_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbColumns",
                            	              		lv_dbColumns_53_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt209 >= 1 ) break loop209;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(209, input);
                                        throw eee;
                                }
                                cnt209++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5655:6: ( ( (lv_name_54_0= 'not-like-columns' ) ) ( (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5655:6: ( ( (lv_name_54_0= 'not-like-columns' ) ) ( (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5655:7: ( (lv_name_54_0= 'not-like-columns' ) ) ( (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5655:7: ( (lv_name_54_0= 'not-like-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5656:1: (lv_name_54_0= 'not-like-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5656:1: (lv_name_54_0= 'not-like-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5657:3: lv_name_54_0= 'not-like-columns'
                    {
                    lv_name_54_0=(Token)match(input,121,FollowSets000.FOLLOW_121_in_ruleMetagenProperty11293); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_54_0, grammarAccess.getMetagenPropertyAccess().getNameNotLikeColumnsKeyword_8_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_54_0, "not-like-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5670:2: ( (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )?
                    int alt214=2;
                    int LA214_0 = input.LA(1);

                    if ( (LA214_0==RULE_WS) ) {
                        alt214=1;
                    }
                    switch (alt214) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5670:3: (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5670:3: (this_WS_55= RULE_WS )+
                            int cnt211=0;
                            loop211:
                            do {
                                int alt211=2;
                                int LA211_0 = input.LA(1);

                                if ( (LA211_0==RULE_WS) ) {
                                    alt211=1;
                                }


                                switch (alt211) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5670:4: this_WS_55= RULE_WS
                            	    {
                            	    this_WS_55=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11319); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_55, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_8_1_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt211 >= 1 ) break loop211;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(211, input);
                                        throw eee;
                                }
                                cnt211++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5674:3: ( (lv_dbTable_56_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5675:1: (lv_dbTable_56_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5675:1: (lv_dbTable_56_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5676:3: lv_dbTable_56_0= RULE_IDENT
                            {
                            lv_dbTable_56_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11337); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_dbTable_56_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_8_1_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"dbTable",
                                      		lv_dbTable_56_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5692:2: ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+
                            int cnt213=0;
                            loop213:
                            do {
                                int alt213=2;
                                int LA213_0 = input.LA(1);

                                if ( (LA213_0==RULE_WS) ) {
                                    alt213=1;
                                }


                                switch (alt213) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5692:3: (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5692:3: (this_WS_57= RULE_WS )+
                            	    int cnt212=0;
                            	    loop212:
                            	    do {
                            	        int alt212=2;
                            	        int LA212_0 = input.LA(1);

                            	        if ( (LA212_0==RULE_WS) ) {
                            	            alt212=1;
                            	        }


                            	        switch (alt212) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5692:4: this_WS_57= RULE_WS
                            	    	    {
                            	    	    this_WS_57=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11355); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_57, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_8_1_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt212 >= 1 ) break loop212;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(212, input);
                            	                throw eee;
                            	        }
                            	        cnt212++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5696:3: ( (lv_dbColumns_58_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5697:1: (lv_dbColumns_58_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5697:1: (lv_dbColumns_58_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5698:3: lv_dbColumns_58_0= RULE_IDENT
                            	    {
                            	    lv_dbColumns_58_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11373); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbColumns_58_0, grammarAccess.getMetagenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_8_1_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbColumns",
                            	              		lv_dbColumns_58_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt213 >= 1 ) break loop213;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(213, input);
                                        throw eee;
                                }
                                cnt213++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5715:6: ( (lv_name_59_0= 'generate-sequences' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5715:6: ( (lv_name_59_0= 'generate-sequences' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5716:1: (lv_name_59_0= 'generate-sequences' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5716:1: (lv_name_59_0= 'generate-sequences' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5717:3: lv_name_59_0= 'generate-sequences'
                    {
                    lv_name_59_0=(Token)match(input,122,FollowSets000.FOLLOW_122_in_ruleMetagenProperty11407); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_59_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateSequencesKeyword_9_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_59_0, "generate-sequences");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5731:6: ( (lv_name_60_0= 'generate-identities' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5731:6: ( (lv_name_60_0= 'generate-identities' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5732:1: (lv_name_60_0= 'generate-identities' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5732:1: (lv_name_60_0= 'generate-identities' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5733:3: lv_name_60_0= 'generate-identities'
                    {
                    lv_name_60_0=(Token)match(input,123,FollowSets000.FOLLOW_123_in_ruleMetagenProperty11444); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_60_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateIdentitiesKeyword_10_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_60_0, "generate-identities");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5747:6: ( (lv_name_61_0= 'generate-idgenerators' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5747:6: ( (lv_name_61_0= 'generate-idgenerators' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5748:1: (lv_name_61_0= 'generate-idgenerators' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5748:1: (lv_name_61_0= 'generate-idgenerators' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5749:3: lv_name_61_0= 'generate-idgenerators'
                    {
                    lv_name_61_0=(Token)match(input,124,FollowSets000.FOLLOW_124_in_ruleMetagenProperty11481); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_61_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateIdgeneratorsKeyword_11_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_61_0, "generate-idgenerators");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5763:6: ( (lv_name_62_0= 'generate-default-idgenerators' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5763:6: ( (lv_name_62_0= 'generate-default-idgenerators' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5764:1: (lv_name_62_0= 'generate-default-idgenerators' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5764:1: (lv_name_62_0= 'generate-default-idgenerators' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5765:3: lv_name_62_0= 'generate-default-idgenerators'
                    {
                    lv_name_62_0=(Token)match(input,125,FollowSets000.FOLLOW_125_in_ruleMetagenProperty11518); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_62_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateDefaultIdgeneratorsKeyword_12_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_62_0, "generate-default-idgenerators");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5779:6: ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5779:6: ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5779:7: ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5779:7: ( (lv_name_63_0= 'function-result' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5780:1: (lv_name_63_0= 'function-result' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5780:1: (lv_name_63_0= 'function-result' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5781:3: lv_name_63_0= 'function-result'
                    {
                    lv_name_63_0=(Token)match(input,126,FollowSets000.FOLLOW_126_in_ruleMetagenProperty11556); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_63_0, grammarAccess.getMetagenPropertyAccess().getNameFunctionResultKeyword_13_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_63_0, "function-result");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5794:2: (this_WS_64= RULE_WS )+
                    int cnt215=0;
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==RULE_WS) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5794:3: this_WS_64= RULE_WS
                    	    {
                    	    this_WS_64=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11581); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_64, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_13_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt215 >= 1 ) break loop215;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(215, input);
                                throw eee;
                        }
                        cnt215++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5798:3: ( (lv_dbFunction_65_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5799:1: (lv_dbFunction_65_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5799:1: (lv_dbFunction_65_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5800:3: lv_dbFunction_65_0= RULE_IDENT
                    {
                    lv_dbFunction_65_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11599); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_65_0, grammarAccess.getMetagenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_13_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_65_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5816:2: (this_WS_66= RULE_WS )+
                    int cnt216=0;
                    loop216:
                    do {
                        int alt216=2;
                        int LA216_0 = input.LA(1);

                        if ( (LA216_0==RULE_WS) ) {
                            alt216=1;
                        }


                        switch (alt216) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5816:3: this_WS_66= RULE_WS
                    	    {
                    	    this_WS_66=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11616); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_66, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_13_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt216 >= 1 ) break loop216;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(216, input);
                                throw eee;
                        }
                        cnt216++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5820:3: ( (lv_type_67_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5821:1: (lv_type_67_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5821:1: (lv_type_67_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5822:3: lv_type_67_0= RULE_IDENT
                    {
                    lv_type_67_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11634); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_67_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_13_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_67_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5839:6: ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5839:6: ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5839:7: ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5839:7: ( (lv_name_68_0= 'function-result-set' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5840:1: (lv_name_68_0= 'function-result-set' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5840:1: (lv_name_68_0= 'function-result-set' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5841:3: lv_name_68_0= 'function-result-set'
                    {
                    lv_name_68_0=(Token)match(input,127,FollowSets000.FOLLOW_127_in_ruleMetagenProperty11665); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_68_0, grammarAccess.getMetagenPropertyAccess().getNameFunctionResultSetKeyword_14_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_68_0, "function-result-set");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5854:2: (this_WS_69= RULE_WS )+
                    int cnt217=0;
                    loop217:
                    do {
                        int alt217=2;
                        int LA217_0 = input.LA(1);

                        if ( (LA217_0==RULE_WS) ) {
                            alt217=1;
                        }


                        switch (alt217) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5854:3: this_WS_69= RULE_WS
                    	    {
                    	    this_WS_69=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11690); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_69, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_14_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt217 >= 1 ) break loop217;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(217, input);
                                throw eee;
                        }
                        cnt217++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5858:3: ( (lv_dbFunction_70_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5859:1: (lv_dbFunction_70_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5859:1: (lv_dbFunction_70_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5860:3: lv_dbFunction_70_0= RULE_IDENT
                    {
                    lv_dbFunction_70_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11708); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_70_0, grammarAccess.getMetagenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_14_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_70_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5876:2: (this_WS_71= RULE_WS )+
                    int cnt218=0;
                    loop218:
                    do {
                        int alt218=2;
                        int LA218_0 = input.LA(1);

                        if ( (LA218_0==RULE_WS) ) {
                            alt218=1;
                        }


                        switch (alt218) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5876:3: this_WS_71= RULE_WS
                    	    {
                    	    this_WS_71=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11725); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_71, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_14_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt218 >= 1 ) break loop218;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(218, input);
                                throw eee;
                        }
                        cnt218++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5880:3: ( (lv_dbTable_72_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5881:1: (lv_dbTable_72_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5881:1: (lv_dbTable_72_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5882:3: lv_dbTable_72_0= RULE_IDENT
                    {
                    lv_dbTable_72_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11743); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_72_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_14_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_72_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5899:6: ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5899:6: ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5899:7: ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5899:7: ( (lv_name_73_0= 'procedure-result-set' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5900:1: (lv_name_73_0= 'procedure-result-set' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5900:1: (lv_name_73_0= 'procedure-result-set' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5901:3: lv_name_73_0= 'procedure-result-set'
                    {
                    lv_name_73_0=(Token)match(input,128,FollowSets000.FOLLOW_128_in_ruleMetagenProperty11774); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_73_0, grammarAccess.getMetagenPropertyAccess().getNameProcedureResultSetKeyword_15_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_73_0, "procedure-result-set");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5914:2: (this_WS_74= RULE_WS )+
                    int cnt219=0;
                    loop219:
                    do {
                        int alt219=2;
                        int LA219_0 = input.LA(1);

                        if ( (LA219_0==RULE_WS) ) {
                            alt219=1;
                        }


                        switch (alt219) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5914:3: this_WS_74= RULE_WS
                    	    {
                    	    this_WS_74=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11799); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_74, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_15_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt219 >= 1 ) break loop219;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(219, input);
                                throw eee;
                        }
                        cnt219++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5918:3: ( (lv_dbProcedure_75_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5919:1: (lv_dbProcedure_75_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5919:1: (lv_dbProcedure_75_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5920:3: lv_dbProcedure_75_0= RULE_IDENT
                    {
                    lv_dbProcedure_75_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11817); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbProcedure_75_0, grammarAccess.getMetagenPropertyAccess().getDbProcedureIDENTTerminalRuleCall_15_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbProcedure",
                              		lv_dbProcedure_75_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5936:2: (this_WS_76= RULE_WS )+
                    int cnt220=0;
                    loop220:
                    do {
                        int alt220=2;
                        int LA220_0 = input.LA(1);

                        if ( (LA220_0==RULE_WS) ) {
                            alt220=1;
                        }


                        switch (alt220) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5936:3: this_WS_76= RULE_WS
                    	    {
                    	    this_WS_76=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetagenProperty11834); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_76, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_15_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt220 >= 1 ) break loop220;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(220, input);
                                throw eee;
                        }
                        cnt220++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5940:3: ( (lv_dbTable_77_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5941:1: (lv_dbTable_77_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5941:1: (lv_dbTable_77_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5942:3: lv_dbTable_77_0= RULE_IDENT
                    {
                    lv_dbTable_77_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11852); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_77_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_15_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_77_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5959:6: ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5959:6: ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5959:7: ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5959:7: ( (lv_name_78_0= 'debug-level' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5960:1: (lv_name_78_0= 'debug-level' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5960:1: (lv_name_78_0= 'debug-level' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5961:3: lv_name_78_0= 'debug-level'
                    {
                    lv_name_78_0=(Token)match(input,69,FollowSets001.FOLLOW_69_in_ruleMetagenProperty11883); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_78_0, grammarAccess.getMetagenPropertyAccess().getNameDebugLevelKeyword_16_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_78_0, "debug-level");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5974:2: (this_WS_79= RULE_WS )+
                    int cnt221=0;
                    loop221:
                    do {
                        int alt221=2;
                        int LA221_0 = input.LA(1);

                        if ( (LA221_0==RULE_WS) ) {
                            alt221=1;
                        }


                        switch (alt221) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5974:3: this_WS_79= RULE_WS
                    	    {
                    	    this_WS_79=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetagenProperty11908); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_79, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_16_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt221 >= 1 ) break loop221;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(221, input);
                                throw eee;
                        }
                        cnt221++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5978:3: ( (lv_debug_80_0= ruleDebugLevelAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5979:1: (lv_debug_80_0= ruleDebugLevelAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5979:1: (lv_debug_80_0= ruleDebugLevelAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5980:3: lv_debug_80_0= ruleDebugLevelAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetagenPropertyAccess().getDebugDebugLevelAssignementParserRuleCall_16_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleDebugLevelAssignement_in_ruleMetagenProperty11930);
                    lv_debug_80_0=ruleDebugLevelAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"debug",
                              		lv_debug_80_0, 
                              		"DebugLevelAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5997:6: ( (lv_name_81_0= 'generate-operators' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5997:6: ( (lv_name_81_0= 'generate-operators' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5998:1: (lv_name_81_0= 'generate-operators' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5998:1: (lv_name_81_0= 'generate-operators' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5999:3: lv_name_81_0= 'generate-operators'
                    {
                    lv_name_81_0=(Token)match(input,99,FollowSets001.FOLLOW_99_in_ruleMetagenProperty11955); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_81_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateOperatorsKeyword_17_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_81_0, "generate-operators");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6013:6: ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6013:6: ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6013:7: ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6013:7: ( (lv_name_82_0= 'optimize-insert' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6014:1: (lv_name_82_0= 'optimize-insert' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6014:1: (lv_name_82_0= 'optimize-insert' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6015:3: lv_name_82_0= 'optimize-insert'
                    {
                    lv_name_82_0=(Token)match(input,129,FollowSets001.FOLLOW_129_in_ruleMetagenProperty11993); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_82_0, grammarAccess.getMetagenPropertyAccess().getNameOptimizeInsertKeyword_18_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_82_0, "optimize-insert");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6028:2: ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )*
                    loop223:
                    do {
                        int alt223=2;
                        int LA223_0 = input.LA(1);

                        if ( (LA223_0==RULE_WS) ) {
                            alt223=1;
                        }


                        switch (alt223) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6028:3: (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6028:3: (this_WS_83= RULE_WS )+
                    	    int cnt222=0;
                    	    loop222:
                    	    do {
                    	        int alt222=2;
                    	        int LA222_0 = input.LA(1);

                    	        if ( (LA222_0==RULE_WS) ) {
                    	            alt222=1;
                    	        }


                    	        switch (alt222) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6028:4: this_WS_83= RULE_WS
                    	    	    {
                    	    	    this_WS_83=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetagenProperty12019); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_83, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_18_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt222 >= 1 ) break loop222;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(222, input);
                    	                throw eee;
                    	        }
                    	        cnt222++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6032:3: ( (lv_dbTables_84_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6033:1: (lv_dbTables_84_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6033:1: (lv_dbTables_84_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6034:3: lv_dbTables_84_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_84_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetagenProperty12037); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_84_0, grammarAccess.getMetagenPropertyAccess().getDbTablesIDENTTerminalRuleCall_18_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_84_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop223;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6051:6: ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6051:6: ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6051:7: ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6051:7: ( (lv_name_85_0= 'optional-features' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6052:1: (lv_name_85_0= 'optional-features' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6052:1: (lv_name_85_0= 'optional-features' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6053:3: lv_name_85_0= 'optional-features'
                    {
                    lv_name_85_0=(Token)match(input,130,FollowSets001.FOLLOW_130_in_ruleMetagenProperty12070); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_85_0, grammarAccess.getMetagenPropertyAccess().getNameOptionalFeaturesKeyword_19_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_85_0, "optional-features");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6066:2: (this_WS_86= RULE_WS )+
                    int cnt224=0;
                    loop224:
                    do {
                        int alt224=2;
                        int LA224_0 = input.LA(1);

                        if ( (LA224_0==RULE_WS) ) {
                            alt224=1;
                        }


                        switch (alt224) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6066:3: this_WS_86= RULE_WS
                    	    {
                    	    this_WS_86=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetagenProperty12095); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_86, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_19_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt224 >= 1 ) break loop224;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(224, input);
                                throw eee;
                        }
                        cnt224++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6070:3: ( (lv_dbStatement_87_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6071:1: (lv_dbStatement_87_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6071:1: (lv_dbStatement_87_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6072:3: lv_dbStatement_87_0= RULE_IDENT
                    {
                    lv_dbStatement_87_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetagenProperty12113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbStatement_87_0, grammarAccess.getMetagenPropertyAccess().getDbStatementIDENTTerminalRuleCall_19_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbStatement",
                              		lv_dbStatement_87_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6088:2: ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+
                    int cnt226=0;
                    loop226:
                    do {
                        int alt226=2;
                        int LA226_0 = input.LA(1);

                        if ( (LA226_0==RULE_WS) ) {
                            alt226=1;
                        }


                        switch (alt226) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6088:3: (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6088:3: (this_WS_88= RULE_WS )+
                    	    int cnt225=0;
                    	    loop225:
                    	    do {
                    	        int alt225=2;
                    	        int LA225_0 = input.LA(1);

                    	        if ( (LA225_0==RULE_WS) ) {
                    	            alt225=1;
                    	        }


                    	        switch (alt225) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6088:4: this_WS_88= RULE_WS
                    	    	    {
                    	    	    this_WS_88=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetagenProperty12131); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_88, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_19_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt225 >= 1 ) break loop225;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(225, input);
                    	                throw eee;
                    	        }
                    	        cnt225++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6092:3: ( (lv_optionalFeatures_89_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6093:1: (lv_optionalFeatures_89_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6093:1: (lv_optionalFeatures_89_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6094:3: lv_optionalFeatures_89_0= RULE_IDENT
                    	    {
                    	    lv_optionalFeatures_89_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetagenProperty12149); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_optionalFeatures_89_0, grammarAccess.getMetagenPropertyAccess().getOptionalFeaturesIDENTTerminalRuleCall_19_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"optionalFeatures",
                    	              		lv_optionalFeatures_89_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt226 >= 1 ) break loop226;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(226, input);
                                throw eee;
                        }
                        cnt226++;
                    } while (true);


                    }


                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6111:6: ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6111:6: ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6111:7: ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6111:7: ( (lv_name_90_0= 'active-filter' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6112:1: (lv_name_90_0= 'active-filter' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6112:1: (lv_name_90_0= 'active-filter' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6113:3: lv_name_90_0= 'active-filter'
                    {
                    lv_name_90_0=(Token)match(input,111,FollowSets001.FOLLOW_111_in_ruleMetagenProperty12182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_90_0, grammarAccess.getMetagenPropertyAccess().getNameActiveFilterKeyword_20_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_90_0, "active-filter");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6126:2: (this_WS_91= RULE_WS )+
                    int cnt227=0;
                    loop227:
                    do {
                        int alt227=2;
                        int LA227_0 = input.LA(1);

                        if ( (LA227_0==RULE_WS) ) {
                            alt227=1;
                        }


                        switch (alt227) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6126:3: this_WS_91= RULE_WS
                    	    {
                    	    this_WS_91=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetagenProperty12207); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_91, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_20_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt227 >= 1 ) break loop227;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(227, input);
                                throw eee;
                        }
                        cnt227++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6130:3: ( (lv_activeFilter_92_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6131:1: (lv_activeFilter_92_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6131:1: (lv_activeFilter_92_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6132:3: lv_activeFilter_92_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetagenPropertyAccess().getActiveFilterPropertyValueParserRuleCall_20_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_rulePropertyValue_in_ruleMetagenProperty12229);
                    lv_activeFilter_92_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"activeFilter",
                              		lv_activeFilter_92_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetagenProperty"


    // $ANTLR start "entryRuleDaogenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6156:1: entryRuleDaogenProperty returns [EObject current=null] : iv_ruleDaogenProperty= ruleDaogenProperty EOF ;
    public final EObject entryRuleDaogenProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDaogenProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6157:2: (iv_ruleDaogenProperty= ruleDaogenProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6158:2: iv_ruleDaogenProperty= ruleDaogenProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDaogenPropertyRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleDaogenProperty_in_entryRuleDaogenProperty12266);
            iv_ruleDaogenProperty=ruleDaogenProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDaogenProperty; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleDaogenProperty12276); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDaogenProperty"


    // $ANTLR start "ruleDaogenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6165:1: ruleDaogenProperty returns [EObject current=null] : ( ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_6_0= 'implements-interfaces' ) ) (this_WS_7= RULE_WS )+ ( (lv_toImplements_8_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_9_0= 'extends-class' ) ) (this_WS_10= RULE_WS )+ ( (lv_toExtends_11_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_12_0= 'implements-interfaces-generics' ) ) (this_WS_13= RULE_WS )+ ( (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_15_0= 'extends-class-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_18_0= 'make-it-final' ) ) | ( ( (lv_name_19_0= 'function-result' ) ) (this_WS_20= RULE_WS )+ ( (lv_dbFunction_21_0= RULE_IDENT ) ) (this_WS_22= RULE_WS )+ ( (lv_resultType_23_0= rulePojoType ) ) ) | ( ( (lv_name_24_0= 'debug-level' ) ) (this_WS_25= RULE_WS )+ ( (lv_debug_26_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_27_0= 'active-filter' ) ) (this_WS_28= RULE_WS )+ ( (lv_activeFilter_29_0= rulePropertyValue ) ) ) | ( ( (lv_name_30_0= 'package' ) ) (this_WS_31= RULE_WS )+ ( (lv_pckg_32_0= rulePropertyValue ) ) ) ) ;
    public final EObject ruleDaogenProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_WS_1=null;
        Token lv_dbTables_2_0=null;
        Token lv_name_3_0=null;
        Token this_WS_4=null;
        Token lv_dbTables_5_0=null;
        Token lv_name_6_0=null;
        Token this_WS_7=null;
        Token lv_name_9_0=null;
        Token this_WS_10=null;
        Token lv_name_12_0=null;
        Token this_WS_13=null;
        Token lv_name_15_0=null;
        Token this_WS_16=null;
        Token lv_name_18_0=null;
        Token lv_name_19_0=null;
        Token this_WS_20=null;
        Token lv_dbFunction_21_0=null;
        Token this_WS_22=null;
        Token lv_name_24_0=null;
        Token this_WS_25=null;
        Token lv_name_27_0=null;
        Token this_WS_28=null;
        Token lv_name_30_0=null;
        Token this_WS_31=null;
        EObject lv_toImplements_8_0 = null;

        EObject lv_toExtends_11_0 = null;

        EObject lv_toImplementsGenerics_14_0 = null;

        EObject lv_toExtendsGenerics_17_0 = null;

        EObject lv_resultType_23_0 = null;

        EObject lv_debug_26_0 = null;

        AntlrDatatypeRuleToken lv_activeFilter_29_0 = null;

        AntlrDatatypeRuleToken lv_pckg_32_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6168:28: ( ( ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_6_0= 'implements-interfaces' ) ) (this_WS_7= RULE_WS )+ ( (lv_toImplements_8_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_9_0= 'extends-class' ) ) (this_WS_10= RULE_WS )+ ( (lv_toExtends_11_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_12_0= 'implements-interfaces-generics' ) ) (this_WS_13= RULE_WS )+ ( (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_15_0= 'extends-class-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_18_0= 'make-it-final' ) ) | ( ( (lv_name_19_0= 'function-result' ) ) (this_WS_20= RULE_WS )+ ( (lv_dbFunction_21_0= RULE_IDENT ) ) (this_WS_22= RULE_WS )+ ( (lv_resultType_23_0= rulePojoType ) ) ) | ( ( (lv_name_24_0= 'debug-level' ) ) (this_WS_25= RULE_WS )+ ( (lv_debug_26_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_27_0= 'active-filter' ) ) (this_WS_28= RULE_WS )+ ( (lv_activeFilter_29_0= rulePropertyValue ) ) ) | ( ( (lv_name_30_0= 'package' ) ) (this_WS_31= RULE_WS )+ ( (lv_pckg_32_0= rulePropertyValue ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6169:1: ( ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_6_0= 'implements-interfaces' ) ) (this_WS_7= RULE_WS )+ ( (lv_toImplements_8_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_9_0= 'extends-class' ) ) (this_WS_10= RULE_WS )+ ( (lv_toExtends_11_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_12_0= 'implements-interfaces-generics' ) ) (this_WS_13= RULE_WS )+ ( (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_15_0= 'extends-class-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_18_0= 'make-it-final' ) ) | ( ( (lv_name_19_0= 'function-result' ) ) (this_WS_20= RULE_WS )+ ( (lv_dbFunction_21_0= RULE_IDENT ) ) (this_WS_22= RULE_WS )+ ( (lv_resultType_23_0= rulePojoType ) ) ) | ( ( (lv_name_24_0= 'debug-level' ) ) (this_WS_25= RULE_WS )+ ( (lv_debug_26_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_27_0= 'active-filter' ) ) (this_WS_28= RULE_WS )+ ( (lv_activeFilter_29_0= rulePropertyValue ) ) ) | ( ( (lv_name_30_0= 'package' ) ) (this_WS_31= RULE_WS )+ ( (lv_pckg_32_0= rulePropertyValue ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6169:1: ( ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_6_0= 'implements-interfaces' ) ) (this_WS_7= RULE_WS )+ ( (lv_toImplements_8_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_9_0= 'extends-class' ) ) (this_WS_10= RULE_WS )+ ( (lv_toExtends_11_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_12_0= 'implements-interfaces-generics' ) ) (this_WS_13= RULE_WS )+ ( (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_15_0= 'extends-class-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_18_0= 'make-it-final' ) ) | ( ( (lv_name_19_0= 'function-result' ) ) (this_WS_20= RULE_WS )+ ( (lv_dbFunction_21_0= RULE_IDENT ) ) (this_WS_22= RULE_WS )+ ( (lv_resultType_23_0= rulePojoType ) ) ) | ( ( (lv_name_24_0= 'debug-level' ) ) (this_WS_25= RULE_WS )+ ( (lv_debug_26_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_27_0= 'active-filter' ) ) (this_WS_28= RULE_WS )+ ( (lv_activeFilter_29_0= rulePropertyValue ) ) ) | ( ( (lv_name_30_0= 'package' ) ) (this_WS_31= RULE_WS )+ ( (lv_pckg_32_0= rulePropertyValue ) ) ) )
            int alt242=11;
            switch ( input.LA(1) ) {
            case 81:
                {
                alt242=1;
                }
                break;
            case 82:
                {
                alt242=2;
                }
                break;
            case 100:
                {
                alt242=3;
                }
                break;
            case 101:
                {
                alt242=4;
                }
                break;
            case 102:
                {
                alt242=5;
                }
                break;
            case 103:
                {
                alt242=6;
                }
                break;
            case 107:
                {
                alt242=7;
                }
                break;
            case 126:
                {
                alt242=8;
                }
                break;
            case 69:
                {
                alt242=9;
                }
                break;
            case 111:
                {
                alt242=10;
                }
                break;
            case 112:
                {
                alt242=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 242, 0, input);

                throw nvae;
            }

            switch (alt242) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6169:2: ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6169:2: ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6169:3: ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6169:3: ( (lv_name_0_0= 'ignore-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6170:1: (lv_name_0_0= 'ignore-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6170:1: (lv_name_0_0= 'ignore-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6171:3: lv_name_0_0= 'ignore-tables'
                    {
                    lv_name_0_0=(Token)match(input,81,FollowSets001.FOLLOW_81_in_ruleDaogenProperty12320); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getDaogenPropertyAccess().getNameIgnoreTablesKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "ignore-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6184:2: ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+
                    int cnt230=0;
                    loop230:
                    do {
                        int alt230=2;
                        int LA230_0 = input.LA(1);

                        if ( (LA230_0==RULE_WS) ) {
                            alt230=1;
                        }


                        switch (alt230) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6184:3: (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6184:3: (this_WS_1= RULE_WS )+
                    	    int cnt229=0;
                    	    loop229:
                    	    do {
                    	        int alt229=2;
                    	        int LA229_0 = input.LA(1);

                    	        if ( (LA229_0==RULE_WS) ) {
                    	            alt229=1;
                    	        }


                    	        switch (alt229) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6184:4: this_WS_1= RULE_WS
                    	    	    {
                    	    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12346); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_1, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_0_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt229 >= 1 ) break loop229;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(229, input);
                    	                throw eee;
                    	        }
                    	        cnt229++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6188:3: ( (lv_dbTables_2_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6189:1: (lv_dbTables_2_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6189:1: (lv_dbTables_2_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6190:3: lv_dbTables_2_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_2_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleDaogenProperty12364); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_2_0, grammarAccess.getDaogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_0_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_2_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt230 >= 1 ) break loop230;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(230, input);
                                throw eee;
                        }
                        cnt230++;
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6207:6: ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6207:6: ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6207:7: ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6207:7: ( (lv_name_3_0= 'only-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6208:1: (lv_name_3_0= 'only-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6208:1: (lv_name_3_0= 'only-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6209:3: lv_name_3_0= 'only-tables'
                    {
                    lv_name_3_0=(Token)match(input,82,FollowSets001.FOLLOW_82_in_ruleDaogenProperty12397); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_3_0, grammarAccess.getDaogenPropertyAccess().getNameOnlyTablesKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_3_0, "only-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6222:2: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )*
                    loop232:
                    do {
                        int alt232=2;
                        int LA232_0 = input.LA(1);

                        if ( (LA232_0==RULE_WS) ) {
                            alt232=1;
                        }


                        switch (alt232) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6222:3: (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6222:3: (this_WS_4= RULE_WS )+
                    	    int cnt231=0;
                    	    loop231:
                    	    do {
                    	        int alt231=2;
                    	        int LA231_0 = input.LA(1);

                    	        if ( (LA231_0==RULE_WS) ) {
                    	            alt231=1;
                    	        }


                    	        switch (alt231) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6222:4: this_WS_4= RULE_WS
                    	    	    {
                    	    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12423); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_4, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_1_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt231 >= 1 ) break loop231;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(231, input);
                    	                throw eee;
                    	        }
                    	        cnt231++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6226:3: ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6227:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6227:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6228:3: lv_dbTables_5_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_5_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleDaogenProperty12441); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_5_0, grammarAccess.getDaogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_1_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_5_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop232;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6245:6: ( ( (lv_name_6_0= 'implements-interfaces' ) ) (this_WS_7= RULE_WS )+ ( (lv_toImplements_8_0= ruleImplementsAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6245:6: ( ( (lv_name_6_0= 'implements-interfaces' ) ) (this_WS_7= RULE_WS )+ ( (lv_toImplements_8_0= ruleImplementsAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6245:7: ( (lv_name_6_0= 'implements-interfaces' ) ) (this_WS_7= RULE_WS )+ ( (lv_toImplements_8_0= ruleImplementsAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6245:7: ( (lv_name_6_0= 'implements-interfaces' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6246:1: (lv_name_6_0= 'implements-interfaces' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6246:1: (lv_name_6_0= 'implements-interfaces' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6247:3: lv_name_6_0= 'implements-interfaces'
                    {
                    lv_name_6_0=(Token)match(input,100,FollowSets001.FOLLOW_100_in_ruleDaogenProperty12474); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_6_0, grammarAccess.getDaogenPropertyAccess().getNameImplementsInterfacesKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_6_0, "implements-interfaces");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6260:2: (this_WS_7= RULE_WS )+
                    int cnt233=0;
                    loop233:
                    do {
                        int alt233=2;
                        int LA233_0 = input.LA(1);

                        if ( (LA233_0==RULE_WS) ) {
                            alt233=1;
                        }


                        switch (alt233) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6260:3: this_WS_7= RULE_WS
                    	    {
                    	    this_WS_7=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12499); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_7, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_2_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt233 >= 1 ) break loop233;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(233, input);
                                throw eee;
                        }
                        cnt233++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6264:3: ( (lv_toImplements_8_0= ruleImplementsAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6265:1: (lv_toImplements_8_0= ruleImplementsAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6265:1: (lv_toImplements_8_0= ruleImplementsAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6266:3: lv_toImplements_8_0= ruleImplementsAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getToImplementsImplementsAssignementParserRuleCall_2_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleImplementsAssignement_in_ruleDaogenProperty12521);
                    lv_toImplements_8_0=ruleImplementsAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toImplements",
                              		lv_toImplements_8_0, 
                              		"ImplementsAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6283:6: ( ( (lv_name_9_0= 'extends-class' ) ) (this_WS_10= RULE_WS )+ ( (lv_toExtends_11_0= ruleExtendsAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6283:6: ( ( (lv_name_9_0= 'extends-class' ) ) (this_WS_10= RULE_WS )+ ( (lv_toExtends_11_0= ruleExtendsAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6283:7: ( (lv_name_9_0= 'extends-class' ) ) (this_WS_10= RULE_WS )+ ( (lv_toExtends_11_0= ruleExtendsAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6283:7: ( (lv_name_9_0= 'extends-class' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6284:1: (lv_name_9_0= 'extends-class' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6284:1: (lv_name_9_0= 'extends-class' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6285:3: lv_name_9_0= 'extends-class'
                    {
                    lv_name_9_0=(Token)match(input,101,FollowSets001.FOLLOW_101_in_ruleDaogenProperty12547); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_9_0, grammarAccess.getDaogenPropertyAccess().getNameExtendsClassKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_9_0, "extends-class");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6298:2: (this_WS_10= RULE_WS )+
                    int cnt234=0;
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==RULE_WS) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6298:3: this_WS_10= RULE_WS
                    	    {
                    	    this_WS_10=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12572); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_10, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_3_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt234 >= 1 ) break loop234;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(234, input);
                                throw eee;
                        }
                        cnt234++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6302:3: ( (lv_toExtends_11_0= ruleExtendsAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6303:1: (lv_toExtends_11_0= ruleExtendsAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6303:1: (lv_toExtends_11_0= ruleExtendsAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6304:3: lv_toExtends_11_0= ruleExtendsAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getToExtendsExtendsAssignementParserRuleCall_3_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleExtendsAssignement_in_ruleDaogenProperty12594);
                    lv_toExtends_11_0=ruleExtendsAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toExtends",
                              		lv_toExtends_11_0, 
                              		"ExtendsAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6321:6: ( ( (lv_name_12_0= 'implements-interfaces-generics' ) ) (this_WS_13= RULE_WS )+ ( (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6321:6: ( ( (lv_name_12_0= 'implements-interfaces-generics' ) ) (this_WS_13= RULE_WS )+ ( (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6321:7: ( (lv_name_12_0= 'implements-interfaces-generics' ) ) (this_WS_13= RULE_WS )+ ( (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6321:7: ( (lv_name_12_0= 'implements-interfaces-generics' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6322:1: (lv_name_12_0= 'implements-interfaces-generics' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6322:1: (lv_name_12_0= 'implements-interfaces-generics' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6323:3: lv_name_12_0= 'implements-interfaces-generics'
                    {
                    lv_name_12_0=(Token)match(input,102,FollowSets001.FOLLOW_102_in_ruleDaogenProperty12620); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_12_0, grammarAccess.getDaogenPropertyAccess().getNameImplementsInterfacesGenericsKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_12_0, "implements-interfaces-generics");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6336:2: (this_WS_13= RULE_WS )+
                    int cnt235=0;
                    loop235:
                    do {
                        int alt235=2;
                        int LA235_0 = input.LA(1);

                        if ( (LA235_0==RULE_WS) ) {
                            alt235=1;
                        }


                        switch (alt235) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6336:3: this_WS_13= RULE_WS
                    	    {
                    	    this_WS_13=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12645); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_13, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt235 >= 1 ) break loop235;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(235, input);
                                throw eee;
                        }
                        cnt235++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6340:3: ( (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6341:1: (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6341:1: (lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6342:3: lv_toImplementsGenerics_14_0= ruleImplementsAssignementGenerics
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getToImplementsGenericsImplementsAssignementGenericsParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleImplementsAssignementGenerics_in_ruleDaogenProperty12667);
                    lv_toImplementsGenerics_14_0=ruleImplementsAssignementGenerics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toImplementsGenerics",
                              		lv_toImplementsGenerics_14_0, 
                              		"ImplementsAssignementGenerics");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6359:6: ( ( (lv_name_15_0= 'extends-class-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6359:6: ( ( (lv_name_15_0= 'extends-class-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6359:7: ( (lv_name_15_0= 'extends-class-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6359:7: ( (lv_name_15_0= 'extends-class-generics' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6360:1: (lv_name_15_0= 'extends-class-generics' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6360:1: (lv_name_15_0= 'extends-class-generics' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6361:3: lv_name_15_0= 'extends-class-generics'
                    {
                    lv_name_15_0=(Token)match(input,103,FollowSets001.FOLLOW_103_in_ruleDaogenProperty12693); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_15_0, grammarAccess.getDaogenPropertyAccess().getNameExtendsClassGenericsKeyword_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_15_0, "extends-class-generics");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6374:2: (this_WS_16= RULE_WS )+
                    int cnt236=0;
                    loop236:
                    do {
                        int alt236=2;
                        int LA236_0 = input.LA(1);

                        if ( (LA236_0==RULE_WS) ) {
                            alt236=1;
                        }


                        switch (alt236) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6374:3: this_WS_16= RULE_WS
                    	    {
                    	    this_WS_16=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12718); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_16, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_5_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt236 >= 1 ) break loop236;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(236, input);
                                throw eee;
                        }
                        cnt236++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6378:3: ( (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6379:1: (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6379:1: (lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6380:3: lv_toExtendsGenerics_17_0= ruleExtendsAssignementGenerics
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getToExtendsGenericsExtendsAssignementGenericsParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleExtendsAssignementGenerics_in_ruleDaogenProperty12740);
                    lv_toExtendsGenerics_17_0=ruleExtendsAssignementGenerics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toExtendsGenerics",
                              		lv_toExtendsGenerics_17_0, 
                              		"ExtendsAssignementGenerics");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6397:6: ( (lv_name_18_0= 'make-it-final' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6397:6: ( (lv_name_18_0= 'make-it-final' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6398:1: (lv_name_18_0= 'make-it-final' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6398:1: (lv_name_18_0= 'make-it-final' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6399:3: lv_name_18_0= 'make-it-final'
                    {
                    lv_name_18_0=(Token)match(input,107,FollowSets001.FOLLOW_107_in_ruleDaogenProperty12765); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_18_0, grammarAccess.getDaogenPropertyAccess().getNameMakeItFinalKeyword_6_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_18_0, "make-it-final");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6413:6: ( ( (lv_name_19_0= 'function-result' ) ) (this_WS_20= RULE_WS )+ ( (lv_dbFunction_21_0= RULE_IDENT ) ) (this_WS_22= RULE_WS )+ ( (lv_resultType_23_0= rulePojoType ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6413:6: ( ( (lv_name_19_0= 'function-result' ) ) (this_WS_20= RULE_WS )+ ( (lv_dbFunction_21_0= RULE_IDENT ) ) (this_WS_22= RULE_WS )+ ( (lv_resultType_23_0= rulePojoType ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6413:7: ( (lv_name_19_0= 'function-result' ) ) (this_WS_20= RULE_WS )+ ( (lv_dbFunction_21_0= RULE_IDENT ) ) (this_WS_22= RULE_WS )+ ( (lv_resultType_23_0= rulePojoType ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6413:7: ( (lv_name_19_0= 'function-result' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6414:1: (lv_name_19_0= 'function-result' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6414:1: (lv_name_19_0= 'function-result' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6415:3: lv_name_19_0= 'function-result'
                    {
                    lv_name_19_0=(Token)match(input,126,FollowSets001.FOLLOW_126_in_ruleDaogenProperty12803); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_19_0, grammarAccess.getDaogenPropertyAccess().getNameFunctionResultKeyword_7_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_19_0, "function-result");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6428:2: (this_WS_20= RULE_WS )+
                    int cnt237=0;
                    loop237:
                    do {
                        int alt237=2;
                        int LA237_0 = input.LA(1);

                        if ( (LA237_0==RULE_WS) ) {
                            alt237=1;
                        }


                        switch (alt237) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6428:3: this_WS_20= RULE_WS
                    	    {
                    	    this_WS_20=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12828); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_20, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_7_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt237 >= 1 ) break loop237;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(237, input);
                                throw eee;
                        }
                        cnt237++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6432:3: ( (lv_dbFunction_21_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6433:1: (lv_dbFunction_21_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6433:1: (lv_dbFunction_21_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6434:3: lv_dbFunction_21_0= RULE_IDENT
                    {
                    lv_dbFunction_21_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleDaogenProperty12846); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_21_0, grammarAccess.getDaogenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_7_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_21_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6450:2: (this_WS_22= RULE_WS )+
                    int cnt238=0;
                    loop238:
                    do {
                        int alt238=2;
                        int LA238_0 = input.LA(1);

                        if ( (LA238_0==RULE_WS) ) {
                            alt238=1;
                        }


                        switch (alt238) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6450:3: this_WS_22= RULE_WS
                    	    {
                    	    this_WS_22=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12863); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_22, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_7_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt238 >= 1 ) break loop238;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(238, input);
                                throw eee;
                        }
                        cnt238++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6454:3: ( (lv_resultType_23_0= rulePojoType ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6455:1: (lv_resultType_23_0= rulePojoType )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6455:1: (lv_resultType_23_0= rulePojoType )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6456:3: lv_resultType_23_0= rulePojoType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getResultTypePojoTypeParserRuleCall_7_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_rulePojoType_in_ruleDaogenProperty12885);
                    lv_resultType_23_0=rulePojoType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"resultType",
                              		lv_resultType_23_0, 
                              		"PojoType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6473:6: ( ( (lv_name_24_0= 'debug-level' ) ) (this_WS_25= RULE_WS )+ ( (lv_debug_26_0= ruleDebugLevelAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6473:6: ( ( (lv_name_24_0= 'debug-level' ) ) (this_WS_25= RULE_WS )+ ( (lv_debug_26_0= ruleDebugLevelAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6473:7: ( (lv_name_24_0= 'debug-level' ) ) (this_WS_25= RULE_WS )+ ( (lv_debug_26_0= ruleDebugLevelAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6473:7: ( (lv_name_24_0= 'debug-level' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6474:1: (lv_name_24_0= 'debug-level' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6474:1: (lv_name_24_0= 'debug-level' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6475:3: lv_name_24_0= 'debug-level'
                    {
                    lv_name_24_0=(Token)match(input,69,FollowSets001.FOLLOW_69_in_ruleDaogenProperty12911); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_24_0, grammarAccess.getDaogenPropertyAccess().getNameDebugLevelKeyword_8_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_24_0, "debug-level");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6488:2: (this_WS_25= RULE_WS )+
                    int cnt239=0;
                    loop239:
                    do {
                        int alt239=2;
                        int LA239_0 = input.LA(1);

                        if ( (LA239_0==RULE_WS) ) {
                            alt239=1;
                        }


                        switch (alt239) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6488:3: this_WS_25= RULE_WS
                    	    {
                    	    this_WS_25=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12936); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_25, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_8_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt239 >= 1 ) break loop239;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(239, input);
                                throw eee;
                        }
                        cnt239++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6492:3: ( (lv_debug_26_0= ruleDebugLevelAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6493:1: (lv_debug_26_0= ruleDebugLevelAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6493:1: (lv_debug_26_0= ruleDebugLevelAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6494:3: lv_debug_26_0= ruleDebugLevelAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getDebugDebugLevelAssignementParserRuleCall_8_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleDebugLevelAssignement_in_ruleDaogenProperty12958);
                    lv_debug_26_0=ruleDebugLevelAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"debug",
                              		lv_debug_26_0, 
                              		"DebugLevelAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6511:6: ( ( (lv_name_27_0= 'active-filter' ) ) (this_WS_28= RULE_WS )+ ( (lv_activeFilter_29_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6511:6: ( ( (lv_name_27_0= 'active-filter' ) ) (this_WS_28= RULE_WS )+ ( (lv_activeFilter_29_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6511:7: ( (lv_name_27_0= 'active-filter' ) ) (this_WS_28= RULE_WS )+ ( (lv_activeFilter_29_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6511:7: ( (lv_name_27_0= 'active-filter' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6512:1: (lv_name_27_0= 'active-filter' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6512:1: (lv_name_27_0= 'active-filter' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6513:3: lv_name_27_0= 'active-filter'
                    {
                    lv_name_27_0=(Token)match(input,111,FollowSets001.FOLLOW_111_in_ruleDaogenProperty12984); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_27_0, grammarAccess.getDaogenPropertyAccess().getNameActiveFilterKeyword_9_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_27_0, "active-filter");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6526:2: (this_WS_28= RULE_WS )+
                    int cnt240=0;
                    loop240:
                    do {
                        int alt240=2;
                        int LA240_0 = input.LA(1);

                        if ( (LA240_0==RULE_WS) ) {
                            alt240=1;
                        }


                        switch (alt240) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6526:3: this_WS_28= RULE_WS
                    	    {
                    	    this_WS_28=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty13009); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_28, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_9_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt240 >= 1 ) break loop240;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(240, input);
                                throw eee;
                        }
                        cnt240++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6530:3: ( (lv_activeFilter_29_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6531:1: (lv_activeFilter_29_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6531:1: (lv_activeFilter_29_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6532:3: lv_activeFilter_29_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getActiveFilterPropertyValueParserRuleCall_9_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_rulePropertyValue_in_ruleDaogenProperty13031);
                    lv_activeFilter_29_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"activeFilter",
                              		lv_activeFilter_29_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6549:6: ( ( (lv_name_30_0= 'package' ) ) (this_WS_31= RULE_WS )+ ( (lv_pckg_32_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6549:6: ( ( (lv_name_30_0= 'package' ) ) (this_WS_31= RULE_WS )+ ( (lv_pckg_32_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6549:7: ( (lv_name_30_0= 'package' ) ) (this_WS_31= RULE_WS )+ ( (lv_pckg_32_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6549:7: ( (lv_name_30_0= 'package' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6550:1: (lv_name_30_0= 'package' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6550:1: (lv_name_30_0= 'package' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6551:3: lv_name_30_0= 'package'
                    {
                    lv_name_30_0=(Token)match(input,112,FollowSets001.FOLLOW_112_in_ruleDaogenProperty13057); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_30_0, grammarAccess.getDaogenPropertyAccess().getNamePackageKeyword_10_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_30_0, "package");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6564:2: (this_WS_31= RULE_WS )+
                    int cnt241=0;
                    loop241:
                    do {
                        int alt241=2;
                        int LA241_0 = input.LA(1);

                        if ( (LA241_0==RULE_WS) ) {
                            alt241=1;
                        }


                        switch (alt241) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6564:3: this_WS_31= RULE_WS
                    	    {
                    	    this_WS_31=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty13082); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_31, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_10_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt241 >= 1 ) break loop241;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(241, input);
                                throw eee;
                        }
                        cnt241++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6568:3: ( (lv_pckg_32_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6569:1: (lv_pckg_32_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6569:1: (lv_pckg_32_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6570:3: lv_pckg_32_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getPckgPropertyValueParserRuleCall_10_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_rulePropertyValue_in_ruleDaogenProperty13104);
                    lv_pckg_32_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"pckg",
                              		lv_pckg_32_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDaogenProperty"


    // $ANTLR start "entryRulePropertyValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6594:1: entryRulePropertyValue returns [String current=null] : iv_rulePropertyValue= rulePropertyValue EOF ;
    public final String entryRulePropertyValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6595:2: (iv_rulePropertyValue= rulePropertyValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6596:2: iv_rulePropertyValue= rulePropertyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyValueRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_rulePropertyValue_in_entryRulePropertyValue13142);
            iv_rulePropertyValue=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyValue.getText(); 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRulePropertyValue13153); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyValue"


    // $ANTLR start "rulePropertyValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6603:1: rulePropertyValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* ) | this_STRING_VALUE_65= RULE_STRING_VALUE ) ;
    public final AntlrDatatypeRuleToken rulePropertyValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_COLON_4=null;
        Token this_STRING_5=null;
        Token this_COMMA_6=null;
        Token this_MINUS_7=null;
        Token this_PLUS_8=null;
        Token this_LPAREN_9=null;
        Token this_RPAREN_10=null;
        Token this_LBRACE_11=null;
        Token this_RBRACE_12=null;
        Token this_QUESTI_13=null;
        Token this_NOT_14=null;
        Token this_BAND_15=null;
        Token this_BOR_16=null;
        Token this_HASH_17=null;
        Token this_AT_18=null;
        Token this_CARET_19=null;
        Token this_EQUALS_20=null;
        Token this_LESS_THAN_21=null;
        Token this_MORE_THAN_22=null;
        Token this_PERCENT_23=null;
        Token this_DOT_24=null;
        Token this_AND_25=null;
        Token this_OR_26=null;
        Token this_ESC_CHAR_27=null;
        Token this_ON_OFF_28=null;
        Token this_STATEMENT_TYPE_29=null;
        Token this_MAPPING_TYPE_30=null;
        Token this_OPTION_TYPE_31=null;
        Token this_REST_32=null;
        Token this_IDENT_DOT_33=null;
        Token this_IDENT_34=null;
        Token this_NUMBER_35=null;
        Token this_WS_36=null;
        Token this_COLON_37=null;
        Token this_STRING_38=null;
        Token this_COMMA_39=null;
        Token this_MINUS_40=null;
        Token this_PLUS_41=null;
        Token this_LPAREN_42=null;
        Token this_RPAREN_43=null;
        Token this_LBRACE_44=null;
        Token this_RBRACE_45=null;
        Token this_QUESTI_46=null;
        Token this_NOT_47=null;
        Token this_BAND_48=null;
        Token this_BOR_49=null;
        Token this_HASH_50=null;
        Token this_AT_51=null;
        Token this_CARET_52=null;
        Token this_EQUALS_53=null;
        Token this_LESS_THAN_54=null;
        Token this_MORE_THAN_55=null;
        Token this_PERCENT_56=null;
        Token this_DOT_57=null;
        Token this_AND_58=null;
        Token this_OR_59=null;
        Token this_ESC_CHAR_60=null;
        Token this_ON_OFF_61=null;
        Token this_STATEMENT_TYPE_62=null;
        Token this_MAPPING_TYPE_63=null;
        Token this_OPTION_TYPE_64=null;
        Token this_STRING_VALUE_65=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6606:28: ( ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* ) | this_STRING_VALUE_65= RULE_STRING_VALUE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6607:1: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* ) | this_STRING_VALUE_65= RULE_STRING_VALUE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6607:1: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* ) | this_STRING_VALUE_65= RULE_STRING_VALUE )
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( ((LA246_0>=RULE_IDENT && LA246_0<=RULE_MINUS)||(LA246_0>=RULE_REST && LA246_0<=RULE_OPTION_TYPE)) ) {
                alt246=1;
            }
            else if ( (LA246_0==RULE_STRING_VALUE) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;
            }
            switch (alt246) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6607:2: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6607:2: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6607:3: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6607:3: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )
                    int alt243=32;
                    switch ( input.LA(1) ) {
                    case RULE_REST:
                        {
                        alt243=1;
                        }
                        break;
                    case RULE_IDENT_DOT:
                        {
                        alt243=2;
                        }
                        break;
                    case RULE_IDENT:
                        {
                        alt243=3;
                        }
                        break;
                    case RULE_NUMBER:
                        {
                        alt243=4;
                        }
                        break;
                    case RULE_COLON:
                        {
                        alt243=5;
                        }
                        break;
                    case RULE_STRING:
                        {
                        alt243=6;
                        }
                        break;
                    case RULE_COMMA:
                        {
                        alt243=7;
                        }
                        break;
                    case RULE_MINUS:
                        {
                        alt243=8;
                        }
                        break;
                    case RULE_PLUS:
                        {
                        alt243=9;
                        }
                        break;
                    case RULE_LPAREN:
                        {
                        alt243=10;
                        }
                        break;
                    case RULE_RPAREN:
                        {
                        alt243=11;
                        }
                        break;
                    case RULE_LBRACE:
                        {
                        alt243=12;
                        }
                        break;
                    case RULE_RBRACE:
                        {
                        alt243=13;
                        }
                        break;
                    case RULE_QUESTI:
                        {
                        alt243=14;
                        }
                        break;
                    case RULE_NOT:
                        {
                        alt243=15;
                        }
                        break;
                    case RULE_BAND:
                        {
                        alt243=16;
                        }
                        break;
                    case RULE_BOR:
                        {
                        alt243=17;
                        }
                        break;
                    case RULE_HASH:
                        {
                        alt243=18;
                        }
                        break;
                    case RULE_AT:
                        {
                        alt243=19;
                        }
                        break;
                    case RULE_CARET:
                        {
                        alt243=20;
                        }
                        break;
                    case RULE_EQUALS:
                        {
                        alt243=21;
                        }
                        break;
                    case RULE_LESS_THAN:
                        {
                        alt243=22;
                        }
                        break;
                    case RULE_MORE_THAN:
                        {
                        alt243=23;
                        }
                        break;
                    case RULE_PERCENT:
                        {
                        alt243=24;
                        }
                        break;
                    case RULE_DOT:
                        {
                        alt243=25;
                        }
                        break;
                    case RULE_AND:
                        {
                        alt243=26;
                        }
                        break;
                    case RULE_OR:
                        {
                        alt243=27;
                        }
                        break;
                    case RULE_ESC_CHAR:
                        {
                        alt243=28;
                        }
                        break;
                    case RULE_ON_OFF:
                        {
                        alt243=29;
                        }
                        break;
                    case RULE_STATEMENT_TYPE:
                        {
                        alt243=30;
                        }
                        break;
                    case RULE_MAPPING_TYPE:
                        {
                        alt243=31;
                        }
                        break;
                    case RULE_OPTION_TYPE:
                        {
                        alt243=32;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 243, 0, input);

                        throw nvae;
                    }

                    switch (alt243) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6607:8: this_REST_0= RULE_REST
                            {
                            this_REST_0=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_rulePropertyValue13195); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_REST_0);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_REST_0, grammarAccess.getPropertyValueAccess().getRESTTerminalRuleCall_0_0_0()); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6615:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                            {
                            this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_rulePropertyValue13221); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_IDENT_DOT_1);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_IDENT_DOT_1, grammarAccess.getPropertyValueAccess().getIDENT_DOTTerminalRuleCall_0_0_1()); 
                                  
                            }

                            }
                            break;
                        case 3 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6623:10: this_IDENT_2= RULE_IDENT
                            {
                            this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_rulePropertyValue13247); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_IDENT_2);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_IDENT_2, grammarAccess.getPropertyValueAccess().getIDENTTerminalRuleCall_0_0_2()); 
                                  
                            }

                            }
                            break;
                        case 4 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6631:10: this_NUMBER_3= RULE_NUMBER
                            {
                            this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_rulePropertyValue13273); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_NUMBER_3);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_NUMBER_3, grammarAccess.getPropertyValueAccess().getNUMBERTerminalRuleCall_0_0_3()); 
                                  
                            }

                            }
                            break;
                        case 5 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6639:10: this_COLON_4= RULE_COLON
                            {
                            this_COLON_4=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_rulePropertyValue13299); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_COLON_4);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_4, grammarAccess.getPropertyValueAccess().getCOLONTerminalRuleCall_0_0_4()); 
                                  
                            }

                            }
                            break;
                        case 6 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6647:10: this_STRING_5= RULE_STRING
                            {
                            this_STRING_5=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_rulePropertyValue13325); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_STRING_5);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_STRING_5, grammarAccess.getPropertyValueAccess().getSTRINGTerminalRuleCall_0_0_5()); 
                                  
                            }

                            }
                            break;
                        case 7 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6655:10: this_COMMA_6= RULE_COMMA
                            {
                            this_COMMA_6=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_rulePropertyValue13351); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_COMMA_6);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COMMA_6, grammarAccess.getPropertyValueAccess().getCOMMATerminalRuleCall_0_0_6()); 
                                  
                            }

                            }
                            break;
                        case 8 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6663:10: this_MINUS_7= RULE_MINUS
                            {
                            this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_rulePropertyValue13377); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_MINUS_7);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MINUS_7, grammarAccess.getPropertyValueAccess().getMINUSTerminalRuleCall_0_0_7()); 
                                  
                            }

                            }
                            break;
                        case 9 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6671:10: this_PLUS_8= RULE_PLUS
                            {
                            this_PLUS_8=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_rulePropertyValue13403); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_PLUS_8);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PLUS_8, grammarAccess.getPropertyValueAccess().getPLUSTerminalRuleCall_0_0_8()); 
                                  
                            }

                            }
                            break;
                        case 10 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6679:10: this_LPAREN_9= RULE_LPAREN
                            {
                            this_LPAREN_9=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_rulePropertyValue13429); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_LPAREN_9);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LPAREN_9, grammarAccess.getPropertyValueAccess().getLPARENTerminalRuleCall_0_0_9()); 
                                  
                            }

                            }
                            break;
                        case 11 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6687:10: this_RPAREN_10= RULE_RPAREN
                            {
                            this_RPAREN_10=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_rulePropertyValue13455); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_RPAREN_10);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_RPAREN_10, grammarAccess.getPropertyValueAccess().getRPARENTerminalRuleCall_0_0_10()); 
                                  
                            }

                            }
                            break;
                        case 12 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6695:10: this_LBRACE_11= RULE_LBRACE
                            {
                            this_LBRACE_11=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_rulePropertyValue13481); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_LBRACE_11);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LBRACE_11, grammarAccess.getPropertyValueAccess().getLBRACETerminalRuleCall_0_0_11()); 
                                  
                            }

                            }
                            break;
                        case 13 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6703:10: this_RBRACE_12= RULE_RBRACE
                            {
                            this_RBRACE_12=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_rulePropertyValue13507); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_RBRACE_12);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_RBRACE_12, grammarAccess.getPropertyValueAccess().getRBRACETerminalRuleCall_0_0_12()); 
                                  
                            }

                            }
                            break;
                        case 14 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6711:10: this_QUESTI_13= RULE_QUESTI
                            {
                            this_QUESTI_13=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_rulePropertyValue13533); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_QUESTI_13);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_QUESTI_13, grammarAccess.getPropertyValueAccess().getQUESTITerminalRuleCall_0_0_13()); 
                                  
                            }

                            }
                            break;
                        case 15 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6719:10: this_NOT_14= RULE_NOT
                            {
                            this_NOT_14=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_rulePropertyValue13559); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_NOT_14);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_NOT_14, grammarAccess.getPropertyValueAccess().getNOTTerminalRuleCall_0_0_14()); 
                                  
                            }

                            }
                            break;
                        case 16 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6727:10: this_BAND_15= RULE_BAND
                            {
                            this_BAND_15=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_rulePropertyValue13585); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_BAND_15);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_BAND_15, grammarAccess.getPropertyValueAccess().getBANDTerminalRuleCall_0_0_15()); 
                                  
                            }

                            }
                            break;
                        case 17 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6735:10: this_BOR_16= RULE_BOR
                            {
                            this_BOR_16=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_rulePropertyValue13611); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_BOR_16);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_BOR_16, grammarAccess.getPropertyValueAccess().getBORTerminalRuleCall_0_0_16()); 
                                  
                            }

                            }
                            break;
                        case 18 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6743:10: this_HASH_17= RULE_HASH
                            {
                            this_HASH_17=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_rulePropertyValue13637); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_HASH_17);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_HASH_17, grammarAccess.getPropertyValueAccess().getHASHTerminalRuleCall_0_0_17()); 
                                  
                            }

                            }
                            break;
                        case 19 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6751:10: this_AT_18= RULE_AT
                            {
                            this_AT_18=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_rulePropertyValue13663); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_AT_18);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_AT_18, grammarAccess.getPropertyValueAccess().getATTerminalRuleCall_0_0_18()); 
                                  
                            }

                            }
                            break;
                        case 20 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6759:10: this_CARET_19= RULE_CARET
                            {
                            this_CARET_19=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_rulePropertyValue13689); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_CARET_19);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_CARET_19, grammarAccess.getPropertyValueAccess().getCARETTerminalRuleCall_0_0_19()); 
                                  
                            }

                            }
                            break;
                        case 21 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6767:10: this_EQUALS_20= RULE_EQUALS
                            {
                            this_EQUALS_20=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_rulePropertyValue13715); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_EQUALS_20);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_EQUALS_20, grammarAccess.getPropertyValueAccess().getEQUALSTerminalRuleCall_0_0_20()); 
                                  
                            }

                            }
                            break;
                        case 22 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6775:10: this_LESS_THAN_21= RULE_LESS_THAN
                            {
                            this_LESS_THAN_21=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_rulePropertyValue13741); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_LESS_THAN_21);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LESS_THAN_21, grammarAccess.getPropertyValueAccess().getLESS_THANTerminalRuleCall_0_0_21()); 
                                  
                            }

                            }
                            break;
                        case 23 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6783:10: this_MORE_THAN_22= RULE_MORE_THAN
                            {
                            this_MORE_THAN_22=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_rulePropertyValue13767); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_MORE_THAN_22);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MORE_THAN_22, grammarAccess.getPropertyValueAccess().getMORE_THANTerminalRuleCall_0_0_22()); 
                                  
                            }

                            }
                            break;
                        case 24 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6791:10: this_PERCENT_23= RULE_PERCENT
                            {
                            this_PERCENT_23=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_rulePropertyValue13793); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_PERCENT_23);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PERCENT_23, grammarAccess.getPropertyValueAccess().getPERCENTTerminalRuleCall_0_0_23()); 
                                  
                            }

                            }
                            break;
                        case 25 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6799:10: this_DOT_24= RULE_DOT
                            {
                            this_DOT_24=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_rulePropertyValue13819); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_DOT_24);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_DOT_24, grammarAccess.getPropertyValueAccess().getDOTTerminalRuleCall_0_0_24()); 
                                  
                            }

                            }
                            break;
                        case 26 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6807:10: this_AND_25= RULE_AND
                            {
                            this_AND_25=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_rulePropertyValue13845); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_AND_25);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_AND_25, grammarAccess.getPropertyValueAccess().getANDTerminalRuleCall_0_0_25()); 
                                  
                            }

                            }
                            break;
                        case 27 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6815:10: this_OR_26= RULE_OR
                            {
                            this_OR_26=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_rulePropertyValue13871); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_OR_26);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_OR_26, grammarAccess.getPropertyValueAccess().getORTerminalRuleCall_0_0_26()); 
                                  
                            }

                            }
                            break;
                        case 28 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6823:10: this_ESC_CHAR_27= RULE_ESC_CHAR
                            {
                            this_ESC_CHAR_27=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_rulePropertyValue13897); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_ESC_CHAR_27);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_ESC_CHAR_27, grammarAccess.getPropertyValueAccess().getESC_CHARTerminalRuleCall_0_0_27()); 
                                  
                            }

                            }
                            break;
                        case 29 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6831:10: this_ON_OFF_28= RULE_ON_OFF
                            {
                            this_ON_OFF_28=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_rulePropertyValue13923); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_ON_OFF_28);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_ON_OFF_28, grammarAccess.getPropertyValueAccess().getON_OFFTerminalRuleCall_0_0_28()); 
                                  
                            }

                            }
                            break;
                        case 30 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6839:10: this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE
                            {
                            this_STATEMENT_TYPE_29=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_rulePropertyValue13949); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_STATEMENT_TYPE_29);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_STATEMENT_TYPE_29, grammarAccess.getPropertyValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_0_29()); 
                                  
                            }

                            }
                            break;
                        case 31 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6847:10: this_MAPPING_TYPE_30= RULE_MAPPING_TYPE
                            {
                            this_MAPPING_TYPE_30=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_rulePropertyValue13975); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_MAPPING_TYPE_30);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MAPPING_TYPE_30, grammarAccess.getPropertyValueAccess().getMAPPING_TYPETerminalRuleCall_0_0_30()); 
                                  
                            }

                            }
                            break;
                        case 32 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6855:10: this_OPTION_TYPE_31= RULE_OPTION_TYPE
                            {
                            this_OPTION_TYPE_31=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_rulePropertyValue14001); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_OPTION_TYPE_31);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_OPTION_TYPE_31, grammarAccess.getPropertyValueAccess().getOPTION_TYPETerminalRuleCall_0_0_31()); 
                                  
                            }

                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6862:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )*
                    loop245:
                    do {
                        int alt245=2;
                        alt245 = dfa245.predict(input);
                        switch (alt245) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6862:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6894:27: (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE )
                    	    int alt244=33;
                    	    switch ( input.LA(1) ) {
                    	    case RULE_REST:
                    	        {
                    	        alt244=1;
                    	        }
                    	        break;
                    	    case RULE_IDENT_DOT:
                    	        {
                    	        alt244=2;
                    	        }
                    	        break;
                    	    case RULE_IDENT:
                    	        {
                    	        alt244=3;
                    	        }
                    	        break;
                    	    case RULE_NUMBER:
                    	        {
                    	        alt244=4;
                    	        }
                    	        break;
                    	    case RULE_WS:
                    	        {
                    	        alt244=5;
                    	        }
                    	        break;
                    	    case RULE_COLON:
                    	        {
                    	        alt244=6;
                    	        }
                    	        break;
                    	    case RULE_STRING:
                    	        {
                    	        alt244=7;
                    	        }
                    	        break;
                    	    case RULE_COMMA:
                    	        {
                    	        alt244=8;
                    	        }
                    	        break;
                    	    case RULE_MINUS:
                    	        {
                    	        alt244=9;
                    	        }
                    	        break;
                    	    case RULE_PLUS:
                    	        {
                    	        alt244=10;
                    	        }
                    	        break;
                    	    case RULE_LPAREN:
                    	        {
                    	        alt244=11;
                    	        }
                    	        break;
                    	    case RULE_RPAREN:
                    	        {
                    	        alt244=12;
                    	        }
                    	        break;
                    	    case RULE_LBRACE:
                    	        {
                    	        alt244=13;
                    	        }
                    	        break;
                    	    case RULE_RBRACE:
                    	        {
                    	        alt244=14;
                    	        }
                    	        break;
                    	    case RULE_QUESTI:
                    	        {
                    	        alt244=15;
                    	        }
                    	        break;
                    	    case RULE_NOT:
                    	        {
                    	        alt244=16;
                    	        }
                    	        break;
                    	    case RULE_BAND:
                    	        {
                    	        alt244=17;
                    	        }
                    	        break;
                    	    case RULE_BOR:
                    	        {
                    	        alt244=18;
                    	        }
                    	        break;
                    	    case RULE_HASH:
                    	        {
                    	        alt244=19;
                    	        }
                    	        break;
                    	    case RULE_AT:
                    	        {
                    	        alt244=20;
                    	        }
                    	        break;
                    	    case RULE_CARET:
                    	        {
                    	        alt244=21;
                    	        }
                    	        break;
                    	    case RULE_EQUALS:
                    	        {
                    	        alt244=22;
                    	        }
                    	        break;
                    	    case RULE_LESS_THAN:
                    	        {
                    	        alt244=23;
                    	        }
                    	        break;
                    	    case RULE_MORE_THAN:
                    	        {
                    	        alt244=24;
                    	        }
                    	        break;
                    	    case RULE_PERCENT:
                    	        {
                    	        alt244=25;
                    	        }
                    	        break;
                    	    case RULE_DOT:
                    	        {
                    	        alt244=26;
                    	        }
                    	        break;
                    	    case RULE_AND:
                    	        {
                    	        alt244=27;
                    	        }
                    	        break;
                    	    case RULE_OR:
                    	        {
                    	        alt244=28;
                    	        }
                    	        break;
                    	    case RULE_ESC_CHAR:
                    	        {
                    	        alt244=29;
                    	        }
                    	        break;
                    	    case RULE_ON_OFF:
                    	        {
                    	        alt244=30;
                    	        }
                    	        break;
                    	    case RULE_STATEMENT_TYPE:
                    	        {
                    	        alt244=31;
                    	        }
                    	        break;
                    	    case RULE_MAPPING_TYPE:
                    	        {
                    	        alt244=32;
                    	        }
                    	        break;
                    	    case RULE_OPTION_TYPE:
                    	        {
                    	        alt244=33;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 244, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt244) {
                    	        case 1 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6894:32: this_REST_32= RULE_REST
                    	            {
                    	            this_REST_32=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_rulePropertyValue14287); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_REST_32);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_REST_32, grammarAccess.getPropertyValueAccess().getRESTTerminalRuleCall_0_1_0_0()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6902:10: this_IDENT_DOT_33= RULE_IDENT_DOT
                    	            {
                    	            this_IDENT_DOT_33=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_rulePropertyValue14313); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_IDENT_DOT_33);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_IDENT_DOT_33, grammarAccess.getPropertyValueAccess().getIDENT_DOTTerminalRuleCall_0_1_0_1()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6910:10: this_IDENT_34= RULE_IDENT
                    	            {
                    	            this_IDENT_34=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_rulePropertyValue14339); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_IDENT_34);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_IDENT_34, grammarAccess.getPropertyValueAccess().getIDENTTerminalRuleCall_0_1_0_2()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6918:10: this_NUMBER_35= RULE_NUMBER
                    	            {
                    	            this_NUMBER_35=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_rulePropertyValue14365); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_NUMBER_35);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_NUMBER_35, grammarAccess.getPropertyValueAccess().getNUMBERTerminalRuleCall_0_1_0_3()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6926:10: this_WS_36= RULE_WS
                    	            {
                    	            this_WS_36=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_rulePropertyValue14391); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_WS_36);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_WS_36, grammarAccess.getPropertyValueAccess().getWSTerminalRuleCall_0_1_0_4()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6934:10: this_COLON_37= RULE_COLON
                    	            {
                    	            this_COLON_37=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_rulePropertyValue14417); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_COLON_37);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_COLON_37, grammarAccess.getPropertyValueAccess().getCOLONTerminalRuleCall_0_1_0_5()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 7 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6942:10: this_STRING_38= RULE_STRING
                    	            {
                    	            this_STRING_38=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_rulePropertyValue14443); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_STRING_38);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_STRING_38, grammarAccess.getPropertyValueAccess().getSTRINGTerminalRuleCall_0_1_0_6()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 8 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6950:10: this_COMMA_39= RULE_COMMA
                    	            {
                    	            this_COMMA_39=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_rulePropertyValue14469); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_COMMA_39);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_COMMA_39, grammarAccess.getPropertyValueAccess().getCOMMATerminalRuleCall_0_1_0_7()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 9 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6958:10: this_MINUS_40= RULE_MINUS
                    	            {
                    	            this_MINUS_40=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_rulePropertyValue14495); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_MINUS_40);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_MINUS_40, grammarAccess.getPropertyValueAccess().getMINUSTerminalRuleCall_0_1_0_8()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 10 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6966:10: this_PLUS_41= RULE_PLUS
                    	            {
                    	            this_PLUS_41=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_rulePropertyValue14521); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_PLUS_41);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_PLUS_41, grammarAccess.getPropertyValueAccess().getPLUSTerminalRuleCall_0_1_0_9()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 11 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6974:10: this_LPAREN_42= RULE_LPAREN
                    	            {
                    	            this_LPAREN_42=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_rulePropertyValue14547); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_LPAREN_42);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_LPAREN_42, grammarAccess.getPropertyValueAccess().getLPARENTerminalRuleCall_0_1_0_10()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 12 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6982:10: this_RPAREN_43= RULE_RPAREN
                    	            {
                    	            this_RPAREN_43=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_rulePropertyValue14573); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_RPAREN_43);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_RPAREN_43, grammarAccess.getPropertyValueAccess().getRPARENTerminalRuleCall_0_1_0_11()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 13 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6990:10: this_LBRACE_44= RULE_LBRACE
                    	            {
                    	            this_LBRACE_44=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_rulePropertyValue14599); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_LBRACE_44);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_LBRACE_44, grammarAccess.getPropertyValueAccess().getLBRACETerminalRuleCall_0_1_0_12()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 14 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6998:10: this_RBRACE_45= RULE_RBRACE
                    	            {
                    	            this_RBRACE_45=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_rulePropertyValue14625); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_RBRACE_45);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_RBRACE_45, grammarAccess.getPropertyValueAccess().getRBRACETerminalRuleCall_0_1_0_13()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 15 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7006:10: this_QUESTI_46= RULE_QUESTI
                    	            {
                    	            this_QUESTI_46=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_rulePropertyValue14651); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_QUESTI_46);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_QUESTI_46, grammarAccess.getPropertyValueAccess().getQUESTITerminalRuleCall_0_1_0_14()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 16 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7014:10: this_NOT_47= RULE_NOT
                    	            {
                    	            this_NOT_47=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_rulePropertyValue14677); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_NOT_47);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_NOT_47, grammarAccess.getPropertyValueAccess().getNOTTerminalRuleCall_0_1_0_15()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 17 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7022:10: this_BAND_48= RULE_BAND
                    	            {
                    	            this_BAND_48=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_rulePropertyValue14703); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_BAND_48);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_BAND_48, grammarAccess.getPropertyValueAccess().getBANDTerminalRuleCall_0_1_0_16()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 18 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7030:10: this_BOR_49= RULE_BOR
                    	            {
                    	            this_BOR_49=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_rulePropertyValue14729); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_BOR_49);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_BOR_49, grammarAccess.getPropertyValueAccess().getBORTerminalRuleCall_0_1_0_17()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 19 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7038:10: this_HASH_50= RULE_HASH
                    	            {
                    	            this_HASH_50=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_rulePropertyValue14755); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_HASH_50);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_HASH_50, grammarAccess.getPropertyValueAccess().getHASHTerminalRuleCall_0_1_0_18()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 20 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7046:10: this_AT_51= RULE_AT
                    	            {
                    	            this_AT_51=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_rulePropertyValue14781); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_AT_51);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_AT_51, grammarAccess.getPropertyValueAccess().getATTerminalRuleCall_0_1_0_19()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 21 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7054:10: this_CARET_52= RULE_CARET
                    	            {
                    	            this_CARET_52=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_rulePropertyValue14807); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_CARET_52);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_CARET_52, grammarAccess.getPropertyValueAccess().getCARETTerminalRuleCall_0_1_0_20()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 22 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7062:10: this_EQUALS_53= RULE_EQUALS
                    	            {
                    	            this_EQUALS_53=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_rulePropertyValue14833); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_EQUALS_53);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_EQUALS_53, grammarAccess.getPropertyValueAccess().getEQUALSTerminalRuleCall_0_1_0_21()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 23 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7070:10: this_LESS_THAN_54= RULE_LESS_THAN
                    	            {
                    	            this_LESS_THAN_54=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_rulePropertyValue14859); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_LESS_THAN_54);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_LESS_THAN_54, grammarAccess.getPropertyValueAccess().getLESS_THANTerminalRuleCall_0_1_0_22()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 24 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7078:10: this_MORE_THAN_55= RULE_MORE_THAN
                    	            {
                    	            this_MORE_THAN_55=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_rulePropertyValue14885); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_MORE_THAN_55);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_MORE_THAN_55, grammarAccess.getPropertyValueAccess().getMORE_THANTerminalRuleCall_0_1_0_23()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 25 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7086:10: this_PERCENT_56= RULE_PERCENT
                    	            {
                    	            this_PERCENT_56=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_rulePropertyValue14911); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_PERCENT_56);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_PERCENT_56, grammarAccess.getPropertyValueAccess().getPERCENTTerminalRuleCall_0_1_0_24()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 26 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7094:10: this_DOT_57= RULE_DOT
                    	            {
                    	            this_DOT_57=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_rulePropertyValue14937); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_DOT_57);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_DOT_57, grammarAccess.getPropertyValueAccess().getDOTTerminalRuleCall_0_1_0_25()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 27 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7102:10: this_AND_58= RULE_AND
                    	            {
                    	            this_AND_58=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_rulePropertyValue14963); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_AND_58);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_AND_58, grammarAccess.getPropertyValueAccess().getANDTerminalRuleCall_0_1_0_26()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 28 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7110:10: this_OR_59= RULE_OR
                    	            {
                    	            this_OR_59=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_rulePropertyValue14989); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_OR_59);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_OR_59, grammarAccess.getPropertyValueAccess().getORTerminalRuleCall_0_1_0_27()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 29 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7118:10: this_ESC_CHAR_60= RULE_ESC_CHAR
                    	            {
                    	            this_ESC_CHAR_60=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_rulePropertyValue15015); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_ESC_CHAR_60);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_ESC_CHAR_60, grammarAccess.getPropertyValueAccess().getESC_CHARTerminalRuleCall_0_1_0_28()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 30 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7126:10: this_ON_OFF_61= RULE_ON_OFF
                    	            {
                    	            this_ON_OFF_61=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_rulePropertyValue15041); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_ON_OFF_61);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_ON_OFF_61, grammarAccess.getPropertyValueAccess().getON_OFFTerminalRuleCall_0_1_0_29()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 31 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7134:10: this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE
                    	            {
                    	            this_STATEMENT_TYPE_62=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_rulePropertyValue15067); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_STATEMENT_TYPE_62);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_STATEMENT_TYPE_62, grammarAccess.getPropertyValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_1_0_30()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 32 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7142:10: this_MAPPING_TYPE_63= RULE_MAPPING_TYPE
                    	            {
                    	            this_MAPPING_TYPE_63=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_rulePropertyValue15093); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_MAPPING_TYPE_63);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_MAPPING_TYPE_63, grammarAccess.getPropertyValueAccess().getMAPPING_TYPETerminalRuleCall_0_1_0_31()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 33 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7150:10: this_OPTION_TYPE_64= RULE_OPTION_TYPE
                    	            {
                    	            this_OPTION_TYPE_64=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_rulePropertyValue15119); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_OPTION_TYPE_64);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_OPTION_TYPE_64, grammarAccess.getPropertyValueAccess().getOPTION_TYPETerminalRuleCall_0_1_0_32()); 
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop245;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7158:10: this_STRING_VALUE_65= RULE_STRING_VALUE
                    {
                    this_STRING_VALUE_65=(Token)match(input,RULE_STRING_VALUE,FollowSets001.FOLLOW_RULE_STRING_VALUE_in_rulePropertyValue15149); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRING_VALUE_65);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_VALUE_65, grammarAccess.getPropertyValueAccess().getSTRING_VALUETerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyValue"


    // $ANTLR start "entryRulePojoDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7173:1: entryRulePojoDefinition returns [EObject current=null] : iv_rulePojoDefinition= rulePojoDefinition EOF ;
    public final EObject entryRulePojoDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoDefinition = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7177:2: (iv_rulePojoDefinition= rulePojoDefinition EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7178:2: iv_rulePojoDefinition= rulePojoDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoDefinitionRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_rulePojoDefinition_in_entryRulePojoDefinition15200);
            iv_rulePojoDefinition=rulePojoDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoDefinition; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRulePojoDefinition15210); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoDefinition"


    // $ANTLR start "rulePojoDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7188:1: rulePojoDefinition returns [EObject current=null] : (otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON ) ;
    public final EObject rulePojoDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_class_2_1=null;
        Token lv_class_2_2=null;
        Token this_COLON_3=null;
        Token this_SEMICOLON_5=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7192:28: ( (otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7193:1: (otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7193:1: (otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7193:3: otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON
            {
            otherlv_0=(Token)match(input,131,FollowSets001.FOLLOW_131_in_rulePojoDefinition15251); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPojoDefinitionAccess().getPojoKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7197:1: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7198:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7198:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7199:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_rulePojoDefinition15268); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getPojoDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7215:2: ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) )
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==RULE_IDENT||LA248_0==RULE_IDENT_DOT) ) {
                alt248=1;
            }
            else if ( (LA248_0==RULE_COLON) ) {
                alt248=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 248, 0, input);

                throw nvae;
            }
            switch (alt248) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7215:3: ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7215:3: ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7216:1: ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7216:1: ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7217:1: (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7217:1: (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT )
                    int alt247=2;
                    int LA247_0 = input.LA(1);

                    if ( (LA247_0==RULE_IDENT) ) {
                        alt247=1;
                    }
                    else if ( (LA247_0==RULE_IDENT_DOT) ) {
                        alt247=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 247, 0, input);

                        throw nvae;
                    }
                    switch (alt247) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7218:3: lv_class_2_1= RULE_IDENT
                            {
                            lv_class_2_1=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_rulePojoDefinition15293); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_class_2_1, grammarAccess.getPojoDefinitionAccess().getClassIDENTTerminalRuleCall_2_0_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoDefinitionRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"class",
                                      		lv_class_2_1, 
                                      		"IDENT");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7233:8: lv_class_2_2= RULE_IDENT_DOT
                            {
                            lv_class_2_2=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_rulePojoDefinition15313); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_class_2_2, grammarAccess.getPojoDefinitionAccess().getClassIDENT_DOTTerminalRuleCall_2_0_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoDefinitionRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"class",
                                      		lv_class_2_2, 
                                      		"IDENT_DOT");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7252:6: (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7252:6: (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7252:7: this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) )
                    {
                    this_COLON_3=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_rulePojoDefinition15339); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_3, grammarAccess.getPojoDefinitionAccess().getCOLONTerminalRuleCall_2_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7256:1: ( ( ruleQualifiedName ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7257:1: ( ruleQualifiedName )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7257:1: ( ruleQualifiedName )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7258:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoDefinitionRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojoDefinitionAccess().getClassxJvmTypeCrossReference_2_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleQualifiedName_in_rulePojoDefinition15361);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            this_SEMICOLON_5=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_rulePojoDefinition15374); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_5, grammarAccess.getPojoDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoDefinition"


    // $ANTLR start "entryRuleTableDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7286:1: entryRuleTableDefinition returns [EObject current=null] : iv_ruleTableDefinition= ruleTableDefinition EOF ;
    public final EObject entryRuleTableDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableDefinition = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7290:2: (iv_ruleTableDefinition= ruleTableDefinition EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7291:2: iv_ruleTableDefinition= ruleTableDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableDefinitionRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleTableDefinition_in_entryRuleTableDefinition15419);
            iv_ruleTableDefinition=ruleTableDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableDefinition; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleTableDefinition15429); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleTableDefinition"


    // $ANTLR start "ruleTableDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7301:1: ruleTableDefinition returns [EObject current=null] : (otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) ;
    public final EObject ruleTableDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_table_2_0=null;
        Token this_SEMICOLON_3=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7305:28: ( (otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7306:1: (otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7306:1: (otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7306:3: otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON
            {
            otherlv_0=(Token)match(input,132,FollowSets001.FOLLOW_132_in_ruleTableDefinition15470); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTableDefinitionAccess().getTableKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7310:1: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7311:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7311:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7312:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleTableDefinition15487); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getTableDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTableDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7328:2: ( (lv_table_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7329:1: (lv_table_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7329:1: (lv_table_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7330:3: lv_table_2_0= RULE_IDENT
            {
            lv_table_2_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleTableDefinition15509); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_table_2_0, grammarAccess.getTableDefinitionAccess().getTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTableDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"table",
                      		lv_table_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_SEMICOLON_3=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleTableDefinition15525); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_3, grammarAccess.getTableDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleTableDefinition"


    // $ANTLR start "entryRuleProcedureDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7361:1: entryRuleProcedureDefinition returns [EObject current=null] : iv_ruleProcedureDefinition= ruleProcedureDefinition EOF ;
    public final EObject entryRuleProcedureDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcedureDefinition = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7365:2: (iv_ruleProcedureDefinition= ruleProcedureDefinition EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7366:2: iv_ruleProcedureDefinition= ruleProcedureDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcedureDefinitionRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleProcedureDefinition_in_entryRuleProcedureDefinition15570);
            iv_ruleProcedureDefinition=ruleProcedureDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcedureDefinition; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleProcedureDefinition15580); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleProcedureDefinition"


    // $ANTLR start "ruleProcedureDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7376:1: ruleProcedureDefinition returns [EObject current=null] : (otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) ;
    public final EObject ruleProcedureDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_table_2_0=null;
        Token this_SEMICOLON_3=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7380:28: ( (otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7381:1: (otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7381:1: (otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7381:3: otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON
            {
            otherlv_0=(Token)match(input,133,FollowSets001.FOLLOW_133_in_ruleProcedureDefinition15621); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getProcedureDefinitionAccess().getProcedureKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7385:1: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7386:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7386:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7387:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleProcedureDefinition15638); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getProcedureDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getProcedureDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7403:2: ( (lv_table_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7404:1: (lv_table_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7404:1: (lv_table_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7405:3: lv_table_2_0= RULE_IDENT
            {
            lv_table_2_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleProcedureDefinition15660); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_table_2_0, grammarAccess.getProcedureDefinitionAccess().getTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getProcedureDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"table",
                      		lv_table_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_SEMICOLON_3=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleProcedureDefinition15676); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_3, grammarAccess.getProcedureDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleProcedureDefinition"


    // $ANTLR start "entryRuleFunctionDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7436:1: entryRuleFunctionDefinition returns [EObject current=null] : iv_ruleFunctionDefinition= ruleFunctionDefinition EOF ;
    public final EObject entryRuleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDefinition = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7440:2: (iv_ruleFunctionDefinition= ruleFunctionDefinition EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7441:2: iv_ruleFunctionDefinition= ruleFunctionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDefinitionRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleFunctionDefinition_in_entryRuleFunctionDefinition15721);
            iv_ruleFunctionDefinition=ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDefinition; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleFunctionDefinition15731); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDefinition"


    // $ANTLR start "ruleFunctionDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7451:1: ruleFunctionDefinition returns [EObject current=null] : (otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) ;
    public final EObject ruleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_table_2_0=null;
        Token this_SEMICOLON_3=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7455:28: ( (otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7456:1: (otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7456:1: (otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7456:3: otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON
            {
            otherlv_0=(Token)match(input,134,FollowSets001.FOLLOW_134_in_ruleFunctionDefinition15772); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7460:1: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7461:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7461:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7462:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleFunctionDefinition15789); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getFunctionDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFunctionDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7478:2: ( (lv_table_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7479:1: (lv_table_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7479:1: (lv_table_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7480:3: lv_table_2_0= RULE_IDENT
            {
            lv_table_2_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleFunctionDefinition15811); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_table_2_0, grammarAccess.getFunctionDefinitionAccess().getTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFunctionDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"table",
                      		lv_table_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_SEMICOLON_3=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleFunctionDefinition15827); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_3, grammarAccess.getFunctionDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleFunctionDefinition"


    // $ANTLR start "entryRuleMetaStatement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7511:1: entryRuleMetaStatement returns [EObject current=null] : iv_ruleMetaStatement= ruleMetaStatement EOF ;
    public final EObject entryRuleMetaStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetaStatement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7512:2: (iv_ruleMetaStatement= ruleMetaStatement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7513:2: iv_ruleMetaStatement= ruleMetaStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaStatementRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleMetaStatement_in_entryRuleMetaStatement15866);
            iv_ruleMetaStatement=ruleMetaStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaStatement; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleMetaStatement15876); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaStatement"


    // $ANTLR start "ruleMetaStatement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7520:1: ruleMetaStatement returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON ) ;
    public final EObject ruleMetaStatement() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_LPAREN_1=null;
        Token lv_type_2_0=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        Token this_EQUALS_6=null;
        Token this_SEMICOLON_8=null;
        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        EObject lv_statement_7_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7523:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7524:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7524:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7524:2: ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7524:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7525:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7525:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7526:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetaStatement15918); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getMetaStatementAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMetaStatementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleMetaStatement15934); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LPAREN_1, grammarAccess.getMetaStatementAccess().getLPARENTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7546:1: ( (lv_type_2_0= RULE_STATEMENT_TYPE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7547:1: (lv_type_2_0= RULE_STATEMENT_TYPE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7547:1: (lv_type_2_0= RULE_STATEMENT_TYPE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7548:3: lv_type_2_0= RULE_STATEMENT_TYPE
            {
            lv_type_2_0=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleMetaStatement15950); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_type_2_0, grammarAccess.getMetaStatementAccess().getTypeSTATEMENT_TYPETerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMetaStatementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"STATEMENT_TYPE");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7564:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==RULE_COMMA) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7564:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) )
            	    {
            	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleMetaStatement15967); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_3, grammarAccess.getMetaStatementAccess().getCOMMATerminalRuleCall_3_0()); 
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7568:1: ( (lv_modifiers_4_0= ruleStatementModifier ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7569:1: (lv_modifiers_4_0= ruleStatementModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7569:1: (lv_modifiers_4_0= ruleStatementModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7570:3: lv_modifiers_4_0= ruleStatementModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMetaStatementAccess().getModifiersStatementModifierParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleStatementModifier_in_ruleMetaStatement15987);
            	    lv_modifiers_4_0=ruleStatementModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMetaStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers",
            	              		lv_modifiers_4_0, 
            	              		"StatementModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);

            this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleMetaStatement16000); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RPAREN_5, grammarAccess.getMetaStatementAccess().getRPARENTerminalRuleCall_4()); 
                  
            }
            this_EQUALS_6=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleMetaStatement16010); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EQUALS_6, grammarAccess.getMetaStatementAccess().getEQUALSTerminalRuleCall_5()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7594:1: ( (lv_statement_7_0= ruleSql ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7595:1: (lv_statement_7_0= ruleSql )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7595:1: (lv_statement_7_0= ruleSql )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7596:3: lv_statement_7_0= ruleSql
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMetaStatementAccess().getStatementSqlParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets001.FOLLOW_ruleSql_in_ruleMetaStatement16030);
            lv_statement_7_0=ruleSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMetaStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_7_0, 
                      		"Sql");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_SEMICOLON_8=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleMetaStatement16041); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_8, grammarAccess.getMetaStatementAccess().getSEMICOLONTerminalRuleCall_7()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaStatement"


    // $ANTLR start "entryRuleSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7624:1: entryRuleSql returns [EObject current=null] : iv_ruleSql= ruleSql EOF ;
    public final EObject entryRuleSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7625:2: (iv_ruleSql= ruleSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7626:2: iv_ruleSql= ruleSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleSql_in_entryRuleSql16076);
            iv_ruleSql=ruleSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleSql16086); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSql"


    // $ANTLR start "ruleSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7633:1: ruleSql returns [EObject current=null] : ( (lv_sqls_0_0= ruleSqlFragment ) )+ ;
    public final EObject ruleSql() throws RecognitionException {
        EObject current = null;

        EObject lv_sqls_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7636:28: ( ( (lv_sqls_0_0= ruleSqlFragment ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7637:1: ( (lv_sqls_0_0= ruleSqlFragment ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7637:1: ( (lv_sqls_0_0= ruleSqlFragment ) )+
            int cnt250=0;
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( ((LA250_0>=RULE_WS && LA250_0<=RULE_MINUS)||(LA250_0>=RULE_REST && LA250_0<=RULE_OPTION_TYPE)) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7638:1: (lv_sqls_0_0= ruleSqlFragment )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7638:1: (lv_sqls_0_0= ruleSqlFragment )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7639:3: lv_sqls_0_0= ruleSqlFragment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSqlAccess().getSqlsSqlFragmentParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleSqlFragment_in_ruleSql16131);
            	    lv_sqls_0_0=ruleSqlFragment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSqlRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"sqls",
            	              		lv_sqls_0_0, 
            	              		"SqlFragment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt250 >= 1 ) break loop250;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(250, input);
                        throw eee;
                }
                cnt250++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSql"


    // $ANTLR start "entryRuleSqlFragment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7663:1: entryRuleSqlFragment returns [EObject current=null] : iv_ruleSqlFragment= ruleSqlFragment EOF ;
    public final EObject entryRuleSqlFragment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSqlFragment = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7664:2: (iv_ruleSqlFragment= ruleSqlFragment EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7665:2: iv_ruleSqlFragment= ruleSqlFragment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSqlFragmentRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleSqlFragment_in_entryRuleSqlFragment16167);
            iv_ruleSqlFragment=ruleSqlFragment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSqlFragment; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleSqlFragment16177); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSqlFragment"


    // $ANTLR start "ruleSqlFragment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7672:1: ruleSqlFragment returns [EObject current=null] : ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) ) ;
    public final EObject ruleSqlFragment() throws RecognitionException {
        EObject current = null;

        Token this_AT_1=null;
        Token this_STRING_3=null;
        Token this_COLON_5=null;
        Token this_STRING_7=null;
        Token this_STRING_8=null;
        Token this_COLON_10=null;
        Token this_COLON_11=null;
        Token this_LBRACE_13=null;
        Token this_RBRACE_15=null;
        Token this_PERCENT_16=null;
        Token this_PERCENT_17=null;
        AntlrDatatypeRuleToken lv_value_0_0 = null;

        EObject lv_col_2_0 = null;

        EObject lv_cnst_4_0 = null;

        EObject lv_ident_6_0 = null;

        EObject lv_cnstOper_9_0 = null;

        EObject lv_identOper_12_0 = null;

        EObject lv_meta_14_0 = null;

        EObject lv_dbtab_18_0 = null;

        EObject lv_dbcol_19_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7675:28: ( ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7676:1: ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7676:1: ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) )
            int alt252=8;
            alt252 = dfa252.predict(input);
            switch (alt252) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7676:2: ( (lv_value_0_0= ruleSqlValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7676:2: ( (lv_value_0_0= ruleSqlValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7677:1: (lv_value_0_0= ruleSqlValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7677:1: (lv_value_0_0= ruleSqlValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7678:3: lv_value_0_0= ruleSqlValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getValueSqlValueParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleSqlValue_in_ruleSqlFragment16223);
                    lv_value_0_0=ruleSqlValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_0_0, 
                              		"SqlValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7695:6: (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7695:6: (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7695:7: this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) )
                    {
                    this_AT_1=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_ruleSqlFragment16241); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AT_1, grammarAccess.getSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7699:1: ( (lv_col_2_0= ruleColumn ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7700:1: (lv_col_2_0= ruleColumn )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7700:1: (lv_col_2_0= ruleColumn )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7701:3: lv_col_2_0= ruleColumn
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleColumn_in_ruleSqlFragment16261);
                    lv_col_2_0=ruleColumn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"col",
                              		lv_col_2_0, 
                              		"Column");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7718:6: (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7718:6: (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7718:7: this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) )
                    {
                    this_STRING_3=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleSqlFragment16280); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_3, grammarAccess.getSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7722:1: ( (lv_cnst_4_0= ruleConstant ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7723:1: (lv_cnst_4_0= ruleConstant )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7723:1: (lv_cnst_4_0= ruleConstant )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7724:3: lv_cnst_4_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstant_in_ruleSqlFragment16300);
                    lv_cnst_4_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"cnst",
                              		lv_cnst_4_0, 
                              		"Constant");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7741:6: (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7741:6: (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7741:7: this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) )
                    {
                    this_COLON_5=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleSqlFragment16319); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_5, grammarAccess.getSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7745:1: ( (lv_ident_6_0= ruleIdentifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7746:1: (lv_ident_6_0= ruleIdentifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7746:1: (lv_ident_6_0= ruleIdentifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7747:3: lv_ident_6_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_ruleSqlFragment16339);
                    lv_ident_6_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"ident",
                              		lv_ident_6_0, 
                              		"Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7764:6: (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7764:6: (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7764:7: this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) )
                    {
                    this_STRING_7=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleSqlFragment16358); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_7, grammarAccess.getSqlFragmentAccess().getSTRINGTerminalRuleCall_4_0()); 
                          
                    }
                    this_STRING_8=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleSqlFragment16368); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_8, grammarAccess.getSqlFragmentAccess().getSTRINGTerminalRuleCall_4_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7772:1: ( (lv_cnstOper_9_0= ruleConstantOperator ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7773:1: (lv_cnstOper_9_0= ruleConstantOperator )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7773:1: (lv_cnstOper_9_0= ruleConstantOperator )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7774:3: lv_cnstOper_9_0= ruleConstantOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getCnstOperConstantOperatorParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstantOperator_in_ruleSqlFragment16388);
                    lv_cnstOper_9_0=ruleConstantOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"cnstOper",
                              		lv_cnstOper_9_0, 
                              		"ConstantOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7791:6: (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7791:6: (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7791:7: this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) )
                    {
                    this_COLON_10=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleSqlFragment16407); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_10, grammarAccess.getSqlFragmentAccess().getCOLONTerminalRuleCall_5_0()); 
                          
                    }
                    this_COLON_11=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleSqlFragment16417); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_11, grammarAccess.getSqlFragmentAccess().getCOLONTerminalRuleCall_5_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7799:1: ( (lv_identOper_12_0= ruleIdentifierOperator ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7800:1: (lv_identOper_12_0= ruleIdentifierOperator )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7800:1: (lv_identOper_12_0= ruleIdentifierOperator )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7801:3: lv_identOper_12_0= ruleIdentifierOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getIdentOperIdentifierOperatorParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifierOperator_in_ruleSqlFragment16437);
                    lv_identOper_12_0=ruleIdentifierOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identOper",
                              		lv_identOper_12_0, 
                              		"IdentifierOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7818:6: (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7818:6: (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7818:7: this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE
                    {
                    this_LBRACE_13=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_ruleSqlFragment16456); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LBRACE_13, grammarAccess.getSqlFragmentAccess().getLBRACETerminalRuleCall_6_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7822:1: ( (lv_meta_14_0= ruleMetaSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7823:1: (lv_meta_14_0= ruleMetaSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7823:1: (lv_meta_14_0= ruleMetaSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7824:3: lv_meta_14_0= ruleMetaSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getMetaMetaSqlParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleMetaSql_in_ruleSqlFragment16476);
                    lv_meta_14_0=ruleMetaSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"meta",
                              		lv_meta_14_0, 
                              		"MetaSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RBRACE_15=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_ruleSqlFragment16487); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RBRACE_15, grammarAccess.getSqlFragmentAccess().getRBRACETerminalRuleCall_6_2()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7845:6: (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7845:6: (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7845:7: this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) )
                    {
                    this_PERCENT_16=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleSqlFragment16505); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PERCENT_16, grammarAccess.getSqlFragmentAccess().getPERCENTTerminalRuleCall_7_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7849:1: ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) )
                    int alt251=2;
                    int LA251_0 = input.LA(1);

                    if ( (LA251_0==RULE_PERCENT) ) {
                        alt251=1;
                    }
                    else if ( (LA251_0==RULE_IDENT||LA251_0==RULE_IDENT_DOT) ) {
                        alt251=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 251, 0, input);

                        throw nvae;
                    }
                    switch (alt251) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7849:2: (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7849:2: (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7849:3: this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) )
                            {
                            this_PERCENT_17=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleSqlFragment16517); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PERCENT_17, grammarAccess.getSqlFragmentAccess().getPERCENTTerminalRuleCall_7_1_0_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7853:1: ( (lv_dbtab_18_0= ruleDatabaseTable ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7854:1: (lv_dbtab_18_0= ruleDatabaseTable )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7854:1: (lv_dbtab_18_0= ruleDatabaseTable )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7855:3: lv_dbtab_18_0= ruleDatabaseTable
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getDbtabDatabaseTableParserRuleCall_7_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets001.FOLLOW_ruleDatabaseTable_in_ruleSqlFragment16537);
                            lv_dbtab_18_0=ruleDatabaseTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbtab",
                                      		lv_dbtab_18_0, 
                                      		"DatabaseTable");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7872:6: ( (lv_dbcol_19_0= ruleDatabaseColumn ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7872:6: ( (lv_dbcol_19_0= ruleDatabaseColumn ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7873:1: (lv_dbcol_19_0= ruleDatabaseColumn )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7873:1: (lv_dbcol_19_0= ruleDatabaseColumn )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7874:3: lv_dbcol_19_0= ruleDatabaseColumn
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getDbcolDatabaseColumnParserRuleCall_7_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets001.FOLLOW_ruleDatabaseColumn_in_ruleSqlFragment16565);
                            lv_dbcol_19_0=ruleDatabaseColumn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbcol",
                                      		lv_dbcol_19_0, 
                                      		"DatabaseColumn");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSqlFragment"


    // $ANTLR start "entryRuleSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7898:1: entryRuleSqlValue returns [String current=null] : iv_ruleSqlValue= ruleSqlValue EOF ;
    public final String entryRuleSqlValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSqlValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7899:2: (iv_ruleSqlValue= ruleSqlValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7900:2: iv_ruleSqlValue= ruleSqlValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSqlValueRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleSqlValue_in_entryRuleSqlValue16604);
            iv_ruleSqlValue=ruleSqlValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSqlValue.getText(); 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleSqlValue16615); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSqlValue"


    // $ANTLR start "ruleSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7907:1: ruleSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )* ) ;
    public final AntlrDatatypeRuleToken ruleSqlValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_WS_4=null;
        Token this_COMMA_5=null;
        Token this_MINUS_6=null;
        Token this_PLUS_7=null;
        Token this_LPAREN_8=null;
        Token this_RPAREN_9=null;
        Token this_RBRACE_10=null;
        Token this_QUESTI_11=null;
        Token this_NOT_12=null;
        Token this_BAND_13=null;
        Token this_BOR_14=null;
        Token this_HASH_15=null;
        Token this_CARET_16=null;
        Token this_EQUALS_17=null;
        Token this_LESS_THAN_18=null;
        Token this_MORE_THAN_19=null;
        Token this_DOT_20=null;
        Token this_AND_21=null;
        Token this_OR_22=null;
        Token this_ESC_CHAR_23=null;
        Token this_ON_OFF_24=null;
        Token this_STATEMENT_TYPE_25=null;
        Token this_MAPPING_TYPE_26=null;
        Token this_OPTION_TYPE_27=null;
        Token this_REST_28=null;
        Token this_IDENT_DOT_29=null;
        Token this_IDENT_30=null;
        Token this_NUMBER_31=null;
        Token this_WS_32=null;
        Token this_COMMA_33=null;
        Token this_MINUS_34=null;
        Token this_PLUS_35=null;
        Token this_LPAREN_36=null;
        Token this_RPAREN_37=null;
        Token this_RBRACE_38=null;
        Token this_QUESTI_39=null;
        Token this_NOT_40=null;
        Token this_BAND_41=null;
        Token this_BOR_42=null;
        Token this_HASH_43=null;
        Token this_CARET_44=null;
        Token this_EQUALS_45=null;
        Token this_LESS_THAN_46=null;
        Token this_MORE_THAN_47=null;
        Token this_DOT_48=null;
        Token this_AND_49=null;
        Token this_OR_50=null;
        Token this_ESC_CHAR_51=null;
        Token this_ON_OFF_52=null;
        Token this_STATEMENT_TYPE_53=null;
        Token this_MAPPING_TYPE_54=null;
        Token this_OPTION_TYPE_55=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7910:28: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7911:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7911:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7911:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7911:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE )
            int alt253=28;
            switch ( input.LA(1) ) {
            case RULE_REST:
                {
                alt253=1;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt253=2;
                }
                break;
            case RULE_IDENT:
                {
                alt253=3;
                }
                break;
            case RULE_NUMBER:
                {
                alt253=4;
                }
                break;
            case RULE_WS:
                {
                alt253=5;
                }
                break;
            case RULE_COMMA:
                {
                alt253=6;
                }
                break;
            case RULE_MINUS:
                {
                alt253=7;
                }
                break;
            case RULE_PLUS:
                {
                alt253=8;
                }
                break;
            case RULE_LPAREN:
                {
                alt253=9;
                }
                break;
            case RULE_RPAREN:
                {
                alt253=10;
                }
                break;
            case RULE_RBRACE:
                {
                alt253=11;
                }
                break;
            case RULE_QUESTI:
                {
                alt253=12;
                }
                break;
            case RULE_NOT:
                {
                alt253=13;
                }
                break;
            case RULE_BAND:
                {
                alt253=14;
                }
                break;
            case RULE_BOR:
                {
                alt253=15;
                }
                break;
            case RULE_HASH:
                {
                alt253=16;
                }
                break;
            case RULE_CARET:
                {
                alt253=17;
                }
                break;
            case RULE_EQUALS:
                {
                alt253=18;
                }
                break;
            case RULE_LESS_THAN:
                {
                alt253=19;
                }
                break;
            case RULE_MORE_THAN:
                {
                alt253=20;
                }
                break;
            case RULE_DOT:
                {
                alt253=21;
                }
                break;
            case RULE_AND:
                {
                alt253=22;
                }
                break;
            case RULE_OR:
                {
                alt253=23;
                }
                break;
            case RULE_ESC_CHAR:
                {
                alt253=24;
                }
                break;
            case RULE_ON_OFF:
                {
                alt253=25;
                }
                break;
            case RULE_STATEMENT_TYPE:
                {
                alt253=26;
                }
                break;
            case RULE_MAPPING_TYPE:
                {
                alt253=27;
                }
                break;
            case RULE_OPTION_TYPE:
                {
                alt253=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }

            switch (alt253) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7911:7: this_REST_0= RULE_REST
                    {
                    this_REST_0=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleSqlValue16656); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_REST_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_REST_0, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7919:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                    {
                    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleSqlValue16682); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_DOT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_DOT_1, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7927:10: this_IDENT_2= RULE_IDENT
                    {
                    this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleSqlValue16708); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_2, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7935:10: this_NUMBER_3= RULE_NUMBER
                    {
                    this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleSqlValue16734); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_3, grammarAccess.getSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7943:10: this_WS_4= RULE_WS
                    {
                    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleSqlValue16760); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_WS_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_4, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_0_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7951:10: this_COMMA_5= RULE_COMMA
                    {
                    this_COMMA_5=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleSqlValue16786); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_COMMA_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_5, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_0_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7959:10: this_MINUS_6= RULE_MINUS
                    {
                    this_MINUS_6=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleSqlValue16812); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MINUS_6);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_6, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_0_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7967:10: this_PLUS_7= RULE_PLUS
                    {
                    this_PLUS_7=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleSqlValue16838); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PLUS_7);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_7, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_0_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7975:10: this_LPAREN_8= RULE_LPAREN
                    {
                    this_LPAREN_8=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleSqlValue16864); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LPAREN_8);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_8, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_0_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7983:10: this_RPAREN_9= RULE_RPAREN
                    {
                    this_RPAREN_9=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleSqlValue16890); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_RPAREN_9);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_9, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_0_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7991:10: this_RBRACE_10= RULE_RBRACE
                    {
                    this_RBRACE_10=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_ruleSqlValue16916); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_RBRACE_10);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RBRACE_10, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_0_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7999:10: this_QUESTI_11= RULE_QUESTI
                    {
                    this_QUESTI_11=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleSqlValue16942); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QUESTI_11);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_QUESTI_11, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8007:10: this_NOT_12= RULE_NOT
                    {
                    this_NOT_12=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleSqlValue16968); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NOT_12);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NOT_12, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8015:10: this_BAND_13= RULE_BAND
                    {
                    this_BAND_13=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleSqlValue16994); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BAND_13);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BAND_13, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8023:10: this_BOR_14= RULE_BOR
                    {
                    this_BOR_14=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleSqlValue17020); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOR_14);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOR_14, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_0_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8031:10: this_HASH_15= RULE_HASH
                    {
                    this_HASH_15=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleSqlValue17046); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HASH_15);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HASH_15, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_0_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8039:10: this_CARET_16= RULE_CARET
                    {
                    this_CARET_16=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleSqlValue17072); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CARET_16);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_CARET_16, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_0_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8047:10: this_EQUALS_17= RULE_EQUALS
                    {
                    this_EQUALS_17=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleSqlValue17098); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EQUALS_17);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_EQUALS_17, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_0_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8055:10: this_LESS_THAN_18= RULE_LESS_THAN
                    {
                    this_LESS_THAN_18=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleSqlValue17124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LESS_THAN_18);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LESS_THAN_18, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_0_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8063:10: this_MORE_THAN_19= RULE_MORE_THAN
                    {
                    this_MORE_THAN_19=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleSqlValue17150); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MORE_THAN_19);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MORE_THAN_19, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_0_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8071:10: this_DOT_20= RULE_DOT
                    {
                    this_DOT_20=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleSqlValue17176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DOT_20);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DOT_20, grammarAccess.getSqlValueAccess().getDOTTerminalRuleCall_0_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8079:10: this_AND_21= RULE_AND
                    {
                    this_AND_21=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleSqlValue17202); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AND_21);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AND_21, grammarAccess.getSqlValueAccess().getANDTerminalRuleCall_0_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8087:10: this_OR_22= RULE_OR
                    {
                    this_OR_22=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleSqlValue17228); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OR_22);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OR_22, grammarAccess.getSqlValueAccess().getORTerminalRuleCall_0_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8095:10: this_ESC_CHAR_23= RULE_ESC_CHAR
                    {
                    this_ESC_CHAR_23=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleSqlValue17254); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESC_CHAR_23);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ESC_CHAR_23, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_0_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8103:10: this_ON_OFF_24= RULE_ON_OFF
                    {
                    this_ON_OFF_24=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleSqlValue17280); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ON_OFF_24);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ON_OFF_24, grammarAccess.getSqlValueAccess().getON_OFFTerminalRuleCall_0_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8111:10: this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE
                    {
                    this_STATEMENT_TYPE_25=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleSqlValue17306); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STATEMENT_TYPE_25);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STATEMENT_TYPE_25, grammarAccess.getSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8119:10: this_MAPPING_TYPE_26= RULE_MAPPING_TYPE
                    {
                    this_MAPPING_TYPE_26=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleSqlValue17332); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MAPPING_TYPE_26);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MAPPING_TYPE_26, grammarAccess.getSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_26()); 
                          
                    }

                    }
                    break;
                case 28 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8127:10: this_OPTION_TYPE_27= RULE_OPTION_TYPE
                    {
                    this_OPTION_TYPE_27=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleSqlValue17358); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OPTION_TYPE_27);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OPTION_TYPE_27, grammarAccess.getSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_27()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8134:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )*
            loop255:
            do {
                int alt255=2;
                alt255 = dfa255.predict(input);
                switch (alt255) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8134:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8161:27: (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE )
            	    int alt254=28;
            	    switch ( input.LA(1) ) {
            	    case RULE_REST:
            	        {
            	        alt254=1;
            	        }
            	        break;
            	    case RULE_IDENT_DOT:
            	        {
            	        alt254=2;
            	        }
            	        break;
            	    case RULE_IDENT:
            	        {
            	        alt254=3;
            	        }
            	        break;
            	    case RULE_NUMBER:
            	        {
            	        alt254=4;
            	        }
            	        break;
            	    case RULE_WS:
            	        {
            	        alt254=5;
            	        }
            	        break;
            	    case RULE_COMMA:
            	        {
            	        alt254=6;
            	        }
            	        break;
            	    case RULE_MINUS:
            	        {
            	        alt254=7;
            	        }
            	        break;
            	    case RULE_PLUS:
            	        {
            	        alt254=8;
            	        }
            	        break;
            	    case RULE_LPAREN:
            	        {
            	        alt254=9;
            	        }
            	        break;
            	    case RULE_RPAREN:
            	        {
            	        alt254=10;
            	        }
            	        break;
            	    case RULE_RBRACE:
            	        {
            	        alt254=11;
            	        }
            	        break;
            	    case RULE_QUESTI:
            	        {
            	        alt254=12;
            	        }
            	        break;
            	    case RULE_NOT:
            	        {
            	        alt254=13;
            	        }
            	        break;
            	    case RULE_BAND:
            	        {
            	        alt254=14;
            	        }
            	        break;
            	    case RULE_BOR:
            	        {
            	        alt254=15;
            	        }
            	        break;
            	    case RULE_HASH:
            	        {
            	        alt254=16;
            	        }
            	        break;
            	    case RULE_CARET:
            	        {
            	        alt254=17;
            	        }
            	        break;
            	    case RULE_EQUALS:
            	        {
            	        alt254=18;
            	        }
            	        break;
            	    case RULE_LESS_THAN:
            	        {
            	        alt254=19;
            	        }
            	        break;
            	    case RULE_MORE_THAN:
            	        {
            	        alt254=20;
            	        }
            	        break;
            	    case RULE_DOT:
            	        {
            	        alt254=21;
            	        }
            	        break;
            	    case RULE_AND:
            	        {
            	        alt254=22;
            	        }
            	        break;
            	    case RULE_OR:
            	        {
            	        alt254=23;
            	        }
            	        break;
            	    case RULE_ESC_CHAR:
            	        {
            	        alt254=24;
            	        }
            	        break;
            	    case RULE_ON_OFF:
            	        {
            	        alt254=25;
            	        }
            	        break;
            	    case RULE_STATEMENT_TYPE:
            	        {
            	        alt254=26;
            	        }
            	        break;
            	    case RULE_MAPPING_TYPE:
            	        {
            	        alt254=27;
            	        }
            	        break;
            	    case RULE_OPTION_TYPE:
            	        {
            	        alt254=28;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 254, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt254) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8161:32: this_REST_28= RULE_REST
            	            {
            	            this_REST_28=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleSqlValue17604); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_REST_28);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_REST_28, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8169:10: this_IDENT_DOT_29= RULE_IDENT_DOT
            	            {
            	            this_IDENT_DOT_29=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleSqlValue17630); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_DOT_29);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_DOT_29, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8177:10: this_IDENT_30= RULE_IDENT
            	            {
            	            this_IDENT_30=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleSqlValue17656); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_30);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_30, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8185:10: this_NUMBER_31= RULE_NUMBER
            	            {
            	            this_NUMBER_31=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleSqlValue17682); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NUMBER_31);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NUMBER_31, grammarAccess.getSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8193:10: this_WS_32= RULE_WS
            	            {
            	            this_WS_32=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleSqlValue17708); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_WS_32);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_WS_32, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8201:10: this_COMMA_33= RULE_COMMA
            	            {
            	            this_COMMA_33=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleSqlValue17734); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_COMMA_33);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_COMMA_33, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_1_0_5()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8209:10: this_MINUS_34= RULE_MINUS
            	            {
            	            this_MINUS_34=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleSqlValue17760); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MINUS_34);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MINUS_34, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_1_0_6()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8217:10: this_PLUS_35= RULE_PLUS
            	            {
            	            this_PLUS_35=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleSqlValue17786); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_PLUS_35);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_PLUS_35, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_1_0_7()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8225:10: this_LPAREN_36= RULE_LPAREN
            	            {
            	            this_LPAREN_36=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleSqlValue17812); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LPAREN_36);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LPAREN_36, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_1_0_8()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8233:10: this_RPAREN_37= RULE_RPAREN
            	            {
            	            this_RPAREN_37=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleSqlValue17838); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_RPAREN_37);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_RPAREN_37, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_1_0_9()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8241:10: this_RBRACE_38= RULE_RBRACE
            	            {
            	            this_RBRACE_38=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_ruleSqlValue17864); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_RBRACE_38);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_RBRACE_38, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_1_0_10()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 12 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8249:10: this_QUESTI_39= RULE_QUESTI
            	            {
            	            this_QUESTI_39=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleSqlValue17890); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_QUESTI_39);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_QUESTI_39, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 13 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8257:10: this_NOT_40= RULE_NOT
            	            {
            	            this_NOT_40=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleSqlValue17916); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NOT_40);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NOT_40, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 14 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8265:10: this_BAND_41= RULE_BAND
            	            {
            	            this_BAND_41=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleSqlValue17942); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BAND_41);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BAND_41, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 15 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8273:10: this_BOR_42= RULE_BOR
            	            {
            	            this_BOR_42=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleSqlValue17968); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BOR_42);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BOR_42, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_1_0_14()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 16 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8281:10: this_HASH_43= RULE_HASH
            	            {
            	            this_HASH_43=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleSqlValue17994); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_HASH_43);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_HASH_43, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_1_0_15()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 17 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8289:10: this_CARET_44= RULE_CARET
            	            {
            	            this_CARET_44=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleSqlValue18020); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_CARET_44);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_CARET_44, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_1_0_16()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 18 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8297:10: this_EQUALS_45= RULE_EQUALS
            	            {
            	            this_EQUALS_45=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleSqlValue18046); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_EQUALS_45);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_EQUALS_45, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_1_0_17()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 19 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8305:10: this_LESS_THAN_46= RULE_LESS_THAN
            	            {
            	            this_LESS_THAN_46=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleSqlValue18072); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LESS_THAN_46);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LESS_THAN_46, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_18()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 20 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8313:10: this_MORE_THAN_47= RULE_MORE_THAN
            	            {
            	            this_MORE_THAN_47=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleSqlValue18098); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MORE_THAN_47);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MORE_THAN_47, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_19()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 21 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8321:10: this_DOT_48= RULE_DOT
            	            {
            	            this_DOT_48=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleSqlValue18124); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_DOT_48);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_DOT_48, grammarAccess.getSqlValueAccess().getDOTTerminalRuleCall_1_0_20()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 22 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8329:10: this_AND_49= RULE_AND
            	            {
            	            this_AND_49=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleSqlValue18150); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_AND_49);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AND_49, grammarAccess.getSqlValueAccess().getANDTerminalRuleCall_1_0_21()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 23 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8337:10: this_OR_50= RULE_OR
            	            {
            	            this_OR_50=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleSqlValue18176); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OR_50);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OR_50, grammarAccess.getSqlValueAccess().getORTerminalRuleCall_1_0_22()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 24 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8345:10: this_ESC_CHAR_51= RULE_ESC_CHAR
            	            {
            	            this_ESC_CHAR_51=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleSqlValue18202); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ESC_CHAR_51);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ESC_CHAR_51, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_23()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 25 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8353:10: this_ON_OFF_52= RULE_ON_OFF
            	            {
            	            this_ON_OFF_52=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleSqlValue18228); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ON_OFF_52);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ON_OFF_52, grammarAccess.getSqlValueAccess().getON_OFFTerminalRuleCall_1_0_24()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 26 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8361:10: this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE
            	            {
            	            this_STATEMENT_TYPE_53=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleSqlValue18254); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_STATEMENT_TYPE_53);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_STATEMENT_TYPE_53, grammarAccess.getSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_1_0_25()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 27 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8369:10: this_MAPPING_TYPE_54= RULE_MAPPING_TYPE
            	            {
            	            this_MAPPING_TYPE_54=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleSqlValue18280); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MAPPING_TYPE_54);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MAPPING_TYPE_54, grammarAccess.getSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_26()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 28 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8377:10: this_OPTION_TYPE_55= RULE_OPTION_TYPE
            	            {
            	            this_OPTION_TYPE_55=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleSqlValue18306); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OPTION_TYPE_55);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OPTION_TYPE_55, grammarAccess.getSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_27()); 
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop255;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSqlValue"


    // $ANTLR start "entryRuleMetaSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8392:1: entryRuleMetaSql returns [EObject current=null] : iv_ruleMetaSql= ruleMetaSql EOF ;
    public final EObject entryRuleMetaSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetaSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8393:2: (iv_ruleMetaSql= ruleMetaSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8394:2: iv_ruleMetaSql= ruleMetaSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleMetaSql_in_entryRuleMetaSql18354);
            iv_ruleMetaSql=ruleMetaSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleMetaSql18364); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaSql"


    // $ANTLR start "ruleMetaSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8401:1: ruleMetaSql returns [EObject current=null] : ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) | ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) ) | ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) ) ) ;
    public final EObject ruleMetaSql() throws RecognitionException {
        EObject current = null;

        Token this_WS_0=null;
        Token this_BOR_2=null;
        Token lv_type_4_0=null;
        Token this_BOR_6=null;
        Token this_BOR_8=null;
        Token lv_type_10_0=null;
        Token this_BOR_12=null;
        Token lv_type_14_0=null;
        Token this_BOR_16=null;
        Token lv_type_18_0=null;
        Token this_WS_19=null;
        Token lv_ftype_20_0=null;
        Token lv_type_22_0=null;
        Token this_NUMBER_23=null;
        EObject lv_ifs_1_0 = null;

        EObject lv_ifs_3_0 = null;

        EObject lv_cond_5_0 = null;

        EObject lv_ifs_7_0 = null;

        EObject lv_ifs_9_0 = null;

        EObject lv_ifs_11_0 = null;

        EObject lv_ifs_13_0 = null;

        EObject lv_ifs_15_0 = null;

        EObject lv_ifs_17_0 = null;

        EObject lv_ifs_21_0 = null;

        EObject lv_ord_24_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8404:28: ( ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) | ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) ) | ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8405:1: ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) | ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) ) | ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8405:1: ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) | ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) ) | ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) ) )
            int alt261=6;
            switch ( input.LA(1) ) {
            case RULE_WS:
                {
                alt261=1;
                }
                break;
            case RULE_QUESTI:
                {
                alt261=2;
                }
                break;
            case RULE_BAND:
                {
                alt261=3;
                }
                break;
            case RULE_BOR:
                {
                alt261=4;
                }
                break;
            case RULE_EQUALS:
                {
                alt261=5;
                }
                break;
            case RULE_HASH:
                {
                alt261=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;
            }

            switch (alt261) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8405:2: (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8405:2: (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8405:3: this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )*
                    {
                    this_WS_0=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetaSql18401); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_0, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8409:1: ( (lv_ifs_1_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8410:1: (lv_ifs_1_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8410:1: (lv_ifs_1_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8411:3: lv_ifs_1_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18421);
                    lv_ifs_1_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_1_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8427:2: (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )*
                    loop256:
                    do {
                        int alt256=2;
                        int LA256_0 = input.LA(1);

                        if ( (LA256_0==RULE_BOR) ) {
                            alt256=1;
                        }


                        switch (alt256) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8427:3: this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_2=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18433); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_2, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8431:1: ( (lv_ifs_3_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8432:1: (lv_ifs_3_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8432:1: (lv_ifs_3_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8433:3: lv_ifs_3_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18453);
                    	    lv_ifs_3_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_3_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop256;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8450:6: ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8450:6: ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8450:7: ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8450:7: ( (lv_type_4_0= RULE_QUESTI ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8451:1: (lv_type_4_0= RULE_QUESTI )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8451:1: (lv_type_4_0= RULE_QUESTI )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8452:3: lv_type_4_0= RULE_QUESTI
                    {
                    lv_type_4_0=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleMetaSql18480); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_4_0, grammarAccess.getMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_4_0, 
                              		"QUESTI");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8468:2: ( (lv_cond_5_0= ruleIfSqlCond ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8469:1: (lv_cond_5_0= ruleIfSqlCond )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8469:1: (lv_cond_5_0= ruleIfSqlCond )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8470:3: lv_cond_5_0= ruleIfSqlCond
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSqlCond_in_ruleMetaSql18506);
                    lv_cond_5_0=ruleIfSqlCond();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		set(
                             			current, 
                             			"cond",
                              		lv_cond_5_0, 
                              		"IfSqlCond");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_BOR_6=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18517); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOR_6, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8490:1: ( (lv_ifs_7_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8491:1: (lv_ifs_7_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8491:1: (lv_ifs_7_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8492:3: lv_ifs_7_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18537);
                    lv_ifs_7_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_7_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8508:2: (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )*
                    loop257:
                    do {
                        int alt257=2;
                        int LA257_0 = input.LA(1);

                        if ( (LA257_0==RULE_BOR) ) {
                            alt257=1;
                        }


                        switch (alt257) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8508:3: this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_8=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18549); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_8, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8512:1: ( (lv_ifs_9_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8513:1: (lv_ifs_9_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8513:1: (lv_ifs_9_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8514:3: lv_ifs_9_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18569);
                    	    lv_ifs_9_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_9_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop257;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8531:6: ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8531:6: ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8531:7: ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8531:7: ( (lv_type_10_0= RULE_BAND ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8532:1: (lv_type_10_0= RULE_BAND )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8532:1: (lv_type_10_0= RULE_BAND )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8533:3: lv_type_10_0= RULE_BAND
                    {
                    lv_type_10_0=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleMetaSql18596); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_10_0, grammarAccess.getMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_10_0, 
                              		"BAND");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8549:2: ( (lv_ifs_11_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8550:1: (lv_ifs_11_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8550:1: (lv_ifs_11_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8551:3: lv_ifs_11_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18622);
                    lv_ifs_11_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_11_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8567:2: (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )*
                    loop258:
                    do {
                        int alt258=2;
                        int LA258_0 = input.LA(1);

                        if ( (LA258_0==RULE_BOR) ) {
                            alt258=1;
                        }


                        switch (alt258) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8567:3: this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_12=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18634); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_12, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8571:1: ( (lv_ifs_13_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8572:1: (lv_ifs_13_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8572:1: (lv_ifs_13_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8573:3: lv_ifs_13_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18654);
                    	    lv_ifs_13_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_13_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop258;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8590:6: ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8590:6: ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8590:7: ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8590:7: ( (lv_type_14_0= RULE_BOR ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8591:1: (lv_type_14_0= RULE_BOR )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8591:1: (lv_type_14_0= RULE_BOR )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8592:3: lv_type_14_0= RULE_BOR
                    {
                    lv_type_14_0=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18681); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_14_0, grammarAccess.getMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_14_0, 
                              		"BOR");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8608:2: ( (lv_ifs_15_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8609:1: (lv_ifs_15_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8609:1: (lv_ifs_15_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8610:3: lv_ifs_15_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18707);
                    lv_ifs_15_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_15_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8626:2: (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )*
                    loop259:
                    do {
                        int alt259=2;
                        int LA259_0 = input.LA(1);

                        if ( (LA259_0==RULE_BOR) ) {
                            alt259=1;
                        }


                        switch (alt259) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8626:3: this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_16=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18719); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_16, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8630:1: ( (lv_ifs_17_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8631:1: (lv_ifs_17_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8631:1: (lv_ifs_17_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8632:3: lv_ifs_17_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18739);
                    	    lv_ifs_17_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_17_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop259;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8649:6: ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8649:6: ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8649:7: ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8649:7: ( (lv_type_18_0= RULE_EQUALS ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8650:1: (lv_type_18_0= RULE_EQUALS )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8650:1: (lv_type_18_0= RULE_EQUALS )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8651:3: lv_type_18_0= RULE_EQUALS
                    {
                    lv_type_18_0=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleMetaSql18766); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_18_0, grammarAccess.getMetaSqlAccess().getTypeEQUALSTerminalRuleCall_4_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_18_0, 
                              		"EQUALS");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8667:2: (this_WS_19= RULE_WS )*
                    loop260:
                    do {
                        int alt260=2;
                        int LA260_0 = input.LA(1);

                        if ( (LA260_0==RULE_WS) ) {
                            alt260=1;
                        }


                        switch (alt260) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8667:3: this_WS_19= RULE_WS
                    	    {
                    	    this_WS_19=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetaSql18783); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_19, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop260;
                        }
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8671:3: ( (lv_ftype_20_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8672:1: (lv_ftype_20_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8672:1: (lv_ftype_20_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8673:3: lv_ftype_20_0= RULE_IDENT
                    {
                    lv_ftype_20_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetaSql18801); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_ftype_20_0, grammarAccess.getMetaSqlAccess().getFtypeIDENTTerminalRuleCall_4_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"ftype",
                              		lv_ftype_20_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8689:2: ( (lv_ifs_21_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8690:1: (lv_ifs_21_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8690:1: (lv_ifs_21_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8691:3: lv_ifs_21_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_4_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18827);
                    lv_ifs_21_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_21_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8708:6: ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8708:6: ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8708:7: ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8708:7: ( (lv_type_22_0= RULE_HASH ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8709:1: (lv_type_22_0= RULE_HASH )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8709:1: (lv_type_22_0= RULE_HASH )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8710:3: lv_type_22_0= RULE_HASH
                    {
                    lv_type_22_0=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleMetaSql18852); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_22_0, grammarAccess.getMetaSqlAccess().getTypeHASHTerminalRuleCall_5_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_22_0, 
                              		"HASH");
                      	    
                    }

                    }


                    }

                    this_NUMBER_23=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleMetaSql18868); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_23, grammarAccess.getMetaSqlAccess().getNUMBERTerminalRuleCall_5_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8730:1: ( (lv_ord_24_0= ruleOrdSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8731:1: (lv_ord_24_0= ruleOrdSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8731:1: (lv_ord_24_0= ruleOrdSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8732:3: lv_ord_24_0= ruleOrdSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getOrdOrdSqlParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleOrdSql_in_ruleMetaSql18888);
                    lv_ord_24_0=ruleOrdSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		set(
                             			current, 
                             			"ord",
                              		lv_ord_24_0, 
                              		"OrdSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaSql"


    // $ANTLR start "entryRuleIfSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8756:1: entryRuleIfSql returns [EObject current=null] : iv_ruleIfSql= ruleIfSql EOF ;
    public final EObject entryRuleIfSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8757:2: (iv_ruleIfSql= ruleIfSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8758:2: iv_ruleIfSql= ruleIfSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_entryRuleIfSql18925);
            iv_ruleIfSql=ruleIfSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSql18935); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSql"


    // $ANTLR start "ruleIfSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8765:1: ruleIfSql returns [EObject current=null] : ( (lv_sqls_0_0= ruleIfSqlFragment ) )+ ;
    public final EObject ruleIfSql() throws RecognitionException {
        EObject current = null;

        EObject lv_sqls_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8768:28: ( ( (lv_sqls_0_0= ruleIfSqlFragment ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8769:1: ( (lv_sqls_0_0= ruleIfSqlFragment ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8769:1: ( (lv_sqls_0_0= ruleIfSqlFragment ) )+
            int cnt262=0;
            loop262:
            do {
                int alt262=2;
                int LA262_0 = input.LA(1);

                if ( ((LA262_0>=RULE_WS && LA262_0<=RULE_LBRACE)||(LA262_0>=RULE_QUESTI && LA262_0<=RULE_BAND)||(LA262_0>=RULE_HASH && LA262_0<=RULE_OPTION_TYPE)) ) {
                    alt262=1;
                }


                switch (alt262) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8770:1: (lv_sqls_0_0= ruleIfSqlFragment )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8770:1: (lv_sqls_0_0= ruleIfSqlFragment )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8771:3: lv_sqls_0_0= ruleIfSqlFragment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIfSqlAccess().getSqlsIfSqlFragmentParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleIfSqlFragment_in_ruleIfSql18980);
            	    lv_sqls_0_0=ruleIfSqlFragment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfSqlRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"sqls",
            	              		lv_sqls_0_0, 
            	              		"IfSqlFragment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt262 >= 1 ) break loop262;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(262, input);
                        throw eee;
                }
                cnt262++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSql"


    // $ANTLR start "entryRuleIfSqlFragment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8795:1: entryRuleIfSqlFragment returns [EObject current=null] : iv_ruleIfSqlFragment= ruleIfSqlFragment EOF ;
    public final EObject entryRuleIfSqlFragment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfSqlFragment = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8796:2: (iv_ruleIfSqlFragment= ruleIfSqlFragment EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8797:2: iv_ruleIfSqlFragment= ruleIfSqlFragment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlFragmentRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlFragment_in_entryRuleIfSqlFragment19016);
            iv_ruleIfSqlFragment=ruleIfSqlFragment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSqlFragment; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSqlFragment19026); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSqlFragment"


    // $ANTLR start "ruleIfSqlFragment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8804:1: ruleIfSqlFragment returns [EObject current=null] : ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) ) ;
    public final EObject ruleIfSqlFragment() throws RecognitionException {
        EObject current = null;

        Token this_AT_1=null;
        Token this_STRING_3=null;
        Token this_COLON_5=null;
        Token this_STRING_7=null;
        Token this_STRING_8=null;
        Token this_COLON_10=null;
        Token this_COLON_11=null;
        Token this_PERCENT_13=null;
        Token this_PERCENT_14=null;
        Token this_LBRACE_17=null;
        Token this_RBRACE_19=null;
        AntlrDatatypeRuleToken lv_value_0_0 = null;

        EObject lv_col_2_0 = null;

        EObject lv_cnst_4_0 = null;

        EObject lv_ident_6_0 = null;

        EObject lv_cnstOper_9_0 = null;

        EObject lv_identOper_12_0 = null;

        EObject lv_dbtab_15_0 = null;

        EObject lv_dbcol_16_0 = null;

        EObject lv_meta_18_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8807:28: ( ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8808:1: ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8808:1: ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) )
            int alt264=8;
            alt264 = dfa264.predict(input);
            switch (alt264) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8808:2: ( (lv_value_0_0= ruleIfSqlValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8808:2: ( (lv_value_0_0= ruleIfSqlValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8809:1: (lv_value_0_0= ruleIfSqlValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8809:1: (lv_value_0_0= ruleIfSqlValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8810:3: lv_value_0_0= ruleIfSqlValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getValueIfSqlValueParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSqlValue_in_ruleIfSqlFragment19072);
                    lv_value_0_0=ruleIfSqlValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_0_0, 
                              		"IfSqlValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8827:6: (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8827:6: (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8827:7: this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) )
                    {
                    this_AT_1=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_ruleIfSqlFragment19090); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AT_1, grammarAccess.getIfSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8831:1: ( (lv_col_2_0= ruleColumn ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8832:1: (lv_col_2_0= ruleColumn )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8832:1: (lv_col_2_0= ruleColumn )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8833:3: lv_col_2_0= ruleColumn
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleColumn_in_ruleIfSqlFragment19110);
                    lv_col_2_0=ruleColumn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"col",
                              		lv_col_2_0, 
                              		"Column");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8850:6: (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8850:6: (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8850:7: this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) )
                    {
                    this_STRING_3=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleIfSqlFragment19129); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_3, grammarAccess.getIfSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8854:1: ( (lv_cnst_4_0= ruleConstant ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8855:1: (lv_cnst_4_0= ruleConstant )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8855:1: (lv_cnst_4_0= ruleConstant )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8856:3: lv_cnst_4_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstant_in_ruleIfSqlFragment19149);
                    lv_cnst_4_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"cnst",
                              		lv_cnst_4_0, 
                              		"Constant");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8873:6: (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8873:6: (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8873:7: this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) )
                    {
                    this_COLON_5=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleIfSqlFragment19168); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_5, grammarAccess.getIfSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8877:1: ( (lv_ident_6_0= ruleIdentifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8878:1: (lv_ident_6_0= ruleIdentifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8878:1: (lv_ident_6_0= ruleIdentifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8879:3: lv_ident_6_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_ruleIfSqlFragment19188);
                    lv_ident_6_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"ident",
                              		lv_ident_6_0, 
                              		"Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8896:6: (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8896:6: (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8896:7: this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) )
                    {
                    this_STRING_7=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleIfSqlFragment19207); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_7, grammarAccess.getIfSqlFragmentAccess().getSTRINGTerminalRuleCall_4_0()); 
                          
                    }
                    this_STRING_8=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleIfSqlFragment19217); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_8, grammarAccess.getIfSqlFragmentAccess().getSTRINGTerminalRuleCall_4_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8904:1: ( (lv_cnstOper_9_0= ruleConstantOperator ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8905:1: (lv_cnstOper_9_0= ruleConstantOperator )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8905:1: (lv_cnstOper_9_0= ruleConstantOperator )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8906:3: lv_cnstOper_9_0= ruleConstantOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getCnstOperConstantOperatorParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstantOperator_in_ruleIfSqlFragment19237);
                    lv_cnstOper_9_0=ruleConstantOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"cnstOper",
                              		lv_cnstOper_9_0, 
                              		"ConstantOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8923:6: (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8923:6: (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8923:7: this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) )
                    {
                    this_COLON_10=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleIfSqlFragment19256); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_10, grammarAccess.getIfSqlFragmentAccess().getCOLONTerminalRuleCall_5_0()); 
                          
                    }
                    this_COLON_11=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleIfSqlFragment19266); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_11, grammarAccess.getIfSqlFragmentAccess().getCOLONTerminalRuleCall_5_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8931:1: ( (lv_identOper_12_0= ruleIdentifierOperator ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8932:1: (lv_identOper_12_0= ruleIdentifierOperator )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8932:1: (lv_identOper_12_0= ruleIdentifierOperator )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8933:3: lv_identOper_12_0= ruleIdentifierOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getIdentOperIdentifierOperatorParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifierOperator_in_ruleIfSqlFragment19286);
                    lv_identOper_12_0=ruleIdentifierOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identOper",
                              		lv_identOper_12_0, 
                              		"IdentifierOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8950:6: (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8950:6: (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8950:7: this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) )
                    {
                    this_PERCENT_13=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleIfSqlFragment19305); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PERCENT_13, grammarAccess.getIfSqlFragmentAccess().getPERCENTTerminalRuleCall_6_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8954:1: ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) )
                    int alt263=2;
                    int LA263_0 = input.LA(1);

                    if ( (LA263_0==RULE_PERCENT) ) {
                        alt263=1;
                    }
                    else if ( (LA263_0==RULE_IDENT||LA263_0==RULE_IDENT_DOT) ) {
                        alt263=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 263, 0, input);

                        throw nvae;
                    }
                    switch (alt263) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8954:2: (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8954:2: (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8954:3: this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) )
                            {
                            this_PERCENT_14=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleIfSqlFragment19317); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PERCENT_14, grammarAccess.getIfSqlFragmentAccess().getPERCENTTerminalRuleCall_6_1_0_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8958:1: ( (lv_dbtab_15_0= ruleDatabaseTable ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8959:1: (lv_dbtab_15_0= ruleDatabaseTable )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8959:1: (lv_dbtab_15_0= ruleDatabaseTable )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8960:3: lv_dbtab_15_0= ruleDatabaseTable
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getDbtabDatabaseTableParserRuleCall_6_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets001.FOLLOW_ruleDatabaseTable_in_ruleIfSqlFragment19337);
                            lv_dbtab_15_0=ruleDatabaseTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbtab",
                                      		lv_dbtab_15_0, 
                                      		"DatabaseTable");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8977:6: ( (lv_dbcol_16_0= ruleDatabaseColumn ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8977:6: ( (lv_dbcol_16_0= ruleDatabaseColumn ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8978:1: (lv_dbcol_16_0= ruleDatabaseColumn )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8978:1: (lv_dbcol_16_0= ruleDatabaseColumn )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8979:3: lv_dbcol_16_0= ruleDatabaseColumn
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getDbcolDatabaseColumnParserRuleCall_6_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets001.FOLLOW_ruleDatabaseColumn_in_ruleIfSqlFragment19365);
                            lv_dbcol_16_0=ruleDatabaseColumn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbcol",
                                      		lv_dbcol_16_0, 
                                      		"DatabaseColumn");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8996:6: (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8996:6: (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8996:7: this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE
                    {
                    this_LBRACE_17=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_ruleIfSqlFragment19385); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LBRACE_17, grammarAccess.getIfSqlFragmentAccess().getLBRACETerminalRuleCall_7_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9000:1: ( (lv_meta_18_0= ruleIfMetaSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9001:1: (lv_meta_18_0= ruleIfMetaSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9001:1: (lv_meta_18_0= ruleIfMetaSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9002:3: lv_meta_18_0= ruleIfMetaSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getMetaIfMetaSqlParserRuleCall_7_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfMetaSql_in_ruleIfSqlFragment19405);
                    lv_meta_18_0=ruleIfMetaSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"meta",
                              		lv_meta_18_0, 
                              		"IfMetaSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RBRACE_19=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_ruleIfSqlFragment19416); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RBRACE_19, grammarAccess.getIfSqlFragmentAccess().getRBRACETerminalRuleCall_7_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSqlFragment"


    // $ANTLR start "entryRuleIfSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9030:1: entryRuleIfSqlValue returns [String current=null] : iv_ruleIfSqlValue= ruleIfSqlValue EOF ;
    public final String entryRuleIfSqlValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIfSqlValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9031:2: (iv_ruleIfSqlValue= ruleIfSqlValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9032:2: iv_ruleIfSqlValue= ruleIfSqlValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlValueRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlValue_in_entryRuleIfSqlValue19453);
            iv_ruleIfSqlValue=ruleIfSqlValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSqlValue.getText(); 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSqlValue19464); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSqlValue"


    // $ANTLR start "ruleIfSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9039:1: ruleIfSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )* ) ;
    public final AntlrDatatypeRuleToken ruleIfSqlValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_WS_4=null;
        Token this_SEMICOLON_5=null;
        Token this_COMMA_6=null;
        Token this_MINUS_7=null;
        Token this_PLUS_8=null;
        Token this_LPAREN_9=null;
        Token this_RPAREN_10=null;
        Token this_QUESTI_11=null;
        Token this_NOT_12=null;
        Token this_BAND_13=null;
        Token this_HASH_14=null;
        Token this_CARET_15=null;
        Token this_EQUALS_16=null;
        Token this_LESS_THAN_17=null;
        Token this_MORE_THAN_18=null;
        Token this_DOT_19=null;
        Token this_AND_20=null;
        Token this_OR_21=null;
        Token this_ESC_CHAR_22=null;
        Token this_ON_OFF_23=null;
        Token this_STATEMENT_TYPE_24=null;
        Token this_MAPPING_TYPE_25=null;
        Token this_OPTION_TYPE_26=null;
        Token this_REST_27=null;
        Token this_IDENT_DOT_28=null;
        Token this_IDENT_29=null;
        Token this_NUMBER_30=null;
        Token this_WS_31=null;
        Token this_SEMICOLON_32=null;
        Token this_COMMA_33=null;
        Token this_MINUS_34=null;
        Token this_PLUS_35=null;
        Token this_LPAREN_36=null;
        Token this_RPAREN_37=null;
        Token this_QUESTI_38=null;
        Token this_NOT_39=null;
        Token this_BAND_40=null;
        Token this_HASH_41=null;
        Token this_CARET_42=null;
        Token this_EQUALS_43=null;
        Token this_LESS_THAN_44=null;
        Token this_MORE_THAN_45=null;
        Token this_DOT_46=null;
        Token this_AND_47=null;
        Token this_OR_48=null;
        Token this_ESC_CHAR_49=null;
        Token this_ON_OFF_50=null;
        Token this_STATEMENT_TYPE_51=null;
        Token this_MAPPING_TYPE_52=null;
        Token this_OPTION_TYPE_53=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9042:28: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9043:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9043:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9043:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9043:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE )
            int alt265=27;
            switch ( input.LA(1) ) {
            case RULE_REST:
                {
                alt265=1;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt265=2;
                }
                break;
            case RULE_IDENT:
                {
                alt265=3;
                }
                break;
            case RULE_NUMBER:
                {
                alt265=4;
                }
                break;
            case RULE_WS:
                {
                alt265=5;
                }
                break;
            case RULE_SEMICOLON:
                {
                alt265=6;
                }
                break;
            case RULE_COMMA:
                {
                alt265=7;
                }
                break;
            case RULE_MINUS:
                {
                alt265=8;
                }
                break;
            case RULE_PLUS:
                {
                alt265=9;
                }
                break;
            case RULE_LPAREN:
                {
                alt265=10;
                }
                break;
            case RULE_RPAREN:
                {
                alt265=11;
                }
                break;
            case RULE_QUESTI:
                {
                alt265=12;
                }
                break;
            case RULE_NOT:
                {
                alt265=13;
                }
                break;
            case RULE_BAND:
                {
                alt265=14;
                }
                break;
            case RULE_HASH:
                {
                alt265=15;
                }
                break;
            case RULE_CARET:
                {
                alt265=16;
                }
                break;
            case RULE_EQUALS:
                {
                alt265=17;
                }
                break;
            case RULE_LESS_THAN:
                {
                alt265=18;
                }
                break;
            case RULE_MORE_THAN:
                {
                alt265=19;
                }
                break;
            case RULE_DOT:
                {
                alt265=20;
                }
                break;
            case RULE_AND:
                {
                alt265=21;
                }
                break;
            case RULE_OR:
                {
                alt265=22;
                }
                break;
            case RULE_ESC_CHAR:
                {
                alt265=23;
                }
                break;
            case RULE_ON_OFF:
                {
                alt265=24;
                }
                break;
            case RULE_STATEMENT_TYPE:
                {
                alt265=25;
                }
                break;
            case RULE_MAPPING_TYPE:
                {
                alt265=26;
                }
                break;
            case RULE_OPTION_TYPE:
                {
                alt265=27;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 265, 0, input);

                throw nvae;
            }

            switch (alt265) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9043:7: this_REST_0= RULE_REST
                    {
                    this_REST_0=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleIfSqlValue19505); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_REST_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_REST_0, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9051:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                    {
                    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleIfSqlValue19531); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_DOT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_DOT_1, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9059:10: this_IDENT_2= RULE_IDENT
                    {
                    this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleIfSqlValue19557); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_2, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9067:10: this_NUMBER_3= RULE_NUMBER
                    {
                    this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleIfSqlValue19583); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_3, grammarAccess.getIfSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9075:10: this_WS_4= RULE_WS
                    {
                    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlValue19609); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_WS_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_4, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_0_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9083:10: this_SEMICOLON_5= RULE_SEMICOLON
                    {
                    this_SEMICOLON_5=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleIfSqlValue19635); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SEMICOLON_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_SEMICOLON_5, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9091:10: this_COMMA_6= RULE_COMMA
                    {
                    this_COMMA_6=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleIfSqlValue19661); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_COMMA_6);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_6, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9099:10: this_MINUS_7= RULE_MINUS
                    {
                    this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleIfSqlValue19687); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MINUS_7);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_7, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9107:10: this_PLUS_8= RULE_PLUS
                    {
                    this_PLUS_8=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleIfSqlValue19713); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PLUS_8);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_8, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9115:10: this_LPAREN_9= RULE_LPAREN
                    {
                    this_LPAREN_9=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleIfSqlValue19739); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LPAREN_9);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_9, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9123:10: this_RPAREN_10= RULE_RPAREN
                    {
                    this_RPAREN_10=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleIfSqlValue19765); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_RPAREN_10);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_10, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9131:10: this_QUESTI_11= RULE_QUESTI
                    {
                    this_QUESTI_11=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleIfSqlValue19791); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QUESTI_11);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_QUESTI_11, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9139:10: this_NOT_12= RULE_NOT
                    {
                    this_NOT_12=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlValue19817); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NOT_12);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NOT_12, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9147:10: this_BAND_13= RULE_BAND
                    {
                    this_BAND_13=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleIfSqlValue19843); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BAND_13);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BAND_13, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9155:10: this_HASH_14= RULE_HASH
                    {
                    this_HASH_14=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleIfSqlValue19869); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HASH_14);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HASH_14, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_0_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9163:10: this_CARET_15= RULE_CARET
                    {
                    this_CARET_15=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleIfSqlValue19895); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CARET_15);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_CARET_15, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_0_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9171:10: this_EQUALS_16= RULE_EQUALS
                    {
                    this_EQUALS_16=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleIfSqlValue19921); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EQUALS_16);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_EQUALS_16, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_0_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9179:10: this_LESS_THAN_17= RULE_LESS_THAN
                    {
                    this_LESS_THAN_17=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleIfSqlValue19947); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LESS_THAN_17);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LESS_THAN_17, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_0_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9187:10: this_MORE_THAN_18= RULE_MORE_THAN
                    {
                    this_MORE_THAN_18=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleIfSqlValue19973); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MORE_THAN_18);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MORE_THAN_18, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_0_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9195:10: this_DOT_19= RULE_DOT
                    {
                    this_DOT_19=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleIfSqlValue19999); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DOT_19);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DOT_19, grammarAccess.getIfSqlValueAccess().getDOTTerminalRuleCall_0_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9203:10: this_AND_20= RULE_AND
                    {
                    this_AND_20=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleIfSqlValue20025); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AND_20);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AND_20, grammarAccess.getIfSqlValueAccess().getANDTerminalRuleCall_0_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9211:10: this_OR_21= RULE_OR
                    {
                    this_OR_21=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleIfSqlValue20051); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OR_21);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OR_21, grammarAccess.getIfSqlValueAccess().getORTerminalRuleCall_0_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9219:10: this_ESC_CHAR_22= RULE_ESC_CHAR
                    {
                    this_ESC_CHAR_22=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleIfSqlValue20077); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESC_CHAR_22);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ESC_CHAR_22, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_0_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9227:10: this_ON_OFF_23= RULE_ON_OFF
                    {
                    this_ON_OFF_23=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleIfSqlValue20103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ON_OFF_23);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ON_OFF_23, grammarAccess.getIfSqlValueAccess().getON_OFFTerminalRuleCall_0_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9235:10: this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE
                    {
                    this_STATEMENT_TYPE_24=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleIfSqlValue20129); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STATEMENT_TYPE_24);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STATEMENT_TYPE_24, grammarAccess.getIfSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9243:10: this_MAPPING_TYPE_25= RULE_MAPPING_TYPE
                    {
                    this_MAPPING_TYPE_25=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleIfSqlValue20155); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MAPPING_TYPE_25);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MAPPING_TYPE_25, grammarAccess.getIfSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9251:10: this_OPTION_TYPE_26= RULE_OPTION_TYPE
                    {
                    this_OPTION_TYPE_26=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleIfSqlValue20181); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OPTION_TYPE_26);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OPTION_TYPE_26, grammarAccess.getIfSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_26()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9258:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )*
            loop267:
            do {
                int alt267=2;
                alt267 = dfa267.predict(input);
                switch (alt267) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9258:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9284:27: (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE )
            	    int alt266=27;
            	    switch ( input.LA(1) ) {
            	    case RULE_REST:
            	        {
            	        alt266=1;
            	        }
            	        break;
            	    case RULE_IDENT_DOT:
            	        {
            	        alt266=2;
            	        }
            	        break;
            	    case RULE_IDENT:
            	        {
            	        alt266=3;
            	        }
            	        break;
            	    case RULE_NUMBER:
            	        {
            	        alt266=4;
            	        }
            	        break;
            	    case RULE_WS:
            	        {
            	        alt266=5;
            	        }
            	        break;
            	    case RULE_SEMICOLON:
            	        {
            	        alt266=6;
            	        }
            	        break;
            	    case RULE_COMMA:
            	        {
            	        alt266=7;
            	        }
            	        break;
            	    case RULE_MINUS:
            	        {
            	        alt266=8;
            	        }
            	        break;
            	    case RULE_PLUS:
            	        {
            	        alt266=9;
            	        }
            	        break;
            	    case RULE_LPAREN:
            	        {
            	        alt266=10;
            	        }
            	        break;
            	    case RULE_RPAREN:
            	        {
            	        alt266=11;
            	        }
            	        break;
            	    case RULE_QUESTI:
            	        {
            	        alt266=12;
            	        }
            	        break;
            	    case RULE_NOT:
            	        {
            	        alt266=13;
            	        }
            	        break;
            	    case RULE_BAND:
            	        {
            	        alt266=14;
            	        }
            	        break;
            	    case RULE_HASH:
            	        {
            	        alt266=15;
            	        }
            	        break;
            	    case RULE_CARET:
            	        {
            	        alt266=16;
            	        }
            	        break;
            	    case RULE_EQUALS:
            	        {
            	        alt266=17;
            	        }
            	        break;
            	    case RULE_LESS_THAN:
            	        {
            	        alt266=18;
            	        }
            	        break;
            	    case RULE_MORE_THAN:
            	        {
            	        alt266=19;
            	        }
            	        break;
            	    case RULE_DOT:
            	        {
            	        alt266=20;
            	        }
            	        break;
            	    case RULE_AND:
            	        {
            	        alt266=21;
            	        }
            	        break;
            	    case RULE_OR:
            	        {
            	        alt266=22;
            	        }
            	        break;
            	    case RULE_ESC_CHAR:
            	        {
            	        alt266=23;
            	        }
            	        break;
            	    case RULE_ON_OFF:
            	        {
            	        alt266=24;
            	        }
            	        break;
            	    case RULE_STATEMENT_TYPE:
            	        {
            	        alt266=25;
            	        }
            	        break;
            	    case RULE_MAPPING_TYPE:
            	        {
            	        alt266=26;
            	        }
            	        break;
            	    case RULE_OPTION_TYPE:
            	        {
            	        alt266=27;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 266, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt266) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9284:32: this_REST_27= RULE_REST
            	            {
            	            this_REST_27=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleIfSqlValue20419); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_REST_27);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_REST_27, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9292:10: this_IDENT_DOT_28= RULE_IDENT_DOT
            	            {
            	            this_IDENT_DOT_28=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleIfSqlValue20445); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_DOT_28);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_DOT_28, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9300:10: this_IDENT_29= RULE_IDENT
            	            {
            	            this_IDENT_29=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleIfSqlValue20471); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_29);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_29, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9308:10: this_NUMBER_30= RULE_NUMBER
            	            {
            	            this_NUMBER_30=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleIfSqlValue20497); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NUMBER_30);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NUMBER_30, grammarAccess.getIfSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9316:10: this_WS_31= RULE_WS
            	            {
            	            this_WS_31=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlValue20523); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_WS_31);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_WS_31, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9324:10: this_SEMICOLON_32= RULE_SEMICOLON
            	            {
            	            this_SEMICOLON_32=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleIfSqlValue20549); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_SEMICOLON_32);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_SEMICOLON_32, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9332:10: this_COMMA_33= RULE_COMMA
            	            {
            	            this_COMMA_33=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleIfSqlValue20575); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_COMMA_33);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_COMMA_33, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9340:10: this_MINUS_34= RULE_MINUS
            	            {
            	            this_MINUS_34=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleIfSqlValue20601); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MINUS_34);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MINUS_34, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9348:10: this_PLUS_35= RULE_PLUS
            	            {
            	            this_PLUS_35=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleIfSqlValue20627); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_PLUS_35);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_PLUS_35, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9356:10: this_LPAREN_36= RULE_LPAREN
            	            {
            	            this_LPAREN_36=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleIfSqlValue20653); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LPAREN_36);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LPAREN_36, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9364:10: this_RPAREN_37= RULE_RPAREN
            	            {
            	            this_RPAREN_37=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleIfSqlValue20679); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_RPAREN_37);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_RPAREN_37, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 12 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9372:10: this_QUESTI_38= RULE_QUESTI
            	            {
            	            this_QUESTI_38=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleIfSqlValue20705); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_QUESTI_38);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_QUESTI_38, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 13 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9380:10: this_NOT_39= RULE_NOT
            	            {
            	            this_NOT_39=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlValue20731); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NOT_39);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NOT_39, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 14 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9388:10: this_BAND_40= RULE_BAND
            	            {
            	            this_BAND_40=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleIfSqlValue20757); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BAND_40);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BAND_40, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 15 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9396:10: this_HASH_41= RULE_HASH
            	            {
            	            this_HASH_41=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleIfSqlValue20783); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_HASH_41);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_HASH_41, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_1_0_14()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 16 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9404:10: this_CARET_42= RULE_CARET
            	            {
            	            this_CARET_42=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleIfSqlValue20809); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_CARET_42);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_CARET_42, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_1_0_15()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 17 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9412:10: this_EQUALS_43= RULE_EQUALS
            	            {
            	            this_EQUALS_43=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleIfSqlValue20835); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_EQUALS_43);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_EQUALS_43, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_1_0_16()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 18 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9420:10: this_LESS_THAN_44= RULE_LESS_THAN
            	            {
            	            this_LESS_THAN_44=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleIfSqlValue20861); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LESS_THAN_44);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LESS_THAN_44, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_17()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 19 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9428:10: this_MORE_THAN_45= RULE_MORE_THAN
            	            {
            	            this_MORE_THAN_45=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleIfSqlValue20887); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MORE_THAN_45);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MORE_THAN_45, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_18()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 20 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9436:10: this_DOT_46= RULE_DOT
            	            {
            	            this_DOT_46=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleIfSqlValue20913); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_DOT_46);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_DOT_46, grammarAccess.getIfSqlValueAccess().getDOTTerminalRuleCall_1_0_19()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 21 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9444:10: this_AND_47= RULE_AND
            	            {
            	            this_AND_47=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleIfSqlValue20939); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_AND_47);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AND_47, grammarAccess.getIfSqlValueAccess().getANDTerminalRuleCall_1_0_20()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 22 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9452:10: this_OR_48= RULE_OR
            	            {
            	            this_OR_48=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleIfSqlValue20965); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OR_48);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OR_48, grammarAccess.getIfSqlValueAccess().getORTerminalRuleCall_1_0_21()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 23 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9460:10: this_ESC_CHAR_49= RULE_ESC_CHAR
            	            {
            	            this_ESC_CHAR_49=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleIfSqlValue20991); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ESC_CHAR_49);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ESC_CHAR_49, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_22()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 24 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9468:10: this_ON_OFF_50= RULE_ON_OFF
            	            {
            	            this_ON_OFF_50=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleIfSqlValue21017); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ON_OFF_50);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ON_OFF_50, grammarAccess.getIfSqlValueAccess().getON_OFFTerminalRuleCall_1_0_23()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 25 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9476:10: this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE
            	            {
            	            this_STATEMENT_TYPE_51=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleIfSqlValue21043); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_STATEMENT_TYPE_51);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_STATEMENT_TYPE_51, grammarAccess.getIfSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_1_0_24()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 26 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9484:10: this_MAPPING_TYPE_52= RULE_MAPPING_TYPE
            	            {
            	            this_MAPPING_TYPE_52=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleIfSqlValue21069); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MAPPING_TYPE_52);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MAPPING_TYPE_52, grammarAccess.getIfSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_25()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 27 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9492:10: this_OPTION_TYPE_53= RULE_OPTION_TYPE
            	            {
            	            this_OPTION_TYPE_53=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleIfSqlValue21095); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OPTION_TYPE_53);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OPTION_TYPE_53, grammarAccess.getIfSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_26()); 
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop267;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSqlValue"


    // $ANTLR start "entryRuleIfMetaSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9507:1: entryRuleIfMetaSql returns [EObject current=null] : iv_ruleIfMetaSql= ruleIfMetaSql EOF ;
    public final EObject entryRuleIfMetaSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfMetaSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9508:2: (iv_ruleIfMetaSql= ruleIfMetaSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9509:2: iv_ruleIfMetaSql= ruleIfMetaSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfMetaSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfMetaSql_in_entryRuleIfMetaSql21143);
            iv_ruleIfMetaSql=ruleIfMetaSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfMetaSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfMetaSql21153); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfMetaSql"


    // $ANTLR start "ruleIfMetaSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9516:1: ruleIfMetaSql returns [EObject current=null] : ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) ) ;
    public final EObject ruleIfMetaSql() throws RecognitionException {
        EObject current = null;

        Token this_WS_0=null;
        Token this_BOR_2=null;
        Token lv_type_4_0=null;
        Token this_BOR_6=null;
        Token this_BOR_8=null;
        Token lv_type_10_0=null;
        Token this_BOR_12=null;
        Token lv_type_14_0=null;
        Token this_BOR_16=null;
        EObject lv_ifs_1_0 = null;

        EObject lv_ifs_3_0 = null;

        EObject lv_cond_5_0 = null;

        EObject lv_ifs_7_0 = null;

        EObject lv_ifs_9_0 = null;

        EObject lv_ifs_11_0 = null;

        EObject lv_ifs_13_0 = null;

        EObject lv_ifs_15_0 = null;

        EObject lv_ifs_17_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9519:28: ( ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9520:1: ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9520:1: ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) )
            int alt272=4;
            switch ( input.LA(1) ) {
            case RULE_WS:
                {
                alt272=1;
                }
                break;
            case RULE_QUESTI:
                {
                alt272=2;
                }
                break;
            case RULE_BAND:
                {
                alt272=3;
                }
                break;
            case RULE_BOR:
                {
                alt272=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 272, 0, input);

                throw nvae;
            }

            switch (alt272) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9520:2: (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9520:2: (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9520:3: this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )*
                    {
                    this_WS_0=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfMetaSql21190); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_0, grammarAccess.getIfMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9524:1: ( (lv_ifs_1_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9525:1: (lv_ifs_1_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9525:1: (lv_ifs_1_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9526:3: lv_ifs_1_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21210);
                    lv_ifs_1_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_1_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9542:2: (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )*
                    loop268:
                    do {
                        int alt268=2;
                        int LA268_0 = input.LA(1);

                        if ( (LA268_0==RULE_BOR) ) {
                            alt268=1;
                        }


                        switch (alt268) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9542:3: this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_2=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21222); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_2, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9546:1: ( (lv_ifs_3_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9547:1: (lv_ifs_3_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9547:1: (lv_ifs_3_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9548:3: lv_ifs_3_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21242);
                    	    lv_ifs_3_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_3_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop268;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9565:6: ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9565:6: ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9565:7: ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9565:7: ( (lv_type_4_0= RULE_QUESTI ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9566:1: (lv_type_4_0= RULE_QUESTI )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9566:1: (lv_type_4_0= RULE_QUESTI )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9567:3: lv_type_4_0= RULE_QUESTI
                    {
                    lv_type_4_0=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleIfMetaSql21269); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_4_0, grammarAccess.getIfMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_4_0, 
                              		"QUESTI");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9583:2: ( (lv_cond_5_0= ruleIfSqlCond ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9584:1: (lv_cond_5_0= ruleIfSqlCond )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9584:1: (lv_cond_5_0= ruleIfSqlCond )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9585:3: lv_cond_5_0= ruleIfSqlCond
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSqlCond_in_ruleIfMetaSql21295);
                    lv_cond_5_0=ruleIfSqlCond();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		set(
                             			current, 
                             			"cond",
                              		lv_cond_5_0, 
                              		"IfSqlCond");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_BOR_6=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21306); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOR_6, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9605:1: ( (lv_ifs_7_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9606:1: (lv_ifs_7_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9606:1: (lv_ifs_7_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9607:3: lv_ifs_7_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21326);
                    lv_ifs_7_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_7_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9623:2: (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )*
                    loop269:
                    do {
                        int alt269=2;
                        int LA269_0 = input.LA(1);

                        if ( (LA269_0==RULE_BOR) ) {
                            alt269=1;
                        }


                        switch (alt269) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9623:3: this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_8=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21338); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_8, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9627:1: ( (lv_ifs_9_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9628:1: (lv_ifs_9_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9628:1: (lv_ifs_9_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9629:3: lv_ifs_9_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21358);
                    	    lv_ifs_9_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_9_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop269;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9646:6: ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9646:6: ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9646:7: ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9646:7: ( (lv_type_10_0= RULE_BAND ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9647:1: (lv_type_10_0= RULE_BAND )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9647:1: (lv_type_10_0= RULE_BAND )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9648:3: lv_type_10_0= RULE_BAND
                    {
                    lv_type_10_0=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleIfMetaSql21385); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_10_0, grammarAccess.getIfMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_10_0, 
                              		"BAND");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9664:2: ( (lv_ifs_11_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9665:1: (lv_ifs_11_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9665:1: (lv_ifs_11_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9666:3: lv_ifs_11_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21411);
                    lv_ifs_11_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_11_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9682:2: (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )*
                    loop270:
                    do {
                        int alt270=2;
                        int LA270_0 = input.LA(1);

                        if ( (LA270_0==RULE_BOR) ) {
                            alt270=1;
                        }


                        switch (alt270) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9682:3: this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_12=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21423); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_12, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9686:1: ( (lv_ifs_13_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9687:1: (lv_ifs_13_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9687:1: (lv_ifs_13_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9688:3: lv_ifs_13_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21443);
                    	    lv_ifs_13_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_13_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop270;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9705:6: ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9705:6: ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9705:7: ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9705:7: ( (lv_type_14_0= RULE_BOR ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9706:1: (lv_type_14_0= RULE_BOR )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9706:1: (lv_type_14_0= RULE_BOR )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9707:3: lv_type_14_0= RULE_BOR
                    {
                    lv_type_14_0=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21470); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_14_0, grammarAccess.getIfMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_14_0, 
                              		"BOR");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9723:2: ( (lv_ifs_15_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9724:1: (lv_ifs_15_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9724:1: (lv_ifs_15_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9725:3: lv_ifs_15_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21496);
                    lv_ifs_15_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_15_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9741:2: (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )*
                    loop271:
                    do {
                        int alt271=2;
                        int LA271_0 = input.LA(1);

                        if ( (LA271_0==RULE_BOR) ) {
                            alt271=1;
                        }


                        switch (alt271) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9741:3: this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_16=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21508); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_16, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9745:1: ( (lv_ifs_17_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9746:1: (lv_ifs_17_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9746:1: (lv_ifs_17_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9747:3: lv_ifs_17_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21528);
                    	    lv_ifs_17_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_17_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop271;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfMetaSql"


    // $ANTLR start "entryRuleIfSqlCond"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9771:1: entryRuleIfSqlCond returns [EObject current=null] : iv_ruleIfSqlCond= ruleIfSqlCond EOF ;
    public final EObject entryRuleIfSqlCond() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfSqlCond = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9772:2: (iv_ruleIfSqlCond= ruleIfSqlCond EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9773:2: iv_ruleIfSqlCond= ruleIfSqlCond EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlCondRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlCond_in_entryRuleIfSqlCond21567);
            iv_ruleIfSqlCond=ruleIfSqlCond();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSqlCond; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSqlCond21577); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSqlCond"


    // $ANTLR start "ruleIfSqlCond"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9780:1: ruleIfSqlCond returns [EObject current=null] : ( (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )* ) ;
    public final EObject ruleIfSqlCond() throws RecognitionException {
        EObject current = null;

        Token this_WS_0=null;
        Token this_WS_2=null;
        Token lv_oper_3_1=null;
        Token lv_oper_3_2=null;
        Token this_WS_4=null;
        Token this_WS_6=null;
        EObject lv_bool1_1_0 = null;

        EObject lv_bool2_5_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9783:28: ( ( (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9784:1: ( (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9784:1: ( (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9784:2: (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9784:2: (this_WS_0= RULE_WS )*
            loop273:
            do {
                int alt273=2;
                int LA273_0 = input.LA(1);

                if ( (LA273_0==RULE_WS) ) {
                    alt273=1;
                }


                switch (alt273) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9784:3: this_WS_0= RULE_WS
            	    {
            	    this_WS_0=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlCond21614); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_0, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_0()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop273;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9788:3: ( (lv_bool1_1_0= ruleIfSqlBool ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9789:1: (lv_bool1_1_0= ruleIfSqlBool )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9789:1: (lv_bool1_1_0= ruleIfSqlBool )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9790:3: lv_bool1_1_0= ruleIfSqlBool
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool1IfSqlBoolParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlBool_in_ruleIfSqlCond21636);
            lv_bool1_1_0=ruleIfSqlBool();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
              	        }
                     		set(
                     			current, 
                     			"bool1",
                      		lv_bool1_1_0, 
                      		"IfSqlBool");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9806:2: (this_WS_2= RULE_WS )*
            loop274:
            do {
                int alt274=2;
                int LA274_0 = input.LA(1);

                if ( (LA274_0==RULE_WS) ) {
                    alt274=1;
                }


                switch (alt274) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9806:3: this_WS_2= RULE_WS
            	    {
            	    this_WS_2=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlCond21648); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_2, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_2()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop274;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9810:3: ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )*
            loop278:
            do {
                int alt278=2;
                int LA278_0 = input.LA(1);

                if ( ((LA278_0>=RULE_AND && LA278_0<=RULE_OR)) ) {
                    alt278=1;
                }


                switch (alt278) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9810:4: ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9810:4: ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9811:1: ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9811:1: ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9812:1: (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9812:1: (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR )
            	    int alt275=2;
            	    int LA275_0 = input.LA(1);

            	    if ( (LA275_0==RULE_AND) ) {
            	        alt275=1;
            	    }
            	    else if ( (LA275_0==RULE_OR) ) {
            	        alt275=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 275, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt275) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9813:3: lv_oper_3_1= RULE_AND
            	            {
            	            lv_oper_3_1=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleIfSqlCond21669); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_oper_3_1, grammarAccess.getIfSqlCondAccess().getOperANDTerminalRuleCall_3_0_0_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getIfSqlCondRule());
            	              	        }
            	                     		addWithLastConsumed(
            	                     			current, 
            	                     			"oper",
            	                      		lv_oper_3_1, 
            	                      		"AND");
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9828:8: lv_oper_3_2= RULE_OR
            	            {
            	            lv_oper_3_2=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleIfSqlCond21689); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_oper_3_2, grammarAccess.getIfSqlCondAccess().getOperORTerminalRuleCall_3_0_0_1()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getIfSqlCondRule());
            	              	        }
            	                     		addWithLastConsumed(
            	                     			current, 
            	                     			"oper",
            	                      		lv_oper_3_2, 
            	                      		"OR");
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9846:2: (this_WS_4= RULE_WS )*
            	    loop276:
            	    do {
            	        int alt276=2;
            	        int LA276_0 = input.LA(1);

            	        if ( (LA276_0==RULE_WS) ) {
            	            alt276=1;
            	        }


            	        switch (alt276) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9846:3: this_WS_4= RULE_WS
            	    	    {
            	    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlCond21709); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_4, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop276;
            	        }
            	    } while (true);

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9850:3: ( (lv_bool2_5_0= ruleIfSqlBool ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9851:1: (lv_bool2_5_0= ruleIfSqlBool )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9851:1: (lv_bool2_5_0= ruleIfSqlBool )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9852:3: lv_bool2_5_0= ruleIfSqlBool
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool2IfSqlBoolParserRuleCall_3_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleIfSqlBool_in_ruleIfSqlCond21731);
            	    lv_bool2_5_0=ruleIfSqlBool();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"bool2",
            	              		lv_bool2_5_0, 
            	              		"IfSqlBool");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9868:2: (this_WS_6= RULE_WS )*
            	    loop277:
            	    do {
            	        int alt277=2;
            	        int LA277_0 = input.LA(1);

            	        if ( (LA277_0==RULE_WS) ) {
            	            alt277=1;
            	        }


            	        switch (alt277) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9868:3: this_WS_6= RULE_WS
            	    	    {
            	    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlCond21743); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_6, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_3()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop277;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop278;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSqlCond"


    // $ANTLR start "entryRuleIfSqlBool"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9880:1: entryRuleIfSqlBool returns [EObject current=null] : iv_ruleIfSqlBool= ruleIfSqlBool EOF ;
    public final EObject entryRuleIfSqlBool() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfSqlBool = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9881:2: (iv_ruleIfSqlBool= ruleIfSqlBool EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9882:2: iv_ruleIfSqlBool= ruleIfSqlBool EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlBoolRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlBool_in_entryRuleIfSqlBool21782);
            iv_ruleIfSqlBool=ruleIfSqlBool();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSqlBool; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSqlBool21792); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSqlBool"


    // $ANTLR start "ruleIfSqlBool"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9889:1: ruleIfSqlBool returns [EObject current=null] : ( ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) ) | ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN ) ) ;
    public final EObject ruleIfSqlBool() throws RecognitionException {
        EObject current = null;

        Token lv_not_0_0=null;
        Token this_STRING_1=null;
        Token lv_not_3_0=null;
        Token this_COLON_4=null;
        Token lv_not_6_0=null;
        Token this_LPAREN_7=null;
        Token this_RPAREN_9=null;
        EObject lv_cnst_2_0 = null;

        EObject lv_ident_5_0 = null;

        EObject lv_cond_8_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9892:28: ( ( ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) ) | ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9893:1: ( ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) ) | ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9893:1: ( ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) ) | ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN ) )
            int alt282=3;
            switch ( input.LA(1) ) {
            case RULE_NOT:
                {
                switch ( input.LA(2) ) {
                case RULE_LPAREN:
                    {
                    alt282=3;
                    }
                    break;
                case RULE_COLON:
                    {
                    alt282=2;
                    }
                    break;
                case RULE_STRING:
                    {
                    alt282=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 282, 1, input);

                    throw nvae;
                }

                }
                break;
            case RULE_STRING:
                {
                alt282=1;
                }
                break;
            case RULE_COLON:
                {
                alt282=2;
                }
                break;
            case RULE_LPAREN:
                {
                alt282=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 282, 0, input);

                throw nvae;
            }

            switch (alt282) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9893:2: ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9893:2: ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9893:3: ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9893:3: ( (lv_not_0_0= RULE_NOT ) )?
                    int alt279=2;
                    int LA279_0 = input.LA(1);

                    if ( (LA279_0==RULE_NOT) ) {
                        alt279=1;
                    }
                    switch (alt279) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9894:1: (lv_not_0_0= RULE_NOT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9894:1: (lv_not_0_0= RULE_NOT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9895:3: lv_not_0_0= RULE_NOT
                            {
                            lv_not_0_0=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlBool21835); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_not_0_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_0_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIfSqlBoolRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"not",
                                      		true, 
                                      		"NOT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    this_STRING_1=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleIfSqlBool21852); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_1, grammarAccess.getIfSqlBoolAccess().getSTRINGTerminalRuleCall_0_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9915:1: ( (lv_cnst_2_0= ruleConstant ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9916:1: (lv_cnst_2_0= ruleConstant )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9916:1: (lv_cnst_2_0= ruleConstant )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9917:3: lv_cnst_2_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCnstConstantParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstant_in_ruleIfSqlBool21872);
                    lv_cnst_2_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
                      	        }
                             		set(
                             			current, 
                             			"cnst",
                              		lv_cnst_2_0, 
                              		"Constant");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9934:6: ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9934:6: ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9934:7: ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9934:7: ( (lv_not_3_0= RULE_NOT ) )?
                    int alt280=2;
                    int LA280_0 = input.LA(1);

                    if ( (LA280_0==RULE_NOT) ) {
                        alt280=1;
                    }
                    switch (alt280) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9935:1: (lv_not_3_0= RULE_NOT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9935:1: (lv_not_3_0= RULE_NOT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9936:3: lv_not_3_0= RULE_NOT
                            {
                            lv_not_3_0=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlBool21897); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_not_3_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_1_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIfSqlBoolRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"not",
                                      		true, 
                                      		"NOT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    this_COLON_4=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleIfSqlBool21914); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_4, grammarAccess.getIfSqlBoolAccess().getCOLONTerminalRuleCall_1_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9956:1: ( (lv_ident_5_0= ruleIdentifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9957:1: (lv_ident_5_0= ruleIdentifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9957:1: (lv_ident_5_0= ruleIdentifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9958:3: lv_ident_5_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getIdentIdentifierParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_ruleIfSqlBool21934);
                    lv_ident_5_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
                      	        }
                             		set(
                             			current, 
                             			"ident",
                              		lv_ident_5_0, 
                              		"Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9975:6: ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9975:6: ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9975:7: ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9975:7: ( (lv_not_6_0= RULE_NOT ) )?
                    int alt281=2;
                    int LA281_0 = input.LA(1);

                    if ( (LA281_0==RULE_NOT) ) {
                        alt281=1;
                    }
                    switch (alt281) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9976:1: (lv_not_6_0= RULE_NOT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9976:1: (lv_not_6_0= RULE_NOT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9977:3: lv_not_6_0= RULE_NOT
                            {
                            lv_not_6_0=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlBool21959); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_not_6_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_2_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIfSqlBoolRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"not",
                                      		true, 
                                      		"NOT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    this_LPAREN_7=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleIfSqlBool21976); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_7, grammarAccess.getIfSqlBoolAccess().getLPARENTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9997:1: ( (lv_cond_8_0= ruleIfSqlCond ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9998:1: (lv_cond_8_0= ruleIfSqlCond )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9998:1: (lv_cond_8_0= ruleIfSqlCond )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9999:3: lv_cond_8_0= ruleIfSqlCond
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCondIfSqlCondParserRuleCall_2_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSqlCond_in_ruleIfSqlBool21996);
                    lv_cond_8_0=ruleIfSqlCond();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
                      	        }
                             		set(
                             			current, 
                             			"cond",
                              		lv_cond_8_0, 
                              		"IfSqlCond");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RPAREN_9=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleIfSqlBool22007); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_9, grammarAccess.getIfSqlBoolAccess().getRPARENTerminalRuleCall_2_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSqlBool"


    // $ANTLR start "entryRuleOrdSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10027:1: entryRuleOrdSql returns [EObject current=null] : iv_ruleOrdSql= ruleOrdSql EOF ;
    public final EObject entryRuleOrdSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrdSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10028:2: (iv_ruleOrdSql= ruleOrdSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10029:2: iv_ruleOrdSql= ruleOrdSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleOrdSql_in_entryRuleOrdSql22043);
            iv_ruleOrdSql=ruleOrdSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleOrdSql22053); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdSql"


    // $ANTLR start "ruleOrdSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10036:1: ruleOrdSql returns [EObject current=null] : ( (lv_sqls_0_0= ruleOrdSql2 ) )+ ;
    public final EObject ruleOrdSql() throws RecognitionException {
        EObject current = null;

        EObject lv_sqls_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10039:28: ( ( (lv_sqls_0_0= ruleOrdSql2 ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10040:1: ( (lv_sqls_0_0= ruleOrdSql2 ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10040:1: ( (lv_sqls_0_0= ruleOrdSql2 ) )+
            int cnt283=0;
            loop283:
            do {
                int alt283=2;
                int LA283_0 = input.LA(1);

                if ( ((LA283_0>=RULE_WS && LA283_0<=RULE_LBRACE)||(LA283_0>=RULE_QUESTI && LA283_0<=RULE_OPTION_TYPE)) ) {
                    alt283=1;
                }


                switch (alt283) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10041:1: (lv_sqls_0_0= ruleOrdSql2 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10041:1: (lv_sqls_0_0= ruleOrdSql2 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10042:3: lv_sqls_0_0= ruleOrdSql2
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOrdSqlAccess().getSqlsOrdSql2ParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleOrdSql2_in_ruleOrdSql22098);
            	    lv_sqls_0_0=ruleOrdSql2();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOrdSqlRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"sqls",
            	              		lv_sqls_0_0, 
            	              		"OrdSql2");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt283 >= 1 ) break loop283;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(283, input);
                        throw eee;
                }
                cnt283++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdSql"


    // $ANTLR start "entryRuleOrdSql2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10066:1: entryRuleOrdSql2 returns [EObject current=null] : iv_ruleOrdSql2= ruleOrdSql2 EOF ;
    public final EObject entryRuleOrdSql2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrdSql2 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10067:2: (iv_ruleOrdSql2= ruleOrdSql2 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10068:2: iv_ruleOrdSql2= ruleOrdSql2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdSql2Rule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleOrdSql2_in_entryRuleOrdSql222134);
            iv_ruleOrdSql2=ruleOrdSql2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdSql2; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleOrdSql222144); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdSql2"


    // $ANTLR start "ruleOrdSql2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10075:1: ruleOrdSql2 returns [EObject current=null] : ( ( (lv_value_0_0= ruleOrdSqlValue ) ) | (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) ) | (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) ) ) ;
    public final EObject ruleOrdSql2() throws RecognitionException {
        EObject current = null;

        Token this_STRING_1=null;
        Token this_COLON_3=null;
        Token this_PERCENT_5=null;
        AntlrDatatypeRuleToken lv_value_0_0 = null;

        EObject lv_cnst_2_0 = null;

        EObject lv_ident_4_0 = null;

        EObject lv_dbcol_6_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10078:28: ( ( ( (lv_value_0_0= ruleOrdSqlValue ) ) | (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) ) | (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10079:1: ( ( (lv_value_0_0= ruleOrdSqlValue ) ) | (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) ) | (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10079:1: ( ( (lv_value_0_0= ruleOrdSqlValue ) ) | (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) ) | (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) ) )
            int alt284=4;
            switch ( input.LA(1) ) {
            case RULE_WS:
            case RULE_IDENT:
            case RULE_LPAREN:
            case RULE_NUMBER:
            case RULE_RPAREN:
            case RULE_PLUS:
            case RULE_MINUS:
            case RULE_SEMICOLON:
            case RULE_REST:
            case RULE_IDENT_DOT:
            case RULE_COMMA:
            case RULE_LBRACE:
            case RULE_QUESTI:
            case RULE_NOT:
            case RULE_BAND:
            case RULE_BOR:
            case RULE_HASH:
            case RULE_AT:
            case RULE_CARET:
            case RULE_EQUALS:
            case RULE_LESS_THAN:
            case RULE_MORE_THAN:
            case RULE_DOT:
            case RULE_AND:
            case RULE_OR:
            case RULE_ESC_CHAR:
            case RULE_ON_OFF:
            case RULE_STATEMENT_TYPE:
            case RULE_MAPPING_TYPE:
            case RULE_OPTION_TYPE:
                {
                alt284=1;
                }
                break;
            case RULE_STRING:
                {
                alt284=2;
                }
                break;
            case RULE_COLON:
                {
                alt284=3;
                }
                break;
            case RULE_PERCENT:
                {
                alt284=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 284, 0, input);

                throw nvae;
            }

            switch (alt284) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10079:2: ( (lv_value_0_0= ruleOrdSqlValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10079:2: ( (lv_value_0_0= ruleOrdSqlValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10080:1: (lv_value_0_0= ruleOrdSqlValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10080:1: (lv_value_0_0= ruleOrdSqlValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10081:3: lv_value_0_0= ruleOrdSqlValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOrdSql2Access().getValueOrdSqlValueParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleOrdSqlValue_in_ruleOrdSql222190);
                    lv_value_0_0=ruleOrdSqlValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_0_0, 
                              		"OrdSqlValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10098:6: (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10098:6: (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10098:7: this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) )
                    {
                    this_STRING_1=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleOrdSql222208); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_1, grammarAccess.getOrdSql2Access().getSTRINGTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10102:1: ( (lv_cnst_2_0= ruleConstant ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10103:1: (lv_cnst_2_0= ruleConstant )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10103:1: (lv_cnst_2_0= ruleConstant )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10104:3: lv_cnst_2_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOrdSql2Access().getCnstConstantParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstant_in_ruleOrdSql222228);
                    lv_cnst_2_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
                      	        }
                             		set(
                             			current, 
                             			"cnst",
                              		lv_cnst_2_0, 
                              		"Constant");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10121:6: (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10121:6: (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10121:7: this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) )
                    {
                    this_COLON_3=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleOrdSql222247); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_3, grammarAccess.getOrdSql2Access().getCOLONTerminalRuleCall_2_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10125:1: ( (lv_ident_4_0= ruleIdentifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10126:1: (lv_ident_4_0= ruleIdentifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10126:1: (lv_ident_4_0= ruleIdentifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10127:3: lv_ident_4_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOrdSql2Access().getIdentIdentifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_ruleOrdSql222267);
                    lv_ident_4_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
                      	        }
                             		set(
                             			current, 
                             			"ident",
                              		lv_ident_4_0, 
                              		"Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10144:6: (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10144:6: (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10144:7: this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) )
                    {
                    this_PERCENT_5=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleOrdSql222286); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PERCENT_5, grammarAccess.getOrdSql2Access().getPERCENTTerminalRuleCall_3_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10148:1: ( (lv_dbcol_6_0= ruleDatabaseColumn ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10149:1: (lv_dbcol_6_0= ruleDatabaseColumn )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10149:1: (lv_dbcol_6_0= ruleDatabaseColumn )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10150:3: lv_dbcol_6_0= ruleDatabaseColumn
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOrdSql2Access().getDbcolDatabaseColumnParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleDatabaseColumn_in_ruleOrdSql222306);
                    lv_dbcol_6_0=ruleDatabaseColumn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
                      	        }
                             		set(
                             			current, 
                             			"dbcol",
                              		lv_dbcol_6_0, 
                              		"DatabaseColumn");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdSql2"


    // $ANTLR start "entryRuleOrdSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10174:1: entryRuleOrdSqlValue returns [String current=null] : iv_ruleOrdSqlValue= ruleOrdSqlValue EOF ;
    public final String entryRuleOrdSqlValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrdSqlValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10175:2: (iv_ruleOrdSqlValue= ruleOrdSqlValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10176:2: iv_ruleOrdSqlValue= ruleOrdSqlValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdSqlValueRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleOrdSqlValue_in_entryRuleOrdSqlValue22344);
            iv_ruleOrdSqlValue=ruleOrdSqlValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdSqlValue.getText(); 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleOrdSqlValue22355); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdSqlValue"


    // $ANTLR start "ruleOrdSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10183:1: ruleOrdSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )* ) ;
    public final AntlrDatatypeRuleToken ruleOrdSqlValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_WS_4=null;
        Token this_SEMICOLON_5=null;
        Token this_COMMA_6=null;
        Token this_MINUS_7=null;
        Token this_PLUS_8=null;
        Token this_LPAREN_9=null;
        Token this_RPAREN_10=null;
        Token this_LBRACE_11=null;
        Token this_QUESTI_12=null;
        Token this_NOT_13=null;
        Token this_BAND_14=null;
        Token this_BOR_15=null;
        Token this_HASH_16=null;
        Token this_AT_17=null;
        Token this_CARET_18=null;
        Token this_EQUALS_19=null;
        Token this_LESS_THAN_20=null;
        Token this_MORE_THAN_21=null;
        Token this_DOT_22=null;
        Token this_AND_23=null;
        Token this_OR_24=null;
        Token this_ESC_CHAR_25=null;
        Token this_ON_OFF_26=null;
        Token this_STATEMENT_TYPE_27=null;
        Token this_MAPPING_TYPE_28=null;
        Token this_OPTION_TYPE_29=null;
        Token this_REST_30=null;
        Token this_IDENT_DOT_31=null;
        Token this_IDENT_32=null;
        Token this_NUMBER_33=null;
        Token this_WS_34=null;
        Token this_SEMICOLON_35=null;
        Token this_COMMA_36=null;
        Token this_MINUS_37=null;
        Token this_PLUS_38=null;
        Token this_LPAREN_39=null;
        Token this_RPAREN_40=null;
        Token this_LBRACE_41=null;
        Token this_QUESTI_42=null;
        Token this_NOT_43=null;
        Token this_BAND_44=null;
        Token this_BOR_45=null;
        Token this_HASH_46=null;
        Token this_AT_47=null;
        Token this_CARET_48=null;
        Token this_EQUALS_49=null;
        Token this_LESS_THAN_50=null;
        Token this_MORE_THAN_51=null;
        Token this_DOT_52=null;
        Token this_AND_53=null;
        Token this_OR_54=null;
        Token this_ESC_CHAR_55=null;
        Token this_ON_OFF_56=null;
        Token this_STATEMENT_TYPE_57=null;
        Token this_MAPPING_TYPE_58=null;
        Token this_OPTION_TYPE_59=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10186:28: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10187:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10187:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10187:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10187:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE )
            int alt285=30;
            switch ( input.LA(1) ) {
            case RULE_REST:
                {
                alt285=1;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt285=2;
                }
                break;
            case RULE_IDENT:
                {
                alt285=3;
                }
                break;
            case RULE_NUMBER:
                {
                alt285=4;
                }
                break;
            case RULE_WS:
                {
                alt285=5;
                }
                break;
            case RULE_SEMICOLON:
                {
                alt285=6;
                }
                break;
            case RULE_COMMA:
                {
                alt285=7;
                }
                break;
            case RULE_MINUS:
                {
                alt285=8;
                }
                break;
            case RULE_PLUS:
                {
                alt285=9;
                }
                break;
            case RULE_LPAREN:
                {
                alt285=10;
                }
                break;
            case RULE_RPAREN:
                {
                alt285=11;
                }
                break;
            case RULE_LBRACE:
                {
                alt285=12;
                }
                break;
            case RULE_QUESTI:
                {
                alt285=13;
                }
                break;
            case RULE_NOT:
                {
                alt285=14;
                }
                break;
            case RULE_BAND:
                {
                alt285=15;
                }
                break;
            case RULE_BOR:
                {
                alt285=16;
                }
                break;
            case RULE_HASH:
                {
                alt285=17;
                }
                break;
            case RULE_AT:
                {
                alt285=18;
                }
                break;
            case RULE_CARET:
                {
                alt285=19;
                }
                break;
            case RULE_EQUALS:
                {
                alt285=20;
                }
                break;
            case RULE_LESS_THAN:
                {
                alt285=21;
                }
                break;
            case RULE_MORE_THAN:
                {
                alt285=22;
                }
                break;
            case RULE_DOT:
                {
                alt285=23;
                }
                break;
            case RULE_AND:
                {
                alt285=24;
                }
                break;
            case RULE_OR:
                {
                alt285=25;
                }
                break;
            case RULE_ESC_CHAR:
                {
                alt285=26;
                }
                break;
            case RULE_ON_OFF:
                {
                alt285=27;
                }
                break;
            case RULE_STATEMENT_TYPE:
                {
                alt285=28;
                }
                break;
            case RULE_MAPPING_TYPE:
                {
                alt285=29;
                }
                break;
            case RULE_OPTION_TYPE:
                {
                alt285=30;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 285, 0, input);

                throw nvae;
            }

            switch (alt285) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10187:7: this_REST_0= RULE_REST
                    {
                    this_REST_0=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleOrdSqlValue22396); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_REST_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_REST_0, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10195:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                    {
                    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleOrdSqlValue22422); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_DOT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_DOT_1, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10203:10: this_IDENT_2= RULE_IDENT
                    {
                    this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleOrdSqlValue22448); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_2, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10211:10: this_NUMBER_3= RULE_NUMBER
                    {
                    this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleOrdSqlValue22474); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_3, grammarAccess.getOrdSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10219:10: this_WS_4= RULE_WS
                    {
                    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleOrdSqlValue22500); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_WS_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_4, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_0_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10227:10: this_SEMICOLON_5= RULE_SEMICOLON
                    {
                    this_SEMICOLON_5=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleOrdSqlValue22526); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SEMICOLON_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_SEMICOLON_5, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10235:10: this_COMMA_6= RULE_COMMA
                    {
                    this_COMMA_6=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleOrdSqlValue22552); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_COMMA_6);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_6, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10243:10: this_MINUS_7= RULE_MINUS
                    {
                    this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleOrdSqlValue22578); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MINUS_7);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_7, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10251:10: this_PLUS_8= RULE_PLUS
                    {
                    this_PLUS_8=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleOrdSqlValue22604); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PLUS_8);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_8, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10259:10: this_LPAREN_9= RULE_LPAREN
                    {
                    this_LPAREN_9=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleOrdSqlValue22630); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LPAREN_9);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_9, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10267:10: this_RPAREN_10= RULE_RPAREN
                    {
                    this_RPAREN_10=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleOrdSqlValue22656); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_RPAREN_10);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_10, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10275:10: this_LBRACE_11= RULE_LBRACE
                    {
                    this_LBRACE_11=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_ruleOrdSqlValue22682); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LBRACE_11);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LBRACE_11, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_0_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10283:10: this_QUESTI_12= RULE_QUESTI
                    {
                    this_QUESTI_12=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleOrdSqlValue22708); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QUESTI_12);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_QUESTI_12, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_0_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10291:10: this_NOT_13= RULE_NOT
                    {
                    this_NOT_13=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleOrdSqlValue22734); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NOT_13);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NOT_13, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_0_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10299:10: this_BAND_14= RULE_BAND
                    {
                    this_BAND_14=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleOrdSqlValue22760); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BAND_14);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BAND_14, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_0_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10307:10: this_BOR_15= RULE_BOR
                    {
                    this_BOR_15=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleOrdSqlValue22786); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOR_15);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOR_15, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_0_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10315:10: this_HASH_16= RULE_HASH
                    {
                    this_HASH_16=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleOrdSqlValue22812); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HASH_16);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HASH_16, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_0_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10323:10: this_AT_17= RULE_AT
                    {
                    this_AT_17=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_ruleOrdSqlValue22838); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AT_17);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AT_17, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_0_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10331:10: this_CARET_18= RULE_CARET
                    {
                    this_CARET_18=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleOrdSqlValue22864); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CARET_18);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_CARET_18, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_0_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10339:10: this_EQUALS_19= RULE_EQUALS
                    {
                    this_EQUALS_19=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleOrdSqlValue22890); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EQUALS_19);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_EQUALS_19, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_0_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10347:10: this_LESS_THAN_20= RULE_LESS_THAN
                    {
                    this_LESS_THAN_20=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleOrdSqlValue22916); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LESS_THAN_20);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LESS_THAN_20, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_0_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10355:10: this_MORE_THAN_21= RULE_MORE_THAN
                    {
                    this_MORE_THAN_21=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleOrdSqlValue22942); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MORE_THAN_21);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MORE_THAN_21, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_0_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10363:10: this_DOT_22= RULE_DOT
                    {
                    this_DOT_22=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleOrdSqlValue22968); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DOT_22);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DOT_22, grammarAccess.getOrdSqlValueAccess().getDOTTerminalRuleCall_0_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10371:10: this_AND_23= RULE_AND
                    {
                    this_AND_23=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleOrdSqlValue22994); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AND_23);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AND_23, grammarAccess.getOrdSqlValueAccess().getANDTerminalRuleCall_0_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10379:10: this_OR_24= RULE_OR
                    {
                    this_OR_24=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleOrdSqlValue23020); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OR_24);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OR_24, grammarAccess.getOrdSqlValueAccess().getORTerminalRuleCall_0_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10387:10: this_ESC_CHAR_25= RULE_ESC_CHAR
                    {
                    this_ESC_CHAR_25=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleOrdSqlValue23046); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESC_CHAR_25);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ESC_CHAR_25, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_0_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10395:10: this_ON_OFF_26= RULE_ON_OFF
                    {
                    this_ON_OFF_26=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleOrdSqlValue23072); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ON_OFF_26);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ON_OFF_26, grammarAccess.getOrdSqlValueAccess().getON_OFFTerminalRuleCall_0_26()); 
                          
                    }

                    }
                    break;
                case 28 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10403:10: this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE
                    {
                    this_STATEMENT_TYPE_27=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleOrdSqlValue23098); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STATEMENT_TYPE_27);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STATEMENT_TYPE_27, grammarAccess.getOrdSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_27()); 
                          
                    }

                    }
                    break;
                case 29 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10411:10: this_MAPPING_TYPE_28= RULE_MAPPING_TYPE
                    {
                    this_MAPPING_TYPE_28=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleOrdSqlValue23124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MAPPING_TYPE_28);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MAPPING_TYPE_28, grammarAccess.getOrdSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_28()); 
                          
                    }

                    }
                    break;
                case 30 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10419:10: this_OPTION_TYPE_29= RULE_OPTION_TYPE
                    {
                    this_OPTION_TYPE_29=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleOrdSqlValue23150); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OPTION_TYPE_29);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OPTION_TYPE_29, grammarAccess.getOrdSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_29()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10426:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )*
            loop287:
            do {
                int alt287=2;
                alt287 = dfa287.predict(input);
                switch (alt287) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10426:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10455:27: (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE )
            	    int alt286=30;
            	    switch ( input.LA(1) ) {
            	    case RULE_REST:
            	        {
            	        alt286=1;
            	        }
            	        break;
            	    case RULE_IDENT_DOT:
            	        {
            	        alt286=2;
            	        }
            	        break;
            	    case RULE_IDENT:
            	        {
            	        alt286=3;
            	        }
            	        break;
            	    case RULE_NUMBER:
            	        {
            	        alt286=4;
            	        }
            	        break;
            	    case RULE_WS:
            	        {
            	        alt286=5;
            	        }
            	        break;
            	    case RULE_SEMICOLON:
            	        {
            	        alt286=6;
            	        }
            	        break;
            	    case RULE_COMMA:
            	        {
            	        alt286=7;
            	        }
            	        break;
            	    case RULE_MINUS:
            	        {
            	        alt286=8;
            	        }
            	        break;
            	    case RULE_PLUS:
            	        {
            	        alt286=9;
            	        }
            	        break;
            	    case RULE_LPAREN:
            	        {
            	        alt286=10;
            	        }
            	        break;
            	    case RULE_RPAREN:
            	        {
            	        alt286=11;
            	        }
            	        break;
            	    case RULE_LBRACE:
            	        {
            	        alt286=12;
            	        }
            	        break;
            	    case RULE_QUESTI:
            	        {
            	        alt286=13;
            	        }
            	        break;
            	    case RULE_NOT:
            	        {
            	        alt286=14;
            	        }
            	        break;
            	    case RULE_BAND:
            	        {
            	        alt286=15;
            	        }
            	        break;
            	    case RULE_BOR:
            	        {
            	        alt286=16;
            	        }
            	        break;
            	    case RULE_HASH:
            	        {
            	        alt286=17;
            	        }
            	        break;
            	    case RULE_AT:
            	        {
            	        alt286=18;
            	        }
            	        break;
            	    case RULE_CARET:
            	        {
            	        alt286=19;
            	        }
            	        break;
            	    case RULE_EQUALS:
            	        {
            	        alt286=20;
            	        }
            	        break;
            	    case RULE_LESS_THAN:
            	        {
            	        alt286=21;
            	        }
            	        break;
            	    case RULE_MORE_THAN:
            	        {
            	        alt286=22;
            	        }
            	        break;
            	    case RULE_DOT:
            	        {
            	        alt286=23;
            	        }
            	        break;
            	    case RULE_AND:
            	        {
            	        alt286=24;
            	        }
            	        break;
            	    case RULE_OR:
            	        {
            	        alt286=25;
            	        }
            	        break;
            	    case RULE_ESC_CHAR:
            	        {
            	        alt286=26;
            	        }
            	        break;
            	    case RULE_ON_OFF:
            	        {
            	        alt286=27;
            	        }
            	        break;
            	    case RULE_STATEMENT_TYPE:
            	        {
            	        alt286=28;
            	        }
            	        break;
            	    case RULE_MAPPING_TYPE:
            	        {
            	        alt286=29;
            	        }
            	        break;
            	    case RULE_OPTION_TYPE:
            	        {
            	        alt286=30;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 286, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt286) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10455:32: this_REST_30= RULE_REST
            	            {
            	            this_REST_30=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleOrdSqlValue23412); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_REST_30);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_REST_30, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10463:10: this_IDENT_DOT_31= RULE_IDENT_DOT
            	            {
            	            this_IDENT_DOT_31=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleOrdSqlValue23438); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_DOT_31);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_DOT_31, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10471:10: this_IDENT_32= RULE_IDENT
            	            {
            	            this_IDENT_32=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleOrdSqlValue23464); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_32);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_32, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10479:10: this_NUMBER_33= RULE_NUMBER
            	            {
            	            this_NUMBER_33=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleOrdSqlValue23490); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NUMBER_33);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NUMBER_33, grammarAccess.getOrdSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10487:10: this_WS_34= RULE_WS
            	            {
            	            this_WS_34=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleOrdSqlValue23516); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_WS_34);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_WS_34, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10495:10: this_SEMICOLON_35= RULE_SEMICOLON
            	            {
            	            this_SEMICOLON_35=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleOrdSqlValue23542); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_SEMICOLON_35);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_SEMICOLON_35, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10503:10: this_COMMA_36= RULE_COMMA
            	            {
            	            this_COMMA_36=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleOrdSqlValue23568); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_COMMA_36);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_COMMA_36, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10511:10: this_MINUS_37= RULE_MINUS
            	            {
            	            this_MINUS_37=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleOrdSqlValue23594); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MINUS_37);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MINUS_37, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10519:10: this_PLUS_38= RULE_PLUS
            	            {
            	            this_PLUS_38=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleOrdSqlValue23620); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_PLUS_38);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_PLUS_38, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10527:10: this_LPAREN_39= RULE_LPAREN
            	            {
            	            this_LPAREN_39=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleOrdSqlValue23646); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LPAREN_39);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LPAREN_39, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10535:10: this_RPAREN_40= RULE_RPAREN
            	            {
            	            this_RPAREN_40=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleOrdSqlValue23672); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_RPAREN_40);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_RPAREN_40, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 12 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10543:10: this_LBRACE_41= RULE_LBRACE
            	            {
            	            this_LBRACE_41=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_ruleOrdSqlValue23698); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LBRACE_41);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LBRACE_41, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_1_0_11()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 13 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10551:10: this_QUESTI_42= RULE_QUESTI
            	            {
            	            this_QUESTI_42=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleOrdSqlValue23724); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_QUESTI_42);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_QUESTI_42, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_1_0_12()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 14 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10559:10: this_NOT_43= RULE_NOT
            	            {
            	            this_NOT_43=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleOrdSqlValue23750); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NOT_43);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NOT_43, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_1_0_13()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 15 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10567:10: this_BAND_44= RULE_BAND
            	            {
            	            this_BAND_44=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleOrdSqlValue23776); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BAND_44);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BAND_44, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_1_0_14()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 16 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10575:10: this_BOR_45= RULE_BOR
            	            {
            	            this_BOR_45=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleOrdSqlValue23802); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BOR_45);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BOR_45, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_1_0_15()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 17 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10583:10: this_HASH_46= RULE_HASH
            	            {
            	            this_HASH_46=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleOrdSqlValue23828); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_HASH_46);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_HASH_46, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_1_0_16()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 18 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10591:10: this_AT_47= RULE_AT
            	            {
            	            this_AT_47=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_ruleOrdSqlValue23854); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_AT_47);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AT_47, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_1_0_17()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 19 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10599:10: this_CARET_48= RULE_CARET
            	            {
            	            this_CARET_48=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleOrdSqlValue23880); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_CARET_48);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_CARET_48, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_1_0_18()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 20 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10607:10: this_EQUALS_49= RULE_EQUALS
            	            {
            	            this_EQUALS_49=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleOrdSqlValue23906); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_EQUALS_49);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_EQUALS_49, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_1_0_19()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 21 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10615:10: this_LESS_THAN_50= RULE_LESS_THAN
            	            {
            	            this_LESS_THAN_50=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleOrdSqlValue23932); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LESS_THAN_50);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LESS_THAN_50, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_20()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 22 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10623:10: this_MORE_THAN_51= RULE_MORE_THAN
            	            {
            	            this_MORE_THAN_51=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleOrdSqlValue23958); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MORE_THAN_51);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MORE_THAN_51, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_21()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 23 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10631:10: this_DOT_52= RULE_DOT
            	            {
            	            this_DOT_52=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleOrdSqlValue23984); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_DOT_52);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_DOT_52, grammarAccess.getOrdSqlValueAccess().getDOTTerminalRuleCall_1_0_22()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 24 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10639:10: this_AND_53= RULE_AND
            	            {
            	            this_AND_53=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleOrdSqlValue24010); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_AND_53);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AND_53, grammarAccess.getOrdSqlValueAccess().getANDTerminalRuleCall_1_0_23()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 25 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10647:10: this_OR_54= RULE_OR
            	            {
            	            this_OR_54=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleOrdSqlValue24036); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OR_54);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OR_54, grammarAccess.getOrdSqlValueAccess().getORTerminalRuleCall_1_0_24()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 26 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10655:10: this_ESC_CHAR_55= RULE_ESC_CHAR
            	            {
            	            this_ESC_CHAR_55=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleOrdSqlValue24062); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ESC_CHAR_55);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ESC_CHAR_55, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_25()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 27 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10663:10: this_ON_OFF_56= RULE_ON_OFF
            	            {
            	            this_ON_OFF_56=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleOrdSqlValue24088); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ON_OFF_56);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ON_OFF_56, grammarAccess.getOrdSqlValueAccess().getON_OFFTerminalRuleCall_1_0_26()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 28 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10671:10: this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE
            	            {
            	            this_STATEMENT_TYPE_57=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleOrdSqlValue24114); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_STATEMENT_TYPE_57);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_STATEMENT_TYPE_57, grammarAccess.getOrdSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_1_0_27()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 29 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10679:10: this_MAPPING_TYPE_58= RULE_MAPPING_TYPE
            	            {
            	            this_MAPPING_TYPE_58=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleOrdSqlValue24140); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MAPPING_TYPE_58);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MAPPING_TYPE_58, grammarAccess.getOrdSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_28()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 30 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10687:10: this_OPTION_TYPE_59= RULE_OPTION_TYPE
            	            {
            	            this_OPTION_TYPE_59=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleOrdSqlValue24166); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OPTION_TYPE_59);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OPTION_TYPE_59, grammarAccess.getOrdSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_29()); 
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop287;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdSqlValue"


    // $ANTLR start "entryRuleColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10702:1: entryRuleColumn returns [EObject current=null] : iv_ruleColumn= ruleColumn EOF ;
    public final EObject entryRuleColumn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColumn = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10703:2: (iv_ruleColumn= ruleColumn EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10704:2: iv_ruleColumn= ruleColumn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getColumnRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleColumn_in_entryRuleColumn24214);
            iv_ruleColumn=ruleColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleColumn; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleColumn24224); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColumn"


    // $ANTLR start "ruleColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10711:1: ruleColumn returns [EObject current=null] : ( ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )* ) ;
    public final EObject ruleColumn() throws RecognitionException {
        EObject current = null;

        EObject lv_columns_0_0 = null;

        EObject lv_columns_1_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10714:28: ( ( ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10715:1: ( ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10715:1: ( ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10715:2: ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10715:2: ( (lv_columns_0_0= ruleExtendedColumn ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10716:1: (lv_columns_0_0= ruleExtendedColumn )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10716:1: (lv_columns_0_0= ruleExtendedColumn )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10717:3: lv_columns_0_0= ruleExtendedColumn
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getColumnAccess().getColumnsExtendedColumnParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets001.FOLLOW_ruleExtendedColumn_in_ruleColumn24270);
            lv_columns_0_0=ruleExtendedColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getColumnRule());
              	        }
                     		add(
                     			current, 
                     			"columns",
                      		lv_columns_0_0, 
                      		"ExtendedColumn");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10733:2: ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )*
            loop288:
            do {
                int alt288=2;
                switch ( input.LA(1) ) {
                case RULE_IDENT_DOT:
                    {
                    int LA288_2 = input.LA(2);

                    if ( (synpred6_InternalProcessorDsl()) ) {
                        alt288=1;
                    }


                    }
                    break;
                case RULE_IDENT:
                    {
                    int LA288_3 = input.LA(2);

                    if ( (synpred6_InternalProcessorDsl()) ) {
                        alt288=1;
                    }


                    }
                    break;
                case RULE_NUMBER:
                    {
                    int LA288_4 = input.LA(2);

                    if ( (synpred6_InternalProcessorDsl()) ) {
                        alt288=1;
                    }


                    }
                    break;

                }

                switch (alt288) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10733:3: ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10738:1: (lv_columns_1_0= ruleExtendedColumn )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10739:3: lv_columns_1_0= ruleExtendedColumn
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getColumnAccess().getColumnsExtendedColumnParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleExtendedColumn_in_ruleColumn24301);
            	    lv_columns_1_0=ruleExtendedColumn();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getColumnRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"columns",
            	              		lv_columns_1_0, 
            	              		"ExtendedColumn");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop288;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColumn"


    // $ANTLR start "entryRuleExtendedColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10763:1: entryRuleExtendedColumn returns [EObject current=null] : iv_ruleExtendedColumn= ruleExtendedColumn EOF ;
    public final EObject entryRuleExtendedColumn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendedColumn = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10764:2: (iv_ruleExtendedColumn= ruleExtendedColumn EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10765:2: iv_ruleExtendedColumn= ruleExtendedColumn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedColumnRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleExtendedColumn_in_entryRuleExtendedColumn24338);
            iv_ruleExtendedColumn=ruleExtendedColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedColumn; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleExtendedColumn24348); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedColumn"


    // $ANTLR start "ruleExtendedColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10772:1: ruleExtendedColumn returns [EObject current=null] : ( ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? ) ;
    public final EObject ruleExtendedColumn() throws RecognitionException {
        EObject current = null;

        Token this_LPAREN_1=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        EObject lv_col_0_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_2_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10775:28: ( ( ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10776:1: ( ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10776:1: ( ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10776:2: ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10776:2: ( (lv_col_0_0= ruleExtendedColumnName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10777:1: (lv_col_0_0= ruleExtendedColumnName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10777:1: (lv_col_0_0= ruleExtendedColumnName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10778:3: lv_col_0_0= ruleExtendedColumnName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendedColumnAccess().getColExtendedColumnNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets001.FOLLOW_ruleExtendedColumnName_in_ruleExtendedColumn24394);
            lv_col_0_0=ruleExtendedColumnName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExtendedColumnRule());
              	        }
                     		set(
                     			current, 
                     			"col",
                      		lv_col_0_0, 
                      		"ExtendedColumnName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10794:2: ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?
            int alt290=2;
            alt290 = dfa290.predict(input);
            switch (alt290) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10794:3: ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10794:3: ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10794:4: ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN
                    {
                    this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleExtendedColumn24412); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_1, grammarAccess.getExtendedColumnAccess().getLPARENTerminalRuleCall_1_0()); 
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10798:2: ( (lv_modifiers_2_0= ruleModifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10799:1: (lv_modifiers_2_0= ruleModifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10799:1: (lv_modifiers_2_0= ruleModifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10800:3: lv_modifiers_2_0= ruleModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExtendedColumnAccess().getModifiersModifierParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleExtendedColumn24433);
                    lv_modifiers_2_0=ruleModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExtendedColumnRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_2_0, 
                              		"Modifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10816:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )*
                    loop289:
                    do {
                        int alt289=2;
                        int LA289_0 = input.LA(1);

                        if ( (LA289_0==RULE_COMMA) ) {
                            alt289=1;
                        }


                        switch (alt289) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10816:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) )
                    	    {
                    	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleExtendedColumn24445); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_3, grammarAccess.getExtendedColumnAccess().getCOMMATerminalRuleCall_1_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10820:1: ( (lv_modifiers_4_0= ruleModifier ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10821:1: (lv_modifiers_4_0= ruleModifier )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10821:1: (lv_modifiers_4_0= ruleModifier )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10822:3: lv_modifiers_4_0= ruleModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExtendedColumnAccess().getModifiersModifierParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleExtendedColumn24465);
                    	    lv_modifiers_4_0=ruleModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExtendedColumnRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_4_0, 
                    	              		"Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop289;
                        }
                    } while (true);

                    this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleExtendedColumn24478); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_5, grammarAccess.getExtendedColumnAccess().getRPARENTerminalRuleCall_1_3()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedColumn"


    // $ANTLR start "entryRuleExtendedColumnName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10850:1: entryRuleExtendedColumnName returns [EObject current=null] : iv_ruleExtendedColumnName= ruleExtendedColumnName EOF ;
    public final EObject entryRuleExtendedColumnName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendedColumnName = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10851:2: (iv_ruleExtendedColumnName= ruleExtendedColumnName EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10852:2: iv_ruleExtendedColumnName= ruleExtendedColumnName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedColumnNameRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleExtendedColumnName_in_entryRuleExtendedColumnName24515);
            iv_ruleExtendedColumnName=ruleExtendedColumnName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedColumnName; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleExtendedColumnName24525); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedColumnName"


    // $ANTLR start "ruleExtendedColumnName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10859:1: ruleExtendedColumnName returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) ) ) ;
    public final EObject ruleExtendedColumnName() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token lv_name_0_3=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10862:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10863:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10863:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10864:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10864:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10865:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10865:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT )
            int alt291=3;
            switch ( input.LA(1) ) {
            case RULE_IDENT:
                {
                alt291=1;
                }
                break;
            case RULE_NUMBER:
                {
                alt291=2;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt291=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 291, 0, input);

                throw nvae;
            }

            switch (alt291) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10866:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleExtendedColumnName24568); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getExtendedColumnNameAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExtendedColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10881:8: lv_name_0_2= RULE_NUMBER
                    {
                    lv_name_0_2=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleExtendedColumnName24588); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getExtendedColumnNameAccess().getNameNUMBERTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExtendedColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10896:8: lv_name_0_3= RULE_IDENT_DOT
                    {
                    lv_name_0_3=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleExtendedColumnName24608); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_3, grammarAccess.getExtendedColumnNameAccess().getNameIDENT_DOTTerminalRuleCall_0_2()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExtendedColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_3, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedColumnName"


    // $ANTLR start "entryRuleConstant"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10922:1: entryRuleConstant returns [EObject current=null] : iv_ruleConstant= ruleConstant EOF ;
    public final EObject entryRuleConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstant = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10923:2: (iv_ruleConstant= ruleConstant EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10924:2: iv_ruleConstant= ruleConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleConstant_in_entryRuleConstant24651);
            iv_ruleConstant=ruleConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstant; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleConstant24661); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstant"


    // $ANTLR start "ruleConstant"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10931:1: ruleConstant returns [EObject current=null] : ( ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )? ) ;
    public final EObject ruleConstant() throws RecognitionException {
        EObject current = null;

        Token lv_case_0_1=null;
        Token lv_case_0_2=null;
        Token lv_name_1_1=null;
        Token lv_name_1_2=null;
        Token this_LPAREN_2=null;
        Token this_COMMA_4=null;
        Token this_RPAREN_6=null;
        AntlrDatatypeRuleToken lv_modifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_5_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10934:28: ( ( ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10935:1: ( ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10935:1: ( ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10935:2: ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10935:2: ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( ((LA293_0>=RULE_PLUS && LA293_0<=RULE_MINUS)) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10936:1: ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10936:1: ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10937:1: (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10937:1: (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS )
                    int alt292=2;
                    int LA292_0 = input.LA(1);

                    if ( (LA292_0==RULE_PLUS) ) {
                        alt292=1;
                    }
                    else if ( (LA292_0==RULE_MINUS) ) {
                        alt292=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 292, 0, input);

                        throw nvae;
                    }
                    switch (alt292) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10938:3: lv_case_0_1= RULE_PLUS
                            {
                            lv_case_0_1=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleConstant24705); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_case_0_1, grammarAccess.getConstantAccess().getCasePLUSTerminalRuleCall_0_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getConstantRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"case",
                                      		lv_case_0_1, 
                                      		"PLUS");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10953:8: lv_case_0_2= RULE_MINUS
                            {
                            lv_case_0_2=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleConstant24725); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_case_0_2, grammarAccess.getConstantAccess().getCaseMINUSTerminalRuleCall_0_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getConstantRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"case",
                                      		lv_case_0_2, 
                                      		"MINUS");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10971:3: ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10972:1: ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10972:1: ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10973:1: (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10973:1: (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT )
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==RULE_IDENT) ) {
                alt294=1;
            }
            else if ( (LA294_0==RULE_IDENT_DOT) ) {
                alt294=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 294, 0, input);

                throw nvae;
            }
            switch (alt294) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10974:3: lv_name_1_1= RULE_IDENT
                    {
                    lv_name_1_1=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleConstant24753); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_1, grammarAccess.getConstantAccess().getNameIDENTTerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstantRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10989:8: lv_name_1_2= RULE_IDENT_DOT
                    {
                    lv_name_1_2=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleConstant24773); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_2, grammarAccess.getConstantAccess().getNameIDENT_DOTTerminalRuleCall_1_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstantRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11007:2: ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )?
            int alt296=2;
            alt296 = dfa296.predict(input);
            switch (alt296) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11007:3: ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11007:3: ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11007:4: ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN
                    {
                    this_LPAREN_2=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleConstant24799); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_2, grammarAccess.getConstantAccess().getLPARENTerminalRuleCall_2_0()); 
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11011:2: ( (lv_modifiers_3_0= ruleModifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11012:1: (lv_modifiers_3_0= ruleModifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11012:1: (lv_modifiers_3_0= ruleModifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11013:3: lv_modifiers_3_0= ruleModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConstantAccess().getModifiersModifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleConstant24820);
                    lv_modifiers_3_0=ruleModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConstantRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_3_0, 
                              		"Modifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11029:2: (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )*
                    loop295:
                    do {
                        int alt295=2;
                        int LA295_0 = input.LA(1);

                        if ( (LA295_0==RULE_COMMA) ) {
                            alt295=1;
                        }


                        switch (alt295) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11029:3: this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) )
                    	    {
                    	    this_COMMA_4=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleConstant24832); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_4, grammarAccess.getConstantAccess().getCOMMATerminalRuleCall_2_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11033:1: ( (lv_modifiers_5_0= ruleModifier ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11034:1: (lv_modifiers_5_0= ruleModifier )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11034:1: (lv_modifiers_5_0= ruleModifier )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11035:3: lv_modifiers_5_0= ruleModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getConstantAccess().getModifiersModifierParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleConstant24852);
                    	    lv_modifiers_5_0=ruleModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getConstantRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_5_0, 
                    	              		"Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop295;
                        }
                    } while (true);

                    this_RPAREN_6=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleConstant24865); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_6, grammarAccess.getConstantAccess().getRPARENTerminalRuleCall_2_3()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstant"


    // $ANTLR start "entryRuleIdentifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11063:1: entryRuleIdentifier returns [EObject current=null] : iv_ruleIdentifier= ruleIdentifier EOF ;
    public final EObject entryRuleIdentifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11064:2: (iv_ruleIdentifier= ruleIdentifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11065:2: iv_ruleIdentifier= ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_entryRuleIdentifier24902);
            iv_ruleIdentifier=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifier; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIdentifier24912); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11072:1: ruleIdentifier returns [EObject current=null] : ( ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )? ) ;
    public final EObject ruleIdentifier() throws RecognitionException {
        EObject current = null;

        Token lv_mode_0_1=null;
        Token lv_mode_0_2=null;
        Token lv_mode_0_3=null;
        Token lv_case_1_1=null;
        Token lv_case_1_2=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        Token lv_name_2_3=null;
        Token this_LPAREN_3=null;
        Token this_COMMA_5=null;
        Token this_RPAREN_7=null;
        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_6_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11075:28: ( ( ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11076:1: ( ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11076:1: ( ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11076:2: ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11076:2: ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )?
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( ((LA298_0>=RULE_EQUALS && LA298_0<=RULE_MORE_THAN)) ) {
                alt298=1;
            }
            switch (alt298) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11077:1: ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11077:1: ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11078:1: (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11078:1: (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN )
                    int alt297=3;
                    switch ( input.LA(1) ) {
                    case RULE_EQUALS:
                        {
                        alt297=1;
                        }
                        break;
                    case RULE_LESS_THAN:
                        {
                        alt297=2;
                        }
                        break;
                    case RULE_MORE_THAN:
                        {
                        alt297=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 297, 0, input);

                        throw nvae;
                    }

                    switch (alt297) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11079:3: lv_mode_0_1= RULE_EQUALS
                            {
                            lv_mode_0_1=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleIdentifier24956); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_mode_0_1, grammarAccess.getIdentifierAccess().getModeEQUALSTerminalRuleCall_0_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"mode",
                                      		lv_mode_0_1, 
                                      		"EQUALS");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11094:8: lv_mode_0_2= RULE_LESS_THAN
                            {
                            lv_mode_0_2=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleIdentifier24976); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_mode_0_2, grammarAccess.getIdentifierAccess().getModeLESS_THANTerminalRuleCall_0_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"mode",
                                      		lv_mode_0_2, 
                                      		"LESS_THAN");
                              	    
                            }

                            }
                            break;
                        case 3 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11109:8: lv_mode_0_3= RULE_MORE_THAN
                            {
                            lv_mode_0_3=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleIdentifier24996); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_mode_0_3, grammarAccess.getIdentifierAccess().getModeMORE_THANTerminalRuleCall_0_0_2()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"mode",
                                      		lv_mode_0_3, 
                                      		"MORE_THAN");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11127:3: ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )?
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( ((LA300_0>=RULE_PLUS && LA300_0<=RULE_MINUS)) ) {
                alt300=1;
            }
            switch (alt300) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11128:1: ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11128:1: ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11129:1: (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11129:1: (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS )
                    int alt299=2;
                    int LA299_0 = input.LA(1);

                    if ( (LA299_0==RULE_PLUS) ) {
                        alt299=1;
                    }
                    else if ( (LA299_0==RULE_MINUS) ) {
                        alt299=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 299, 0, input);

                        throw nvae;
                    }
                    switch (alt299) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11130:3: lv_case_1_1= RULE_PLUS
                            {
                            lv_case_1_1=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleIdentifier25024); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_case_1_1, grammarAccess.getIdentifierAccess().getCasePLUSTerminalRuleCall_1_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"case",
                                      		lv_case_1_1, 
                                      		"PLUS");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11145:8: lv_case_1_2= RULE_MINUS
                            {
                            lv_case_1_2=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleIdentifier25044); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_case_1_2, grammarAccess.getIdentifierAccess().getCaseMINUSTerminalRuleCall_1_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"case",
                                      		lv_case_1_2, 
                                      		"MINUS");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11163:3: ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11164:1: ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11164:1: ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11165:1: (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11165:1: (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT )
            int alt301=3;
            switch ( input.LA(1) ) {
            case RULE_IDENT:
                {
                alt301=1;
                }
                break;
            case RULE_NUMBER:
                {
                alt301=2;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt301=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 301, 0, input);

                throw nvae;
            }

            switch (alt301) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11166:3: lv_name_2_1= RULE_IDENT
                    {
                    lv_name_2_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleIdentifier25072); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_1, grammarAccess.getIdentifierAccess().getNameIDENTTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11181:8: lv_name_2_2= RULE_NUMBER
                    {
                    lv_name_2_2=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleIdentifier25092); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_2, grammarAccess.getIdentifierAccess().getNameNUMBERTerminalRuleCall_2_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_2, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11196:8: lv_name_2_3= RULE_IDENT_DOT
                    {
                    lv_name_2_3=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleIdentifier25112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_3, grammarAccess.getIdentifierAccess().getNameIDENT_DOTTerminalRuleCall_2_0_2()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_3, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11214:2: ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )?
            int alt303=2;
            alt303 = dfa303.predict(input);
            switch (alt303) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11214:3: ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11214:3: ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11214:4: ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN
                    {
                    this_LPAREN_3=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleIdentifier25138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_3, grammarAccess.getIdentifierAccess().getLPARENTerminalRuleCall_3_0()); 
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11218:2: ( (lv_modifiers_4_0= ruleModifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11219:1: (lv_modifiers_4_0= ruleModifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11219:1: (lv_modifiers_4_0= ruleModifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11220:3: lv_modifiers_4_0= ruleModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIdentifierAccess().getModifiersModifierParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleModifier_in_ruleIdentifier25159);
                    lv_modifiers_4_0=ruleModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIdentifierRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_4_0, 
                              		"Modifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11236:2: (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )*
                    loop302:
                    do {
                        int alt302=2;
                        int LA302_0 = input.LA(1);

                        if ( (LA302_0==RULE_COMMA) ) {
                            alt302=1;
                        }


                        switch (alt302) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11236:3: this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) )
                    	    {
                    	    this_COMMA_5=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleIdentifier25171); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_5, grammarAccess.getIdentifierAccess().getCOMMATerminalRuleCall_3_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11240:1: ( (lv_modifiers_6_0= ruleModifier ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11241:1: (lv_modifiers_6_0= ruleModifier )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11241:1: (lv_modifiers_6_0= ruleModifier )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11242:3: lv_modifiers_6_0= ruleModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIdentifierAccess().getModifiersModifierParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets002.FOLLOW_ruleModifier_in_ruleIdentifier25191);
                    	    lv_modifiers_6_0=ruleModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIdentifierRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_6_0, 
                    	              		"Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop302;
                        }
                    } while (true);

                    this_RPAREN_7=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleIdentifier25204); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_7, grammarAccess.getIdentifierAccess().getRPARENTerminalRuleCall_3_3()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleConstantOperator"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11270:1: entryRuleConstantOperator returns [EObject current=null] : iv_ruleConstantOperator= ruleConstantOperator EOF ;
    public final EObject entryRuleConstantOperator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstantOperator = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11271:2: (iv_ruleConstantOperator= ruleConstantOperator EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11272:2: iv_ruleConstantOperator= ruleConstantOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantOperatorRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleConstantOperator_in_entryRuleConstantOperator25241);
            iv_ruleConstantOperator=ruleConstantOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantOperator; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleConstantOperator25251); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantOperator"


    // $ANTLR start "ruleConstantOperator"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11279:1: ruleConstantOperator returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) ) ;
    public final EObject ruleConstantOperator() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11282:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11283:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11283:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11284:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11284:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11285:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11285:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS )
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==RULE_IDENT) ) {
                alt304=1;
            }
            else if ( (LA304_0==RULE_EQUALS) ) {
                alt304=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 304, 0, input);

                throw nvae;
            }
            switch (alt304) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11286:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleConstantOperator25294); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getConstantOperatorAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstantOperatorRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11301:8: lv_name_0_2= RULE_EQUALS
                    {
                    lv_name_0_2=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleConstantOperator25314); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getConstantOperatorAccess().getNameEQUALSTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstantOperatorRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"EQUALS");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstantOperator"


    // $ANTLR start "entryRuleIdentifierOperator"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11327:1: entryRuleIdentifierOperator returns [EObject current=null] : iv_ruleIdentifierOperator= ruleIdentifierOperator EOF ;
    public final EObject entryRuleIdentifierOperator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifierOperator = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11328:2: (iv_ruleIdentifierOperator= ruleIdentifierOperator EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11329:2: iv_ruleIdentifierOperator= ruleIdentifierOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierOperatorRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleIdentifierOperator_in_entryRuleIdentifierOperator25357);
            iv_ruleIdentifierOperator=ruleIdentifierOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierOperator; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleIdentifierOperator25367); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifierOperator"


    // $ANTLR start "ruleIdentifierOperator"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11336:1: ruleIdentifierOperator returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) ) ;
    public final EObject ruleIdentifierOperator() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11339:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11340:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11340:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11341:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11341:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11342:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11342:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS )
            int alt305=2;
            int LA305_0 = input.LA(1);

            if ( (LA305_0==RULE_IDENT) ) {
                alt305=1;
            }
            else if ( (LA305_0==RULE_EQUALS) ) {
                alt305=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 305, 0, input);

                throw nvae;
            }
            switch (alt305) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11343:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleIdentifierOperator25410); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getIdentifierOperatorAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierOperatorRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11358:8: lv_name_0_2= RULE_EQUALS
                    {
                    lv_name_0_2=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleIdentifierOperator25430); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getIdentifierOperatorAccess().getNameEQUALSTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierOperatorRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"EQUALS");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifierOperator"


    // $ANTLR start "entryRuleDatabaseColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11384:1: entryRuleDatabaseColumn returns [EObject current=null] : iv_ruleDatabaseColumn= ruleDatabaseColumn EOF ;
    public final EObject entryRuleDatabaseColumn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseColumn = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11385:2: (iv_ruleDatabaseColumn= ruleDatabaseColumn EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11386:2: iv_ruleDatabaseColumn= ruleDatabaseColumn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseColumnRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleDatabaseColumn_in_entryRuleDatabaseColumn25473);
            iv_ruleDatabaseColumn=ruleDatabaseColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseColumn; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleDatabaseColumn25483); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseColumn"


    // $ANTLR start "ruleDatabaseColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11393:1: ruleDatabaseColumn returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) ) ;
    public final EObject ruleDatabaseColumn() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11396:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11397:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11397:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11398:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11398:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11399:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11399:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT )
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==RULE_IDENT) ) {
                alt306=1;
            }
            else if ( (LA306_0==RULE_IDENT_DOT) ) {
                alt306=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 306, 0, input);

                throw nvae;
            }
            switch (alt306) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11400:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleDatabaseColumn25526); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getDatabaseColumnAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabaseColumnRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11415:8: lv_name_0_2= RULE_IDENT_DOT
                    {
                    lv_name_0_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleDatabaseColumn25546); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getDatabaseColumnAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabaseColumnRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseColumn"


    // $ANTLR start "entryRuleDatabaseTable"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11441:1: entryRuleDatabaseTable returns [EObject current=null] : iv_ruleDatabaseTable= ruleDatabaseTable EOF ;
    public final EObject entryRuleDatabaseTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseTable = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11442:2: (iv_ruleDatabaseTable= ruleDatabaseTable EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11443:2: iv_ruleDatabaseTable= ruleDatabaseTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseTableRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleDatabaseTable_in_entryRuleDatabaseTable25589);
            iv_ruleDatabaseTable=ruleDatabaseTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseTable; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleDatabaseTable25599); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseTable"


    // $ANTLR start "ruleDatabaseTable"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11450:1: ruleDatabaseTable returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) ) ;
    public final EObject ruleDatabaseTable() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11453:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11454:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11454:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11455:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11455:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11456:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11456:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT )
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( (LA307_0==RULE_IDENT) ) {
                alt307=1;
            }
            else if ( (LA307_0==RULE_IDENT_DOT) ) {
                alt307=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 307, 0, input);

                throw nvae;
            }
            switch (alt307) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11457:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleDatabaseTable25642); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getDatabaseTableAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabaseTableRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11472:8: lv_name_0_2= RULE_IDENT_DOT
                    {
                    lv_name_0_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleDatabaseTable25662); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getDatabaseTableAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabaseTableRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseTable"


    // $ANTLR start "entryRuleMappingRule"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11498:1: entryRuleMappingRule returns [EObject current=null] : iv_ruleMappingRule= ruleMappingRule EOF ;
    public final EObject entryRuleMappingRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingRule = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11499:2: (iv_ruleMappingRule= ruleMappingRule EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11500:2: iv_ruleMappingRule= ruleMappingRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingRuleRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingRule_in_entryRuleMappingRule25705);
            iv_ruleMappingRule=ruleMappingRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingRule; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingRule25715); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingRule"


    // $ANTLR start "ruleMappingRule"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11507:1: ruleMappingRule returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON ) ;
    public final EObject ruleMappingRule() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_LPAREN_1=null;
        Token lv_type_2_0=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        Token this_EQUALS_6=null;
        Token this_SEMICOLON_8=null;
        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        EObject lv_mapping_7_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11510:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11511:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11511:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11511:2: ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11511:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11512:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11512:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11513:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingRule25757); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getMappingRuleAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMappingRuleRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleMappingRule25773); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LPAREN_1, grammarAccess.getMappingRuleAccess().getLPARENTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11533:1: ( (lv_type_2_0= RULE_MAPPING_TYPE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11534:1: (lv_type_2_0= RULE_MAPPING_TYPE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11534:1: (lv_type_2_0= RULE_MAPPING_TYPE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11535:3: lv_type_2_0= RULE_MAPPING_TYPE
            {
            lv_type_2_0=(Token)match(input,RULE_MAPPING_TYPE,FollowSets002.FOLLOW_RULE_MAPPING_TYPE_in_ruleMappingRule25789); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_type_2_0, grammarAccess.getMappingRuleAccess().getTypeMAPPING_TYPETerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMappingRuleRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"MAPPING_TYPE");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11551:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )*
            loop308:
            do {
                int alt308=2;
                int LA308_0 = input.LA(1);

                if ( (LA308_0==RULE_COMMA) ) {
                    alt308=1;
                }


                switch (alt308) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11551:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) )
            	    {
            	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleMappingRule25806); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_3, grammarAccess.getMappingRuleAccess().getCOMMATerminalRuleCall_3_0()); 
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11555:1: ( (lv_modifiers_4_0= ruleMappingRuleModifier ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11556:1: (lv_modifiers_4_0= ruleMappingRuleModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11556:1: (lv_modifiers_4_0= ruleMappingRuleModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11557:3: lv_modifiers_4_0= ruleMappingRuleModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMappingRuleAccess().getModifiersMappingRuleModifierParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleMappingRuleModifier_in_ruleMappingRule25826);
            	    lv_modifiers_4_0=ruleMappingRuleModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingRuleRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers",
            	              		lv_modifiers_4_0, 
            	              		"MappingRuleModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop308;
                }
            } while (true);

            this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleMappingRule25839); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RPAREN_5, grammarAccess.getMappingRuleAccess().getRPARENTerminalRuleCall_4()); 
                  
            }
            this_EQUALS_6=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleMappingRule25849); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EQUALS_6, grammarAccess.getMappingRuleAccess().getEQUALSTerminalRuleCall_5()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11581:1: ( (lv_mapping_7_0= ruleMapping ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11582:1: (lv_mapping_7_0= ruleMapping )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11582:1: (lv_mapping_7_0= ruleMapping )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11583:3: lv_mapping_7_0= ruleMapping
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMappingRuleAccess().getMappingMappingParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleMapping_in_ruleMappingRule25869);
            lv_mapping_7_0=ruleMapping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingRuleRule());
              	        }
                     		set(
                     			current, 
                     			"mapping",
                      		lv_mapping_7_0, 
                      		"Mapping");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_SEMICOLON_8=(Token)match(input,RULE_SEMICOLON,FollowSets002.FOLLOW_RULE_SEMICOLON_in_ruleMappingRule25880); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_8, grammarAccess.getMappingRuleAccess().getSEMICOLONTerminalRuleCall_7()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingRule"


    // $ANTLR start "entryRuleMapping"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11611:1: entryRuleMapping returns [EObject current=null] : iv_ruleMapping= ruleMapping EOF ;
    public final EObject entryRuleMapping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapping = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11612:2: (iv_ruleMapping= ruleMapping EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11613:2: iv_ruleMapping= ruleMapping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMapping_in_entryRuleMapping25915);
            iv_ruleMapping=ruleMapping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapping; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMapping25925); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapping"


    // $ANTLR start "ruleMapping"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11620:1: ruleMapping returns [EObject current=null] : ( (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )* ) ;
    public final EObject ruleMapping() throws RecognitionException {
        EObject current = null;

        Token this_WS_0=null;
        Token this_WS_2=null;
        Token this_WS_4=null;
        EObject lv_mappingItems_1_0 = null;

        EObject lv_mappingItems_3_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11623:28: ( ( (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11624:1: ( (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11624:1: ( (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11624:2: (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11624:2: (this_WS_0= RULE_WS )*
            loop309:
            do {
                int alt309=2;
                int LA309_0 = input.LA(1);

                if ( (LA309_0==RULE_WS) ) {
                    alt309=1;
                }


                switch (alt309) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11624:3: this_WS_0= RULE_WS
            	    {
            	    this_WS_0=(Token)match(input,RULE_WS,FollowSets002.FOLLOW_RULE_WS_in_ruleMapping25962); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_0, grammarAccess.getMappingAccess().getWSTerminalRuleCall_0()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop309;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11628:3: ( (lv_mappingItems_1_0= ruleMappingItem ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11629:1: (lv_mappingItems_1_0= ruleMappingItem )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11629:1: (lv_mappingItems_1_0= ruleMappingItem )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11630:3: lv_mappingItems_1_0= ruleMappingItem
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingItem_in_ruleMapping25984);
            lv_mappingItems_1_0=ruleMappingItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingRule());
              	        }
                     		add(
                     			current, 
                     			"mappingItems",
                      		lv_mappingItems_1_0, 
                      		"MappingItem");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11646:2: ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )*
            loop311:
            do {
                int alt311=2;
                alt311 = dfa311.predict(input);
                switch (alt311) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11646:3: (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11646:3: (this_WS_2= RULE_WS )+
            	    int cnt310=0;
            	    loop310:
            	    do {
            	        int alt310=2;
            	        int LA310_0 = input.LA(1);

            	        if ( (LA310_0==RULE_WS) ) {
            	            alt310=1;
            	        }


            	        switch (alt310) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11646:4: this_WS_2= RULE_WS
            	    	    {
            	    	    this_WS_2=(Token)match(input,RULE_WS,FollowSets002.FOLLOW_RULE_WS_in_ruleMapping25997); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_2, grammarAccess.getMappingAccess().getWSTerminalRuleCall_2_0()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt310 >= 1 ) break loop310;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(310, input);
            	                throw eee;
            	        }
            	        cnt310++;
            	    } while (true);

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11650:3: ( (lv_mappingItems_3_0= ruleMappingItem ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11651:1: (lv_mappingItems_3_0= ruleMappingItem )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11651:1: (lv_mappingItems_3_0= ruleMappingItem )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11652:3: lv_mappingItems_3_0= ruleMappingItem
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleMappingItem_in_ruleMapping26019);
            	    lv_mappingItems_3_0=ruleMappingItem();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"mappingItems",
            	              		lv_mappingItems_3_0, 
            	              		"MappingItem");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop311;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11668:4: (this_WS_4= RULE_WS )*
            loop312:
            do {
                int alt312=2;
                int LA312_0 = input.LA(1);

                if ( (LA312_0==RULE_WS) ) {
                    alt312=1;
                }


                switch (alt312) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11668:5: this_WS_4= RULE_WS
            	    {
            	    this_WS_4=(Token)match(input,RULE_WS,FollowSets002.FOLLOW_RULE_WS_in_ruleMapping26033); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_4, grammarAccess.getMappingAccess().getWSTerminalRuleCall_3()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop312;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapping"


    // $ANTLR start "entryRuleMappingItem"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11680:1: entryRuleMappingItem returns [EObject current=null] : iv_ruleMappingItem= ruleMappingItem EOF ;
    public final EObject entryRuleMappingItem() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingItem = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11681:2: (iv_ruleMappingItem= ruleMappingItem EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11682:2: iv_ruleMappingItem= ruleMappingItem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingItemRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingItem_in_entryRuleMappingItem26070);
            iv_ruleMappingItem=ruleMappingItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingItem; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingItem26080); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingItem"


    // $ANTLR start "ruleMappingItem"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11689:1: ruleMappingItem returns [EObject current=null] : ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )? ) ;
    public final EObject ruleMappingItem() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token this_STRING_1=null;
        EObject lv_attr_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11692:28: ( ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11693:1: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11693:1: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11693:2: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11693:2: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11694:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11694:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11695:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11695:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER )
            int alt313=2;
            int LA313_0 = input.LA(1);

            if ( (LA313_0==RULE_IDENT) ) {
                alt313=1;
            }
            else if ( (LA313_0==RULE_NUMBER) ) {
                alt313=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 313, 0, input);

                throw nvae;
            }
            switch (alt313) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11696:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingItem26124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getMappingItemAccess().getNameIDENTTerminalRuleCall_0_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingItemRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11711:8: lv_name_0_2= RULE_NUMBER
                    {
                    lv_name_0_2=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleMappingItem26144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getMappingItemAccess().getNameNUMBERTerminalRuleCall_0_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingItemRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11729:2: (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )?
            int alt314=2;
            int LA314_0 = input.LA(1);

            if ( (LA314_0==RULE_STRING) ) {
                alt314=1;
            }
            switch (alt314) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11729:3: this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) )
                    {
                    this_STRING_1=(Token)match(input,RULE_STRING,FollowSets002.FOLLOW_RULE_STRING_in_ruleMappingItem26164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_1, grammarAccess.getMappingItemAccess().getSTRINGTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11733:1: ( (lv_attr_2_0= ruleMappingColumn ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11734:1: (lv_attr_2_0= ruleMappingColumn )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11734:1: (lv_attr_2_0= ruleMappingColumn )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11735:3: lv_attr_2_0= ruleMappingColumn
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMappingItemAccess().getAttrMappingColumnParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleMappingColumn_in_ruleMappingItem26184);
                    lv_attr_2_0=ruleMappingColumn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMappingItemRule());
                      	        }
                             		set(
                             			current, 
                             			"attr",
                              		lv_attr_2_0, 
                              		"MappingColumn");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingItem"


    // $ANTLR start "entryRuleMappingColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11759:1: entryRuleMappingColumn returns [EObject current=null] : iv_ruleMappingColumn= ruleMappingColumn EOF ;
    public final EObject entryRuleMappingColumn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingColumn = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11760:2: (iv_ruleMappingColumn= ruleMappingColumn EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11761:2: iv_ruleMappingColumn= ruleMappingColumn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingColumnRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingColumn_in_entryRuleMappingColumn26222);
            iv_ruleMappingColumn=ruleMappingColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingColumn; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingColumn26232); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingColumn"


    // $ANTLR start "ruleMappingColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11768:1: ruleMappingColumn returns [EObject current=null] : ( ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )* ) ;
    public final EObject ruleMappingColumn() throws RecognitionException {
        EObject current = null;

        EObject lv_items_0_0 = null;

        EObject lv_items_1_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11771:28: ( ( ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11772:1: ( ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11772:1: ( ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11772:2: ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11772:2: ( (lv_items_0_0= ruleExtendedMappingItem ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11773:1: (lv_items_0_0= ruleExtendedMappingItem )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11773:1: (lv_items_0_0= ruleExtendedMappingItem )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11774:3: lv_items_0_0= ruleExtendedMappingItem
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMappingColumnAccess().getItemsExtendedMappingItemParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleExtendedMappingItem_in_ruleMappingColumn26278);
            lv_items_0_0=ruleExtendedMappingItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingColumnRule());
              	        }
                     		add(
                     			current, 
                     			"items",
                      		lv_items_0_0, 
                      		"ExtendedMappingItem");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11790:2: ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )*
            loop315:
            do {
                int alt315=2;
                int LA315_0 = input.LA(1);

                if ( (LA315_0==RULE_IDENT) && (synpred10_InternalProcessorDsl())) {
                    alt315=1;
                }
                else if ( (LA315_0==RULE_IDENT_DOT) && (synpred10_InternalProcessorDsl())) {
                    alt315=1;
                }
                else if ( (LA315_0==RULE_NUMBER) && (synpred10_InternalProcessorDsl())) {
                    alt315=1;
                }


                switch (alt315) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11790:3: ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11795:1: (lv_items_1_0= ruleExtendedMappingItem )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11796:3: lv_items_1_0= ruleExtendedMappingItem
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMappingColumnAccess().getItemsExtendedMappingItemParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleExtendedMappingItem_in_ruleMappingColumn26309);
            	    lv_items_1_0=ruleExtendedMappingItem();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingColumnRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"items",
            	              		lv_items_1_0, 
            	              		"ExtendedMappingItem");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop315;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingColumn"


    // $ANTLR start "entryRuleExtendedMappingItem"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11820:1: entryRuleExtendedMappingItem returns [EObject current=null] : iv_ruleExtendedMappingItem= ruleExtendedMappingItem EOF ;
    public final EObject entryRuleExtendedMappingItem() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendedMappingItem = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11821:2: (iv_ruleExtendedMappingItem= ruleExtendedMappingItem EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11822:2: iv_ruleExtendedMappingItem= ruleExtendedMappingItem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedMappingItemRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleExtendedMappingItem_in_entryRuleExtendedMappingItem26346);
            iv_ruleExtendedMappingItem=ruleExtendedMappingItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedMappingItem; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleExtendedMappingItem26356); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedMappingItem"


    // $ANTLR start "ruleExtendedMappingItem"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11829:1: ruleExtendedMappingItem returns [EObject current=null] : ( ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? ) ;
    public final EObject ruleExtendedMappingItem() throws RecognitionException {
        EObject current = null;

        Token this_LPAREN_1=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        EObject lv_attr_0_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_2_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11832:28: ( ( ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11833:1: ( ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11833:1: ( ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11833:2: ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11833:2: ( (lv_attr_0_0= ruleMappingColumnName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11834:1: (lv_attr_0_0= ruleMappingColumnName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11834:1: (lv_attr_0_0= ruleMappingColumnName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11835:3: lv_attr_0_0= ruleMappingColumnName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendedMappingItemAccess().getAttrMappingColumnNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingColumnName_in_ruleExtendedMappingItem26402);
            lv_attr_0_0=ruleMappingColumnName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExtendedMappingItemRule());
              	        }
                     		set(
                     			current, 
                     			"attr",
                      		lv_attr_0_0, 
                      		"MappingColumnName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11851:2: ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==RULE_LPAREN) && (synpred11_InternalProcessorDsl())) {
                alt317=1;
            }
            switch (alt317) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11851:3: ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11851:3: ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11851:4: ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN
                    {
                    this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleExtendedMappingItem26420); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_1, grammarAccess.getExtendedMappingItemAccess().getLPARENTerminalRuleCall_1_0()); 
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11855:2: ( (lv_modifiers_2_0= ruleMappingItemModifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11856:1: (lv_modifiers_2_0= ruleMappingItemModifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11856:1: (lv_modifiers_2_0= ruleMappingItemModifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11857:3: lv_modifiers_2_0= ruleMappingItemModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExtendedMappingItemAccess().getModifiersMappingItemModifierParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleMappingItemModifier_in_ruleExtendedMappingItem26441);
                    lv_modifiers_2_0=ruleMappingItemModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExtendedMappingItemRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_2_0, 
                              		"MappingItemModifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11873:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )*
                    loop316:
                    do {
                        int alt316=2;
                        int LA316_0 = input.LA(1);

                        if ( (LA316_0==RULE_COMMA) ) {
                            alt316=1;
                        }


                        switch (alt316) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11873:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) )
                    	    {
                    	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleExtendedMappingItem26453); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_3, grammarAccess.getExtendedMappingItemAccess().getCOMMATerminalRuleCall_1_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11877:1: ( (lv_modifiers_4_0= ruleMappingItemModifier ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11878:1: (lv_modifiers_4_0= ruleMappingItemModifier )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11878:1: (lv_modifiers_4_0= ruleMappingItemModifier )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11879:3: lv_modifiers_4_0= ruleMappingItemModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExtendedMappingItemAccess().getModifiersMappingItemModifierParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets002.FOLLOW_ruleMappingItemModifier_in_ruleExtendedMappingItem26473);
                    	    lv_modifiers_4_0=ruleMappingItemModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExtendedMappingItemRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_4_0, 
                    	              		"MappingItemModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop316;
                        }
                    } while (true);

                    this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleExtendedMappingItem26486); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_5, grammarAccess.getExtendedMappingItemAccess().getRPARENTerminalRuleCall_1_3()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedMappingItem"


    // $ANTLR start "entryRuleMappingColumnName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11907:1: entryRuleMappingColumnName returns [EObject current=null] : iv_ruleMappingColumnName= ruleMappingColumnName EOF ;
    public final EObject entryRuleMappingColumnName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingColumnName = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11908:2: (iv_ruleMappingColumnName= ruleMappingColumnName EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11909:2: iv_ruleMappingColumnName= ruleMappingColumnName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingColumnNameRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingColumnName_in_entryRuleMappingColumnName26523);
            iv_ruleMappingColumnName=ruleMappingColumnName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingColumnName; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingColumnName26533); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingColumnName"


    // $ANTLR start "ruleMappingColumnName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11916:1: ruleMappingColumnName returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) ) ) ;
    public final EObject ruleMappingColumnName() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token lv_name_0_3=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11919:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11920:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11920:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11921:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11921:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11922:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11922:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER )
            int alt318=3;
            switch ( input.LA(1) ) {
            case RULE_IDENT:
                {
                alt318=1;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt318=2;
                }
                break;
            case RULE_NUMBER:
                {
                alt318=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 318, 0, input);

                throw nvae;
            }

            switch (alt318) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11923:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingColumnName26576); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getMappingColumnNameAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11938:8: lv_name_0_2= RULE_IDENT_DOT
                    {
                    lv_name_0_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleMappingColumnName26596); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getMappingColumnNameAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11953:8: lv_name_0_3= RULE_NUMBER
                    {
                    lv_name_0_3=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleMappingColumnName26616); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_3, grammarAccess.getMappingColumnNameAccess().getNameNUMBERTerminalRuleCall_0_2()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_3, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingColumnName"


    // $ANTLR start "entryRuleOptionalFeature"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11979:1: entryRuleOptionalFeature returns [EObject current=null] : iv_ruleOptionalFeature= ruleOptionalFeature EOF ;
    public final EObject entryRuleOptionalFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOptionalFeature = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11980:2: (iv_ruleOptionalFeature= ruleOptionalFeature EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11981:2: iv_ruleOptionalFeature= ruleOptionalFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOptionalFeatureRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleOptionalFeature_in_entryRuleOptionalFeature26659);
            iv_ruleOptionalFeature=ruleOptionalFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOptionalFeature; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleOptionalFeature26669); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOptionalFeature"


    // $ANTLR start "ruleOptionalFeature"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11988:1: ruleOptionalFeature returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON ) ;
    public final EObject ruleOptionalFeature() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_LPAREN_1=null;
        Token lv_type_2_0=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        Token this_EQUALS_6=null;
        Token this_SEMICOLON_8=null;
        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_option_7_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11991:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11992:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11992:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11992:2: ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11992:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11993:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11993:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11994:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleOptionalFeature26711); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getOptionalFeatureAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getOptionalFeatureRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleOptionalFeature26727); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LPAREN_1, grammarAccess.getOptionalFeatureAccess().getLPARENTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12014:1: ( (lv_type_2_0= RULE_OPTION_TYPE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12015:1: (lv_type_2_0= RULE_OPTION_TYPE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12015:1: (lv_type_2_0= RULE_OPTION_TYPE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12016:3: lv_type_2_0= RULE_OPTION_TYPE
            {
            lv_type_2_0=(Token)match(input,RULE_OPTION_TYPE,FollowSets002.FOLLOW_RULE_OPTION_TYPE_in_ruleOptionalFeature26743); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_type_2_0, grammarAccess.getOptionalFeatureAccess().getTypeOPTION_TYPETerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getOptionalFeatureRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"OPTION_TYPE");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12032:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )*
            loop319:
            do {
                int alt319=2;
                int LA319_0 = input.LA(1);

                if ( (LA319_0==RULE_COMMA) ) {
                    alt319=1;
                }


                switch (alt319) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12032:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) )
            	    {
            	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleOptionalFeature26760); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_3, grammarAccess.getOptionalFeatureAccess().getCOMMATerminalRuleCall_3_0()); 
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12036:1: ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12037:1: (lv_modifiers_4_0= ruleOptionalFeatureModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12037:1: (lv_modifiers_4_0= ruleOptionalFeatureModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12038:3: lv_modifiers_4_0= ruleOptionalFeatureModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOptionalFeatureAccess().getModifiersOptionalFeatureModifierParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleOptionalFeatureModifier_in_ruleOptionalFeature26780);
            	    lv_modifiers_4_0=ruleOptionalFeatureModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOptionalFeatureRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers",
            	              		lv_modifiers_4_0, 
            	              		"OptionalFeatureModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop319;
                }
            } while (true);

            this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleOptionalFeature26793); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RPAREN_5, grammarAccess.getOptionalFeatureAccess().getRPARENTerminalRuleCall_4()); 
                  
            }
            this_EQUALS_6=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleOptionalFeature26803); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EQUALS_6, grammarAccess.getOptionalFeatureAccess().getEQUALSTerminalRuleCall_5()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12062:1: ( (lv_option_7_0= ruleFeatureValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12063:1: (lv_option_7_0= ruleFeatureValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12063:1: (lv_option_7_0= ruleFeatureValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12064:3: lv_option_7_0= ruleFeatureValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOptionalFeatureAccess().getOptionFeatureValueParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleFeatureValue_in_ruleOptionalFeature26823);
            lv_option_7_0=ruleFeatureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOptionalFeatureRule());
              	        }
                     		set(
                     			current, 
                     			"option",
                      		lv_option_7_0, 
                      		"FeatureValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_SEMICOLON_8=(Token)match(input,RULE_SEMICOLON,FollowSets002.FOLLOW_RULE_SEMICOLON_in_ruleOptionalFeature26834); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_8, grammarAccess.getOptionalFeatureAccess().getSEMICOLONTerminalRuleCall_7()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOptionalFeature"


    // $ANTLR start "entryRuleStatementModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12092:1: entryRuleStatementModifier returns [String current=null] : iv_ruleStatementModifier= ruleStatementModifier EOF ;
    public final String entryRuleStatementModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleStatementModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12093:2: (iv_ruleStatementModifier= ruleStatementModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12094:2: iv_ruleStatementModifier= ruleStatementModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleStatementModifier_in_entryRuleStatementModifier26870);
            iv_ruleStatementModifier=ruleStatementModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatementModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleStatementModifier26881); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatementModifier"


    // $ANTLR start "ruleStatementModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12101:1: ruleStatementModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleStatementModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_NUMBER_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12104:28: ( (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12105:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12105:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==RULE_IDENT) ) {
                alt320=1;
            }
            else if ( (LA320_0==RULE_NUMBER) ) {
                alt320=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 320, 0, input);

                throw nvae;
            }
            switch (alt320) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12105:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleStatementModifier26921); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getStatementModifierAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12113:10: this_NUMBER_1= RULE_NUMBER
                    {
                    this_NUMBER_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleStatementModifier26947); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_1, grammarAccess.getStatementModifierAccess().getNUMBERTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatementModifier"


    // $ANTLR start "entryRuleMappingRuleModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12128:1: entryRuleMappingRuleModifier returns [String current=null] : iv_ruleMappingRuleModifier= ruleMappingRuleModifier EOF ;
    public final String entryRuleMappingRuleModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMappingRuleModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12129:2: (iv_ruleMappingRuleModifier= ruleMappingRuleModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12130:2: iv_ruleMappingRuleModifier= ruleMappingRuleModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingRuleModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingRuleModifier_in_entryRuleMappingRuleModifier26993);
            iv_ruleMappingRuleModifier=ruleMappingRuleModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingRuleModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingRuleModifier27004); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingRuleModifier"


    // $ANTLR start "ruleMappingRuleModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12137:1: ruleMappingRuleModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleMappingRuleModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_NUMBER_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12140:28: ( (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12141:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12141:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==RULE_IDENT) ) {
                alt321=1;
            }
            else if ( (LA321_0==RULE_NUMBER) ) {
                alt321=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 321, 0, input);

                throw nvae;
            }
            switch (alt321) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12141:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingRuleModifier27044); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getMappingRuleModifierAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12149:10: this_NUMBER_1= RULE_NUMBER
                    {
                    this_NUMBER_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleMappingRuleModifier27070); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_1, grammarAccess.getMappingRuleModifierAccess().getNUMBERTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingRuleModifier"


    // $ANTLR start "entryRuleMappingItemModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12164:1: entryRuleMappingItemModifier returns [String current=null] : iv_ruleMappingItemModifier= ruleMappingItemModifier EOF ;
    public final String entryRuleMappingItemModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMappingItemModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12165:2: (iv_ruleMappingItemModifier= ruleMappingItemModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12166:2: iv_ruleMappingItemModifier= ruleMappingItemModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingItemModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingItemModifier_in_entryRuleMappingItemModifier27116);
            iv_ruleMappingItemModifier=ruleMappingItemModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingItemModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingItemModifier27127); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingItemModifier"


    // $ANTLR start "ruleMappingItemModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12173:1: ruleMappingItemModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleMappingItemModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_NUMBER_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12176:28: ( (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12177:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12177:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==RULE_IDENT) ) {
                alt322=1;
            }
            else if ( (LA322_0==RULE_NUMBER) ) {
                alt322=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 322, 0, input);

                throw nvae;
            }
            switch (alt322) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12177:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingItemModifier27167); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getMappingItemModifierAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12185:10: this_NUMBER_1= RULE_NUMBER
                    {
                    this_NUMBER_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleMappingItemModifier27193); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_1, grammarAccess.getMappingItemModifierAccess().getNUMBERTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingItemModifier"


    // $ANTLR start "entryRuleOptionalFeatureModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12200:1: entryRuleOptionalFeatureModifier returns [String current=null] : iv_ruleOptionalFeatureModifier= ruleOptionalFeatureModifier EOF ;
    public final String entryRuleOptionalFeatureModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOptionalFeatureModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12201:2: (iv_ruleOptionalFeatureModifier= ruleOptionalFeatureModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12202:2: iv_ruleOptionalFeatureModifier= ruleOptionalFeatureModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOptionalFeatureModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleOptionalFeatureModifier_in_entryRuleOptionalFeatureModifier27239);
            iv_ruleOptionalFeatureModifier=ruleOptionalFeatureModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOptionalFeatureModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleOptionalFeatureModifier27250); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOptionalFeatureModifier"


    // $ANTLR start "ruleOptionalFeatureModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12209:1: ruleOptionalFeatureModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleOptionalFeatureModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_NUMBER_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12212:28: ( (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12213:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12213:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            int alt323=2;
            int LA323_0 = input.LA(1);

            if ( (LA323_0==RULE_IDENT) ) {
                alt323=1;
            }
            else if ( (LA323_0==RULE_NUMBER) ) {
                alt323=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 323, 0, input);

                throw nvae;
            }
            switch (alt323) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12213:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleOptionalFeatureModifier27290); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getOptionalFeatureModifierAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12221:10: this_NUMBER_1= RULE_NUMBER
                    {
                    this_NUMBER_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleOptionalFeatureModifier27316); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_1, grammarAccess.getOptionalFeatureModifierAccess().getNUMBERTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOptionalFeatureModifier"


    // $ANTLR start "entryRuleModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12236:1: entryRuleModifier returns [String current=null] : iv_ruleModifier= ruleModifier EOF ;
    public final String entryRuleModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12237:2: (iv_ruleModifier= ruleModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12238:2: iv_ruleModifier= ruleModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleModifier_in_entryRuleModifier27362);
            iv_ruleModifier=ruleModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleModifier27373); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModifier"


    // $ANTLR start "ruleModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12245:1: ruleModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER ) ) ;
    public final AntlrDatatypeRuleToken ruleModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NOT_0=null;
        Token this_IDENT_1=null;
        Token this_NUMBER_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12248:28: ( ( (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12249:1: ( (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12249:1: ( (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12249:2: (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12249:2: (this_NOT_0= RULE_NOT )?
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==RULE_NOT) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12249:7: this_NOT_0= RULE_NOT
                    {
                    this_NOT_0=(Token)match(input,RULE_NOT,FollowSets002.FOLLOW_RULE_NOT_in_ruleModifier27414); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NOT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NOT_0, grammarAccess.getModifierAccess().getNOTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12256:3: (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER )
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==RULE_IDENT) ) {
                alt325=1;
            }
            else if ( (LA325_0==RULE_NUMBER) ) {
                alt325=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 325, 0, input);

                throw nvae;
            }
            switch (alt325) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12256:8: this_IDENT_1= RULE_IDENT
                    {
                    this_IDENT_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleModifier27437); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_1, grammarAccess.getModifierAccess().getIDENTTerminalRuleCall_1_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12264:10: this_NUMBER_2= RULE_NUMBER
                    {
                    this_NUMBER_2=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleModifier27463); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_2, grammarAccess.getModifierAccess().getNUMBERTerminalRuleCall_1_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModifier"


    // $ANTLR start "entryRuleFeatureValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12279:1: entryRuleFeatureValue returns [String current=null] : iv_ruleFeatureValue= ruleFeatureValue EOF ;
    public final String entryRuleFeatureValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12280:2: (iv_ruleFeatureValue= ruleFeatureValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12281:2: iv_ruleFeatureValue= ruleFeatureValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureValueRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleFeatureValue_in_entryRuleFeatureValue27510);
            iv_ruleFeatureValue=ruleFeatureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureValue.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleFeatureValue27521); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureValue"


    // $ANTLR start "ruleFeatureValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12288:1: ruleFeatureValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COLON_5= RULE_COLON | this_STRING_6= RULE_STRING | this_COMMA_7= RULE_COMMA | this_MINUS_8= RULE_MINUS | this_PLUS_9= RULE_PLUS | this_LPAREN_10= RULE_LPAREN | this_RPAREN_11= RULE_RPAREN | this_LBRACE_12= RULE_LBRACE | this_RBRACE_13= RULE_RBRACE | this_QUESTI_14= RULE_QUESTI | this_NOT_15= RULE_NOT | this_BAND_16= RULE_BAND | this_BOR_17= RULE_BOR | this_HASH_18= RULE_HASH | this_AT_19= RULE_AT | this_CARET_20= RULE_CARET | this_EQUALS_21= RULE_EQUALS | this_LESS_THAN_22= RULE_LESS_THAN | this_MORE_THAN_23= RULE_MORE_THAN | this_PERCENT_24= RULE_PERCENT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )+ ;
    public final AntlrDatatypeRuleToken ruleFeatureValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_WS_4=null;
        Token this_COLON_5=null;
        Token this_STRING_6=null;
        Token this_COMMA_7=null;
        Token this_MINUS_8=null;
        Token this_PLUS_9=null;
        Token this_LPAREN_10=null;
        Token this_RPAREN_11=null;
        Token this_LBRACE_12=null;
        Token this_RBRACE_13=null;
        Token this_QUESTI_14=null;
        Token this_NOT_15=null;
        Token this_BAND_16=null;
        Token this_BOR_17=null;
        Token this_HASH_18=null;
        Token this_AT_19=null;
        Token this_CARET_20=null;
        Token this_EQUALS_21=null;
        Token this_LESS_THAN_22=null;
        Token this_MORE_THAN_23=null;
        Token this_PERCENT_24=null;
        Token this_AND_25=null;
        Token this_OR_26=null;
        Token this_ESC_CHAR_27=null;
        Token this_ON_OFF_28=null;
        Token this_STATEMENT_TYPE_29=null;
        Token this_MAPPING_TYPE_30=null;
        Token this_OPTION_TYPE_31=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12291:28: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COLON_5= RULE_COLON | this_STRING_6= RULE_STRING | this_COMMA_7= RULE_COMMA | this_MINUS_8= RULE_MINUS | this_PLUS_9= RULE_PLUS | this_LPAREN_10= RULE_LPAREN | this_RPAREN_11= RULE_RPAREN | this_LBRACE_12= RULE_LBRACE | this_RBRACE_13= RULE_RBRACE | this_QUESTI_14= RULE_QUESTI | this_NOT_15= RULE_NOT | this_BAND_16= RULE_BAND | this_BOR_17= RULE_BOR | this_HASH_18= RULE_HASH | this_AT_19= RULE_AT | this_CARET_20= RULE_CARET | this_EQUALS_21= RULE_EQUALS | this_LESS_THAN_22= RULE_LESS_THAN | this_MORE_THAN_23= RULE_MORE_THAN | this_PERCENT_24= RULE_PERCENT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12292:1: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COLON_5= RULE_COLON | this_STRING_6= RULE_STRING | this_COMMA_7= RULE_COMMA | this_MINUS_8= RULE_MINUS | this_PLUS_9= RULE_PLUS | this_LPAREN_10= RULE_LPAREN | this_RPAREN_11= RULE_RPAREN | this_LBRACE_12= RULE_LBRACE | this_RBRACE_13= RULE_RBRACE | this_QUESTI_14= RULE_QUESTI | this_NOT_15= RULE_NOT | this_BAND_16= RULE_BAND | this_BOR_17= RULE_BOR | this_HASH_18= RULE_HASH | this_AT_19= RULE_AT | this_CARET_20= RULE_CARET | this_EQUALS_21= RULE_EQUALS | this_LESS_THAN_22= RULE_LESS_THAN | this_MORE_THAN_23= RULE_MORE_THAN | this_PERCENT_24= RULE_PERCENT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12292:1: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COLON_5= RULE_COLON | this_STRING_6= RULE_STRING | this_COMMA_7= RULE_COMMA | this_MINUS_8= RULE_MINUS | this_PLUS_9= RULE_PLUS | this_LPAREN_10= RULE_LPAREN | this_RPAREN_11= RULE_RPAREN | this_LBRACE_12= RULE_LBRACE | this_RBRACE_13= RULE_RBRACE | this_QUESTI_14= RULE_QUESTI | this_NOT_15= RULE_NOT | this_BAND_16= RULE_BAND | this_BOR_17= RULE_BOR | this_HASH_18= RULE_HASH | this_AT_19= RULE_AT | this_CARET_20= RULE_CARET | this_EQUALS_21= RULE_EQUALS | this_LESS_THAN_22= RULE_LESS_THAN | this_MORE_THAN_23= RULE_MORE_THAN | this_PERCENT_24= RULE_PERCENT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )+
            int cnt326=0;
            loop326:
            do {
                int alt326=33;
                switch ( input.LA(1) ) {
                case RULE_REST:
                    {
                    alt326=1;
                    }
                    break;
                case RULE_IDENT_DOT:
                    {
                    alt326=2;
                    }
                    break;
                case RULE_IDENT:
                    {
                    alt326=3;
                    }
                    break;
                case RULE_NUMBER:
                    {
                    alt326=4;
                    }
                    break;
                case RULE_WS:
                    {
                    alt326=5;
                    }
                    break;
                case RULE_COLON:
                    {
                    alt326=6;
                    }
                    break;
                case RULE_STRING:
                    {
                    alt326=7;
                    }
                    break;
                case RULE_COMMA:
                    {
                    alt326=8;
                    }
                    break;
                case RULE_MINUS:
                    {
                    alt326=9;
                    }
                    break;
                case RULE_PLUS:
                    {
                    alt326=10;
                    }
                    break;
                case RULE_LPAREN:
                    {
                    alt326=11;
                    }
                    break;
                case RULE_RPAREN:
                    {
                    alt326=12;
                    }
                    break;
                case RULE_LBRACE:
                    {
                    alt326=13;
                    }
                    break;
                case RULE_RBRACE:
                    {
                    alt326=14;
                    }
                    break;
                case RULE_QUESTI:
                    {
                    alt326=15;
                    }
                    break;
                case RULE_NOT:
                    {
                    alt326=16;
                    }
                    break;
                case RULE_BAND:
                    {
                    alt326=17;
                    }
                    break;
                case RULE_BOR:
                    {
                    alt326=18;
                    }
                    break;
                case RULE_HASH:
                    {
                    alt326=19;
                    }
                    break;
                case RULE_AT:
                    {
                    alt326=20;
                    }
                    break;
                case RULE_CARET:
                    {
                    alt326=21;
                    }
                    break;
                case RULE_EQUALS:
                    {
                    alt326=22;
                    }
                    break;
                case RULE_LESS_THAN:
                    {
                    alt326=23;
                    }
                    break;
                case RULE_MORE_THAN:
                    {
                    alt326=24;
                    }
                    break;
                case RULE_PERCENT:
                    {
                    alt326=25;
                    }
                    break;
                case RULE_AND:
                    {
                    alt326=26;
                    }
                    break;
                case RULE_OR:
                    {
                    alt326=27;
                    }
                    break;
                case RULE_ESC_CHAR:
                    {
                    alt326=28;
                    }
                    break;
                case RULE_ON_OFF:
                    {
                    alt326=29;
                    }
                    break;
                case RULE_STATEMENT_TYPE:
                    {
                    alt326=30;
                    }
                    break;
                case RULE_MAPPING_TYPE:
                    {
                    alt326=31;
                    }
                    break;
                case RULE_OPTION_TYPE:
                    {
                    alt326=32;
                    }
                    break;

                }

                switch (alt326) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12292:6: this_REST_0= RULE_REST
            	    {
            	    this_REST_0=(Token)match(input,RULE_REST,FollowSets002.FOLLOW_RULE_REST_in_ruleFeatureValue27561); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_REST_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_REST_0, grammarAccess.getFeatureValueAccess().getRESTTerminalRuleCall_0()); 
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12300:10: this_IDENT_DOT_1= RULE_IDENT_DOT
            	    {
            	    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleFeatureValue27587); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_IDENT_DOT_1);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_IDENT_DOT_1, grammarAccess.getFeatureValueAccess().getIDENT_DOTTerminalRuleCall_1()); 
            	          
            	    }

            	    }
            	    break;
            	case 3 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12308:10: this_IDENT_2= RULE_IDENT
            	    {
            	    this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleFeatureValue27613); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_IDENT_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_IDENT_2, grammarAccess.getFeatureValueAccess().getIDENTTerminalRuleCall_2()); 
            	          
            	    }

            	    }
            	    break;
            	case 4 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12316:10: this_NUMBER_3= RULE_NUMBER
            	    {
            	    this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleFeatureValue27639); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_NUMBER_3);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_NUMBER_3, grammarAccess.getFeatureValueAccess().getNUMBERTerminalRuleCall_3()); 
            	          
            	    }

            	    }
            	    break;
            	case 5 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12324:10: this_WS_4= RULE_WS
            	    {
            	    this_WS_4=(Token)match(input,RULE_WS,FollowSets002.FOLLOW_RULE_WS_in_ruleFeatureValue27665); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_WS_4);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_4, grammarAccess.getFeatureValueAccess().getWSTerminalRuleCall_4()); 
            	          
            	    }

            	    }
            	    break;
            	case 6 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12332:10: this_COLON_5= RULE_COLON
            	    {
            	    this_COLON_5=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleFeatureValue27691); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_COLON_5);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COLON_5, grammarAccess.getFeatureValueAccess().getCOLONTerminalRuleCall_5()); 
            	          
            	    }

            	    }
            	    break;
            	case 7 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12340:10: this_STRING_6= RULE_STRING
            	    {
            	    this_STRING_6=(Token)match(input,RULE_STRING,FollowSets002.FOLLOW_RULE_STRING_in_ruleFeatureValue27717); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_STRING_6);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_STRING_6, grammarAccess.getFeatureValueAccess().getSTRINGTerminalRuleCall_6()); 
            	          
            	    }

            	    }
            	    break;
            	case 8 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12348:10: this_COMMA_7= RULE_COMMA
            	    {
            	    this_COMMA_7=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleFeatureValue27743); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_COMMA_7);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_7, grammarAccess.getFeatureValueAccess().getCOMMATerminalRuleCall_7()); 
            	          
            	    }

            	    }
            	    break;
            	case 9 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12356:10: this_MINUS_8= RULE_MINUS
            	    {
            	    this_MINUS_8=(Token)match(input,RULE_MINUS,FollowSets002.FOLLOW_RULE_MINUS_in_ruleFeatureValue27769); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_MINUS_8);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_MINUS_8, grammarAccess.getFeatureValueAccess().getMINUSTerminalRuleCall_8()); 
            	          
            	    }

            	    }
            	    break;
            	case 10 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12364:10: this_PLUS_9= RULE_PLUS
            	    {
            	    this_PLUS_9=(Token)match(input,RULE_PLUS,FollowSets002.FOLLOW_RULE_PLUS_in_ruleFeatureValue27795); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_PLUS_9);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_PLUS_9, grammarAccess.getFeatureValueAccess().getPLUSTerminalRuleCall_9()); 
            	          
            	    }

            	    }
            	    break;
            	case 11 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12372:10: this_LPAREN_10= RULE_LPAREN
            	    {
            	    this_LPAREN_10=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleFeatureValue27821); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_LPAREN_10);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_LPAREN_10, grammarAccess.getFeatureValueAccess().getLPARENTerminalRuleCall_10()); 
            	          
            	    }

            	    }
            	    break;
            	case 12 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12380:10: this_RPAREN_11= RULE_RPAREN
            	    {
            	    this_RPAREN_11=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleFeatureValue27847); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_RPAREN_11);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_RPAREN_11, grammarAccess.getFeatureValueAccess().getRPARENTerminalRuleCall_11()); 
            	          
            	    }

            	    }
            	    break;
            	case 13 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12388:10: this_LBRACE_12= RULE_LBRACE
            	    {
            	    this_LBRACE_12=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_ruleFeatureValue27873); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_LBRACE_12);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_LBRACE_12, grammarAccess.getFeatureValueAccess().getLBRACETerminalRuleCall_12()); 
            	          
            	    }

            	    }
            	    break;
            	case 14 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12396:10: this_RBRACE_13= RULE_RBRACE
            	    {
            	    this_RBRACE_13=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_ruleFeatureValue27899); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_RBRACE_13);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_RBRACE_13, grammarAccess.getFeatureValueAccess().getRBRACETerminalRuleCall_13()); 
            	          
            	    }

            	    }
            	    break;
            	case 15 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12404:10: this_QUESTI_14= RULE_QUESTI
            	    {
            	    this_QUESTI_14=(Token)match(input,RULE_QUESTI,FollowSets002.FOLLOW_RULE_QUESTI_in_ruleFeatureValue27925); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_QUESTI_14);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_QUESTI_14, grammarAccess.getFeatureValueAccess().getQUESTITerminalRuleCall_14()); 
            	          
            	    }

            	    }
            	    break;
            	case 16 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12412:10: this_NOT_15= RULE_NOT
            	    {
            	    this_NOT_15=(Token)match(input,RULE_NOT,FollowSets002.FOLLOW_RULE_NOT_in_ruleFeatureValue27951); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_NOT_15);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_NOT_15, grammarAccess.getFeatureValueAccess().getNOTTerminalRuleCall_15()); 
            	          
            	    }

            	    }
            	    break;
            	case 17 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12420:10: this_BAND_16= RULE_BAND
            	    {
            	    this_BAND_16=(Token)match(input,RULE_BAND,FollowSets002.FOLLOW_RULE_BAND_in_ruleFeatureValue27977); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_BAND_16);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_BAND_16, grammarAccess.getFeatureValueAccess().getBANDTerminalRuleCall_16()); 
            	          
            	    }

            	    }
            	    break;
            	case 18 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12428:10: this_BOR_17= RULE_BOR
            	    {
            	    this_BOR_17=(Token)match(input,RULE_BOR,FollowSets002.FOLLOW_RULE_BOR_in_ruleFeatureValue28003); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_BOR_17);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_BOR_17, grammarAccess.getFeatureValueAccess().getBORTerminalRuleCall_17()); 
            	          
            	    }

            	    }
            	    break;
            	case 19 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12436:10: this_HASH_18= RULE_HASH
            	    {
            	    this_HASH_18=(Token)match(input,RULE_HASH,FollowSets002.FOLLOW_RULE_HASH_in_ruleFeatureValue28029); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_HASH_18);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_HASH_18, grammarAccess.getFeatureValueAccess().getHASHTerminalRuleCall_18()); 
            	          
            	    }

            	    }
            	    break;
            	case 20 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12444:10: this_AT_19= RULE_AT
            	    {
            	    this_AT_19=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_ruleFeatureValue28055); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_AT_19);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_AT_19, grammarAccess.getFeatureValueAccess().getATTerminalRuleCall_19()); 
            	          
            	    }

            	    }
            	    break;
            	case 21 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12452:10: this_CARET_20= RULE_CARET
            	    {
            	    this_CARET_20=(Token)match(input,RULE_CARET,FollowSets002.FOLLOW_RULE_CARET_in_ruleFeatureValue28081); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_CARET_20);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_CARET_20, grammarAccess.getFeatureValueAccess().getCARETTerminalRuleCall_20()); 
            	          
            	    }

            	    }
            	    break;
            	case 22 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12460:10: this_EQUALS_21= RULE_EQUALS
            	    {
            	    this_EQUALS_21=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleFeatureValue28107); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_EQUALS_21);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EQUALS_21, grammarAccess.getFeatureValueAccess().getEQUALSTerminalRuleCall_21()); 
            	          
            	    }

            	    }
            	    break;
            	case 23 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12468:10: this_LESS_THAN_22= RULE_LESS_THAN
            	    {
            	    this_LESS_THAN_22=(Token)match(input,RULE_LESS_THAN,FollowSets002.FOLLOW_RULE_LESS_THAN_in_ruleFeatureValue28133); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_LESS_THAN_22);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_LESS_THAN_22, grammarAccess.getFeatureValueAccess().getLESS_THANTerminalRuleCall_22()); 
            	          
            	    }

            	    }
            	    break;
            	case 24 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12476:10: this_MORE_THAN_23= RULE_MORE_THAN
            	    {
            	    this_MORE_THAN_23=(Token)match(input,RULE_MORE_THAN,FollowSets002.FOLLOW_RULE_MORE_THAN_in_ruleFeatureValue28159); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_MORE_THAN_23);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_MORE_THAN_23, grammarAccess.getFeatureValueAccess().getMORE_THANTerminalRuleCall_23()); 
            	          
            	    }

            	    }
            	    break;
            	case 25 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12484:10: this_PERCENT_24= RULE_PERCENT
            	    {
            	    this_PERCENT_24=(Token)match(input,RULE_PERCENT,FollowSets002.FOLLOW_RULE_PERCENT_in_ruleFeatureValue28185); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_PERCENT_24);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_PERCENT_24, grammarAccess.getFeatureValueAccess().getPERCENTTerminalRuleCall_24()); 
            	          
            	    }

            	    }
            	    break;
            	case 26 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12492:10: this_AND_25= RULE_AND
            	    {
            	    this_AND_25=(Token)match(input,RULE_AND,FollowSets002.FOLLOW_RULE_AND_in_ruleFeatureValue28211); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_AND_25);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_AND_25, grammarAccess.getFeatureValueAccess().getANDTerminalRuleCall_25()); 
            	          
            	    }

            	    }
            	    break;
            	case 27 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12500:10: this_OR_26= RULE_OR
            	    {
            	    this_OR_26=(Token)match(input,RULE_OR,FollowSets002.FOLLOW_RULE_OR_in_ruleFeatureValue28237); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_OR_26);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_OR_26, grammarAccess.getFeatureValueAccess().getORTerminalRuleCall_26()); 
            	          
            	    }

            	    }
            	    break;
            	case 28 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12508:10: this_ESC_CHAR_27= RULE_ESC_CHAR
            	    {
            	    this_ESC_CHAR_27=(Token)match(input,RULE_ESC_CHAR,FollowSets002.FOLLOW_RULE_ESC_CHAR_in_ruleFeatureValue28263); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ESC_CHAR_27);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ESC_CHAR_27, grammarAccess.getFeatureValueAccess().getESC_CHARTerminalRuleCall_27()); 
            	          
            	    }

            	    }
            	    break;
            	case 29 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12516:10: this_ON_OFF_28= RULE_ON_OFF
            	    {
            	    this_ON_OFF_28=(Token)match(input,RULE_ON_OFF,FollowSets002.FOLLOW_RULE_ON_OFF_in_ruleFeatureValue28289); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ON_OFF_28);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ON_OFF_28, grammarAccess.getFeatureValueAccess().getON_OFFTerminalRuleCall_28()); 
            	          
            	    }

            	    }
            	    break;
            	case 30 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12524:10: this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE
            	    {
            	    this_STATEMENT_TYPE_29=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets002.FOLLOW_RULE_STATEMENT_TYPE_in_ruleFeatureValue28315); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_STATEMENT_TYPE_29);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_STATEMENT_TYPE_29, grammarAccess.getFeatureValueAccess().getSTATEMENT_TYPETerminalRuleCall_29()); 
            	          
            	    }

            	    }
            	    break;
            	case 31 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12532:10: this_MAPPING_TYPE_30= RULE_MAPPING_TYPE
            	    {
            	    this_MAPPING_TYPE_30=(Token)match(input,RULE_MAPPING_TYPE,FollowSets002.FOLLOW_RULE_MAPPING_TYPE_in_ruleFeatureValue28341); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_MAPPING_TYPE_30);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_MAPPING_TYPE_30, grammarAccess.getFeatureValueAccess().getMAPPING_TYPETerminalRuleCall_30()); 
            	          
            	    }

            	    }
            	    break;
            	case 32 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12540:10: this_OPTION_TYPE_31= RULE_OPTION_TYPE
            	    {
            	    this_OPTION_TYPE_31=(Token)match(input,RULE_OPTION_TYPE,FollowSets002.FOLLOW_RULE_OPTION_TYPE_in_ruleFeatureValue28367); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_OPTION_TYPE_31);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_OPTION_TYPE_31, grammarAccess.getFeatureValueAccess().getOPTION_TYPETerminalRuleCall_31()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt326 >= 1 ) break loop326;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(326, input);
                        throw eee;
                }
                cnt326++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureValue"


    // $ANTLR start "entryRulePojoType"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12555:1: entryRulePojoType returns [EObject current=null] : iv_rulePojoType= rulePojoType EOF ;
    public final EObject entryRulePojoType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoType = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12556:2: (iv_rulePojoType= rulePojoType EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12557:2: iv_rulePojoType= rulePojoType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoTypeRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoType_in_entryRulePojoType28413);
            iv_rulePojoType=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoType; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoType28423); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoType"


    // $ANTLR start "rulePojoType"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12564:1: rulePojoType returns [EObject current=null] : ( ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_2= RULE_IDENT ) ) ) (this_LESS_THAN_3= RULE_LESS_THAN ( (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_6= RULE_IDENT ) ) ) this_MORE_THAN_7= RULE_MORE_THAN )? ( (lv_array_8_0= '[]' ) )? ) ;
    public final EObject rulePojoType() throws RecognitionException {
        EObject current = null;

        Token this_COLON_0=null;
        Token otherlv_2=null;
        Token this_LESS_THAN_3=null;
        Token this_COLON_4=null;
        Token otherlv_6=null;
        Token this_MORE_THAN_7=null;
        Token lv_array_8_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12567:28: ( ( ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_2= RULE_IDENT ) ) ) (this_LESS_THAN_3= RULE_LESS_THAN ( (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_6= RULE_IDENT ) ) ) this_MORE_THAN_7= RULE_MORE_THAN )? ( (lv_array_8_0= '[]' ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12568:1: ( ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_2= RULE_IDENT ) ) ) (this_LESS_THAN_3= RULE_LESS_THAN ( (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_6= RULE_IDENT ) ) ) this_MORE_THAN_7= RULE_MORE_THAN )? ( (lv_array_8_0= '[]' ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12568:1: ( ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_2= RULE_IDENT ) ) ) (this_LESS_THAN_3= RULE_LESS_THAN ( (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_6= RULE_IDENT ) ) ) this_MORE_THAN_7= RULE_MORE_THAN )? ( (lv_array_8_0= '[]' ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12568:2: ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_2= RULE_IDENT ) ) ) (this_LESS_THAN_3= RULE_LESS_THAN ( (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_6= RULE_IDENT ) ) ) this_MORE_THAN_7= RULE_MORE_THAN )? ( (lv_array_8_0= '[]' ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12568:2: ( (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_2= RULE_IDENT ) ) )
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==RULE_COLON) ) {
                alt327=1;
            }
            else if ( (LA327_0==RULE_IDENT) ) {
                alt327=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 327, 0, input);

                throw nvae;
            }
            switch (alt327) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12568:3: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12568:3: (this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12568:4: this_COLON_0= RULE_COLON ( ( ruleQualifiedName ) )
                    {
                    this_COLON_0=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoType28461); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_0, grammarAccess.getPojoTypeAccess().getCOLONTerminalRuleCall_0_0_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12572:1: ( ( ruleQualifiedName ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12573:1: ( ruleQualifiedName )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12573:1: ( ruleQualifiedName )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12574:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoTypeRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojoTypeAccess().getTypeJvmTypeCrossReference_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_rulePojoType28483);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12588:6: ( (otherlv_2= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12588:6: ( (otherlv_2= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12589:1: (otherlv_2= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12589:1: (otherlv_2= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12590:3: otherlv_2= RULE_IDENT
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoTypeRule());
                      	        }
                              
                    }
                    otherlv_2=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoType28510); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_2, grammarAccess.getPojoTypeAccess().getRefPojoEntityCrossReference_0_1_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12601:3: (this_LESS_THAN_3= RULE_LESS_THAN ( (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_6= RULE_IDENT ) ) ) this_MORE_THAN_7= RULE_MORE_THAN )?
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==RULE_LESS_THAN) ) {
                alt329=1;
            }
            switch (alt329) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12601:4: this_LESS_THAN_3= RULE_LESS_THAN ( (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_6= RULE_IDENT ) ) ) this_MORE_THAN_7= RULE_MORE_THAN
                    {
                    this_LESS_THAN_3=(Token)match(input,RULE_LESS_THAN,FollowSets002.FOLLOW_RULE_LESS_THAN_in_rulePojoType28523); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LESS_THAN_3, grammarAccess.getPojoTypeAccess().getLESS_THANTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12605:1: ( (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_6= RULE_IDENT ) ) )
                    int alt328=2;
                    int LA328_0 = input.LA(1);

                    if ( (LA328_0==RULE_COLON) ) {
                        alt328=1;
                    }
                    else if ( (LA328_0==RULE_IDENT) ) {
                        alt328=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 328, 0, input);

                        throw nvae;
                    }
                    switch (alt328) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12605:2: (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12605:2: (this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12605:3: this_COLON_4= RULE_COLON ( ( ruleQualifiedName ) )
                            {
                            this_COLON_4=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoType28535); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_4, grammarAccess.getPojoTypeAccess().getCOLONTerminalRuleCall_1_1_0_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12609:1: ( ( ruleQualifiedName ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12610:1: ( ruleQualifiedName )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12610:1: ( ruleQualifiedName )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12611:3: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getPojoTypeAccess().getGtypeJvmTypeCrossReference_1_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_rulePojoType28557);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12625:6: ( (otherlv_6= RULE_IDENT ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12625:6: ( (otherlv_6= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12626:1: (otherlv_6= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12626:1: (otherlv_6= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12627:3: otherlv_6= RULE_IDENT
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                      
                            }
                            otherlv_6=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoType28584); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		newLeafNode(otherlv_6, grammarAccess.getPojoTypeAccess().getGrefPojoEntityCrossReference_1_1_1_0()); 
                              	
                            }

                            }


                            }


                            }
                            break;

                    }

                    this_MORE_THAN_7=(Token)match(input,RULE_MORE_THAN,FollowSets002.FOLLOW_RULE_MORE_THAN_in_rulePojoType28596); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MORE_THAN_7, grammarAccess.getPojoTypeAccess().getMORE_THANTerminalRuleCall_1_2()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12642:3: ( (lv_array_8_0= '[]' ) )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==135) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12643:1: (lv_array_8_0= '[]' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12643:1: (lv_array_8_0= '[]' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12644:3: lv_array_8_0= '[]'
                    {
                    lv_array_8_0=(Token)match(input,135,FollowSets002.FOLLOW_135_in_rulePojoType28615); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_array_8_0, grammarAccess.getPojoTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoTypeRule());
                      	        }
                             		setWithLastConsumed(current, "array", true, "[]");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoType"


    // $ANTLR start "entryRulePackageDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12665:1: entryRulePackageDirective returns [EObject current=null] : iv_rulePackageDirective= rulePackageDirective EOF ;
    public final EObject entryRulePackageDirective() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageDirective = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12669:2: (iv_rulePackageDirective= rulePackageDirective EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12670:2: iv_rulePackageDirective= rulePackageDirective EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageDirectiveRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePackageDirective_in_entryRulePackageDirective28671);
            iv_rulePackageDirective=rulePackageDirective();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageDirective; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePackageDirective28681); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePackageDirective"


    // $ANTLR start "rulePackageDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12680:1: rulePackageDirective returns [EObject current=null] : ( ( () otherlv_1= '#Suffix' this_LPAREN_2= RULE_LPAREN ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#Implementation' this_LPAREN_7= RULE_LPAREN ( ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) ) ) this_RPAREN_9= RULE_RPAREN ) ) ;
    public final EObject rulePackageDirective() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_LPAREN_2=null;
        Token lv_suffix_3_1=null;
        Token lv_suffix_3_2=null;
        Token this_RPAREN_4=null;
        Token otherlv_6=null;
        Token this_LPAREN_7=null;
        Token lv_implementation_8_1=null;
        Token lv_implementation_8_2=null;
        Token this_RPAREN_9=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12684:28: ( ( ( () otherlv_1= '#Suffix' this_LPAREN_2= RULE_LPAREN ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#Implementation' this_LPAREN_7= RULE_LPAREN ( ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) ) ) this_RPAREN_9= RULE_RPAREN ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12685:1: ( ( () otherlv_1= '#Suffix' this_LPAREN_2= RULE_LPAREN ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#Implementation' this_LPAREN_7= RULE_LPAREN ( ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) ) ) this_RPAREN_9= RULE_RPAREN ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12685:1: ( ( () otherlv_1= '#Suffix' this_LPAREN_2= RULE_LPAREN ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#Implementation' this_LPAREN_7= RULE_LPAREN ( ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) ) ) this_RPAREN_9= RULE_RPAREN ) )
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==136) ) {
                alt333=1;
            }
            else if ( (LA333_0==137) ) {
                alt333=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 333, 0, input);

                throw nvae;
            }
            switch (alt333) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12685:2: ( () otherlv_1= '#Suffix' this_LPAREN_2= RULE_LPAREN ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) this_RPAREN_4= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12685:2: ( () otherlv_1= '#Suffix' this_LPAREN_2= RULE_LPAREN ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) this_RPAREN_4= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12685:3: () otherlv_1= '#Suffix' this_LPAREN_2= RULE_LPAREN ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) this_RPAREN_4= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12685:3: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12686:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPackageDirectiveAccess().getPackageDirectiveSuffixAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,136,FollowSets002.FOLLOW_136_in_rulePackageDirective28732); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPackageDirectiveAccess().getSuffixKeyword_0_1());
                          
                    }
                    this_LPAREN_2=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePackageDirective28743); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_2, grammarAccess.getPackageDirectiveAccess().getLPARENTerminalRuleCall_0_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12699:1: ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12700:1: ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12700:1: ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12701:1: (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12701:1: (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER )
                    int alt331=2;
                    int LA331_0 = input.LA(1);

                    if ( (LA331_0==RULE_IDENT) ) {
                        alt331=1;
                    }
                    else if ( (LA331_0==RULE_NUMBER) ) {
                        alt331=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 331, 0, input);

                        throw nvae;
                    }
                    switch (alt331) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12702:3: lv_suffix_3_1= RULE_IDENT
                            {
                            lv_suffix_3_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePackageDirective28761); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_suffix_3_1, grammarAccess.getPackageDirectiveAccess().getSuffixIDENTTerminalRuleCall_0_3_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPackageDirectiveRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"suffix",
                                      		lv_suffix_3_1, 
                                      		"IDENT");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12717:8: lv_suffix_3_2= RULE_NUMBER
                            {
                            lv_suffix_3_2=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePackageDirective28781); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_suffix_3_2, grammarAccess.getPackageDirectiveAccess().getSuffixNUMBERTerminalRuleCall_0_3_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPackageDirectiveRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"suffix",
                                      		lv_suffix_3_2, 
                                      		"NUMBER");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    this_RPAREN_4=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePackageDirective28800); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_4, grammarAccess.getPackageDirectiveAccess().getRPARENTerminalRuleCall_0_4()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12740:6: ( () otherlv_6= '#Implementation' this_LPAREN_7= RULE_LPAREN ( ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) ) ) this_RPAREN_9= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12740:6: ( () otherlv_6= '#Implementation' this_LPAREN_7= RULE_LPAREN ( ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) ) ) this_RPAREN_9= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12740:7: () otherlv_6= '#Implementation' this_LPAREN_7= RULE_LPAREN ( ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) ) ) this_RPAREN_9= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12740:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12741:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPackageDirectiveAccess().getPackageDirectiveImplementationAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_6=(Token)match(input,137,FollowSets002.FOLLOW_137_in_rulePackageDirective28828); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getPackageDirectiveAccess().getImplementationKeyword_1_1());
                          
                    }
                    this_LPAREN_7=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePackageDirective28839); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_7, grammarAccess.getPackageDirectiveAccess().getLPARENTerminalRuleCall_1_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12754:1: ( ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12755:1: ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12755:1: ( (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12756:1: (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12756:1: (lv_implementation_8_1= RULE_IDENT | lv_implementation_8_2= RULE_IDENT_DOT )
                    int alt332=2;
                    int LA332_0 = input.LA(1);

                    if ( (LA332_0==RULE_IDENT) ) {
                        alt332=1;
                    }
                    else if ( (LA332_0==RULE_IDENT_DOT) ) {
                        alt332=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 332, 0, input);

                        throw nvae;
                    }
                    switch (alt332) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12757:3: lv_implementation_8_1= RULE_IDENT
                            {
                            lv_implementation_8_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePackageDirective28857); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_implementation_8_1, grammarAccess.getPackageDirectiveAccess().getImplementationIDENTTerminalRuleCall_1_3_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPackageDirectiveRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"implementation",
                                      		lv_implementation_8_1, 
                                      		"IDENT");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12772:8: lv_implementation_8_2= RULE_IDENT_DOT
                            {
                            lv_implementation_8_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_rulePackageDirective28877); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_implementation_8_2, grammarAccess.getPackageDirectiveAccess().getImplementationIDENT_DOTTerminalRuleCall_1_3_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPackageDirectiveRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"implementation",
                                      		lv_implementation_8_2, 
                                      		"IDENT_DOT");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    this_RPAREN_9=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePackageDirective28896); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_9, grammarAccess.getPackageDirectiveAccess().getRPARENTerminalRuleCall_1_4()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePackageDirective"


    // $ANTLR start "entryRulePackage"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12805:1: entryRulePackage returns [EObject current=null] : iv_rulePackage= rulePackage EOF ;
    public final EObject entryRulePackage() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackage = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12809:2: (iv_rulePackage= rulePackage EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12810:2: iv_rulePackage= rulePackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePackage_in_entryRulePackage28942);
            iv_rulePackage=rulePackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackage; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePackage28952); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePackage"


    // $ANTLR start "rulePackage"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12820:1: rulePackage returns [EObject current=null] : ( ( (lv_directives_0_0= rulePackageDirective ) )* otherlv_1= 'package' ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT ) ) ) this_LBRACE_3= RULE_LBRACE ( (lv_elements_4_0= ruleAbstractPojoEntity ) )* this_RBRACE_5= RULE_RBRACE ) ;
    public final EObject rulePackage() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        Token this_LBRACE_3=null;
        Token this_RBRACE_5=null;
        EObject lv_directives_0_0 = null;

        EObject lv_elements_4_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12824:28: ( ( ( (lv_directives_0_0= rulePackageDirective ) )* otherlv_1= 'package' ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT ) ) ) this_LBRACE_3= RULE_LBRACE ( (lv_elements_4_0= ruleAbstractPojoEntity ) )* this_RBRACE_5= RULE_RBRACE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12825:1: ( ( (lv_directives_0_0= rulePackageDirective ) )* otherlv_1= 'package' ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT ) ) ) this_LBRACE_3= RULE_LBRACE ( (lv_elements_4_0= ruleAbstractPojoEntity ) )* this_RBRACE_5= RULE_RBRACE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12825:1: ( ( (lv_directives_0_0= rulePackageDirective ) )* otherlv_1= 'package' ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT ) ) ) this_LBRACE_3= RULE_LBRACE ( (lv_elements_4_0= ruleAbstractPojoEntity ) )* this_RBRACE_5= RULE_RBRACE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12825:2: ( (lv_directives_0_0= rulePackageDirective ) )* otherlv_1= 'package' ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT ) ) ) this_LBRACE_3= RULE_LBRACE ( (lv_elements_4_0= ruleAbstractPojoEntity ) )* this_RBRACE_5= RULE_RBRACE
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12825:2: ( (lv_directives_0_0= rulePackageDirective ) )*
            loop334:
            do {
                int alt334=2;
                int LA334_0 = input.LA(1);

                if ( ((LA334_0>=136 && LA334_0<=137)) ) {
                    alt334=1;
                }


                switch (alt334) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12826:1: (lv_directives_0_0= rulePackageDirective )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12826:1: (lv_directives_0_0= rulePackageDirective )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12827:3: lv_directives_0_0= rulePackageDirective
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPackageAccess().getDirectivesPackageDirectiveParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePackageDirective_in_rulePackage29002);
            	    lv_directives_0_0=rulePackageDirective();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPackageRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"directives",
            	              		lv_directives_0_0, 
            	              		"PackageDirective");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop334;
                }
            } while (true);

            otherlv_1=(Token)match(input,112,FollowSets002.FOLLOW_112_in_rulePackage29015); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPackageAccess().getPackageKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12847:1: ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12848:1: ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12848:1: ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12849:1: (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12849:1: (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_IDENT_DOT )
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==RULE_IDENT) ) {
                alt335=1;
            }
            else if ( (LA335_0==RULE_IDENT_DOT) ) {
                alt335=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 335, 0, input);

                throw nvae;
            }
            switch (alt335) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12850:3: lv_name_2_1= RULE_IDENT
                    {
                    lv_name_2_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePackage29034); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_1, grammarAccess.getPackageAccess().getNameIDENTTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPackageRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12865:8: lv_name_2_2= RULE_IDENT_DOT
                    {
                    lv_name_2_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_rulePackage29054); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_2, grammarAccess.getPackageAccess().getNameIDENT_DOTTerminalRuleCall_2_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPackageRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }

            this_LBRACE_3=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_rulePackage29073); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LBRACE_3, grammarAccess.getPackageAccess().getLBRACETerminalRuleCall_3()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12887:1: ( (lv_elements_4_0= ruleAbstractPojoEntity ) )*
            loop336:
            do {
                int alt336=2;
                int LA336_0 = input.LA(1);

                if ( (LA336_0==RULE_AT||LA336_0==112||LA336_0==131||(LA336_0>=136 && LA336_0<=147)||(LA336_0>=152 && LA336_0<=161)||LA336_0==172||(LA336_0>=174 && LA336_0<=182)) ) {
                    alt336=1;
                }


                switch (alt336) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12888:1: (lv_elements_4_0= ruleAbstractPojoEntity )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12888:1: (lv_elements_4_0= ruleAbstractPojoEntity )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12889:3: lv_elements_4_0= ruleAbstractPojoEntity
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPackageAccess().getElementsAbstractPojoEntityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleAbstractPojoEntity_in_rulePackage29093);
            	    lv_elements_4_0=ruleAbstractPojoEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPackageRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_4_0, 
            	              		"AbstractPojoEntity");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop336;
                }
            } while (true);

            this_RBRACE_5=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_rulePackage29105); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RBRACE_5, grammarAccess.getPackageAccess().getRBRACETerminalRuleCall_5()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePackage"


    // $ANTLR start "entryRuleAnnotationDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12920:1: entryRuleAnnotationDirective returns [EObject current=null] : iv_ruleAnnotationDirective= ruleAnnotationDirective EOF ;
    public final EObject entryRuleAnnotationDirective() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationDirective = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12924:2: (iv_ruleAnnotationDirective= ruleAnnotationDirective EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12925:2: iv_ruleAnnotationDirective= ruleAnnotationDirective EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationDirectiveRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleAnnotationDirective_in_entryRuleAnnotationDirective29150);
            iv_ruleAnnotationDirective=ruleAnnotationDirective();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationDirective; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleAnnotationDirective29160); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationDirective"


    // $ANTLR start "ruleAnnotationDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12935:1: ruleAnnotationDirective returns [EObject current=null] : ( ( () otherlv_1= '#Conflict' ) | ( () otherlv_3= '#Static' ) | ( () otherlv_5= '#Constructor' ) | ( () otherlv_7= '#Standard' ) | ( () otherlv_9= '#Setter' ) | ( () otherlv_11= '#Getter' ) | ( () otherlv_13= '#Attribute' ) ) ;
    public final EObject ruleAnnotationDirective() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12939:28: ( ( ( () otherlv_1= '#Conflict' ) | ( () otherlv_3= '#Static' ) | ( () otherlv_5= '#Constructor' ) | ( () otherlv_7= '#Standard' ) | ( () otherlv_9= '#Setter' ) | ( () otherlv_11= '#Getter' ) | ( () otherlv_13= '#Attribute' ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12940:1: ( ( () otherlv_1= '#Conflict' ) | ( () otherlv_3= '#Static' ) | ( () otherlv_5= '#Constructor' ) | ( () otherlv_7= '#Standard' ) | ( () otherlv_9= '#Setter' ) | ( () otherlv_11= '#Getter' ) | ( () otherlv_13= '#Attribute' ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12940:1: ( ( () otherlv_1= '#Conflict' ) | ( () otherlv_3= '#Static' ) | ( () otherlv_5= '#Constructor' ) | ( () otherlv_7= '#Standard' ) | ( () otherlv_9= '#Setter' ) | ( () otherlv_11= '#Getter' ) | ( () otherlv_13= '#Attribute' ) )
            int alt337=7;
            switch ( input.LA(1) ) {
            case 138:
                {
                alt337=1;
                }
                break;
            case 139:
                {
                alt337=2;
                }
                break;
            case 140:
                {
                alt337=3;
                }
                break;
            case 141:
                {
                alt337=4;
                }
                break;
            case 142:
                {
                alt337=5;
                }
                break;
            case 143:
                {
                alt337=6;
                }
                break;
            case 144:
                {
                alt337=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 337, 0, input);

                throw nvae;
            }

            switch (alt337) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12940:2: ( () otherlv_1= '#Conflict' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12940:2: ( () otherlv_1= '#Conflict' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12940:3: () otherlv_1= '#Conflict'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12940:3: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12941:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAnnotationDirectiveAccess().getAnnotationDirectiveConflictAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,138,FollowSets002.FOLLOW_138_in_ruleAnnotationDirective29211); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getAnnotationDirectiveAccess().getConflictKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12951:6: ( () otherlv_3= '#Static' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12951:6: ( () otherlv_3= '#Static' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12951:7: () otherlv_3= '#Static'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12951:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12952:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAnnotationDirectiveAccess().getAnnotationDirectiveStaticAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_3=(Token)match(input,139,FollowSets002.FOLLOW_139_in_ruleAnnotationDirective29240); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getAnnotationDirectiveAccess().getStaticKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12962:6: ( () otherlv_5= '#Constructor' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12962:6: ( () otherlv_5= '#Constructor' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12962:7: () otherlv_5= '#Constructor'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12962:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12963:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAnnotationDirectiveAccess().getAnnotationDirectiveConstructorAction_2_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,140,FollowSets002.FOLLOW_140_in_ruleAnnotationDirective29269); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAnnotationDirectiveAccess().getConstructorKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12973:6: ( () otherlv_7= '#Standard' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12973:6: ( () otherlv_7= '#Standard' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12973:7: () otherlv_7= '#Standard'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12973:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12974:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAnnotationDirectiveAccess().getAnnotationDirectiveStandardAction_3_0(),
                                  current);
                          
                    }

                    }

                    otherlv_7=(Token)match(input,141,FollowSets002.FOLLOW_141_in_ruleAnnotationDirective29298); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getAnnotationDirectiveAccess().getStandardKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12984:6: ( () otherlv_9= '#Setter' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12984:6: ( () otherlv_9= '#Setter' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12984:7: () otherlv_9= '#Setter'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12984:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12985:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAnnotationDirectiveAccess().getAnnotationDirectiveSetterAction_4_0(),
                                  current);
                          
                    }

                    }

                    otherlv_9=(Token)match(input,142,FollowSets002.FOLLOW_142_in_ruleAnnotationDirective29327); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getAnnotationDirectiveAccess().getSetterKeyword_4_1());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12995:6: ( () otherlv_11= '#Getter' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12995:6: ( () otherlv_11= '#Getter' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12995:7: () otherlv_11= '#Getter'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12995:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12996:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAnnotationDirectiveAccess().getAnnotationDirectiveGetterAction_5_0(),
                                  current);
                          
                    }

                    }

                    otherlv_11=(Token)match(input,143,FollowSets002.FOLLOW_143_in_ruleAnnotationDirective29356); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getAnnotationDirectiveAccess().getGetterKeyword_5_1());
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13006:6: ( () otherlv_13= '#Attribute' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13006:6: ( () otherlv_13= '#Attribute' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13006:7: () otherlv_13= '#Attribute'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13006:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13007:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAnnotationDirectiveAccess().getAnnotationDirectiveAttributeAction_6_0(),
                                  current);
                          
                    }

                    }

                    otherlv_13=(Token)match(input,144,FollowSets002.FOLLOW_144_in_ruleAnnotationDirective29385); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getAnnotationDirectiveAccess().getAttributeKeyword_6_1());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAnnotationDirective"


    // $ANTLR start "entryRuleAnnotation"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13027:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13028:2: (iv_ruleAnnotation= ruleAnnotation EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13029:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_entryRuleAnnotation29426);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleAnnotation29436); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13036:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_directives_0_0= ruleAnnotationDirective ) )* this_AT_1= RULE_AT ( ( ruleQualifiedName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_features_4_0= ruleAnnotationProperty ) ) (this_COMMA_5= RULE_COMMA ( (lv_features_6_0= ruleAnnotationProperty ) ) )* this_RPAREN_7= RULE_RPAREN )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token this_AT_1=null;
        Token this_LPAREN_3=null;
        Token this_COMMA_5=null;
        Token this_RPAREN_7=null;
        EObject lv_directives_0_0 = null;

        EObject lv_features_4_0 = null;

        EObject lv_features_6_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13039:28: ( ( ( (lv_directives_0_0= ruleAnnotationDirective ) )* this_AT_1= RULE_AT ( ( ruleQualifiedName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_features_4_0= ruleAnnotationProperty ) ) (this_COMMA_5= RULE_COMMA ( (lv_features_6_0= ruleAnnotationProperty ) ) )* this_RPAREN_7= RULE_RPAREN )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13040:1: ( ( (lv_directives_0_0= ruleAnnotationDirective ) )* this_AT_1= RULE_AT ( ( ruleQualifiedName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_features_4_0= ruleAnnotationProperty ) ) (this_COMMA_5= RULE_COMMA ( (lv_features_6_0= ruleAnnotationProperty ) ) )* this_RPAREN_7= RULE_RPAREN )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13040:1: ( ( (lv_directives_0_0= ruleAnnotationDirective ) )* this_AT_1= RULE_AT ( ( ruleQualifiedName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_features_4_0= ruleAnnotationProperty ) ) (this_COMMA_5= RULE_COMMA ( (lv_features_6_0= ruleAnnotationProperty ) ) )* this_RPAREN_7= RULE_RPAREN )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13040:2: ( (lv_directives_0_0= ruleAnnotationDirective ) )* this_AT_1= RULE_AT ( ( ruleQualifiedName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_features_4_0= ruleAnnotationProperty ) ) (this_COMMA_5= RULE_COMMA ( (lv_features_6_0= ruleAnnotationProperty ) ) )* this_RPAREN_7= RULE_RPAREN )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13040:2: ( (lv_directives_0_0= ruleAnnotationDirective ) )*
            loop338:
            do {
                int alt338=2;
                int LA338_0 = input.LA(1);

                if ( ((LA338_0>=138 && LA338_0<=144)) ) {
                    alt338=1;
                }


                switch (alt338) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13041:1: (lv_directives_0_0= ruleAnnotationDirective )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13041:1: (lv_directives_0_0= ruleAnnotationDirective )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13042:3: lv_directives_0_0= ruleAnnotationDirective
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotationAccess().getDirectivesAnnotationDirectiveParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleAnnotationDirective_in_ruleAnnotation29482);
            	    lv_directives_0_0=ruleAnnotationDirective();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"directives",
            	              		lv_directives_0_0, 
            	              		"AnnotationDirective");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop338;
                }
            } while (true);

            this_AT_1=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_ruleAnnotation29494); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_AT_1, grammarAccess.getAnnotationAccess().getATTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13062:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13063:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13063:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13064:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAnnotationRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotationAccess().getTypeJvmTypeCrossReference_2_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleAnnotation29516);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13077:2: ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_features_4_0= ruleAnnotationProperty ) ) (this_COMMA_5= RULE_COMMA ( (lv_features_6_0= ruleAnnotationProperty ) ) )* this_RPAREN_7= RULE_RPAREN )?
            int alt340=2;
            int LA340_0 = input.LA(1);

            if ( (LA340_0==RULE_LPAREN) && (synpred12_InternalProcessorDsl())) {
                alt340=1;
            }
            switch (alt340) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13077:3: ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_features_4_0= ruleAnnotationProperty ) ) (this_COMMA_5= RULE_COMMA ( (lv_features_6_0= ruleAnnotationProperty ) ) )* this_RPAREN_7= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13077:3: ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13077:4: ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN
                    {
                    this_LPAREN_3=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleAnnotation29534); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_3, grammarAccess.getAnnotationAccess().getLPARENTerminalRuleCall_3_0()); 
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13081:2: ( (lv_features_4_0= ruleAnnotationProperty ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13082:1: (lv_features_4_0= ruleAnnotationProperty )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13082:1: (lv_features_4_0= ruleAnnotationProperty )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13083:3: lv_features_4_0= ruleAnnotationProperty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotationAccess().getFeaturesAnnotationPropertyParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleAnnotationProperty_in_ruleAnnotation29555);
                    lv_features_4_0=ruleAnnotationProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotationRule());
                      	        }
                             		add(
                             			current, 
                             			"features",
                              		lv_features_4_0, 
                              		"AnnotationProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13099:2: (this_COMMA_5= RULE_COMMA ( (lv_features_6_0= ruleAnnotationProperty ) ) )*
                    loop339:
                    do {
                        int alt339=2;
                        int LA339_0 = input.LA(1);

                        if ( (LA339_0==RULE_COMMA) ) {
                            alt339=1;
                        }


                        switch (alt339) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13099:3: this_COMMA_5= RULE_COMMA ( (lv_features_6_0= ruleAnnotationProperty ) )
                    	    {
                    	    this_COMMA_5=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleAnnotation29567); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_5, grammarAccess.getAnnotationAccess().getCOMMATerminalRuleCall_3_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13103:1: ( (lv_features_6_0= ruleAnnotationProperty ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13104:1: (lv_features_6_0= ruleAnnotationProperty )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13104:1: (lv_features_6_0= ruleAnnotationProperty )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13105:3: lv_features_6_0= ruleAnnotationProperty
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotationAccess().getFeaturesAnnotationPropertyParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets002.FOLLOW_ruleAnnotationProperty_in_ruleAnnotation29587);
                    	    lv_features_6_0=ruleAnnotationProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"features",
                    	              		lv_features_6_0, 
                    	              		"AnnotationProperty");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop339;
                        }
                    } while (true);

                    this_RPAREN_7=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleAnnotation29600); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_7, grammarAccess.getAnnotationAccess().getRPARENTerminalRuleCall_3_3()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleAnnotationProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13133:1: entryRuleAnnotationProperty returns [EObject current=null] : iv_ruleAnnotationProperty= ruleAnnotationProperty EOF ;
    public final EObject entryRuleAnnotationProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13134:2: (iv_ruleAnnotationProperty= ruleAnnotationProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13135:2: iv_ruleAnnotationProperty= ruleAnnotationProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationPropertyRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleAnnotationProperty_in_entryRuleAnnotationProperty29637);
            iv_ruleAnnotationProperty=ruleAnnotationProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationProperty; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleAnnotationProperty29647); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationProperty"


    // $ANTLR start "ruleAnnotationProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13142:1: ruleAnnotationProperty returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_number_2_0= RULE_NUMBER ) ) | ( (lv_value_3_0= RULE_STRING_VALUE ) ) | ( (lv_constant_4_0= RULE_IDENT ) ) ) ( (this_COLON_5= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_7= RULE_IDENT ) ) )? ) ;
    public final EObject ruleAnnotationProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_EQUALS_1=null;
        Token lv_number_2_0=null;
        Token lv_value_3_0=null;
        Token lv_constant_4_0=null;
        Token this_COLON_5=null;
        Token otherlv_7=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13145:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_number_2_0= RULE_NUMBER ) ) | ( (lv_value_3_0= RULE_STRING_VALUE ) ) | ( (lv_constant_4_0= RULE_IDENT ) ) ) ( (this_COLON_5= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_7= RULE_IDENT ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13146:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_number_2_0= RULE_NUMBER ) ) | ( (lv_value_3_0= RULE_STRING_VALUE ) ) | ( (lv_constant_4_0= RULE_IDENT ) ) ) ( (this_COLON_5= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_7= RULE_IDENT ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13146:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_number_2_0= RULE_NUMBER ) ) | ( (lv_value_3_0= RULE_STRING_VALUE ) ) | ( (lv_constant_4_0= RULE_IDENT ) ) ) ( (this_COLON_5= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_7= RULE_IDENT ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13146:2: ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_number_2_0= RULE_NUMBER ) ) | ( (lv_value_3_0= RULE_STRING_VALUE ) ) | ( (lv_constant_4_0= RULE_IDENT ) ) ) ( (this_COLON_5= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_7= RULE_IDENT ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13146:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13147:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13147:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13148:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29689); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getAnnotationPropertyAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_EQUALS_1=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleAnnotationProperty29705); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EQUALS_1, grammarAccess.getAnnotationPropertyAccess().getEQUALSTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13168:1: ( ( (lv_number_2_0= RULE_NUMBER ) ) | ( (lv_value_3_0= RULE_STRING_VALUE ) ) | ( (lv_constant_4_0= RULE_IDENT ) ) )
            int alt341=3;
            switch ( input.LA(1) ) {
            case RULE_NUMBER:
                {
                alt341=1;
                }
                break;
            case RULE_STRING_VALUE:
                {
                alt341=2;
                }
                break;
            case RULE_IDENT:
                {
                alt341=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 341, 0, input);

                throw nvae;
            }

            switch (alt341) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13168:2: ( (lv_number_2_0= RULE_NUMBER ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13168:2: ( (lv_number_2_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13169:1: (lv_number_2_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13169:1: (lv_number_2_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13170:3: lv_number_2_0= RULE_NUMBER
                    {
                    lv_number_2_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleAnnotationProperty29722); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_number_2_0, grammarAccess.getAnnotationPropertyAccess().getNumberNUMBERTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"number",
                              		lv_number_2_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13187:6: ( (lv_value_3_0= RULE_STRING_VALUE ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13187:6: ( (lv_value_3_0= RULE_STRING_VALUE ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13188:1: (lv_value_3_0= RULE_STRING_VALUE )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13188:1: (lv_value_3_0= RULE_STRING_VALUE )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13189:3: lv_value_3_0= RULE_STRING_VALUE
                    {
                    lv_value_3_0=(Token)match(input,RULE_STRING_VALUE,FollowSets002.FOLLOW_RULE_STRING_VALUE_in_ruleAnnotationProperty29750); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_3_0, grammarAccess.getAnnotationPropertyAccess().getValueSTRING_VALUETerminalRuleCall_2_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"STRING_VALUE");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13206:6: ( (lv_constant_4_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13206:6: ( (lv_constant_4_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13207:1: (lv_constant_4_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13207:1: (lv_constant_4_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13208:3: lv_constant_4_0= RULE_IDENT
                    {
                    lv_constant_4_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29778); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_constant_4_0, grammarAccess.getAnnotationPropertyAccess().getConstantIDENTTerminalRuleCall_2_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"constant",
                              		lv_constant_4_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13224:3: ( (this_COLON_5= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_7= RULE_IDENT ) ) )?
            int alt342=3;
            int LA342_0 = input.LA(1);

            if ( (LA342_0==RULE_COLON) ) {
                alt342=1;
            }
            else if ( (LA342_0==RULE_IDENT) ) {
                alt342=2;
            }
            switch (alt342) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13224:4: (this_COLON_5= RULE_COLON ( ( ruleQualifiedName ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13224:4: (this_COLON_5= RULE_COLON ( ( ruleQualifiedName ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13224:5: this_COLON_5= RULE_COLON ( ( ruleQualifiedName ) )
                    {
                    this_COLON_5=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleAnnotationProperty29797); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_5, grammarAccess.getAnnotationPropertyAccess().getCOLONTerminalRuleCall_3_0_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13228:1: ( ( ruleQualifiedName ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13229:1: ( ruleQualifiedName )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13229:1: ( ruleQualifiedName )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13230:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotationPropertyAccess().getTypeJvmTypeCrossReference_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleAnnotationProperty29819);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13244:6: ( (otherlv_7= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13244:6: ( (otherlv_7= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13245:1: (otherlv_7= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13245:1: (otherlv_7= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13246:3: otherlv_7= RULE_IDENT
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                      	        }
                              
                    }
                    otherlv_7=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29846); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_7, grammarAccess.getAnnotationPropertyAccess().getRefPojoEntityCrossReference_3_1_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationProperty"


    // $ANTLR start "entryRuleEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13265:1: entryRuleEntity returns [EObject current=null] : iv_ruleEntity= ruleEntity EOF ;
    public final EObject entryRuleEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntity = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13266:2: (iv_ruleEntity= ruleEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13267:2: iv_ruleEntity= ruleEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEntity_in_entryRuleEntity29884);
            iv_ruleEntity=ruleEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEntity29894); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntity"


    // $ANTLR start "ruleEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13274:1: ruleEntity returns [EObject current=null] : (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity ) ;
    public final EObject ruleEntity() throws RecognitionException {
        EObject current = null;

        EObject this_PojoEntity_0 = null;

        EObject this_EnumEntity_1 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13277:28: ( (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13278:1: (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13278:1: (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity )
            int alt343=2;
            alt343 = dfa343.predict(input);
            switch (alt343) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13279:5: this_PojoEntity_0= rulePojoEntity
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEntityAccess().getPojoEntityParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_rulePojoEntity_in_ruleEntity29941);
                    this_PojoEntity_0=rulePojoEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PojoEntity_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13289:5: this_EnumEntity_1= ruleEnumEntity
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEntityAccess().getEnumEntityParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleEnumEntity_in_ruleEntity29968);
                    this_EnumEntity_1=ruleEnumEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnumEntity_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntity"


    // $ANTLR start "entryRuleAnnotatedEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13305:1: entryRuleAnnotatedEntity returns [EObject current=null] : iv_ruleAnnotatedEntity= ruleAnnotatedEntity EOF ;
    public final EObject entryRuleAnnotatedEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedEntity = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13306:2: (iv_ruleAnnotatedEntity= ruleAnnotatedEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13307:2: iv_ruleAnnotatedEntity= ruleAnnotatedEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleAnnotatedEntity_in_entryRuleAnnotatedEntity30003);
            iv_ruleAnnotatedEntity=ruleAnnotatedEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleAnnotatedEntity30013); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedEntity"


    // $ANTLR start "ruleAnnotatedEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13314:1: ruleAnnotatedEntity returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_entity_1_0= ruleEntity ) ) ) ;
    public final EObject ruleAnnotatedEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        EObject lv_entity_1_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13317:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_entity_1_0= ruleEntity ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13318:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_entity_1_0= ruleEntity ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13318:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_entity_1_0= ruleEntity ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13318:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_entity_1_0= ruleEntity ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13318:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop344:
            do {
                int alt344=2;
                int LA344_0 = input.LA(1);

                if ( (LA344_0==RULE_AT||(LA344_0>=138 && LA344_0<=144)) ) {
                    alt344=1;
                }


                switch (alt344) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13319:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13319:1: (lv_annotations_0_0= ruleAnnotation )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13320:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedEntityAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity30059);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop344;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13336:3: ( (lv_entity_1_0= ruleEntity ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13337:1: (lv_entity_1_0= ruleEntity )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13337:1: (lv_entity_1_0= ruleEntity )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13338:3: lv_entity_1_0= ruleEntity
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedEntityAccess().getEntityEntityParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleEntity_in_ruleAnnotatedEntity30081);
            lv_entity_1_0=ruleEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedEntityRule());
              	        }
                     		set(
                     			current, 
                     			"entity",
                      		lv_entity_1_0, 
                      		"Entity");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedEntity"


    // $ANTLR start "entryRuleAbstractPojoEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13362:1: entryRuleAbstractPojoEntity returns [EObject current=null] : iv_ruleAbstractPojoEntity= ruleAbstractPojoEntity EOF ;
    public final EObject entryRuleAbstractPojoEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractPojoEntity = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13366:2: (iv_ruleAbstractPojoEntity= ruleAbstractPojoEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13367:2: iv_ruleAbstractPojoEntity= ruleAbstractPojoEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractPojoEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleAbstractPojoEntity_in_entryRuleAbstractPojoEntity30123);
            iv_ruleAbstractPojoEntity=ruleAbstractPojoEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractPojoEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleAbstractPojoEntity30133); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractPojoEntity"


    // $ANTLR start "ruleAbstractPojoEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13377:1: ruleAbstractPojoEntity returns [EObject current=null] : (this_Package_0= rulePackage | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_PojoDao_5= rulePojoDao ) ;
    public final EObject ruleAbstractPojoEntity() throws RecognitionException {
        EObject current = null;

        EObject this_Package_0 = null;

        EObject this_AnnotatedEntity_1 = null;

        EObject this_Import_2 = null;

        EObject this_Implements_3 = null;

        EObject this_Extends_4 = null;

        EObject this_PojoDao_5 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13381:28: ( (this_Package_0= rulePackage | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_PojoDao_5= rulePojoDao ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13382:1: (this_Package_0= rulePackage | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_PojoDao_5= rulePojoDao )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13382:1: (this_Package_0= rulePackage | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_PojoDao_5= rulePojoDao )
            int alt345=6;
            alt345 = dfa345.predict(input);
            switch (alt345) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13383:5: this_Package_0= rulePackage
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getPackageParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_rulePackage_in_ruleAbstractPojoEntity30184);
                    this_Package_0=rulePackage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Package_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13393:5: this_AnnotatedEntity_1= ruleAnnotatedEntity
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getAnnotatedEntityParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleAnnotatedEntity_in_ruleAbstractPojoEntity30211);
                    this_AnnotatedEntity_1=ruleAnnotatedEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AnnotatedEntity_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13403:5: this_Import_2= ruleImport
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getImportParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleImport_in_ruleAbstractPojoEntity30238);
                    this_Import_2=ruleImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Import_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13413:5: this_Implements_3= ruleImplements
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getImplementsParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleImplements_in_ruleAbstractPojoEntity30265);
                    this_Implements_3=ruleImplements();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Implements_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13423:5: this_Extends_4= ruleExtends
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getExtendsParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleExtends_in_ruleAbstractPojoEntity30292);
                    this_Extends_4=ruleExtends();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Extends_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13433:5: this_PojoDao_5= rulePojoDao
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getPojoDaoParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_rulePojoDao_in_ruleAbstractPojoEntity30319);
                    this_PojoDao_5=rulePojoDao();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PojoDao_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAbstractPojoEntity"


    // $ANTLR start "entryRuleImport"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13452:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13456:2: (iv_ruleImport= ruleImport EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13457:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleImport_in_entryRuleImport30364);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleImport30374); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13467:1: ruleImport returns [EObject current=null] : (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_importedNamespace_1_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13471:28: ( (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13472:1: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13472:1: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13472:3: otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) )
            {
            otherlv_0=(Token)match(input,145,FollowSets002.FOLLOW_145_in_ruleImport30415); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13476:1: ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13477:1: (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13477:1: (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13478:3: lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedNameWithWildcard_in_ruleImport30436);
            lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImportRule());
              	        }
                     		set(
                     			current, 
                     			"importedNamespace",
                      		lv_importedNamespace_1_0, 
                      		"QualifiedNameWithWildcard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleImplementsExtendsDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13505:1: entryRuleImplementsExtendsDirective returns [EObject current=null] : iv_ruleImplementsExtendsDirective= ruleImplementsExtendsDirective EOF ;
    public final EObject entryRuleImplementsExtendsDirective() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplementsExtendsDirective = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13509:2: (iv_ruleImplementsExtendsDirective= ruleImplementsExtendsDirective EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13510:2: iv_ruleImplementsExtendsDirective= ruleImplementsExtendsDirective EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplementsExtendsDirectiveRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleImplementsExtendsDirective_in_entryRuleImplementsExtendsDirective30482);
            iv_ruleImplementsExtendsDirective=ruleImplementsExtendsDirective();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplementsExtendsDirective; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleImplementsExtendsDirective30492); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleImplementsExtendsDirective"


    // $ANTLR start "ruleImplementsExtendsDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13520:1: ruleImplementsExtendsDirective returns [EObject current=null] : ( () otherlv_1= '#Generics' ) ;
    public final EObject ruleImplementsExtendsDirective() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13524:28: ( ( () otherlv_1= '#Generics' ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13525:1: ( () otherlv_1= '#Generics' )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13525:1: ( () otherlv_1= '#Generics' )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13525:2: () otherlv_1= '#Generics'
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13525:2: ()
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13526:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getImplementsExtendsDirectiveAccess().getImplementsExtendsDirectiveGenericsAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,146,FollowSets002.FOLLOW_146_in_ruleImplementsExtendsDirective30542); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getImplementsExtendsDirectiveAccess().getGenericsKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleImplementsExtendsDirective"


    // $ANTLR start "entryRuleImplements"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13546:1: entryRuleImplements returns [EObject current=null] : iv_ruleImplements= ruleImplements EOF ;
    public final EObject entryRuleImplements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplements = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13550:2: (iv_ruleImplements= ruleImplements EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13551:2: iv_ruleImplements= ruleImplements EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplementsRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleImplements_in_entryRuleImplements30588);
            iv_ruleImplements=ruleImplements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplements; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleImplements30598); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleImplements"


    // $ANTLR start "ruleImplements"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13561:1: ruleImplements returns [EObject current=null] : ( ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'implements' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )? ) ;
    public final EObject ruleImplements() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_COLON_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_directives_0_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13565:28: ( ( ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'implements' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13566:1: ( ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'implements' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13566:1: ( ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'implements' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13566:2: ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'implements' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13566:2: ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )*
            loop346:
            do {
                int alt346=2;
                int LA346_0 = input.LA(1);

                if ( (LA346_0==146) ) {
                    alt346=1;
                }


                switch (alt346) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13567:1: (lv_directives_0_0= ruleImplementsExtendsDirective )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13567:1: (lv_directives_0_0= ruleImplementsExtendsDirective )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13568:3: lv_directives_0_0= ruleImplementsExtendsDirective
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getImplementsAccess().getDirectivesImplementsExtendsDirectiveParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleImplementsExtendsDirective_in_ruleImplements30648);
            	    lv_directives_0_0=ruleImplementsExtendsDirective();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getImplementsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"directives",
            	              		lv_directives_0_0, 
            	              		"ImplementsExtendsDirective");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop346;
                }
            } while (true);

            otherlv_1=(Token)match(input,147,FollowSets002.FOLLOW_147_in_ruleImplements30661); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getImplementsAccess().getImplementsKeyword_1());
                  
            }
            this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleImplements30672); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_2, grammarAccess.getImplementsAccess().getCOLONTerminalRuleCall_2()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13592:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13593:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13593:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13594:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getImplementsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImplementsAccess().getImplementsJvmTypeCrossReference_3_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleImplements30694);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13607:2: (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )?
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==148) ) {
                alt348=1;
            }
            switch (alt348) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13607:4: otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )*
                    {
                    otherlv_4=(Token)match(input,148,FollowSets002.FOLLOW_148_in_ruleImplements30707); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getImplementsAccess().getOnlyPojosKeyword_4_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13611:1: ( (otherlv_5= RULE_IDENT ) )*
                    loop347:
                    do {
                        int alt347=2;
                        int LA347_0 = input.LA(1);

                        if ( (LA347_0==RULE_IDENT) ) {
                            alt347=1;
                        }


                        switch (alt347) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13612:1: (otherlv_5= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13612:1: (otherlv_5= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13613:3: otherlv_5= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_5=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleImplements30727); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_5, grammarAccess.getImplementsAccess().getOnlyPojosPojoEntityCrossReference_4_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop347;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13624:5: (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )?
            int alt350=2;
            int LA350_0 = input.LA(1);

            if ( (LA350_0==149) ) {
                alt350=1;
            }
            switch (alt350) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13624:7: otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )*
                    {
                    otherlv_6=(Token)match(input,149,FollowSets002.FOLLOW_149_in_ruleImplements30743); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getImplementsAccess().getOnlyDaosKeyword_5_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13628:1: ( (otherlv_7= RULE_IDENT ) )*
                    loop349:
                    do {
                        int alt349=2;
                        int LA349_0 = input.LA(1);

                        if ( (LA349_0==RULE_IDENT) ) {
                            alt349=1;
                        }


                        switch (alt349) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13629:1: (otherlv_7= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13629:1: (otherlv_7= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13630:3: otherlv_7= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_7=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleImplements30763); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_7, grammarAccess.getImplementsAccess().getOnlyDaosPojoDaoCrossReference_5_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop349;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13641:5: (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )?
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( (LA352_0==150) ) {
                alt352=1;
            }
            switch (alt352) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13641:7: otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )*
                    {
                    otherlv_8=(Token)match(input,150,FollowSets002.FOLLOW_150_in_ruleImplements30779); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getImplementsAccess().getExceptPojosKeyword_6_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13645:1: ( (otherlv_9= RULE_IDENT ) )*
                    loop351:
                    do {
                        int alt351=2;
                        int LA351_0 = input.LA(1);

                        if ( (LA351_0==RULE_IDENT) ) {
                            alt351=1;
                        }


                        switch (alt351) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13646:1: (otherlv_9= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13646:1: (otherlv_9= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13647:3: otherlv_9= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_9=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleImplements30799); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_9, grammarAccess.getImplementsAccess().getExceptPojosPojoEntityCrossReference_6_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop351;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13658:5: (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )?
            int alt354=2;
            int LA354_0 = input.LA(1);

            if ( (LA354_0==151) ) {
                alt354=1;
            }
            switch (alt354) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13658:7: otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )*
                    {
                    otherlv_10=(Token)match(input,151,FollowSets002.FOLLOW_151_in_ruleImplements30815); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getImplementsAccess().getExceptDaosKeyword_7_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13662:1: ( (otherlv_11= RULE_IDENT ) )*
                    loop353:
                    do {
                        int alt353=2;
                        int LA353_0 = input.LA(1);

                        if ( (LA353_0==RULE_IDENT) ) {
                            alt353=1;
                        }


                        switch (alt353) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13663:1: (otherlv_11= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13663:1: (otherlv_11= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13664:3: otherlv_11= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_11=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleImplements30835); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_11, grammarAccess.getImplementsAccess().getExceptDaosPojoDaoCrossReference_7_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop353;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleImplements"


    // $ANTLR start "entryRuleExtends"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13686:1: entryRuleExtends returns [EObject current=null] : iv_ruleExtends= ruleExtends EOF ;
    public final EObject entryRuleExtends() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtends = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13690:2: (iv_ruleExtends= ruleExtends EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13691:2: iv_ruleExtends= ruleExtends EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendsRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleExtends_in_entryRuleExtends30884);
            iv_ruleExtends=ruleExtends();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtends; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleExtends30894); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleExtends"


    // $ANTLR start "ruleExtends"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13701:1: ruleExtends returns [EObject current=null] : ( ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'extends' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )? ) ;
    public final EObject ruleExtends() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_COLON_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_directives_0_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13705:28: ( ( ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'extends' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13706:1: ( ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'extends' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13706:1: ( ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'extends' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13706:2: ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )* otherlv_1= 'extends' this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )? (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )? (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )? (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13706:2: ( (lv_directives_0_0= ruleImplementsExtendsDirective ) )*
            loop355:
            do {
                int alt355=2;
                int LA355_0 = input.LA(1);

                if ( (LA355_0==146) ) {
                    alt355=1;
                }


                switch (alt355) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13707:1: (lv_directives_0_0= ruleImplementsExtendsDirective )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13707:1: (lv_directives_0_0= ruleImplementsExtendsDirective )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13708:3: lv_directives_0_0= ruleImplementsExtendsDirective
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExtendsAccess().getDirectivesImplementsExtendsDirectiveParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleImplementsExtendsDirective_in_ruleExtends30944);
            	    lv_directives_0_0=ruleImplementsExtendsDirective();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExtendsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"directives",
            	              		lv_directives_0_0, 
            	              		"ImplementsExtendsDirective");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop355;
                }
            } while (true);

            otherlv_1=(Token)match(input,152,FollowSets002.FOLLOW_152_in_ruleExtends30957); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExtendsAccess().getExtendsKeyword_1());
                  
            }
            this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleExtends30968); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_2, grammarAccess.getExtendsAccess().getCOLONTerminalRuleCall_2()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13732:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13733:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13733:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13734:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExtendsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendsAccess().getExtendsJvmTypeCrossReference_3_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleExtends30990);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13747:2: (otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )* )?
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==148) ) {
                alt357=1;
            }
            switch (alt357) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13747:4: otherlv_4= 'onlyPojos' ( (otherlv_5= RULE_IDENT ) )*
                    {
                    otherlv_4=(Token)match(input,148,FollowSets002.FOLLOW_148_in_ruleExtends31003); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getExtendsAccess().getOnlyPojosKeyword_4_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13751:1: ( (otherlv_5= RULE_IDENT ) )*
                    loop356:
                    do {
                        int alt356=2;
                        int LA356_0 = input.LA(1);

                        if ( (LA356_0==RULE_IDENT) ) {
                            alt356=1;
                        }


                        switch (alt356) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13752:1: (otherlv_5= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13752:1: (otherlv_5= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13753:3: otherlv_5= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_5=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleExtends31023); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_5, grammarAccess.getExtendsAccess().getOnlyPojosPojoEntityCrossReference_4_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop356;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13764:5: (otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )* )?
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==149) ) {
                alt359=1;
            }
            switch (alt359) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13764:7: otherlv_6= 'onlyDaos' ( (otherlv_7= RULE_IDENT ) )*
                    {
                    otherlv_6=(Token)match(input,149,FollowSets002.FOLLOW_149_in_ruleExtends31039); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getExtendsAccess().getOnlyDaosKeyword_5_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13768:1: ( (otherlv_7= RULE_IDENT ) )*
                    loop358:
                    do {
                        int alt358=2;
                        int LA358_0 = input.LA(1);

                        if ( (LA358_0==RULE_IDENT) ) {
                            alt358=1;
                        }


                        switch (alt358) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13769:1: (otherlv_7= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13769:1: (otherlv_7= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13770:3: otherlv_7= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_7=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleExtends31059); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_7, grammarAccess.getExtendsAccess().getOnlyDaosPojoDaoCrossReference_5_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop358;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13781:5: (otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )* )?
            int alt361=2;
            int LA361_0 = input.LA(1);

            if ( (LA361_0==150) ) {
                alt361=1;
            }
            switch (alt361) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13781:7: otherlv_8= 'exceptPojos' ( (otherlv_9= RULE_IDENT ) )*
                    {
                    otherlv_8=(Token)match(input,150,FollowSets002.FOLLOW_150_in_ruleExtends31075); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getExtendsAccess().getExceptPojosKeyword_6_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13785:1: ( (otherlv_9= RULE_IDENT ) )*
                    loop360:
                    do {
                        int alt360=2;
                        int LA360_0 = input.LA(1);

                        if ( (LA360_0==RULE_IDENT) ) {
                            alt360=1;
                        }


                        switch (alt360) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13786:1: (otherlv_9= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13786:1: (otherlv_9= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13787:3: otherlv_9= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_9=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleExtends31095); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_9, grammarAccess.getExtendsAccess().getExceptPojosPojoEntityCrossReference_6_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop360;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13798:5: (otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )* )?
            int alt363=2;
            int LA363_0 = input.LA(1);

            if ( (LA363_0==151) ) {
                alt363=1;
            }
            switch (alt363) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13798:7: otherlv_10= 'exceptDaos' ( (otherlv_11= RULE_IDENT ) )*
                    {
                    otherlv_10=(Token)match(input,151,FollowSets002.FOLLOW_151_in_ruleExtends31111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getExtendsAccess().getExceptDaosKeyword_7_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13802:1: ( (otherlv_11= RULE_IDENT ) )*
                    loop362:
                    do {
                        int alt362=2;
                        int LA362_0 = input.LA(1);

                        if ( (LA362_0==RULE_IDENT) ) {
                            alt362=1;
                        }


                        switch (alt362) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13803:1: (otherlv_11= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13803:1: (otherlv_11= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13804:3: otherlv_11= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_11=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleExtends31131); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_11, grammarAccess.getExtendsAccess().getExceptDaosPojoDaoCrossReference_7_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop362;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleExtends"


    // $ANTLR start "entryRulePojoEntityModifier1"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13826:1: entryRulePojoEntityModifier1 returns [EObject current=null] : iv_rulePojoEntityModifier1= rulePojoEntityModifier1 EOF ;
    public final EObject entryRulePojoEntityModifier1() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoEntityModifier1 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13827:2: (iv_rulePojoEntityModifier1= rulePojoEntityModifier1 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13828:2: iv_rulePojoEntityModifier1= rulePojoEntityModifier1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoEntityModifier1Rule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier1_in_entryRulePojoEntityModifier131174);
            iv_rulePojoEntityModifier1=rulePojoEntityModifier1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoEntityModifier1; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoEntityModifier131184); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoEntityModifier1"


    // $ANTLR start "rulePojoEntityModifier1"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13835:1: rulePojoEntityModifier1 returns [EObject current=null] : ( ( (lv_final_0_0= 'final' ) ) | ( (lv_abstract_1_0= 'abstract' ) ) ) ;
    public final EObject rulePojoEntityModifier1() throws RecognitionException {
        EObject current = null;

        Token lv_final_0_0=null;
        Token lv_abstract_1_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13838:28: ( ( ( (lv_final_0_0= 'final' ) ) | ( (lv_abstract_1_0= 'abstract' ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13839:1: ( ( (lv_final_0_0= 'final' ) ) | ( (lv_abstract_1_0= 'abstract' ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13839:1: ( ( (lv_final_0_0= 'final' ) ) | ( (lv_abstract_1_0= 'abstract' ) ) )
            int alt364=2;
            int LA364_0 = input.LA(1);

            if ( (LA364_0==153) ) {
                alt364=1;
            }
            else if ( (LA364_0==154) ) {
                alt364=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 364, 0, input);

                throw nvae;
            }
            switch (alt364) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13839:2: ( (lv_final_0_0= 'final' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13839:2: ( (lv_final_0_0= 'final' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13840:1: (lv_final_0_0= 'final' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13840:1: (lv_final_0_0= 'final' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13841:3: lv_final_0_0= 'final'
                    {
                    lv_final_0_0=(Token)match(input,153,FollowSets002.FOLLOW_153_in_rulePojoEntityModifier131227); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_final_0_0, grammarAccess.getPojoEntityModifier1Access().getFinalFinalKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoEntityModifier1Rule());
                      	        }
                             		setWithLastConsumed(current, "final", true, "final");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13855:6: ( (lv_abstract_1_0= 'abstract' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13855:6: ( (lv_abstract_1_0= 'abstract' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13856:1: (lv_abstract_1_0= 'abstract' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13856:1: (lv_abstract_1_0= 'abstract' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13857:3: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,154,FollowSets002.FOLLOW_154_in_rulePojoEntityModifier131264); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_abstract_1_0, grammarAccess.getPojoEntityModifier1Access().getAbstractAbstractKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoEntityModifier1Rule());
                      	        }
                             		setWithLastConsumed(current, "abstract", true, "abstract");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoEntityModifier1"


    // $ANTLR start "entryRuleDirectiveProperties"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13878:1: entryRuleDirectiveProperties returns [EObject current=null] : iv_ruleDirectiveProperties= ruleDirectiveProperties EOF ;
    public final EObject entryRuleDirectiveProperties() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDirectiveProperties = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13882:2: (iv_ruleDirectiveProperties= ruleDirectiveProperties EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13883:2: iv_ruleDirectiveProperties= ruleDirectiveProperties EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirectivePropertiesRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleDirectiveProperties_in_entryRuleDirectiveProperties31319);
            iv_ruleDirectiveProperties=ruleDirectiveProperties();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDirectiveProperties; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleDirectiveProperties31329); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDirectiveProperties"


    // $ANTLR start "ruleDirectiveProperties"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13893:1: ruleDirectiveProperties returns [EObject current=null] : ( ( (otherlv_0= RULE_IDENT ) ) (this_COMMA_1= RULE_COMMA ( (otherlv_2= RULE_IDENT ) ) )* ) ;
    public final EObject ruleDirectiveProperties() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_COMMA_1=null;
        Token otherlv_2=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13897:28: ( ( ( (otherlv_0= RULE_IDENT ) ) (this_COMMA_1= RULE_COMMA ( (otherlv_2= RULE_IDENT ) ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13898:1: ( ( (otherlv_0= RULE_IDENT ) ) (this_COMMA_1= RULE_COMMA ( (otherlv_2= RULE_IDENT ) ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13898:1: ( ( (otherlv_0= RULE_IDENT ) ) (this_COMMA_1= RULE_COMMA ( (otherlv_2= RULE_IDENT ) ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13898:2: ( (otherlv_0= RULE_IDENT ) ) (this_COMMA_1= RULE_COMMA ( (otherlv_2= RULE_IDENT ) ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13898:2: ( (otherlv_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13899:1: (otherlv_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13899:1: (otherlv_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13900:3: otherlv_0= RULE_IDENT
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getDirectivePropertiesRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleDirectiveProperties31378); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getDirectivePropertiesAccess().getFeaturesPojoPropertyCrossReference_0_0()); 
              	
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13911:2: (this_COMMA_1= RULE_COMMA ( (otherlv_2= RULE_IDENT ) ) )*
            loop365:
            do {
                int alt365=2;
                int LA365_0 = input.LA(1);

                if ( (LA365_0==RULE_COMMA) ) {
                    alt365=1;
                }


                switch (alt365) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13911:3: this_COMMA_1= RULE_COMMA ( (otherlv_2= RULE_IDENT ) )
            	    {
            	    this_COMMA_1=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleDirectiveProperties31390); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_1, grammarAccess.getDirectivePropertiesAccess().getCOMMATerminalRuleCall_1_0()); 
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13915:1: ( (otherlv_2= RULE_IDENT ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13916:1: (otherlv_2= RULE_IDENT )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13916:1: (otherlv_2= RULE_IDENT )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13917:3: otherlv_2= RULE_IDENT
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getDirectivePropertiesRule());
            	      	        }
            	              
            	    }
            	    otherlv_2=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleDirectiveProperties31409); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		newLeafNode(otherlv_2, grammarAccess.getDirectivePropertiesAccess().getFeaturesPojoPropertyCrossReference_1_1_0()); 
            	      	
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop365;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDirectiveProperties"


    // $ANTLR start "entryRulePojoDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13939:1: entryRulePojoDirective returns [EObject current=null] : iv_rulePojoDirective= rulePojoDirective EOF ;
    public final EObject entryRulePojoDirective() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoDirective = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13943:2: (iv_rulePojoDirective= rulePojoDirective EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13944:2: iv_rulePojoDirective= rulePojoDirective EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoDirectiveRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoDirective_in_entryRulePojoDirective31457);
            iv_rulePojoDirective=rulePojoDirective();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoDirective; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoDirective31467); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoDirective"


    // $ANTLR start "rulePojoDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13954:1: rulePojoDirective returns [EObject current=null] : ( ( () otherlv_1= '#ToString' this_LPAREN_2= RULE_LPAREN ( (lv_proplist_3_0= ruleDirectiveProperties ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#Index' this_LPAREN_7= RULE_LPAREN ( (lv_index_8_0= RULE_NUMBER ) ) this_COMMA_9= RULE_COMMA ( (lv_proplist_10_0= ruleDirectiveProperties ) ) this_RPAREN_11= RULE_RPAREN ) | ( () otherlv_13= '#Operators' (this_LPAREN_14= RULE_LPAREN ( (lv_operatorsSuffix_15_0= RULE_IDENT ) ) this_RPAREN_16= RULE_RPAREN )? ) | ( () otherlv_18= '#Serializable' this_LPAREN_19= RULE_LPAREN ( (lv_sernum_20_0= RULE_NUMBER ) ) this_RPAREN_21= RULE_RPAREN ) | ( () otherlv_23= '#InheritanceChild' this_LPAREN_24= RULE_LPAREN ( ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) ) ) this_RPAREN_26= RULE_RPAREN ) | ( () otherlv_28= '#Equals' this_LPAREN_29= RULE_LPAREN ( (lv_proplist_30_0= ruleDirectiveProperties ) ) this_RPAREN_31= RULE_RPAREN ) | ( () otherlv_33= '#HashCode' this_LPAREN_34= RULE_LPAREN ( (lv_proplist_35_0= ruleDirectiveProperties ) ) this_RPAREN_36= RULE_RPAREN ) ) ;
    public final EObject rulePojoDirective() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_LPAREN_2=null;
        Token this_RPAREN_4=null;
        Token otherlv_6=null;
        Token this_LPAREN_7=null;
        Token lv_index_8_0=null;
        Token this_COMMA_9=null;
        Token this_RPAREN_11=null;
        Token otherlv_13=null;
        Token this_LPAREN_14=null;
        Token lv_operatorsSuffix_15_0=null;
        Token this_RPAREN_16=null;
        Token otherlv_18=null;
        Token this_LPAREN_19=null;
        Token lv_sernum_20_0=null;
        Token this_RPAREN_21=null;
        Token otherlv_23=null;
        Token this_LPAREN_24=null;
        Token lv_discriminator_25_1=null;
        Token lv_discriminator_25_2=null;
        Token this_RPAREN_26=null;
        Token otherlv_28=null;
        Token this_LPAREN_29=null;
        Token this_RPAREN_31=null;
        Token otherlv_33=null;
        Token this_LPAREN_34=null;
        Token this_RPAREN_36=null;
        EObject lv_proplist_3_0 = null;

        EObject lv_proplist_10_0 = null;

        EObject lv_proplist_30_0 = null;

        EObject lv_proplist_35_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13958:28: ( ( ( () otherlv_1= '#ToString' this_LPAREN_2= RULE_LPAREN ( (lv_proplist_3_0= ruleDirectiveProperties ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#Index' this_LPAREN_7= RULE_LPAREN ( (lv_index_8_0= RULE_NUMBER ) ) this_COMMA_9= RULE_COMMA ( (lv_proplist_10_0= ruleDirectiveProperties ) ) this_RPAREN_11= RULE_RPAREN ) | ( () otherlv_13= '#Operators' (this_LPAREN_14= RULE_LPAREN ( (lv_operatorsSuffix_15_0= RULE_IDENT ) ) this_RPAREN_16= RULE_RPAREN )? ) | ( () otherlv_18= '#Serializable' this_LPAREN_19= RULE_LPAREN ( (lv_sernum_20_0= RULE_NUMBER ) ) this_RPAREN_21= RULE_RPAREN ) | ( () otherlv_23= '#InheritanceChild' this_LPAREN_24= RULE_LPAREN ( ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) ) ) this_RPAREN_26= RULE_RPAREN ) | ( () otherlv_28= '#Equals' this_LPAREN_29= RULE_LPAREN ( (lv_proplist_30_0= ruleDirectiveProperties ) ) this_RPAREN_31= RULE_RPAREN ) | ( () otherlv_33= '#HashCode' this_LPAREN_34= RULE_LPAREN ( (lv_proplist_35_0= ruleDirectiveProperties ) ) this_RPAREN_36= RULE_RPAREN ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13959:1: ( ( () otherlv_1= '#ToString' this_LPAREN_2= RULE_LPAREN ( (lv_proplist_3_0= ruleDirectiveProperties ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#Index' this_LPAREN_7= RULE_LPAREN ( (lv_index_8_0= RULE_NUMBER ) ) this_COMMA_9= RULE_COMMA ( (lv_proplist_10_0= ruleDirectiveProperties ) ) this_RPAREN_11= RULE_RPAREN ) | ( () otherlv_13= '#Operators' (this_LPAREN_14= RULE_LPAREN ( (lv_operatorsSuffix_15_0= RULE_IDENT ) ) this_RPAREN_16= RULE_RPAREN )? ) | ( () otherlv_18= '#Serializable' this_LPAREN_19= RULE_LPAREN ( (lv_sernum_20_0= RULE_NUMBER ) ) this_RPAREN_21= RULE_RPAREN ) | ( () otherlv_23= '#InheritanceChild' this_LPAREN_24= RULE_LPAREN ( ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) ) ) this_RPAREN_26= RULE_RPAREN ) | ( () otherlv_28= '#Equals' this_LPAREN_29= RULE_LPAREN ( (lv_proplist_30_0= ruleDirectiveProperties ) ) this_RPAREN_31= RULE_RPAREN ) | ( () otherlv_33= '#HashCode' this_LPAREN_34= RULE_LPAREN ( (lv_proplist_35_0= ruleDirectiveProperties ) ) this_RPAREN_36= RULE_RPAREN ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13959:1: ( ( () otherlv_1= '#ToString' this_LPAREN_2= RULE_LPAREN ( (lv_proplist_3_0= ruleDirectiveProperties ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#Index' this_LPAREN_7= RULE_LPAREN ( (lv_index_8_0= RULE_NUMBER ) ) this_COMMA_9= RULE_COMMA ( (lv_proplist_10_0= ruleDirectiveProperties ) ) this_RPAREN_11= RULE_RPAREN ) | ( () otherlv_13= '#Operators' (this_LPAREN_14= RULE_LPAREN ( (lv_operatorsSuffix_15_0= RULE_IDENT ) ) this_RPAREN_16= RULE_RPAREN )? ) | ( () otherlv_18= '#Serializable' this_LPAREN_19= RULE_LPAREN ( (lv_sernum_20_0= RULE_NUMBER ) ) this_RPAREN_21= RULE_RPAREN ) | ( () otherlv_23= '#InheritanceChild' this_LPAREN_24= RULE_LPAREN ( ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) ) ) this_RPAREN_26= RULE_RPAREN ) | ( () otherlv_28= '#Equals' this_LPAREN_29= RULE_LPAREN ( (lv_proplist_30_0= ruleDirectiveProperties ) ) this_RPAREN_31= RULE_RPAREN ) | ( () otherlv_33= '#HashCode' this_LPAREN_34= RULE_LPAREN ( (lv_proplist_35_0= ruleDirectiveProperties ) ) this_RPAREN_36= RULE_RPAREN ) )
            int alt368=7;
            switch ( input.LA(1) ) {
            case 155:
                {
                alt368=1;
                }
                break;
            case 156:
                {
                alt368=2;
                }
                break;
            case 157:
                {
                alt368=3;
                }
                break;
            case 158:
                {
                alt368=4;
                }
                break;
            case 159:
                {
                alt368=5;
                }
                break;
            case 160:
                {
                alt368=6;
                }
                break;
            case 161:
                {
                alt368=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 368, 0, input);

                throw nvae;
            }

            switch (alt368) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13959:2: ( () otherlv_1= '#ToString' this_LPAREN_2= RULE_LPAREN ( (lv_proplist_3_0= ruleDirectiveProperties ) ) this_RPAREN_4= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13959:2: ( () otherlv_1= '#ToString' this_LPAREN_2= RULE_LPAREN ( (lv_proplist_3_0= ruleDirectiveProperties ) ) this_RPAREN_4= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13959:3: () otherlv_1= '#ToString' this_LPAREN_2= RULE_LPAREN ( (lv_proplist_3_0= ruleDirectiveProperties ) ) this_RPAREN_4= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13959:3: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13960:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoDirectiveAccess().getPojoDirectiveToStringAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,155,FollowSets002.FOLLOW_155_in_rulePojoDirective31518); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPojoDirectiveAccess().getToStringKeyword_0_1());
                          
                    }
                    this_LPAREN_2=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoDirective31529); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_2, grammarAccess.getPojoDirectiveAccess().getLPARENTerminalRuleCall_0_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13973:1: ( (lv_proplist_3_0= ruleDirectiveProperties ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13974:1: (lv_proplist_3_0= ruleDirectiveProperties )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13974:1: (lv_proplist_3_0= ruleDirectiveProperties )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13975:3: lv_proplist_3_0= ruleDirectiveProperties
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojoDirectiveAccess().getProplistDirectivePropertiesParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleDirectiveProperties_in_rulePojoDirective31549);
                    lv_proplist_3_0=ruleDirectiveProperties();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojoDirectiveRule());
                      	        }
                             		set(
                             			current, 
                             			"proplist",
                              		lv_proplist_3_0, 
                              		"DirectiveProperties");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RPAREN_4=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoDirective31560); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_4, grammarAccess.getPojoDirectiveAccess().getRPARENTerminalRuleCall_0_4()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13996:6: ( () otherlv_6= '#Index' this_LPAREN_7= RULE_LPAREN ( (lv_index_8_0= RULE_NUMBER ) ) this_COMMA_9= RULE_COMMA ( (lv_proplist_10_0= ruleDirectiveProperties ) ) this_RPAREN_11= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13996:6: ( () otherlv_6= '#Index' this_LPAREN_7= RULE_LPAREN ( (lv_index_8_0= RULE_NUMBER ) ) this_COMMA_9= RULE_COMMA ( (lv_proplist_10_0= ruleDirectiveProperties ) ) this_RPAREN_11= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13996:7: () otherlv_6= '#Index' this_LPAREN_7= RULE_LPAREN ( (lv_index_8_0= RULE_NUMBER ) ) this_COMMA_9= RULE_COMMA ( (lv_proplist_10_0= ruleDirectiveProperties ) ) this_RPAREN_11= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13996:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13997:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoDirectiveAccess().getPojoDirectiveIndexAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_6=(Token)match(input,156,FollowSets002.FOLLOW_156_in_rulePojoDirective31588); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getPojoDirectiveAccess().getIndexKeyword_1_1());
                          
                    }
                    this_LPAREN_7=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoDirective31599); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_7, grammarAccess.getPojoDirectiveAccess().getLPARENTerminalRuleCall_1_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14010:1: ( (lv_index_8_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:1: (lv_index_8_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:1: (lv_index_8_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14012:3: lv_index_8_0= RULE_NUMBER
                    {
                    lv_index_8_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePojoDirective31615); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_index_8_0, grammarAccess.getPojoDirectiveAccess().getIndexNUMBERTerminalRuleCall_1_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoDirectiveRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"index",
                              		lv_index_8_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }

                    this_COMMA_9=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_rulePojoDirective31631); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_9, grammarAccess.getPojoDirectiveAccess().getCOMMATerminalRuleCall_1_4()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14032:1: ( (lv_proplist_10_0= ruleDirectiveProperties ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14033:1: (lv_proplist_10_0= ruleDirectiveProperties )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14033:1: (lv_proplist_10_0= ruleDirectiveProperties )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14034:3: lv_proplist_10_0= ruleDirectiveProperties
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojoDirectiveAccess().getProplistDirectivePropertiesParserRuleCall_1_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleDirectiveProperties_in_rulePojoDirective31651);
                    lv_proplist_10_0=ruleDirectiveProperties();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojoDirectiveRule());
                      	        }
                             		set(
                             			current, 
                             			"proplist",
                              		lv_proplist_10_0, 
                              		"DirectiveProperties");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RPAREN_11=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoDirective31662); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_11, grammarAccess.getPojoDirectiveAccess().getRPARENTerminalRuleCall_1_6()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14055:6: ( () otherlv_13= '#Operators' (this_LPAREN_14= RULE_LPAREN ( (lv_operatorsSuffix_15_0= RULE_IDENT ) ) this_RPAREN_16= RULE_RPAREN )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14055:6: ( () otherlv_13= '#Operators' (this_LPAREN_14= RULE_LPAREN ( (lv_operatorsSuffix_15_0= RULE_IDENT ) ) this_RPAREN_16= RULE_RPAREN )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14055:7: () otherlv_13= '#Operators' (this_LPAREN_14= RULE_LPAREN ( (lv_operatorsSuffix_15_0= RULE_IDENT ) ) this_RPAREN_16= RULE_RPAREN )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14055:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14056:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoDirectiveAccess().getPojoDirectiveOperatorsAction_2_0(),
                                  current);
                          
                    }

                    }

                    otherlv_13=(Token)match(input,157,FollowSets002.FOLLOW_157_in_rulePojoDirective31690); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getPojoDirectiveAccess().getOperatorsKeyword_2_1());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14065:1: (this_LPAREN_14= RULE_LPAREN ( (lv_operatorsSuffix_15_0= RULE_IDENT ) ) this_RPAREN_16= RULE_RPAREN )?
                    int alt366=2;
                    int LA366_0 = input.LA(1);

                    if ( (LA366_0==RULE_LPAREN) ) {
                        alt366=1;
                    }
                    switch (alt366) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14065:2: this_LPAREN_14= RULE_LPAREN ( (lv_operatorsSuffix_15_0= RULE_IDENT ) ) this_RPAREN_16= RULE_RPAREN
                            {
                            this_LPAREN_14=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoDirective31702); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LPAREN_14, grammarAccess.getPojoDirectiveAccess().getLPARENTerminalRuleCall_2_2_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14069:1: ( (lv_operatorsSuffix_15_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14070:1: (lv_operatorsSuffix_15_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14070:1: (lv_operatorsSuffix_15_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14071:3: lv_operatorsSuffix_15_0= RULE_IDENT
                            {
                            lv_operatorsSuffix_15_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoDirective31718); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_operatorsSuffix_15_0, grammarAccess.getPojoDirectiveAccess().getOperatorsSuffixIDENTTerminalRuleCall_2_2_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoDirectiveRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"operatorsSuffix",
                                      		lv_operatorsSuffix_15_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }

                            this_RPAREN_16=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoDirective31734); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_RPAREN_16, grammarAccess.getPojoDirectiveAccess().getRPARENTerminalRuleCall_2_2_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14092:6: ( () otherlv_18= '#Serializable' this_LPAREN_19= RULE_LPAREN ( (lv_sernum_20_0= RULE_NUMBER ) ) this_RPAREN_21= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14092:6: ( () otherlv_18= '#Serializable' this_LPAREN_19= RULE_LPAREN ( (lv_sernum_20_0= RULE_NUMBER ) ) this_RPAREN_21= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14092:7: () otherlv_18= '#Serializable' this_LPAREN_19= RULE_LPAREN ( (lv_sernum_20_0= RULE_NUMBER ) ) this_RPAREN_21= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14092:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14093:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoDirectiveAccess().getPojoDirectiveSerializableAction_3_0(),
                                  current);
                          
                    }

                    }

                    otherlv_18=(Token)match(input,158,FollowSets002.FOLLOW_158_in_rulePojoDirective31764); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getPojoDirectiveAccess().getSerializableKeyword_3_1());
                          
                    }
                    this_LPAREN_19=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoDirective31775); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_19, grammarAccess.getPojoDirectiveAccess().getLPARENTerminalRuleCall_3_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14106:1: ( (lv_sernum_20_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14107:1: (lv_sernum_20_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14107:1: (lv_sernum_20_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14108:3: lv_sernum_20_0= RULE_NUMBER
                    {
                    lv_sernum_20_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePojoDirective31791); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_sernum_20_0, grammarAccess.getPojoDirectiveAccess().getSernumNUMBERTerminalRuleCall_3_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoDirectiveRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"sernum",
                              		lv_sernum_20_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }

                    this_RPAREN_21=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoDirective31807); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_21, grammarAccess.getPojoDirectiveAccess().getRPARENTerminalRuleCall_3_4()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14129:6: ( () otherlv_23= '#InheritanceChild' this_LPAREN_24= RULE_LPAREN ( ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) ) ) this_RPAREN_26= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14129:6: ( () otherlv_23= '#InheritanceChild' this_LPAREN_24= RULE_LPAREN ( ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) ) ) this_RPAREN_26= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14129:7: () otherlv_23= '#InheritanceChild' this_LPAREN_24= RULE_LPAREN ( ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) ) ) this_RPAREN_26= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14129:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14130:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoDirectiveAccess().getPojoDirectiveDiscriminatorAction_4_0(),
                                  current);
                          
                    }

                    }

                    otherlv_23=(Token)match(input,159,FollowSets002.FOLLOW_159_in_rulePojoDirective31835); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_23, grammarAccess.getPojoDirectiveAccess().getInheritanceChildKeyword_4_1());
                          
                    }
                    this_LPAREN_24=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoDirective31846); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_24, grammarAccess.getPojoDirectiveAccess().getLPARENTerminalRuleCall_4_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14143:1: ( ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14144:1: ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14144:1: ( (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14145:1: (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14145:1: (lv_discriminator_25_1= RULE_IDENT | lv_discriminator_25_2= RULE_NUMBER )
                    int alt367=2;
                    int LA367_0 = input.LA(1);

                    if ( (LA367_0==RULE_IDENT) ) {
                        alt367=1;
                    }
                    else if ( (LA367_0==RULE_NUMBER) ) {
                        alt367=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 367, 0, input);

                        throw nvae;
                    }
                    switch (alt367) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14146:3: lv_discriminator_25_1= RULE_IDENT
                            {
                            lv_discriminator_25_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoDirective31864); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_discriminator_25_1, grammarAccess.getPojoDirectiveAccess().getDiscriminatorIDENTTerminalRuleCall_4_3_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoDirectiveRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"discriminator",
                                      		lv_discriminator_25_1, 
                                      		"IDENT");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14161:8: lv_discriminator_25_2= RULE_NUMBER
                            {
                            lv_discriminator_25_2=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePojoDirective31884); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_discriminator_25_2, grammarAccess.getPojoDirectiveAccess().getDiscriminatorNUMBERTerminalRuleCall_4_3_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoDirectiveRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"discriminator",
                                      		lv_discriminator_25_2, 
                                      		"NUMBER");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    this_RPAREN_26=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoDirective31903); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_26, grammarAccess.getPojoDirectiveAccess().getRPARENTerminalRuleCall_4_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14184:6: ( () otherlv_28= '#Equals' this_LPAREN_29= RULE_LPAREN ( (lv_proplist_30_0= ruleDirectiveProperties ) ) this_RPAREN_31= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14184:6: ( () otherlv_28= '#Equals' this_LPAREN_29= RULE_LPAREN ( (lv_proplist_30_0= ruleDirectiveProperties ) ) this_RPAREN_31= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14184:7: () otherlv_28= '#Equals' this_LPAREN_29= RULE_LPAREN ( (lv_proplist_30_0= ruleDirectiveProperties ) ) this_RPAREN_31= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14184:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14185:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoDirectiveAccess().getPojoDirectiveEqualsAction_5_0(),
                                  current);
                          
                    }

                    }

                    otherlv_28=(Token)match(input,160,FollowSets002.FOLLOW_160_in_rulePojoDirective31931); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_28, grammarAccess.getPojoDirectiveAccess().getEqualsKeyword_5_1());
                          
                    }
                    this_LPAREN_29=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoDirective31942); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_29, grammarAccess.getPojoDirectiveAccess().getLPARENTerminalRuleCall_5_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14198:1: ( (lv_proplist_30_0= ruleDirectiveProperties ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14199:1: (lv_proplist_30_0= ruleDirectiveProperties )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14199:1: (lv_proplist_30_0= ruleDirectiveProperties )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14200:3: lv_proplist_30_0= ruleDirectiveProperties
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojoDirectiveAccess().getProplistDirectivePropertiesParserRuleCall_5_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleDirectiveProperties_in_rulePojoDirective31962);
                    lv_proplist_30_0=ruleDirectiveProperties();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojoDirectiveRule());
                      	        }
                             		set(
                             			current, 
                             			"proplist",
                              		lv_proplist_30_0, 
                              		"DirectiveProperties");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RPAREN_31=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoDirective31973); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_31, grammarAccess.getPojoDirectiveAccess().getRPARENTerminalRuleCall_5_4()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14221:6: ( () otherlv_33= '#HashCode' this_LPAREN_34= RULE_LPAREN ( (lv_proplist_35_0= ruleDirectiveProperties ) ) this_RPAREN_36= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14221:6: ( () otherlv_33= '#HashCode' this_LPAREN_34= RULE_LPAREN ( (lv_proplist_35_0= ruleDirectiveProperties ) ) this_RPAREN_36= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14221:7: () otherlv_33= '#HashCode' this_LPAREN_34= RULE_LPAREN ( (lv_proplist_35_0= ruleDirectiveProperties ) ) this_RPAREN_36= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14221:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14222:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoDirectiveAccess().getPojoDirectiveHashCodeAction_6_0(),
                                  current);
                          
                    }

                    }

                    otherlv_33=(Token)match(input,161,FollowSets002.FOLLOW_161_in_rulePojoDirective32001); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_33, grammarAccess.getPojoDirectiveAccess().getHashCodeKeyword_6_1());
                          
                    }
                    this_LPAREN_34=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoDirective32012); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_34, grammarAccess.getPojoDirectiveAccess().getLPARENTerminalRuleCall_6_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14235:1: ( (lv_proplist_35_0= ruleDirectiveProperties ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14236:1: (lv_proplist_35_0= ruleDirectiveProperties )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14236:1: (lv_proplist_35_0= ruleDirectiveProperties )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14237:3: lv_proplist_35_0= ruleDirectiveProperties
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojoDirectiveAccess().getProplistDirectivePropertiesParserRuleCall_6_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleDirectiveProperties_in_rulePojoDirective32032);
                    lv_proplist_35_0=ruleDirectiveProperties();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojoDirectiveRule());
                      	        }
                             		set(
                             			current, 
                             			"proplist",
                              		lv_proplist_35_0, 
                              		"DirectiveProperties");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RPAREN_36=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoDirective32043); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_36, grammarAccess.getPojoDirectiveAccess().getRPARENTerminalRuleCall_6_4()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoDirective"


    // $ANTLR start "entryRulePojoEntityModifier2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14268:1: entryRulePojoEntityModifier2 returns [EObject current=null] : iv_rulePojoEntityModifier2= rulePojoEntityModifier2 EOF ;
    public final EObject entryRulePojoEntityModifier2() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoEntityModifier2 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14269:2: (iv_rulePojoEntityModifier2= rulePojoEntityModifier2 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14270:2: iv_rulePojoEntityModifier2= rulePojoEntityModifier2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoEntityModifier2Rule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier2_in_entryRulePojoEntityModifier232083);
            iv_rulePojoEntityModifier2=rulePojoEntityModifier2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoEntityModifier2; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoEntityModifier232093); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoEntityModifier2"


    // $ANTLR start "rulePojoEntityModifier2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14277:1: rulePojoEntityModifier2 returns [EObject current=null] : (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) ;
    public final EObject rulePojoEntityModifier2() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14280:28: ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14281:1: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14281:1: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14281:3: otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) )
            {
            otherlv_0=(Token)match(input,152,FollowSets002.FOLLOW_152_in_rulePojoEntityModifier232130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPojoEntityModifier2Access().getExtendsKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14285:1: ( (otherlv_1= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14286:1: (otherlv_1= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14286:1: (otherlv_1= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14287:3: otherlv_1= RULE_IDENT
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoEntityModifier232150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getPojoEntityModifier2Access().getSuperTypePojoEntityCrossReference_1_0()); 
              	
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoEntityModifier2"


    // $ANTLR start "entryRulePojoEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14306:1: entryRulePojoEntity returns [EObject current=null] : iv_rulePojoEntity= rulePojoEntity EOF ;
    public final EObject entryRulePojoEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoEntity = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14310:2: (iv_rulePojoEntity= rulePojoEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14311:2: iv_rulePojoEntity= rulePojoEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoEntity_in_entryRulePojoEntity32192);
            iv_rulePojoEntity=rulePojoEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoEntity32202); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoEntity"


    // $ANTLR start "rulePojoEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14321:1: rulePojoEntity returns [EObject current=null] : ( ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'pojo' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= rulePojoAnnotatedProperty ) )* this_RBRACE_7= RULE_RBRACE ) ;
    public final EObject rulePojoEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token this_LBRACE_5=null;
        Token this_RBRACE_7=null;
        EObject lv_directives_0_0 = null;

        EObject lv_modifiers1_1_0 = null;

        EObject lv_modifiers2_4_0 = null;

        EObject lv_features_6_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14325:28: ( ( ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'pojo' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= rulePojoAnnotatedProperty ) )* this_RBRACE_7= RULE_RBRACE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14326:1: ( ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'pojo' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= rulePojoAnnotatedProperty ) )* this_RBRACE_7= RULE_RBRACE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14326:1: ( ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'pojo' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= rulePojoAnnotatedProperty ) )* this_RBRACE_7= RULE_RBRACE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14326:2: ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'pojo' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= rulePojoAnnotatedProperty ) )* this_RBRACE_7= RULE_RBRACE
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14326:2: ( (lv_directives_0_0= rulePojoDirective ) )*
            loop369:
            do {
                int alt369=2;
                int LA369_0 = input.LA(1);

                if ( ((LA369_0>=155 && LA369_0<=161)) ) {
                    alt369=1;
                }


                switch (alt369) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14327:1: (lv_directives_0_0= rulePojoDirective )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14327:1: (lv_directives_0_0= rulePojoDirective )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14328:3: lv_directives_0_0= rulePojoDirective
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoEntityAccess().getDirectivesPojoDirectiveParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoDirective_in_rulePojoEntity32252);
            	    lv_directives_0_0=rulePojoDirective();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"directives",
            	              		lv_directives_0_0, 
            	              		"PojoDirective");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop369;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14344:3: ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )*
            loop370:
            do {
                int alt370=2;
                int LA370_0 = input.LA(1);

                if ( ((LA370_0>=153 && LA370_0<=154)) ) {
                    alt370=1;
                }


                switch (alt370) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14345:1: (lv_modifiers1_1_0= rulePojoEntityModifier1 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14345:1: (lv_modifiers1_1_0= rulePojoEntityModifier1 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14346:3: lv_modifiers1_1_0= rulePojoEntityModifier1
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoEntityAccess().getModifiers1PojoEntityModifier1ParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier1_in_rulePojoEntity32274);
            	    lv_modifiers1_1_0=rulePojoEntityModifier1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers1",
            	              		lv_modifiers1_1_0, 
            	              		"PojoEntityModifier1");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop370;
                }
            } while (true);

            otherlv_2=(Token)match(input,131,FollowSets002.FOLLOW_131_in_rulePojoEntity32287); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPojoEntityAccess().getPojoKeyword_2());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14366:1: ( (lv_name_3_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14367:1: (lv_name_3_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14367:1: (lv_name_3_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14368:3: lv_name_3_0= RULE_IDENT
            {
            lv_name_3_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoEntity32304); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getPojoEntityAccess().getNameIDENTTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoEntityRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14384:2: ( (lv_modifiers2_4_0= rulePojoEntityModifier2 ) )*
            loop371:
            do {
                int alt371=2;
                int LA371_0 = input.LA(1);

                if ( (LA371_0==152) ) {
                    alt371=1;
                }


                switch (alt371) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14385:1: (lv_modifiers2_4_0= rulePojoEntityModifier2 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14385:1: (lv_modifiers2_4_0= rulePojoEntityModifier2 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14386:3: lv_modifiers2_4_0= rulePojoEntityModifier2
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoEntityAccess().getModifiers2PojoEntityModifier2ParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier2_in_rulePojoEntity32330);
            	    lv_modifiers2_4_0=rulePojoEntityModifier2();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers2",
            	              		lv_modifiers2_4_0, 
            	              		"PojoEntityModifier2");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop371;
                }
            } while (true);

            this_LBRACE_5=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_rulePojoEntity32342); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LBRACE_5, grammarAccess.getPojoEntityAccess().getLBRACETerminalRuleCall_5()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14406:1: ( (lv_features_6_0= rulePojoAnnotatedProperty ) )*
            loop372:
            do {
                int alt372=2;
                int LA372_0 = input.LA(1);

                if ( (LA372_0==RULE_IDENT||LA372_0==RULE_AT||(LA372_0>=138 && LA372_0<=144)||LA372_0==156||(LA372_0>=162 && LA372_0<=171)) ) {
                    alt372=1;
                }


                switch (alt372) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14407:1: (lv_features_6_0= rulePojoAnnotatedProperty )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14407:1: (lv_features_6_0= rulePojoAnnotatedProperty )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14408:3: lv_features_6_0= rulePojoAnnotatedProperty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoEntityAccess().getFeaturesPojoAnnotatedPropertyParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoAnnotatedProperty_in_rulePojoEntity32362);
            	    lv_features_6_0=rulePojoAnnotatedProperty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"features",
            	              		lv_features_6_0, 
            	              		"PojoAnnotatedProperty");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop372;
                }
            } while (true);

            this_RBRACE_7=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_rulePojoEntity32374); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RBRACE_7, grammarAccess.getPojoEntityAccess().getRBRACETerminalRuleCall_7()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoEntity"


    // $ANTLR start "entryRulePojoAnnotatedProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14439:1: entryRulePojoAnnotatedProperty returns [EObject current=null] : iv_rulePojoAnnotatedProperty= rulePojoAnnotatedProperty EOF ;
    public final EObject entryRulePojoAnnotatedProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoAnnotatedProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14440:2: (iv_rulePojoAnnotatedProperty= rulePojoAnnotatedProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14441:2: iv_rulePojoAnnotatedProperty= rulePojoAnnotatedProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoAnnotatedPropertyRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoAnnotatedProperty_in_entryRulePojoAnnotatedProperty32413);
            iv_rulePojoAnnotatedProperty=rulePojoAnnotatedProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoAnnotatedProperty; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoAnnotatedProperty32423); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoAnnotatedProperty"


    // $ANTLR start "rulePojoAnnotatedProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14448:1: rulePojoAnnotatedProperty returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_feature_1_0= rulePojoProperty ) ) ) ;
    public final EObject rulePojoAnnotatedProperty() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        EObject lv_feature_1_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14451:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_feature_1_0= rulePojoProperty ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14452:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_feature_1_0= rulePojoProperty ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14452:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_feature_1_0= rulePojoProperty ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14452:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_feature_1_0= rulePojoProperty ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14452:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop373:
            do {
                int alt373=2;
                int LA373_0 = input.LA(1);

                if ( (LA373_0==RULE_AT||(LA373_0>=138 && LA373_0<=144)) ) {
                    alt373=1;
                }


                switch (alt373) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14453:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14453:1: (lv_annotations_0_0= ruleAnnotation )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14454:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoAnnotatedPropertyAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_rulePojoAnnotatedProperty32469);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoAnnotatedPropertyRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop373;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14470:3: ( (lv_feature_1_0= rulePojoProperty ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14471:1: (lv_feature_1_0= rulePojoProperty )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14471:1: (lv_feature_1_0= rulePojoProperty )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14472:3: lv_feature_1_0= rulePojoProperty
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPojoAnnotatedPropertyAccess().getFeaturePojoPropertyParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoProperty_in_rulePojoAnnotatedProperty32491);
            lv_feature_1_0=rulePojoProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPojoAnnotatedPropertyRule());
              	        }
                     		set(
                     			current, 
                     			"feature",
                      		lv_feature_1_0, 
                      		"PojoProperty");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoAnnotatedProperty"


    // $ANTLR start "entryRulePojoPropertyDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14496:1: entryRulePojoPropertyDirective returns [EObject current=null] : iv_rulePojoPropertyDirective= rulePojoPropertyDirective EOF ;
    public final EObject entryRulePojoPropertyDirective() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoPropertyDirective = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14500:2: (iv_rulePojoPropertyDirective= rulePojoPropertyDirective EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14501:2: iv_rulePojoPropertyDirective= rulePojoPropertyDirective EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoPropertyDirectiveRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoPropertyDirective_in_entryRulePojoPropertyDirective32533);
            iv_rulePojoPropertyDirective=rulePojoPropertyDirective();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoPropertyDirective; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoPropertyDirective32543); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoPropertyDirective"


    // $ANTLR start "rulePojoPropertyDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14511:1: rulePojoPropertyDirective returns [EObject current=null] : ( ( () otherlv_1= '#Required' ) | ( () otherlv_3= '#PrimaryKey' ) | ( () otherlv_5= '#InheritanceDiscriminator' ) | ( () otherlv_7= '#Index' this_LPAREN_8= RULE_LPAREN ( (lv_index_9_0= RULE_NUMBER ) ) this_RPAREN_10= RULE_RPAREN ) | ( () otherlv_12= '#Version' ) | ( () otherlv_14= '#UpdateCol' this_LPAREN_15= RULE_LPAREN ( (lv_updateColumn1_16_0= RULE_IDENT ) ) this_COMMA_17= RULE_COMMA ( (lv_updateColumn2_18_0= RULE_IDENT ) ) this_RPAREN_19= RULE_RPAREN ) | ( () otherlv_21= '#CreateCol' this_LPAREN_22= RULE_LPAREN ( (lv_createColumn1_23_0= RULE_IDENT ) ) this_COMMA_24= RULE_COMMA ( (lv_createColumn2_25_0= RULE_IDENT ) ) this_RPAREN_26= RULE_RPAREN ) | ( () otherlv_28= '#ToInit' ) | ( () otherlv_30= '#EnumInit' ) | ( () otherlv_32= '#IsDef' ) | ( () otherlv_34= '#EnumDef' ) ) ;
    public final EObject rulePojoPropertyDirective() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token this_LPAREN_8=null;
        Token lv_index_9_0=null;
        Token this_RPAREN_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token this_LPAREN_15=null;
        Token lv_updateColumn1_16_0=null;
        Token this_COMMA_17=null;
        Token lv_updateColumn2_18_0=null;
        Token this_RPAREN_19=null;
        Token otherlv_21=null;
        Token this_LPAREN_22=null;
        Token lv_createColumn1_23_0=null;
        Token this_COMMA_24=null;
        Token lv_createColumn2_25_0=null;
        Token this_RPAREN_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_34=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14515:28: ( ( ( () otherlv_1= '#Required' ) | ( () otherlv_3= '#PrimaryKey' ) | ( () otherlv_5= '#InheritanceDiscriminator' ) | ( () otherlv_7= '#Index' this_LPAREN_8= RULE_LPAREN ( (lv_index_9_0= RULE_NUMBER ) ) this_RPAREN_10= RULE_RPAREN ) | ( () otherlv_12= '#Version' ) | ( () otherlv_14= '#UpdateCol' this_LPAREN_15= RULE_LPAREN ( (lv_updateColumn1_16_0= RULE_IDENT ) ) this_COMMA_17= RULE_COMMA ( (lv_updateColumn2_18_0= RULE_IDENT ) ) this_RPAREN_19= RULE_RPAREN ) | ( () otherlv_21= '#CreateCol' this_LPAREN_22= RULE_LPAREN ( (lv_createColumn1_23_0= RULE_IDENT ) ) this_COMMA_24= RULE_COMMA ( (lv_createColumn2_25_0= RULE_IDENT ) ) this_RPAREN_26= RULE_RPAREN ) | ( () otherlv_28= '#ToInit' ) | ( () otherlv_30= '#EnumInit' ) | ( () otherlv_32= '#IsDef' ) | ( () otherlv_34= '#EnumDef' ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14516:1: ( ( () otherlv_1= '#Required' ) | ( () otherlv_3= '#PrimaryKey' ) | ( () otherlv_5= '#InheritanceDiscriminator' ) | ( () otherlv_7= '#Index' this_LPAREN_8= RULE_LPAREN ( (lv_index_9_0= RULE_NUMBER ) ) this_RPAREN_10= RULE_RPAREN ) | ( () otherlv_12= '#Version' ) | ( () otherlv_14= '#UpdateCol' this_LPAREN_15= RULE_LPAREN ( (lv_updateColumn1_16_0= RULE_IDENT ) ) this_COMMA_17= RULE_COMMA ( (lv_updateColumn2_18_0= RULE_IDENT ) ) this_RPAREN_19= RULE_RPAREN ) | ( () otherlv_21= '#CreateCol' this_LPAREN_22= RULE_LPAREN ( (lv_createColumn1_23_0= RULE_IDENT ) ) this_COMMA_24= RULE_COMMA ( (lv_createColumn2_25_0= RULE_IDENT ) ) this_RPAREN_26= RULE_RPAREN ) | ( () otherlv_28= '#ToInit' ) | ( () otherlv_30= '#EnumInit' ) | ( () otherlv_32= '#IsDef' ) | ( () otherlv_34= '#EnumDef' ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14516:1: ( ( () otherlv_1= '#Required' ) | ( () otherlv_3= '#PrimaryKey' ) | ( () otherlv_5= '#InheritanceDiscriminator' ) | ( () otherlv_7= '#Index' this_LPAREN_8= RULE_LPAREN ( (lv_index_9_0= RULE_NUMBER ) ) this_RPAREN_10= RULE_RPAREN ) | ( () otherlv_12= '#Version' ) | ( () otherlv_14= '#UpdateCol' this_LPAREN_15= RULE_LPAREN ( (lv_updateColumn1_16_0= RULE_IDENT ) ) this_COMMA_17= RULE_COMMA ( (lv_updateColumn2_18_0= RULE_IDENT ) ) this_RPAREN_19= RULE_RPAREN ) | ( () otherlv_21= '#CreateCol' this_LPAREN_22= RULE_LPAREN ( (lv_createColumn1_23_0= RULE_IDENT ) ) this_COMMA_24= RULE_COMMA ( (lv_createColumn2_25_0= RULE_IDENT ) ) this_RPAREN_26= RULE_RPAREN ) | ( () otherlv_28= '#ToInit' ) | ( () otherlv_30= '#EnumInit' ) | ( () otherlv_32= '#IsDef' ) | ( () otherlv_34= '#EnumDef' ) )
            int alt374=11;
            switch ( input.LA(1) ) {
            case 162:
                {
                alt374=1;
                }
                break;
            case 163:
                {
                alt374=2;
                }
                break;
            case 164:
                {
                alt374=3;
                }
                break;
            case 156:
                {
                alt374=4;
                }
                break;
            case 165:
                {
                alt374=5;
                }
                break;
            case 166:
                {
                alt374=6;
                }
                break;
            case 167:
                {
                alt374=7;
                }
                break;
            case 168:
                {
                alt374=8;
                }
                break;
            case 169:
                {
                alt374=9;
                }
                break;
            case 170:
                {
                alt374=10;
                }
                break;
            case 171:
                {
                alt374=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 374, 0, input);

                throw nvae;
            }

            switch (alt374) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14516:2: ( () otherlv_1= '#Required' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14516:2: ( () otherlv_1= '#Required' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14516:3: () otherlv_1= '#Required'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14516:3: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14517:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveRequiredAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,162,FollowSets002.FOLLOW_162_in_rulePojoPropertyDirective32594); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPojoPropertyDirectiveAccess().getRequiredKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14527:6: ( () otherlv_3= '#PrimaryKey' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14527:6: ( () otherlv_3= '#PrimaryKey' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14527:7: () otherlv_3= '#PrimaryKey'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14527:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14528:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectivePrimaryKeyAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_3=(Token)match(input,163,FollowSets002.FOLLOW_163_in_rulePojoPropertyDirective32623); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getPojoPropertyDirectiveAccess().getPrimaryKeyKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14538:6: ( () otherlv_5= '#InheritanceDiscriminator' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14538:6: ( () otherlv_5= '#InheritanceDiscriminator' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14538:7: () otherlv_5= '#InheritanceDiscriminator'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14538:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14539:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveDiscriminatorAction_2_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,164,FollowSets002.FOLLOW_164_in_rulePojoPropertyDirective32652); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getPojoPropertyDirectiveAccess().getInheritanceDiscriminatorKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14549:6: ( () otherlv_7= '#Index' this_LPAREN_8= RULE_LPAREN ( (lv_index_9_0= RULE_NUMBER ) ) this_RPAREN_10= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14549:6: ( () otherlv_7= '#Index' this_LPAREN_8= RULE_LPAREN ( (lv_index_9_0= RULE_NUMBER ) ) this_RPAREN_10= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14549:7: () otherlv_7= '#Index' this_LPAREN_8= RULE_LPAREN ( (lv_index_9_0= RULE_NUMBER ) ) this_RPAREN_10= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14549:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14550:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveIndexAction_3_0(),
                                  current);
                          
                    }

                    }

                    otherlv_7=(Token)match(input,156,FollowSets002.FOLLOW_156_in_rulePojoPropertyDirective32681); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getPojoPropertyDirectiveAccess().getIndexKeyword_3_1());
                          
                    }
                    this_LPAREN_8=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoPropertyDirective32692); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_8, grammarAccess.getPojoPropertyDirectiveAccess().getLPARENTerminalRuleCall_3_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14563:1: ( (lv_index_9_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14564:1: (lv_index_9_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14564:1: (lv_index_9_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14565:3: lv_index_9_0= RULE_NUMBER
                    {
                    lv_index_9_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePojoPropertyDirective32708); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_index_9_0, grammarAccess.getPojoPropertyDirectiveAccess().getIndexNUMBERTerminalRuleCall_3_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyDirectiveRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"index",
                              		lv_index_9_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }

                    this_RPAREN_10=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoPropertyDirective32724); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_10, grammarAccess.getPojoPropertyDirectiveAccess().getRPARENTerminalRuleCall_3_4()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14586:6: ( () otherlv_12= '#Version' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14586:6: ( () otherlv_12= '#Version' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14586:7: () otherlv_12= '#Version'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14586:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14587:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveVersionAction_4_0(),
                                  current);
                          
                    }

                    }

                    otherlv_12=(Token)match(input,165,FollowSets002.FOLLOW_165_in_rulePojoPropertyDirective32752); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getPojoPropertyDirectiveAccess().getVersionKeyword_4_1());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14597:6: ( () otherlv_14= '#UpdateCol' this_LPAREN_15= RULE_LPAREN ( (lv_updateColumn1_16_0= RULE_IDENT ) ) this_COMMA_17= RULE_COMMA ( (lv_updateColumn2_18_0= RULE_IDENT ) ) this_RPAREN_19= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14597:6: ( () otherlv_14= '#UpdateCol' this_LPAREN_15= RULE_LPAREN ( (lv_updateColumn1_16_0= RULE_IDENT ) ) this_COMMA_17= RULE_COMMA ( (lv_updateColumn2_18_0= RULE_IDENT ) ) this_RPAREN_19= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14597:7: () otherlv_14= '#UpdateCol' this_LPAREN_15= RULE_LPAREN ( (lv_updateColumn1_16_0= RULE_IDENT ) ) this_COMMA_17= RULE_COMMA ( (lv_updateColumn2_18_0= RULE_IDENT ) ) this_RPAREN_19= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14597:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14598:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveUpdateColAction_5_0(),
                                  current);
                          
                    }

                    }

                    otherlv_14=(Token)match(input,166,FollowSets002.FOLLOW_166_in_rulePojoPropertyDirective32781); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getPojoPropertyDirectiveAccess().getUpdateColKeyword_5_1());
                          
                    }
                    this_LPAREN_15=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoPropertyDirective32792); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_15, grammarAccess.getPojoPropertyDirectiveAccess().getLPARENTerminalRuleCall_5_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14611:1: ( (lv_updateColumn1_16_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14612:1: (lv_updateColumn1_16_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14612:1: (lv_updateColumn1_16_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14613:3: lv_updateColumn1_16_0= RULE_IDENT
                    {
                    lv_updateColumn1_16_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoPropertyDirective32808); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_updateColumn1_16_0, grammarAccess.getPojoPropertyDirectiveAccess().getUpdateColumn1IDENTTerminalRuleCall_5_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyDirectiveRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"updateColumn1",
                              		lv_updateColumn1_16_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    this_COMMA_17=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_rulePojoPropertyDirective32824); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_17, grammarAccess.getPojoPropertyDirectiveAccess().getCOMMATerminalRuleCall_5_4()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14633:1: ( (lv_updateColumn2_18_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14634:1: (lv_updateColumn2_18_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14634:1: (lv_updateColumn2_18_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14635:3: lv_updateColumn2_18_0= RULE_IDENT
                    {
                    lv_updateColumn2_18_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoPropertyDirective32840); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_updateColumn2_18_0, grammarAccess.getPojoPropertyDirectiveAccess().getUpdateColumn2IDENTTerminalRuleCall_5_5_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyDirectiveRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"updateColumn2",
                              		lv_updateColumn2_18_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    this_RPAREN_19=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoPropertyDirective32856); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_19, grammarAccess.getPojoPropertyDirectiveAccess().getRPARENTerminalRuleCall_5_6()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14656:6: ( () otherlv_21= '#CreateCol' this_LPAREN_22= RULE_LPAREN ( (lv_createColumn1_23_0= RULE_IDENT ) ) this_COMMA_24= RULE_COMMA ( (lv_createColumn2_25_0= RULE_IDENT ) ) this_RPAREN_26= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14656:6: ( () otherlv_21= '#CreateCol' this_LPAREN_22= RULE_LPAREN ( (lv_createColumn1_23_0= RULE_IDENT ) ) this_COMMA_24= RULE_COMMA ( (lv_createColumn2_25_0= RULE_IDENT ) ) this_RPAREN_26= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14656:7: () otherlv_21= '#CreateCol' this_LPAREN_22= RULE_LPAREN ( (lv_createColumn1_23_0= RULE_IDENT ) ) this_COMMA_24= RULE_COMMA ( (lv_createColumn2_25_0= RULE_IDENT ) ) this_RPAREN_26= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14656:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14657:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveCreateColAction_6_0(),
                                  current);
                          
                    }

                    }

                    otherlv_21=(Token)match(input,167,FollowSets002.FOLLOW_167_in_rulePojoPropertyDirective32884); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_21, grammarAccess.getPojoPropertyDirectiveAccess().getCreateColKeyword_6_1());
                          
                    }
                    this_LPAREN_22=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_rulePojoPropertyDirective32895); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_22, grammarAccess.getPojoPropertyDirectiveAccess().getLPARENTerminalRuleCall_6_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14670:1: ( (lv_createColumn1_23_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14671:1: (lv_createColumn1_23_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14671:1: (lv_createColumn1_23_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14672:3: lv_createColumn1_23_0= RULE_IDENT
                    {
                    lv_createColumn1_23_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoPropertyDirective32911); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_createColumn1_23_0, grammarAccess.getPojoPropertyDirectiveAccess().getCreateColumn1IDENTTerminalRuleCall_6_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyDirectiveRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"createColumn1",
                              		lv_createColumn1_23_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    this_COMMA_24=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_rulePojoPropertyDirective32927); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_24, grammarAccess.getPojoPropertyDirectiveAccess().getCOMMATerminalRuleCall_6_4()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14692:1: ( (lv_createColumn2_25_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14693:1: (lv_createColumn2_25_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14693:1: (lv_createColumn2_25_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14694:3: lv_createColumn2_25_0= RULE_IDENT
                    {
                    lv_createColumn2_25_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoPropertyDirective32943); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_createColumn2_25_0, grammarAccess.getPojoPropertyDirectiveAccess().getCreateColumn2IDENTTerminalRuleCall_6_5_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyDirectiveRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"createColumn2",
                              		lv_createColumn2_25_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    this_RPAREN_26=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_rulePojoPropertyDirective32959); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_26, grammarAccess.getPojoPropertyDirectiveAccess().getRPARENTerminalRuleCall_6_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14715:6: ( () otherlv_28= '#ToInit' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14715:6: ( () otherlv_28= '#ToInit' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14715:7: () otherlv_28= '#ToInit'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14715:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14716:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveToInitAction_7_0(),
                                  current);
                          
                    }

                    }

                    otherlv_28=(Token)match(input,168,FollowSets002.FOLLOW_168_in_rulePojoPropertyDirective32987); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_28, grammarAccess.getPojoPropertyDirectiveAccess().getToInitKeyword_7_1());
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14726:6: ( () otherlv_30= '#EnumInit' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14726:6: ( () otherlv_30= '#EnumInit' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14726:7: () otherlv_30= '#EnumInit'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14726:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14727:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveEnumInitAction_8_0(),
                                  current);
                          
                    }

                    }

                    otherlv_30=(Token)match(input,169,FollowSets002.FOLLOW_169_in_rulePojoPropertyDirective33016); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_30, grammarAccess.getPojoPropertyDirectiveAccess().getEnumInitKeyword_8_1());
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14737:6: ( () otherlv_32= '#IsDef' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14737:6: ( () otherlv_32= '#IsDef' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14737:7: () otherlv_32= '#IsDef'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14737:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14738:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveIsDefAction_9_0(),
                                  current);
                          
                    }

                    }

                    otherlv_32=(Token)match(input,170,FollowSets002.FOLLOW_170_in_rulePojoPropertyDirective33045); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_32, grammarAccess.getPojoPropertyDirectiveAccess().getIsDefKeyword_9_1());
                          
                    }

                    }


                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14748:6: ( () otherlv_34= '#EnumDef' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14748:6: ( () otherlv_34= '#EnumDef' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14748:7: () otherlv_34= '#EnumDef'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14748:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14749:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPojoPropertyDirectiveAccess().getPojoPropertyDirectiveEnumDefAction_10_0(),
                                  current);
                          
                    }

                    }

                    otherlv_34=(Token)match(input,171,FollowSets002.FOLLOW_171_in_rulePojoPropertyDirective33074); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_34, grammarAccess.getPojoPropertyDirectiveAccess().getEnumDefKeyword_10_1());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoPropertyDirective"


    // $ANTLR start "entryRulePojoProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14769:1: entryRulePojoProperty returns [EObject current=null] : iv_rulePojoProperty= rulePojoProperty EOF ;
    public final EObject entryRulePojoProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoProperty = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14773:2: (iv_rulePojoProperty= rulePojoProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14774:2: iv_rulePojoProperty= rulePojoProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoPropertyRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoProperty_in_entryRulePojoProperty33121);
            iv_rulePojoProperty=rulePojoProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoProperty; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoProperty33131); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoProperty"


    // $ANTLR start "rulePojoProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14784:1: rulePojoProperty returns [EObject current=null] : ( ( (lv_directives_0_0= rulePojoPropertyDirective ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( (this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_4= RULE_IDENT ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_8= RULE_IDENT ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ( (lv_array_10_0= '[]' ) )? ) ;
    public final EObject rulePojoProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token this_COLON_2=null;
        Token otherlv_4=null;
        Token this_LESS_THAN_5=null;
        Token this_COLON_6=null;
        Token otherlv_8=null;
        Token this_MORE_THAN_9=null;
        Token lv_array_10_0=null;
        EObject lv_directives_0_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14788:28: ( ( ( (lv_directives_0_0= rulePojoPropertyDirective ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( (this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_4= RULE_IDENT ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_8= RULE_IDENT ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ( (lv_array_10_0= '[]' ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14789:1: ( ( (lv_directives_0_0= rulePojoPropertyDirective ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( (this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_4= RULE_IDENT ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_8= RULE_IDENT ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ( (lv_array_10_0= '[]' ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14789:1: ( ( (lv_directives_0_0= rulePojoPropertyDirective ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( (this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_4= RULE_IDENT ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_8= RULE_IDENT ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ( (lv_array_10_0= '[]' ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14789:2: ( (lv_directives_0_0= rulePojoPropertyDirective ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( (this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_4= RULE_IDENT ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_8= RULE_IDENT ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ( (lv_array_10_0= '[]' ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14789:2: ( (lv_directives_0_0= rulePojoPropertyDirective ) )*
            loop375:
            do {
                int alt375=2;
                int LA375_0 = input.LA(1);

                if ( (LA375_0==156||(LA375_0>=162 && LA375_0<=171)) ) {
                    alt375=1;
                }


                switch (alt375) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14790:1: (lv_directives_0_0= rulePojoPropertyDirective )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14790:1: (lv_directives_0_0= rulePojoPropertyDirective )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14791:3: lv_directives_0_0= rulePojoPropertyDirective
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoPropertyAccess().getDirectivesPojoPropertyDirectiveParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoPropertyDirective_in_rulePojoProperty33181);
            	    lv_directives_0_0=rulePojoPropertyDirective();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoPropertyRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"directives",
            	              		lv_directives_0_0, 
            	              		"PojoPropertyDirective");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop375;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14807:3: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14808:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14808:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14809:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoProperty33199); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getPojoPropertyAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14825:2: ( (this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_4= RULE_IDENT ) ) )
            int alt376=2;
            int LA376_0 = input.LA(1);

            if ( (LA376_0==RULE_COLON) ) {
                alt376=1;
            }
            else if ( (LA376_0==RULE_IDENT) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 0, input);

                throw nvae;
            }
            switch (alt376) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14825:3: (this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14825:3: (this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14825:4: this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) )
                    {
                    this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoProperty33217); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_2, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_2_0_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14829:1: ( ( ruleQualifiedName ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14830:1: ( ruleQualifiedName )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14830:1: ( ruleQualifiedName )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14831:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojoPropertyAccess().getTypeJvmTypeCrossReference_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_rulePojoProperty33239);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14845:6: ( (otherlv_4= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14845:6: ( (otherlv_4= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14846:1: (otherlv_4= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14846:1: (otherlv_4= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14847:3: otherlv_4= RULE_IDENT
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                      	        }
                              
                    }
                    otherlv_4=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoProperty33266); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_4, grammarAccess.getPojoPropertyAccess().getRefEntityCrossReference_2_1_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14858:3: (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_8= RULE_IDENT ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )?
            int alt378=2;
            int LA378_0 = input.LA(1);

            if ( (LA378_0==RULE_LESS_THAN) ) {
                alt378=1;
            }
            switch (alt378) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14858:4: this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_8= RULE_IDENT ) ) ) this_MORE_THAN_9= RULE_MORE_THAN
                    {
                    this_LESS_THAN_5=(Token)match(input,RULE_LESS_THAN,FollowSets002.FOLLOW_RULE_LESS_THAN_in_rulePojoProperty33279); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LESS_THAN_5, grammarAccess.getPojoPropertyAccess().getLESS_THANTerminalRuleCall_3_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14862:1: ( (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) ) | ( (otherlv_8= RULE_IDENT ) ) )
                    int alt377=2;
                    int LA377_0 = input.LA(1);

                    if ( (LA377_0==RULE_COLON) ) {
                        alt377=1;
                    }
                    else if ( (LA377_0==RULE_IDENT) ) {
                        alt377=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 377, 0, input);

                        throw nvae;
                    }
                    switch (alt377) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14862:2: (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14862:2: (this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14862:3: this_COLON_6= RULE_COLON ( ( ruleQualifiedName ) )
                            {
                            this_COLON_6=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoProperty33291); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_6, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_3_1_0_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14866:1: ( ( ruleQualifiedName ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14867:1: ( ruleQualifiedName )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14867:1: ( ruleQualifiedName )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14868:3: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getPojoPropertyAccess().getGtypeJvmTypeCrossReference_3_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_rulePojoProperty33313);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14882:6: ( (otherlv_8= RULE_IDENT ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14882:6: ( (otherlv_8= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14883:1: (otherlv_8= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14883:1: (otherlv_8= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14884:3: otherlv_8= RULE_IDENT
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                      
                            }
                            otherlv_8=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoProperty33340); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		newLeafNode(otherlv_8, grammarAccess.getPojoPropertyAccess().getGrefPojoEntityCrossReference_3_1_1_0()); 
                              	
                            }

                            }


                            }


                            }
                            break;

                    }

                    this_MORE_THAN_9=(Token)match(input,RULE_MORE_THAN,FollowSets002.FOLLOW_RULE_MORE_THAN_in_rulePojoProperty33352); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MORE_THAN_9, grammarAccess.getPojoPropertyAccess().getMORE_THANTerminalRuleCall_3_2()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14899:3: ( (lv_array_10_0= '[]' ) )?
            int alt379=2;
            int LA379_0 = input.LA(1);

            if ( (LA379_0==135) ) {
                alt379=1;
            }
            switch (alt379) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14900:1: (lv_array_10_0= '[]' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14900:1: (lv_array_10_0= '[]' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14901:3: lv_array_10_0= '[]'
                    {
                    lv_array_10_0=(Token)match(input,135,FollowSets002.FOLLOW_135_in_rulePojoProperty33371); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_array_10_0, grammarAccess.getPojoPropertyAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "array", true, "[]");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoProperty"


    // $ANTLR start "entryRuleEnumEntityModifier1"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14925:1: entryRuleEnumEntityModifier1 returns [EObject current=null] : iv_ruleEnumEntityModifier1= ruleEnumEntityModifier1 EOF ;
    public final EObject entryRuleEnumEntityModifier1() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumEntityModifier1 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14926:2: (iv_ruleEnumEntityModifier1= ruleEnumEntityModifier1 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14927:2: iv_ruleEnumEntityModifier1= ruleEnumEntityModifier1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumEntityModifier1Rule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumEntityModifier1_in_entryRuleEnumEntityModifier133425);
            iv_ruleEnumEntityModifier1=ruleEnumEntityModifier1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumEntityModifier1; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumEntityModifier133435); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumEntityModifier1"


    // $ANTLR start "ruleEnumEntityModifier1"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14934:1: ruleEnumEntityModifier1 returns [EObject current=null] : ( (lv_final_0_0= 'final' ) ) ;
    public final EObject ruleEnumEntityModifier1() throws RecognitionException {
        EObject current = null;

        Token lv_final_0_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14937:28: ( ( (lv_final_0_0= 'final' ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14938:1: ( (lv_final_0_0= 'final' ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14938:1: ( (lv_final_0_0= 'final' ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14939:1: (lv_final_0_0= 'final' )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14939:1: (lv_final_0_0= 'final' )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14940:3: lv_final_0_0= 'final'
            {
            lv_final_0_0=(Token)match(input,153,FollowSets002.FOLLOW_153_in_ruleEnumEntityModifier133477); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_final_0_0, grammarAccess.getEnumEntityModifier1Access().getFinalFinalKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumEntityModifier1Rule());
              	        }
                     		setWithLastConsumed(current, "final", true, "final");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumEntityModifier1"


    // $ANTLR start "entryRuleEnumEntityModifier2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14961:1: entryRuleEnumEntityModifier2 returns [EObject current=null] : iv_ruleEnumEntityModifier2= ruleEnumEntityModifier2 EOF ;
    public final EObject entryRuleEnumEntityModifier2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumEntityModifier2 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14962:2: (iv_ruleEnumEntityModifier2= ruleEnumEntityModifier2 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14963:2: iv_ruleEnumEntityModifier2= ruleEnumEntityModifier2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumEntityModifier2Rule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumEntityModifier2_in_entryRuleEnumEntityModifier233525);
            iv_ruleEnumEntityModifier2=ruleEnumEntityModifier2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumEntityModifier2; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumEntityModifier233535); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumEntityModifier2"


    // $ANTLR start "ruleEnumEntityModifier2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14970:1: ruleEnumEntityModifier2 returns [EObject current=null] : (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) ;
    public final EObject ruleEnumEntityModifier2() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14973:28: ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14974:1: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14974:1: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14974:3: otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) )
            {
            otherlv_0=(Token)match(input,152,FollowSets002.FOLLOW_152_in_ruleEnumEntityModifier233572); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getEnumEntityModifier2Access().getExtendsKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14978:1: ( (otherlv_1= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14979:1: (otherlv_1= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14979:1: (otherlv_1= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14980:3: otherlv_1= RULE_IDENT
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumEntityModifier2Rule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleEnumEntityModifier233592); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getEnumEntityModifier2Access().getSuperTypePojoEntityCrossReference_1_0()); 
              	
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumEntityModifier2"


    // $ANTLR start "entryRuleEnumEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14999:1: entryRuleEnumEntity returns [EObject current=null] : iv_ruleEnumEntity= ruleEnumEntity EOF ;
    public final EObject entryRuleEnumEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumEntity = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15003:2: (iv_ruleEnumEntity= ruleEnumEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15004:2: iv_ruleEnumEntity= ruleEnumEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumEntity_in_entryRuleEnumEntity33634);
            iv_ruleEnumEntity=ruleEnumEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumEntity33644); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleEnumEntity"


    // $ANTLR start "ruleEnumEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15014:1: ruleEnumEntity returns [EObject current=null] : ( ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= ruleEnumEntityModifier1 ) )* otherlv_2= 'enum' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= ruleEnumEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= ruleEnumProperty ) )* this_RBRACE_7= RULE_RBRACE ) ;
    public final EObject ruleEnumEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token this_LBRACE_5=null;
        Token this_RBRACE_7=null;
        EObject lv_directives_0_0 = null;

        EObject lv_modifiers1_1_0 = null;

        EObject lv_modifiers2_4_0 = null;

        EObject lv_features_6_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15018:28: ( ( ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= ruleEnumEntityModifier1 ) )* otherlv_2= 'enum' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= ruleEnumEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= ruleEnumProperty ) )* this_RBRACE_7= RULE_RBRACE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15019:1: ( ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= ruleEnumEntityModifier1 ) )* otherlv_2= 'enum' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= ruleEnumEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= ruleEnumProperty ) )* this_RBRACE_7= RULE_RBRACE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15019:1: ( ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= ruleEnumEntityModifier1 ) )* otherlv_2= 'enum' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= ruleEnumEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= ruleEnumProperty ) )* this_RBRACE_7= RULE_RBRACE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15019:2: ( (lv_directives_0_0= rulePojoDirective ) )* ( (lv_modifiers1_1_0= ruleEnumEntityModifier1 ) )* otherlv_2= 'enum' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= ruleEnumEntityModifier2 ) )* this_LBRACE_5= RULE_LBRACE ( (lv_features_6_0= ruleEnumProperty ) )* this_RBRACE_7= RULE_RBRACE
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15019:2: ( (lv_directives_0_0= rulePojoDirective ) )*
            loop380:
            do {
                int alt380=2;
                int LA380_0 = input.LA(1);

                if ( ((LA380_0>=155 && LA380_0<=161)) ) {
                    alt380=1;
                }


                switch (alt380) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15020:1: (lv_directives_0_0= rulePojoDirective )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15020:1: (lv_directives_0_0= rulePojoDirective )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15021:3: lv_directives_0_0= rulePojoDirective
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumEntityAccess().getDirectivesPojoDirectiveParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoDirective_in_ruleEnumEntity33694);
            	    lv_directives_0_0=rulePojoDirective();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"directives",
            	              		lv_directives_0_0, 
            	              		"PojoDirective");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop380;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15037:3: ( (lv_modifiers1_1_0= ruleEnumEntityModifier1 ) )*
            loop381:
            do {
                int alt381=2;
                int LA381_0 = input.LA(1);

                if ( (LA381_0==153) ) {
                    alt381=1;
                }


                switch (alt381) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15038:1: (lv_modifiers1_1_0= ruleEnumEntityModifier1 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15038:1: (lv_modifiers1_1_0= ruleEnumEntityModifier1 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15039:3: lv_modifiers1_1_0= ruleEnumEntityModifier1
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumEntityAccess().getModifiers1EnumEntityModifier1ParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleEnumEntityModifier1_in_ruleEnumEntity33716);
            	    lv_modifiers1_1_0=ruleEnumEntityModifier1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers1",
            	              		lv_modifiers1_1_0, 
            	              		"EnumEntityModifier1");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop381;
                }
            } while (true);

            otherlv_2=(Token)match(input,172,FollowSets002.FOLLOW_172_in_ruleEnumEntity33729); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getEnumEntityAccess().getEnumKeyword_2());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15059:1: ( (lv_name_3_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15060:1: (lv_name_3_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15060:1: (lv_name_3_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15061:3: lv_name_3_0= RULE_IDENT
            {
            lv_name_3_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleEnumEntity33746); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getEnumEntityAccess().getNameIDENTTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumEntityRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15077:2: ( (lv_modifiers2_4_0= ruleEnumEntityModifier2 ) )*
            loop382:
            do {
                int alt382=2;
                int LA382_0 = input.LA(1);

                if ( (LA382_0==152) ) {
                    alt382=1;
                }


                switch (alt382) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15078:1: (lv_modifiers2_4_0= ruleEnumEntityModifier2 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15078:1: (lv_modifiers2_4_0= ruleEnumEntityModifier2 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15079:3: lv_modifiers2_4_0= ruleEnumEntityModifier2
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumEntityAccess().getModifiers2EnumEntityModifier2ParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleEnumEntityModifier2_in_ruleEnumEntity33772);
            	    lv_modifiers2_4_0=ruleEnumEntityModifier2();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers2",
            	              		lv_modifiers2_4_0, 
            	              		"EnumEntityModifier2");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop382;
                }
            } while (true);

            this_LBRACE_5=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_ruleEnumEntity33784); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LBRACE_5, grammarAccess.getEnumEntityAccess().getLBRACETerminalRuleCall_5()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15099:1: ( (lv_features_6_0= ruleEnumProperty ) )*
            loop383:
            do {
                int alt383=2;
                int LA383_0 = input.LA(1);

                if ( (LA383_0==173) ) {
                    alt383=1;
                }


                switch (alt383) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15100:1: (lv_features_6_0= ruleEnumProperty )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15100:1: (lv_features_6_0= ruleEnumProperty )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15101:3: lv_features_6_0= ruleEnumProperty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumEntityAccess().getFeaturesEnumPropertyParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleEnumProperty_in_ruleEnumEntity33804);
            	    lv_features_6_0=ruleEnumProperty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"features",
            	              		lv_features_6_0, 
            	              		"EnumProperty");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop383;
                }
            } while (true);

            this_RBRACE_7=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_ruleEnumEntity33816); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RBRACE_7, grammarAccess.getEnumEntityAccess().getRBRACETerminalRuleCall_7()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleEnumEntity"


    // $ANTLR start "entryRuleEnumPropertyValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15132:1: entryRuleEnumPropertyValue returns [EObject current=null] : iv_ruleEnumPropertyValue= ruleEnumPropertyValue EOF ;
    public final EObject entryRuleEnumPropertyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumPropertyValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15133:2: (iv_ruleEnumPropertyValue= ruleEnumPropertyValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15134:2: iv_ruleEnumPropertyValue= ruleEnumPropertyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumPropertyValueRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumPropertyValue_in_entryRuleEnumPropertyValue33855);
            iv_ruleEnumPropertyValue=ruleEnumPropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumPropertyValue; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumPropertyValue33865); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumPropertyValue"


    // $ANTLR start "ruleEnumPropertyValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15141:1: ruleEnumPropertyValue returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE ) ) ) ) ;
    public final EObject ruleEnumPropertyValue() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_EQUALS_1=null;
        Token lv_value_2_1=null;
        Token lv_value_2_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15144:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15145:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15145:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15145:2: ( (lv_name_0_0= RULE_IDENT ) ) this_EQUALS_1= RULE_EQUALS ( ( (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15145:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15146:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15146:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15147:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleEnumPropertyValue33907); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getEnumPropertyValueAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumPropertyValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_EQUALS_1=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleEnumPropertyValue33923); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EQUALS_1, grammarAccess.getEnumPropertyValueAccess().getEQUALSTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15167:1: ( ( (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15168:1: ( (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15168:1: ( (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15169:1: (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15169:1: (lv_value_2_1= RULE_NUMBER | lv_value_2_2= RULE_STRING_VALUE )
            int alt384=2;
            int LA384_0 = input.LA(1);

            if ( (LA384_0==RULE_NUMBER) ) {
                alt384=1;
            }
            else if ( (LA384_0==RULE_STRING_VALUE) ) {
                alt384=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 384, 0, input);

                throw nvae;
            }
            switch (alt384) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15170:3: lv_value_2_1= RULE_NUMBER
                    {
                    lv_value_2_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleEnumPropertyValue33941); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_2_1, grammarAccess.getEnumPropertyValueAccess().getValueNUMBERTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumPropertyValueRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_2_1, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15185:8: lv_value_2_2= RULE_STRING_VALUE
                    {
                    lv_value_2_2=(Token)match(input,RULE_STRING_VALUE,FollowSets002.FOLLOW_RULE_STRING_VALUE_in_ruleEnumPropertyValue33961); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_2_2, grammarAccess.getEnumPropertyValueAccess().getValueSTRING_VALUETerminalRuleCall_2_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumPropertyValueRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_2_2, 
                              		"STRING_VALUE");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumPropertyValue"


    // $ANTLR start "entryRuleEnumPropertyDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15211:1: entryRuleEnumPropertyDirective returns [EObject current=null] : iv_ruleEnumPropertyDirective= ruleEnumPropertyDirective EOF ;
    public final EObject entryRuleEnumPropertyDirective() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumPropertyDirective = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15215:2: (iv_ruleEnumPropertyDirective= ruleEnumPropertyDirective EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15216:2: iv_ruleEnumPropertyDirective= ruleEnumPropertyDirective EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumPropertyDirectiveRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumPropertyDirective_in_entryRuleEnumPropertyDirective34011);
            iv_ruleEnumPropertyDirective=ruleEnumPropertyDirective();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumPropertyDirective; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumPropertyDirective34021); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleEnumPropertyDirective"


    // $ANTLR start "ruleEnumPropertyDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15226:1: ruleEnumPropertyDirective returns [EObject current=null] : ( () otherlv_1= '#Values' this_LPAREN_2= RULE_LPAREN ( (lv_values_3_0= ruleEnumPropertyValue ) ) (this_COMMA_4= RULE_COMMA ( (lv_values_5_0= ruleEnumPropertyValue ) ) )* this_RPAREN_6= RULE_RPAREN ) ;
    public final EObject ruleEnumPropertyDirective() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_LPAREN_2=null;
        Token this_COMMA_4=null;
        Token this_RPAREN_6=null;
        EObject lv_values_3_0 = null;

        EObject lv_values_5_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15230:28: ( ( () otherlv_1= '#Values' this_LPAREN_2= RULE_LPAREN ( (lv_values_3_0= ruleEnumPropertyValue ) ) (this_COMMA_4= RULE_COMMA ( (lv_values_5_0= ruleEnumPropertyValue ) ) )* this_RPAREN_6= RULE_RPAREN ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15231:1: ( () otherlv_1= '#Values' this_LPAREN_2= RULE_LPAREN ( (lv_values_3_0= ruleEnumPropertyValue ) ) (this_COMMA_4= RULE_COMMA ( (lv_values_5_0= ruleEnumPropertyValue ) ) )* this_RPAREN_6= RULE_RPAREN )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15231:1: ( () otherlv_1= '#Values' this_LPAREN_2= RULE_LPAREN ( (lv_values_3_0= ruleEnumPropertyValue ) ) (this_COMMA_4= RULE_COMMA ( (lv_values_5_0= ruleEnumPropertyValue ) ) )* this_RPAREN_6= RULE_RPAREN )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15231:2: () otherlv_1= '#Values' this_LPAREN_2= RULE_LPAREN ( (lv_values_3_0= ruleEnumPropertyValue ) ) (this_COMMA_4= RULE_COMMA ( (lv_values_5_0= ruleEnumPropertyValue ) ) )* this_RPAREN_6= RULE_RPAREN
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15231:2: ()
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15232:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEnumPropertyDirectiveAccess().getEnumPropertyDirectiveValuesAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,173,FollowSets002.FOLLOW_173_in_ruleEnumPropertyDirective34071); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEnumPropertyDirectiveAccess().getValuesKeyword_1());
                  
            }
            this_LPAREN_2=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleEnumPropertyDirective34082); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LPAREN_2, grammarAccess.getEnumPropertyDirectiveAccess().getLPARENTerminalRuleCall_2()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15245:1: ( (lv_values_3_0= ruleEnumPropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15246:1: (lv_values_3_0= ruleEnumPropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15246:1: (lv_values_3_0= ruleEnumPropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15247:3: lv_values_3_0= ruleEnumPropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnumPropertyDirectiveAccess().getValuesEnumPropertyValueParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumPropertyValue_in_ruleEnumPropertyDirective34102);
            lv_values_3_0=ruleEnumPropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumPropertyDirectiveRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_3_0, 
                      		"EnumPropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15263:2: (this_COMMA_4= RULE_COMMA ( (lv_values_5_0= ruleEnumPropertyValue ) ) )*
            loop385:
            do {
                int alt385=2;
                int LA385_0 = input.LA(1);

                if ( (LA385_0==RULE_COMMA) ) {
                    alt385=1;
                }


                switch (alt385) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15263:3: this_COMMA_4= RULE_COMMA ( (lv_values_5_0= ruleEnumPropertyValue ) )
            	    {
            	    this_COMMA_4=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleEnumPropertyDirective34114); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_4, grammarAccess.getEnumPropertyDirectiveAccess().getCOMMATerminalRuleCall_4_0()); 
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15267:1: ( (lv_values_5_0= ruleEnumPropertyValue ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15268:1: (lv_values_5_0= ruleEnumPropertyValue )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15268:1: (lv_values_5_0= ruleEnumPropertyValue )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15269:3: lv_values_5_0= ruleEnumPropertyValue
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumPropertyDirectiveAccess().getValuesEnumPropertyValueParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleEnumPropertyValue_in_ruleEnumPropertyDirective34134);
            	    lv_values_5_0=ruleEnumPropertyValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumPropertyDirectiveRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_5_0, 
            	              		"EnumPropertyValue");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop385;
                }
            } while (true);

            this_RPAREN_6=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleEnumPropertyDirective34147); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RPAREN_6, grammarAccess.getEnumPropertyDirectiveAccess().getRPARENTerminalRuleCall_5()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleEnumPropertyDirective"


    // $ANTLR start "entryRuleEnumProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15300:1: entryRuleEnumProperty returns [EObject current=null] : iv_ruleEnumProperty= ruleEnumProperty EOF ;
    public final EObject entryRuleEnumProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumProperty = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15304:2: (iv_ruleEnumProperty= ruleEnumProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15305:2: iv_ruleEnumProperty= ruleEnumProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumPropertyRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumProperty_in_entryRuleEnumProperty34192);
            iv_ruleEnumProperty=ruleEnumProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumProperty; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumProperty34202); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleEnumProperty"


    // $ANTLR start "ruleEnumProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15315:1: ruleEnumProperty returns [EObject current=null] : ( ( (lv_directives_0_0= ruleEnumPropertyDirective ) ) ( (lv_name_1_0= RULE_IDENT ) ) this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) ) ;
    public final EObject ruleEnumProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token this_COLON_2=null;
        EObject lv_directives_0_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15319:28: ( ( ( (lv_directives_0_0= ruleEnumPropertyDirective ) ) ( (lv_name_1_0= RULE_IDENT ) ) this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15320:1: ( ( (lv_directives_0_0= ruleEnumPropertyDirective ) ) ( (lv_name_1_0= RULE_IDENT ) ) this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15320:1: ( ( (lv_directives_0_0= ruleEnumPropertyDirective ) ) ( (lv_name_1_0= RULE_IDENT ) ) this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15320:2: ( (lv_directives_0_0= ruleEnumPropertyDirective ) ) ( (lv_name_1_0= RULE_IDENT ) ) this_COLON_2= RULE_COLON ( ( ruleQualifiedName ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15320:2: ( (lv_directives_0_0= ruleEnumPropertyDirective ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15321:1: (lv_directives_0_0= ruleEnumPropertyDirective )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15321:1: (lv_directives_0_0= ruleEnumPropertyDirective )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15322:3: lv_directives_0_0= ruleEnumPropertyDirective
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnumPropertyAccess().getDirectivesEnumPropertyDirectiveParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumPropertyDirective_in_ruleEnumProperty34252);
            lv_directives_0_0=ruleEnumPropertyDirective();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumPropertyRule());
              	        }
                     		add(
                     			current, 
                     			"directives",
                      		lv_directives_0_0, 
                      		"EnumPropertyDirective");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15338:2: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15339:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15339:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15340:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleEnumProperty34269); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getEnumPropertyAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleEnumProperty34285); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_2, grammarAccess.getEnumPropertyAccess().getCOLONTerminalRuleCall_2()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15360:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15361:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15361:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15362:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnumPropertyAccess().getTypeJvmTypeCrossReference_3_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleEnumProperty34307);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleEnumProperty"


    // $ANTLR start "entryRuleDaoDirectiveParameters"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15386:1: entryRuleDaoDirectiveParameters returns [EObject current=null] : iv_ruleDaoDirectiveParameters= ruleDaoDirectiveParameters EOF ;
    public final EObject entryRuleDaoDirectiveParameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDaoDirectiveParameters = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15390:2: (iv_ruleDaoDirectiveParameters= ruleDaoDirectiveParameters EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15391:2: iv_ruleDaoDirectiveParameters= ruleDaoDirectiveParameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDaoDirectiveParametersRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleDaoDirectiveParameters_in_entryRuleDaoDirectiveParameters34353);
            iv_ruleDaoDirectiveParameters=ruleDaoDirectiveParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDaoDirectiveParameters; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleDaoDirectiveParameters34363); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDaoDirectiveParameters"


    // $ANTLR start "ruleDaoDirectiveParameters"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15401:1: ruleDaoDirectiveParameters returns [EObject current=null] : ( ( (lv_out_0_0= rulePojoType ) ) (this_COMMA_1= RULE_COMMA ( (lv_ins_2_0= rulePojoType ) ) )* ) ;
    public final EObject ruleDaoDirectiveParameters() throws RecognitionException {
        EObject current = null;

        Token this_COMMA_1=null;
        EObject lv_out_0_0 = null;

        EObject lv_ins_2_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15405:28: ( ( ( (lv_out_0_0= rulePojoType ) ) (this_COMMA_1= RULE_COMMA ( (lv_ins_2_0= rulePojoType ) ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15406:1: ( ( (lv_out_0_0= rulePojoType ) ) (this_COMMA_1= RULE_COMMA ( (lv_ins_2_0= rulePojoType ) ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15406:1: ( ( (lv_out_0_0= rulePojoType ) ) (this_COMMA_1= RULE_COMMA ( (lv_ins_2_0= rulePojoType ) ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15406:2: ( (lv_out_0_0= rulePojoType ) ) (this_COMMA_1= RULE_COMMA ( (lv_ins_2_0= rulePojoType ) ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15406:2: ( (lv_out_0_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15407:1: (lv_out_0_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15407:1: (lv_out_0_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15408:3: lv_out_0_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDaoDirectiveParametersAccess().getOutPojoTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoType_in_ruleDaoDirectiveParameters34413);
            lv_out_0_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDaoDirectiveParametersRule());
              	        }
                     		set(
                     			current, 
                     			"out",
                      		lv_out_0_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15424:2: (this_COMMA_1= RULE_COMMA ( (lv_ins_2_0= rulePojoType ) ) )*
            loop386:
            do {
                int alt386=2;
                int LA386_0 = input.LA(1);

                if ( (LA386_0==RULE_COMMA) ) {
                    alt386=1;
                }


                switch (alt386) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15424:3: this_COMMA_1= RULE_COMMA ( (lv_ins_2_0= rulePojoType ) )
            	    {
            	    this_COMMA_1=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleDaoDirectiveParameters34425); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_1, grammarAccess.getDaoDirectiveParametersAccess().getCOMMATerminalRuleCall_1_0()); 
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15428:1: ( (lv_ins_2_0= rulePojoType ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15429:1: (lv_ins_2_0= rulePojoType )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15429:1: (lv_ins_2_0= rulePojoType )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15430:3: lv_ins_2_0= rulePojoType
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDaoDirectiveParametersAccess().getInsPojoTypeParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoType_in_ruleDaoDirectiveParameters34445);
            	    lv_ins_2_0=rulePojoType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDaoDirectiveParametersRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ins",
            	              		lv_ins_2_0, 
            	              		"PojoType");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop386;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDaoDirectiveParameters"


    // $ANTLR start "entryRuleDescendantAssignment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15457:1: entryRuleDescendantAssignment returns [EObject current=null] : iv_ruleDescendantAssignment= ruleDescendantAssignment EOF ;
    public final EObject entryRuleDescendantAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDescendantAssignment = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15461:2: (iv_ruleDescendantAssignment= ruleDescendantAssignment EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15462:2: iv_ruleDescendantAssignment= ruleDescendantAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDescendantAssignmentRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleDescendantAssignment_in_entryRuleDescendantAssignment34493);
            iv_ruleDescendantAssignment=ruleDescendantAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDescendantAssignment; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleDescendantAssignment34503); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDescendantAssignment"


    // $ANTLR start "ruleDescendantAssignment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15472:1: ruleDescendantAssignment returns [EObject current=null] : ( ( ( (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE ) ) ) this_EQUALS_1= RULE_EQUALS ( (lv_descendant_2_0= rulePojoType ) ) ) ;
    public final EObject ruleDescendantAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_1=null;
        Token lv_value_0_2=null;
        Token this_EQUALS_1=null;
        EObject lv_descendant_2_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15476:28: ( ( ( ( (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE ) ) ) this_EQUALS_1= RULE_EQUALS ( (lv_descendant_2_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15477:1: ( ( ( (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE ) ) ) this_EQUALS_1= RULE_EQUALS ( (lv_descendant_2_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15477:1: ( ( ( (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE ) ) ) this_EQUALS_1= RULE_EQUALS ( (lv_descendant_2_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15477:2: ( ( (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE ) ) ) this_EQUALS_1= RULE_EQUALS ( (lv_descendant_2_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15477:2: ( ( (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15478:1: ( (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15478:1: ( (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15479:1: (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15479:1: (lv_value_0_1= RULE_NUMBER | lv_value_0_2= RULE_STRING_VALUE )
            int alt387=2;
            int LA387_0 = input.LA(1);

            if ( (LA387_0==RULE_NUMBER) ) {
                alt387=1;
            }
            else if ( (LA387_0==RULE_STRING_VALUE) ) {
                alt387=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 387, 0, input);

                throw nvae;
            }
            switch (alt387) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15480:3: lv_value_0_1= RULE_NUMBER
                    {
                    lv_value_0_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleDescendantAssignment34551); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_0_1, grammarAccess.getDescendantAssignmentAccess().getValueNUMBERTerminalRuleCall_0_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDescendantAssignmentRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_0_1, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15495:8: lv_value_0_2= RULE_STRING_VALUE
                    {
                    lv_value_0_2=(Token)match(input,RULE_STRING_VALUE,FollowSets002.FOLLOW_RULE_STRING_VALUE_in_ruleDescendantAssignment34571); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_0_2, grammarAccess.getDescendantAssignmentAccess().getValueSTRING_VALUETerminalRuleCall_0_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDescendantAssignmentRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_0_2, 
                              		"STRING_VALUE");
                      	    
                    }

                    }
                    break;

            }


            }


            }

            this_EQUALS_1=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleDescendantAssignment34590); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EQUALS_1, grammarAccess.getDescendantAssignmentAccess().getEQUALSTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15517:1: ( (lv_descendant_2_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15518:1: (lv_descendant_2_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15518:1: (lv_descendant_2_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15519:3: lv_descendant_2_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDescendantAssignmentAccess().getDescendantPojoTypeParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoType_in_ruleDescendantAssignment34610);
            lv_descendant_2_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDescendantAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"descendant",
                      		lv_descendant_2_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDescendantAssignment"


    // $ANTLR start "entryRuleFunProcType"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15546:1: entryRuleFunProcType returns [EObject current=null] : iv_ruleFunProcType= ruleFunProcType EOF ;
    public final EObject entryRuleFunProcType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunProcType = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15550:2: (iv_ruleFunProcType= ruleFunProcType EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15551:2: iv_ruleFunProcType= ruleFunProcType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunProcTypeRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleFunProcType_in_entryRuleFunProcType34656);
            iv_ruleFunProcType=ruleFunProcType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunProcType; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleFunProcType34666); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleFunProcType"


    // $ANTLR start "ruleFunProcType"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15561:1: ruleFunProcType returns [EObject current=null] : ( ( () otherlv_1= '#FunctionCallQuery' ) | ( () otherlv_3= '#ProcedureCallQuery' ) | ( () otherlv_5= '#FunctionCall' ) | ( () otherlv_7= '#ProcedureUpdate' ) | ( () otherlv_9= '#FunctionQuery' ) ) ;
    public final EObject ruleFunProcType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15565:28: ( ( ( () otherlv_1= '#FunctionCallQuery' ) | ( () otherlv_3= '#ProcedureCallQuery' ) | ( () otherlv_5= '#FunctionCall' ) | ( () otherlv_7= '#ProcedureUpdate' ) | ( () otherlv_9= '#FunctionQuery' ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15566:1: ( ( () otherlv_1= '#FunctionCallQuery' ) | ( () otherlv_3= '#ProcedureCallQuery' ) | ( () otherlv_5= '#FunctionCall' ) | ( () otherlv_7= '#ProcedureUpdate' ) | ( () otherlv_9= '#FunctionQuery' ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15566:1: ( ( () otherlv_1= '#FunctionCallQuery' ) | ( () otherlv_3= '#ProcedureCallQuery' ) | ( () otherlv_5= '#FunctionCall' ) | ( () otherlv_7= '#ProcedureUpdate' ) | ( () otherlv_9= '#FunctionQuery' ) )
            int alt388=5;
            switch ( input.LA(1) ) {
            case 174:
                {
                alt388=1;
                }
                break;
            case 175:
                {
                alt388=2;
                }
                break;
            case 176:
                {
                alt388=3;
                }
                break;
            case 177:
                {
                alt388=4;
                }
                break;
            case 178:
                {
                alt388=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 388, 0, input);

                throw nvae;
            }

            switch (alt388) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15566:2: ( () otherlv_1= '#FunctionCallQuery' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15566:2: ( () otherlv_1= '#FunctionCallQuery' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15566:3: () otherlv_1= '#FunctionCallQuery'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15566:3: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15567:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getFunProcTypeAccess().getFunctionCallQueryAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,174,FollowSets002.FOLLOW_174_in_ruleFunProcType34717); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getFunProcTypeAccess().getFunctionCallQueryKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15577:6: ( () otherlv_3= '#ProcedureCallQuery' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15577:6: ( () otherlv_3= '#ProcedureCallQuery' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15577:7: () otherlv_3= '#ProcedureCallQuery'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15577:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15578:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getFunProcTypeAccess().getProcedureCallQueryAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_3=(Token)match(input,175,FollowSets002.FOLLOW_175_in_ruleFunProcType34746); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunProcTypeAccess().getProcedureCallQueryKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15588:6: ( () otherlv_5= '#FunctionCall' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15588:6: ( () otherlv_5= '#FunctionCall' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15588:7: () otherlv_5= '#FunctionCall'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15588:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15589:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getFunProcTypeAccess().getFunctionCallAction_2_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,176,FollowSets002.FOLLOW_176_in_ruleFunProcType34775); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getFunProcTypeAccess().getFunctionCallKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15599:6: ( () otherlv_7= '#ProcedureUpdate' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15599:6: ( () otherlv_7= '#ProcedureUpdate' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15599:7: () otherlv_7= '#ProcedureUpdate'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15599:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15600:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getFunProcTypeAccess().getProcedureUpdateAction_3_0(),
                                  current);
                          
                    }

                    }

                    otherlv_7=(Token)match(input,177,FollowSets002.FOLLOW_177_in_ruleFunProcType34804); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getFunProcTypeAccess().getProcedureUpdateKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15610:6: ( () otherlv_9= '#FunctionQuery' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15610:6: ( () otherlv_9= '#FunctionQuery' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15610:7: () otherlv_9= '#FunctionQuery'
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15610:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15611:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getFunProcTypeAccess().getFunctionQueryAction_4_0(),
                                  current);
                          
                    }

                    }

                    otherlv_9=(Token)match(input,178,FollowSets002.FOLLOW_178_in_ruleFunProcType34833); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getFunProcTypeAccess().getFunctionQueryKeyword_4_1());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleFunProcType"


    // $ANTLR start "entryRuleDaoDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15631:1: entryRuleDaoDirective returns [EObject current=null] : iv_ruleDaoDirective= ruleDaoDirective EOF ;
    public final EObject entryRuleDaoDirective() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDaoDirective = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15635:2: (iv_ruleDaoDirective= ruleDaoDirective EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15636:2: iv_ruleDaoDirective= ruleDaoDirective EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDaoDirectiveRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleDaoDirective_in_entryRuleDaoDirective34880);
            iv_ruleDaoDirective=ruleDaoDirective();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDaoDirective; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleDaoDirective34890); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDaoDirective"


    // $ANTLR start "ruleDaoDirective"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15646:1: ruleDaoDirective returns [EObject current=null] : ( ( () otherlv_1= '#Serializable' this_LPAREN_2= RULE_LPAREN ( (lv_sernum_3_0= RULE_NUMBER ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#InheritanceHandler' this_LPAREN_7= RULE_LPAREN ( (otherlv_8= RULE_IDENT ) ) (this_COMMA_9= RULE_COMMA ( (lv_descendants_10_0= ruleDescendantAssignment ) ) )+ this_RPAREN_11= RULE_RPAREN ) | ( () otherlv_13= '#CRUD' ( ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN ) ( (lv_pojo_15_0= rulePojoType ) ) this_RPAREN_16= RULE_RPAREN )? ) | ( () otherlv_18= '#Query' ( ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN ) ( (lv_pojo_20_0= rulePojoType ) ) this_RPAREN_21= RULE_RPAREN )? ) | ( () ( (lv_type_23_0= ruleFunProcType ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN ) ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) ) this_RPAREN_26= RULE_RPAREN )? ) ) ;
    public final EObject ruleDaoDirective() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_LPAREN_2=null;
        Token lv_sernum_3_0=null;
        Token this_RPAREN_4=null;
        Token otherlv_6=null;
        Token this_LPAREN_7=null;
        Token otherlv_8=null;
        Token this_COMMA_9=null;
        Token this_RPAREN_11=null;
        Token otherlv_13=null;
        Token this_LPAREN_14=null;
        Token this_RPAREN_16=null;
        Token otherlv_18=null;
        Token this_LPAREN_19=null;
        Token this_RPAREN_21=null;
        Token this_LPAREN_24=null;
        Token this_RPAREN_26=null;
        EObject lv_descendants_10_0 = null;

        EObject lv_pojo_15_0 = null;

        EObject lv_pojo_20_0 = null;

        EObject lv_type_23_0 = null;

        EObject lv_paramlist_25_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15650:28: ( ( ( () otherlv_1= '#Serializable' this_LPAREN_2= RULE_LPAREN ( (lv_sernum_3_0= RULE_NUMBER ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#InheritanceHandler' this_LPAREN_7= RULE_LPAREN ( (otherlv_8= RULE_IDENT ) ) (this_COMMA_9= RULE_COMMA ( (lv_descendants_10_0= ruleDescendantAssignment ) ) )+ this_RPAREN_11= RULE_RPAREN ) | ( () otherlv_13= '#CRUD' ( ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN ) ( (lv_pojo_15_0= rulePojoType ) ) this_RPAREN_16= RULE_RPAREN )? ) | ( () otherlv_18= '#Query' ( ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN ) ( (lv_pojo_20_0= rulePojoType ) ) this_RPAREN_21= RULE_RPAREN )? ) | ( () ( (lv_type_23_0= ruleFunProcType ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN ) ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) ) this_RPAREN_26= RULE_RPAREN )? ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15651:1: ( ( () otherlv_1= '#Serializable' this_LPAREN_2= RULE_LPAREN ( (lv_sernum_3_0= RULE_NUMBER ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#InheritanceHandler' this_LPAREN_7= RULE_LPAREN ( (otherlv_8= RULE_IDENT ) ) (this_COMMA_9= RULE_COMMA ( (lv_descendants_10_0= ruleDescendantAssignment ) ) )+ this_RPAREN_11= RULE_RPAREN ) | ( () otherlv_13= '#CRUD' ( ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN ) ( (lv_pojo_15_0= rulePojoType ) ) this_RPAREN_16= RULE_RPAREN )? ) | ( () otherlv_18= '#Query' ( ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN ) ( (lv_pojo_20_0= rulePojoType ) ) this_RPAREN_21= RULE_RPAREN )? ) | ( () ( (lv_type_23_0= ruleFunProcType ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN ) ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) ) this_RPAREN_26= RULE_RPAREN )? ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15651:1: ( ( () otherlv_1= '#Serializable' this_LPAREN_2= RULE_LPAREN ( (lv_sernum_3_0= RULE_NUMBER ) ) this_RPAREN_4= RULE_RPAREN ) | ( () otherlv_6= '#InheritanceHandler' this_LPAREN_7= RULE_LPAREN ( (otherlv_8= RULE_IDENT ) ) (this_COMMA_9= RULE_COMMA ( (lv_descendants_10_0= ruleDescendantAssignment ) ) )+ this_RPAREN_11= RULE_RPAREN ) | ( () otherlv_13= '#CRUD' ( ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN ) ( (lv_pojo_15_0= rulePojoType ) ) this_RPAREN_16= RULE_RPAREN )? ) | ( () otherlv_18= '#Query' ( ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN ) ( (lv_pojo_20_0= rulePojoType ) ) this_RPAREN_21= RULE_RPAREN )? ) | ( () ( (lv_type_23_0= ruleFunProcType ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN ) ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) ) this_RPAREN_26= RULE_RPAREN )? ) )
            int alt393=5;
            switch ( input.LA(1) ) {
            case 158:
                {
                alt393=1;
                }
                break;
            case 179:
                {
                alt393=2;
                }
                break;
            case 180:
                {
                alt393=3;
                }
                break;
            case 181:
                {
                alt393=4;
                }
                break;
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
                {
                alt393=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 393, 0, input);

                throw nvae;
            }

            switch (alt393) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15651:2: ( () otherlv_1= '#Serializable' this_LPAREN_2= RULE_LPAREN ( (lv_sernum_3_0= RULE_NUMBER ) ) this_RPAREN_4= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15651:2: ( () otherlv_1= '#Serializable' this_LPAREN_2= RULE_LPAREN ( (lv_sernum_3_0= RULE_NUMBER ) ) this_RPAREN_4= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15651:3: () otherlv_1= '#Serializable' this_LPAREN_2= RULE_LPAREN ( (lv_sernum_3_0= RULE_NUMBER ) ) this_RPAREN_4= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15651:3: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15652:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getDaoDirectiveAccess().getDaoDirectiveSerializableAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,158,FollowSets002.FOLLOW_158_in_ruleDaoDirective34941); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDaoDirectiveAccess().getSerializableKeyword_0_1());
                          
                    }
                    this_LPAREN_2=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleDaoDirective34952); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_2, grammarAccess.getDaoDirectiveAccess().getLPARENTerminalRuleCall_0_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15665:1: ( (lv_sernum_3_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15666:1: (lv_sernum_3_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15666:1: (lv_sernum_3_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15667:3: lv_sernum_3_0= RULE_NUMBER
                    {
                    lv_sernum_3_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleDaoDirective34968); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_sernum_3_0, grammarAccess.getDaoDirectiveAccess().getSernumNUMBERTerminalRuleCall_0_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaoDirectiveRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"sernum",
                              		lv_sernum_3_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }

                    this_RPAREN_4=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleDaoDirective34984); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_4, grammarAccess.getDaoDirectiveAccess().getRPARENTerminalRuleCall_0_4()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15688:6: ( () otherlv_6= '#InheritanceHandler' this_LPAREN_7= RULE_LPAREN ( (otherlv_8= RULE_IDENT ) ) (this_COMMA_9= RULE_COMMA ( (lv_descendants_10_0= ruleDescendantAssignment ) ) )+ this_RPAREN_11= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15688:6: ( () otherlv_6= '#InheritanceHandler' this_LPAREN_7= RULE_LPAREN ( (otherlv_8= RULE_IDENT ) ) (this_COMMA_9= RULE_COMMA ( (lv_descendants_10_0= ruleDescendantAssignment ) ) )+ this_RPAREN_11= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15688:7: () otherlv_6= '#InheritanceHandler' this_LPAREN_7= RULE_LPAREN ( (otherlv_8= RULE_IDENT ) ) (this_COMMA_9= RULE_COMMA ( (lv_descendants_10_0= ruleDescendantAssignment ) ) )+ this_RPAREN_11= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15688:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15689:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getDaoDirectiveAccess().getDaoDirectiveDiscriminatorAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_6=(Token)match(input,179,FollowSets002.FOLLOW_179_in_ruleDaoDirective35012); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getDaoDirectiveAccess().getInheritanceHandlerKeyword_1_1());
                          
                    }
                    this_LPAREN_7=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleDaoDirective35023); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_7, grammarAccess.getDaoDirectiveAccess().getLPARENTerminalRuleCall_1_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15702:1: ( (otherlv_8= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15703:1: (otherlv_8= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15703:1: (otherlv_8= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15704:3: otherlv_8= RULE_IDENT
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaoDirectiveRule());
                      	        }
                              
                    }
                    otherlv_8=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleDaoDirective35042); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_8, grammarAccess.getDaoDirectiveAccess().getAncestorPojoPropertyCrossReference_1_3_0()); 
                      	
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15715:2: (this_COMMA_9= RULE_COMMA ( (lv_descendants_10_0= ruleDescendantAssignment ) ) )+
                    int cnt389=0;
                    loop389:
                    do {
                        int alt389=2;
                        int LA389_0 = input.LA(1);

                        if ( (LA389_0==RULE_COMMA) ) {
                            alt389=1;
                        }


                        switch (alt389) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15715:3: this_COMMA_9= RULE_COMMA ( (lv_descendants_10_0= ruleDescendantAssignment ) )
                    	    {
                    	    this_COMMA_9=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleDaoDirective35054); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_9, grammarAccess.getDaoDirectiveAccess().getCOMMATerminalRuleCall_1_4_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15719:1: ( (lv_descendants_10_0= ruleDescendantAssignment ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15720:1: (lv_descendants_10_0= ruleDescendantAssignment )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15720:1: (lv_descendants_10_0= ruleDescendantAssignment )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15721:3: lv_descendants_10_0= ruleDescendantAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDaoDirectiveAccess().getDescendantsDescendantAssignmentParserRuleCall_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets002.FOLLOW_ruleDescendantAssignment_in_ruleDaoDirective35074);
                    	    lv_descendants_10_0=ruleDescendantAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDaoDirectiveRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"descendants",
                    	              		lv_descendants_10_0, 
                    	              		"DescendantAssignment");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt389 >= 1 ) break loop389;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(389, input);
                                throw eee;
                        }
                        cnt389++;
                    } while (true);

                    this_RPAREN_11=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleDaoDirective35087); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_11, grammarAccess.getDaoDirectiveAccess().getRPARENTerminalRuleCall_1_5()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15742:6: ( () otherlv_13= '#CRUD' ( ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN ) ( (lv_pojo_15_0= rulePojoType ) ) this_RPAREN_16= RULE_RPAREN )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15742:6: ( () otherlv_13= '#CRUD' ( ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN ) ( (lv_pojo_15_0= rulePojoType ) ) this_RPAREN_16= RULE_RPAREN )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15742:7: () otherlv_13= '#CRUD' ( ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN ) ( (lv_pojo_15_0= rulePojoType ) ) this_RPAREN_16= RULE_RPAREN )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15742:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15743:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getDaoDirectiveAccess().getDaoDirectiveCrudAction_2_0(),
                                  current);
                          
                    }

                    }

                    otherlv_13=(Token)match(input,180,FollowSets002.FOLLOW_180_in_ruleDaoDirective35115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getDaoDirectiveAccess().getCRUDKeyword_2_1());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15752:1: ( ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN ) ( (lv_pojo_15_0= rulePojoType ) ) this_RPAREN_16= RULE_RPAREN )?
                    int alt390=2;
                    int LA390_0 = input.LA(1);

                    if ( (LA390_0==RULE_LPAREN) && (synpred13_InternalProcessorDsl())) {
                        alt390=1;
                    }
                    switch (alt390) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15752:2: ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN ) ( (lv_pojo_15_0= rulePojoType ) ) this_RPAREN_16= RULE_RPAREN
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15752:2: ( ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15752:3: ( RULE_LPAREN )=>this_LPAREN_14= RULE_LPAREN
                            {
                            this_LPAREN_14=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleDaoDirective35133); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LPAREN_14, grammarAccess.getDaoDirectiveAccess().getLPARENTerminalRuleCall_2_2_0()); 
                                  
                            }

                            }

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15756:2: ( (lv_pojo_15_0= rulePojoType ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15757:1: (lv_pojo_15_0= rulePojoType )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15757:1: (lv_pojo_15_0= rulePojoType )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15758:3: lv_pojo_15_0= rulePojoType
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDaoDirectiveAccess().getPojoPojoTypeParserRuleCall_2_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets002.FOLLOW_rulePojoType_in_ruleDaoDirective35154);
                            lv_pojo_15_0=rulePojoType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDaoDirectiveRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"pojo",
                                      		lv_pojo_15_0, 
                                      		"PojoType");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            this_RPAREN_16=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleDaoDirective35165); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_RPAREN_16, grammarAccess.getDaoDirectiveAccess().getRPARENTerminalRuleCall_2_2_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15779:6: ( () otherlv_18= '#Query' ( ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN ) ( (lv_pojo_20_0= rulePojoType ) ) this_RPAREN_21= RULE_RPAREN )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15779:6: ( () otherlv_18= '#Query' ( ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN ) ( (lv_pojo_20_0= rulePojoType ) ) this_RPAREN_21= RULE_RPAREN )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15779:7: () otherlv_18= '#Query' ( ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN ) ( (lv_pojo_20_0= rulePojoType ) ) this_RPAREN_21= RULE_RPAREN )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15779:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15780:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getDaoDirectiveAccess().getDaoDirectiveQueryAction_3_0(),
                                  current);
                          
                    }

                    }

                    otherlv_18=(Token)match(input,181,FollowSets002.FOLLOW_181_in_ruleDaoDirective35195); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getDaoDirectiveAccess().getQueryKeyword_3_1());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15789:1: ( ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN ) ( (lv_pojo_20_0= rulePojoType ) ) this_RPAREN_21= RULE_RPAREN )?
                    int alt391=2;
                    int LA391_0 = input.LA(1);

                    if ( (LA391_0==RULE_LPAREN) && (synpred14_InternalProcessorDsl())) {
                        alt391=1;
                    }
                    switch (alt391) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15789:2: ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN ) ( (lv_pojo_20_0= rulePojoType ) ) this_RPAREN_21= RULE_RPAREN
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15789:2: ( ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15789:3: ( RULE_LPAREN )=>this_LPAREN_19= RULE_LPAREN
                            {
                            this_LPAREN_19=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleDaoDirective35213); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LPAREN_19, grammarAccess.getDaoDirectiveAccess().getLPARENTerminalRuleCall_3_2_0()); 
                                  
                            }

                            }

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15793:2: ( (lv_pojo_20_0= rulePojoType ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15794:1: (lv_pojo_20_0= rulePojoType )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15794:1: (lv_pojo_20_0= rulePojoType )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15795:3: lv_pojo_20_0= rulePojoType
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDaoDirectiveAccess().getPojoPojoTypeParserRuleCall_3_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets002.FOLLOW_rulePojoType_in_ruleDaoDirective35234);
                            lv_pojo_20_0=rulePojoType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDaoDirectiveRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"pojo",
                                      		lv_pojo_20_0, 
                                      		"PojoType");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            this_RPAREN_21=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleDaoDirective35245); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_RPAREN_21, grammarAccess.getDaoDirectiveAccess().getRPARENTerminalRuleCall_3_2_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15816:6: ( () ( (lv_type_23_0= ruleFunProcType ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN ) ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) ) this_RPAREN_26= RULE_RPAREN )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15816:6: ( () ( (lv_type_23_0= ruleFunProcType ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN ) ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) ) this_RPAREN_26= RULE_RPAREN )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15816:7: () ( (lv_type_23_0= ruleFunProcType ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN ) ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) ) this_RPAREN_26= RULE_RPAREN )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15816:7: ()
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15817:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getDaoDirectiveAccess().getFunProcDirectiveAction_4_0(),
                                  current);
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15822:2: ( (lv_type_23_0= ruleFunProcType ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15823:1: (lv_type_23_0= ruleFunProcType )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15823:1: (lv_type_23_0= ruleFunProcType )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15824:3: lv_type_23_0= ruleFunProcType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaoDirectiveAccess().getTypeFunProcTypeParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleFunProcType_in_ruleDaoDirective35284);
                    lv_type_23_0=ruleFunProcType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaoDirectiveRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_23_0, 
                              		"FunProcType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15840:2: ( ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN ) ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) ) this_RPAREN_26= RULE_RPAREN )?
                    int alt392=2;
                    int LA392_0 = input.LA(1);

                    if ( (LA392_0==RULE_LPAREN) && (synpred15_InternalProcessorDsl())) {
                        alt392=1;
                    }
                    switch (alt392) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15840:3: ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN ) ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) ) this_RPAREN_26= RULE_RPAREN
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15840:3: ( ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15840:4: ( RULE_LPAREN )=>this_LPAREN_24= RULE_LPAREN
                            {
                            this_LPAREN_24=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleDaoDirective35302); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LPAREN_24, grammarAccess.getDaoDirectiveAccess().getLPARENTerminalRuleCall_4_2_0()); 
                                  
                            }

                            }

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15844:2: ( (lv_paramlist_25_0= ruleDaoDirectiveParameters ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15845:1: (lv_paramlist_25_0= ruleDaoDirectiveParameters )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15845:1: (lv_paramlist_25_0= ruleDaoDirectiveParameters )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15846:3: lv_paramlist_25_0= ruleDaoDirectiveParameters
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDaoDirectiveAccess().getParamlistDaoDirectiveParametersParserRuleCall_4_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets002.FOLLOW_ruleDaoDirectiveParameters_in_ruleDaoDirective35323);
                            lv_paramlist_25_0=ruleDaoDirectiveParameters();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDaoDirectiveRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"paramlist",
                                      		lv_paramlist_25_0, 
                                      		"DaoDirectiveParameters");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            this_RPAREN_26=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleDaoDirective35334); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_RPAREN_26, grammarAccess.getDaoDirectiveAccess().getRPARENTerminalRuleCall_4_2_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDaoDirective"


    // $ANTLR start "entryRulePojoDaoModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15877:1: entryRulePojoDaoModifier returns [EObject current=null] : iv_rulePojoDaoModifier= rulePojoDaoModifier EOF ;
    public final EObject entryRulePojoDaoModifier() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoDaoModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15878:2: (iv_rulePojoDaoModifier= rulePojoDaoModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15879:2: iv_rulePojoDaoModifier= rulePojoDaoModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoDaoModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoDaoModifier_in_entryRulePojoDaoModifier35376);
            iv_rulePojoDaoModifier=rulePojoDaoModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoDaoModifier; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoDaoModifier35386); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoDaoModifier"


    // $ANTLR start "rulePojoDaoModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15886:1: rulePojoDaoModifier returns [EObject current=null] : (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) ;
    public final EObject rulePojoDaoModifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15889:28: ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15890:1: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15890:1: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15890:3: otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) )
            {
            otherlv_0=(Token)match(input,152,FollowSets002.FOLLOW_152_in_rulePojoDaoModifier35423); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPojoDaoModifierAccess().getExtendsKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15894:1: ( (otherlv_1= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15895:1: (otherlv_1= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15895:1: (otherlv_1= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15896:3: otherlv_1= RULE_IDENT
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoDaoModifierRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoDaoModifier35443); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getPojoDaoModifierAccess().getSuperTypePojoDaoCrossReference_1_0()); 
              	
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoDaoModifier"


    // $ANTLR start "entryRulePojoDao"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15915:1: entryRulePojoDao returns [EObject current=null] : iv_rulePojoDao= rulePojoDao EOF ;
    public final EObject entryRulePojoDao() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoDao = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15919:2: (iv_rulePojoDao= rulePojoDao EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15920:2: iv_rulePojoDao= rulePojoDao EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoDaoRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoDao_in_entryRulePojoDao35485);
            iv_rulePojoDao=rulePojoDao();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoDao; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoDao35495); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoDao"


    // $ANTLR start "rulePojoDao"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15930:1: rulePojoDao returns [EObject current=null] : ( ( (lv_directives_0_0= ruleDaoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'dao' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoDaoModifier ) )* this_LBRACE_5= RULE_LBRACE this_RBRACE_6= RULE_RBRACE ) ;
    public final EObject rulePojoDao() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token this_LBRACE_5=null;
        Token this_RBRACE_6=null;
        EObject lv_directives_0_0 = null;

        EObject lv_modifiers1_1_0 = null;

        EObject lv_modifiers2_4_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15934:28: ( ( ( (lv_directives_0_0= ruleDaoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'dao' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoDaoModifier ) )* this_LBRACE_5= RULE_LBRACE this_RBRACE_6= RULE_RBRACE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15935:1: ( ( (lv_directives_0_0= ruleDaoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'dao' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoDaoModifier ) )* this_LBRACE_5= RULE_LBRACE this_RBRACE_6= RULE_RBRACE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15935:1: ( ( (lv_directives_0_0= ruleDaoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'dao' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoDaoModifier ) )* this_LBRACE_5= RULE_LBRACE this_RBRACE_6= RULE_RBRACE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15935:2: ( (lv_directives_0_0= ruleDaoDirective ) )* ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )* otherlv_2= 'dao' ( (lv_name_3_0= RULE_IDENT ) ) ( (lv_modifiers2_4_0= rulePojoDaoModifier ) )* this_LBRACE_5= RULE_LBRACE this_RBRACE_6= RULE_RBRACE
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15935:2: ( (lv_directives_0_0= ruleDaoDirective ) )*
            loop394:
            do {
                int alt394=2;
                int LA394_0 = input.LA(1);

                if ( (LA394_0==158||(LA394_0>=174 && LA394_0<=181)) ) {
                    alt394=1;
                }


                switch (alt394) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15936:1: (lv_directives_0_0= ruleDaoDirective )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15936:1: (lv_directives_0_0= ruleDaoDirective )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15937:3: lv_directives_0_0= ruleDaoDirective
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoDaoAccess().getDirectivesDaoDirectiveParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleDaoDirective_in_rulePojoDao35545);
            	    lv_directives_0_0=ruleDaoDirective();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoDaoRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"directives",
            	              		lv_directives_0_0, 
            	              		"DaoDirective");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop394;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15953:3: ( (lv_modifiers1_1_0= rulePojoEntityModifier1 ) )*
            loop395:
            do {
                int alt395=2;
                int LA395_0 = input.LA(1);

                if ( ((LA395_0>=153 && LA395_0<=154)) ) {
                    alt395=1;
                }


                switch (alt395) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15954:1: (lv_modifiers1_1_0= rulePojoEntityModifier1 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15954:1: (lv_modifiers1_1_0= rulePojoEntityModifier1 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15955:3: lv_modifiers1_1_0= rulePojoEntityModifier1
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoDaoAccess().getModifiers1PojoEntityModifier1ParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier1_in_rulePojoDao35567);
            	    lv_modifiers1_1_0=rulePojoEntityModifier1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoDaoRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers1",
            	              		lv_modifiers1_1_0, 
            	              		"PojoEntityModifier1");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop395;
                }
            } while (true);

            otherlv_2=(Token)match(input,182,FollowSets002.FOLLOW_182_in_rulePojoDao35580); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPojoDaoAccess().getDaoKeyword_2());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15975:1: ( (lv_name_3_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15976:1: (lv_name_3_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15976:1: (lv_name_3_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15977:3: lv_name_3_0= RULE_IDENT
            {
            lv_name_3_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoDao35597); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getPojoDaoAccess().getNameIDENTTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoDaoRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15993:2: ( (lv_modifiers2_4_0= rulePojoDaoModifier ) )*
            loop396:
            do {
                int alt396=2;
                int LA396_0 = input.LA(1);

                if ( (LA396_0==152) ) {
                    alt396=1;
                }


                switch (alt396) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15994:1: (lv_modifiers2_4_0= rulePojoDaoModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15994:1: (lv_modifiers2_4_0= rulePojoDaoModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15995:3: lv_modifiers2_4_0= rulePojoDaoModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoDaoAccess().getModifiers2PojoDaoModifierParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoDaoModifier_in_rulePojoDao35623);
            	    lv_modifiers2_4_0=rulePojoDaoModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoDaoRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers2",
            	              		lv_modifiers2_4_0, 
            	              		"PojoDaoModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop396;
                }
            } while (true);

            this_LBRACE_5=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_rulePojoDao35635); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LBRACE_5, grammarAccess.getPojoDaoAccess().getLBRACETerminalRuleCall_5()); 
                  
            }
            this_RBRACE_6=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_rulePojoDao35645); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RBRACE_6, grammarAccess.getPojoDaoAccess().getRBRACETerminalRuleCall_6()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoDao"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16030:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16031:2: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16032:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard35685);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard35696); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16039:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16042:28: ( (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16043:1: (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16043:1: (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16044:5: this_QualifiedName_0= ruleQualifiedName (kw= '.*' )?
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard35743);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16054:1: (kw= '.*' )?
            int alt397=2;
            int LA397_0 = input.LA(1);

            if ( (LA397_0==183) ) {
                alt397=1;
            }
            switch (alt397) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16055:2: kw= '.*'
                    {
                    kw=(Token)match(input,183,FollowSets002.FOLLOW_183_in_ruleQualifiedNameWithWildcard35762); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleQualifiedName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16068:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16069:2: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16070:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName35805);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleQualifiedName35816); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16077:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_IDENT_DOT_1= RULE_IDENT_DOT ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_IDENT_DOT_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16080:28: ( (this_IDENT_0= RULE_IDENT | this_IDENT_DOT_1= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16081:1: (this_IDENT_0= RULE_IDENT | this_IDENT_DOT_1= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16081:1: (this_IDENT_0= RULE_IDENT | this_IDENT_DOT_1= RULE_IDENT_DOT )
            int alt398=2;
            int LA398_0 = input.LA(1);

            if ( (LA398_0==RULE_IDENT) ) {
                alt398=1;
            }
            else if ( (LA398_0==RULE_IDENT_DOT) ) {
                alt398=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 398, 0, input);

                throw nvae;
            }
            switch (alt398) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16081:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleQualifiedName35856); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getQualifiedNameAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:16089:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                    {
                    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleQualifiedName35882); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_DOT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_DOT_1, grammarAccess.getQualifiedNameAccess().getIDENT_DOTTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"

    // $ANTLR start synpred1_InternalProcessorDsl
    public final void synpred1_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2449:6: ( RULE_COLON )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2449:8: RULE_COLON
        {
        match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_synpred1_InternalProcessorDsl5070); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalProcessorDsl

    // $ANTLR start synpred2_InternalProcessorDsl
    public final void synpred2_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6862:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6862:4: ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE )
        {
        if ( (input.LA(1)>=RULE_WS && input.LA(1)<=RULE_MINUS)||(input.LA(1)>=RULE_REST && input.LA(1)<=RULE_OPTION_TYPE) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred2_InternalProcessorDsl

    // $ANTLR start synpred3_InternalProcessorDsl
    public final void synpred3_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8134:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8134:4: ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE )
        {
        if ( (input.LA(1)>=RULE_WS && input.LA(1)<=RULE_RPAREN)||(input.LA(1)>=RULE_PLUS && input.LA(1)<=RULE_MINUS)||(input.LA(1)>=RULE_REST && input.LA(1)<=RULE_IDENT_DOT)||input.LA(1)==RULE_COMMA||(input.LA(1)>=RULE_RBRACE && input.LA(1)<=RULE_HASH)||(input.LA(1)>=RULE_CARET && input.LA(1)<=RULE_MORE_THAN)||(input.LA(1)>=RULE_DOT && input.LA(1)<=RULE_OPTION_TYPE) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred3_InternalProcessorDsl

    // $ANTLR start synpred4_InternalProcessorDsl
    public final void synpred4_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9258:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9258:4: ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE )
        {
        if ( (input.LA(1)>=RULE_WS && input.LA(1)<=RULE_RPAREN)||(input.LA(1)>=RULE_PLUS && input.LA(1)<=RULE_IDENT_DOT)||input.LA(1)==RULE_COMMA||(input.LA(1)>=RULE_QUESTI && input.LA(1)<=RULE_BAND)||input.LA(1)==RULE_HASH||(input.LA(1)>=RULE_CARET && input.LA(1)<=RULE_MORE_THAN)||(input.LA(1)>=RULE_DOT && input.LA(1)<=RULE_OPTION_TYPE) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred4_InternalProcessorDsl

    // $ANTLR start synpred5_InternalProcessorDsl
    public final void synpred5_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10426:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10426:4: ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE )
        {
        if ( (input.LA(1)>=RULE_WS && input.LA(1)<=RULE_RPAREN)||(input.LA(1)>=RULE_PLUS && input.LA(1)<=RULE_IDENT_DOT)||(input.LA(1)>=RULE_COMMA && input.LA(1)<=RULE_LBRACE)||(input.LA(1)>=RULE_QUESTI && input.LA(1)<=RULE_MORE_THAN)||(input.LA(1)>=RULE_DOT && input.LA(1)<=RULE_OPTION_TYPE) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred5_InternalProcessorDsl

    // $ANTLR start synpred6_InternalProcessorDsl
    public final void synpred6_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10733:3: ( ( ruleExtendedColumn ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10734:1: ( ruleExtendedColumn )
        {
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10734:1: ( ruleExtendedColumn )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10735:1: ruleExtendedColumn
        {
        pushFollow(FollowSets002.FOLLOW_ruleExtendedColumn_in_synpred6_InternalProcessorDsl24284);
        ruleExtendedColumn();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalProcessorDsl

    // $ANTLR start synpred7_InternalProcessorDsl
    public final void synpred7_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10794:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10794:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred7_InternalProcessorDsl24407); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalProcessorDsl

    // $ANTLR start synpred8_InternalProcessorDsl
    public final void synpred8_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11007:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11007:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred8_InternalProcessorDsl24794); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_InternalProcessorDsl

    // $ANTLR start synpred9_InternalProcessorDsl
    public final void synpred9_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11214:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11214:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred9_InternalProcessorDsl25133); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalProcessorDsl

    // $ANTLR start synpred10_InternalProcessorDsl
    public final void synpred10_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11790:3: ( ( ruleExtendedMappingItem ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11791:1: ( ruleExtendedMappingItem )
        {
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11791:1: ( ruleExtendedMappingItem )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11792:1: ruleExtendedMappingItem
        {
        pushFollow(FollowSets002.FOLLOW_ruleExtendedMappingItem_in_synpred10_InternalProcessorDsl26292);
        ruleExtendedMappingItem();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred10_InternalProcessorDsl

    // $ANTLR start synpred11_InternalProcessorDsl
    public final void synpred11_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11851:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11851:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred11_InternalProcessorDsl26415); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_InternalProcessorDsl

    // $ANTLR start synpred12_InternalProcessorDsl
    public final void synpred12_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13077:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13077:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred12_InternalProcessorDsl29529); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred12_InternalProcessorDsl

    // $ANTLR start synpred13_InternalProcessorDsl
    public final void synpred13_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15752:3: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15752:5: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred13_InternalProcessorDsl35128); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_InternalProcessorDsl

    // $ANTLR start synpred14_InternalProcessorDsl
    public final void synpred14_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15789:3: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15789:5: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred14_InternalProcessorDsl35208); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_InternalProcessorDsl

    // $ANTLR start synpred15_InternalProcessorDsl
    public final void synpred15_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15840:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15840:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred15_InternalProcessorDsl35297); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_InternalProcessorDsl

    // Delegated rules

    public final boolean synpred8_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA11 dfa11 = new DFA11(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA188 dfa188 = new DFA188(this);
    protected DFA192 dfa192 = new DFA192(this);
    protected DFA191 dfa191 = new DFA191(this);
    protected DFA245 dfa245 = new DFA245(this);
    protected DFA252 dfa252 = new DFA252(this);
    protected DFA255 dfa255 = new DFA255(this);
    protected DFA264 dfa264 = new DFA264(this);
    protected DFA267 dfa267 = new DFA267(this);
    protected DFA287 dfa287 = new DFA287(this);
    protected DFA290 dfa290 = new DFA290(this);
    protected DFA296 dfa296 = new DFA296(this);
    protected DFA303 dfa303 = new DFA303(this);
    protected DFA311 dfa311 = new DFA311(this);
    protected DFA343 dfa343 = new DFA343(this);
    protected DFA345 dfa345 = new DFA345(this);
    static final String DFA11_eotS =
        "\15\uffff";
    static final String DFA11_eofS =
        "\1\1\14\uffff";
    static final String DFA11_minS =
        "\1\5\6\uffff\1\6\1\uffff\1\43\3\uffff";
    static final String DFA11_maxS =
        "\1\u0089\6\uffff\1\6\1\uffff\1\45\3\uffff";
    static final String DFA11_acceptS =
        "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\uffff\1\11\1\uffff\1\6\1\7\1"+
        "\10";
    static final String DFA11_specialS =
        "\15\uffff}>";
    static final String[] DFA11_transitionS = {
            "\1\7\44\uffff\11\2\75\uffff\1\10\22\uffff\1\3\1\4\1\5\1\6\1"+
            "\uffff\2\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\11",
            "",
            "\1\12\1\13\1\14",
            "",
            "",
            ""
    };

    static final short[] DFA11_eot = DFA.unpackEncodedString(DFA11_eotS);
    static final short[] DFA11_eof = DFA.unpackEncodedString(DFA11_eofS);
    static final char[] DFA11_min = DFA.unpackEncodedStringToUnsignedChars(DFA11_minS);
    static final char[] DFA11_max = DFA.unpackEncodedStringToUnsignedChars(DFA11_maxS);
    static final short[] DFA11_accept = DFA.unpackEncodedString(DFA11_acceptS);
    static final short[] DFA11_special = DFA.unpackEncodedString(DFA11_specialS);
    static final short[][] DFA11_transition;

    static {
        int numStates = DFA11_transitionS.length;
        DFA11_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA11_transition[i] = DFA.unpackEncodedString(DFA11_transitionS[i]);
        }
    }

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = DFA11_eot;
            this.eof = DFA11_eof;
            this.min = DFA11_min;
            this.max = DFA11_max;
            this.accept = DFA11_accept;
            this.special = DFA11_special;
            this.transition = DFA11_transition;
        }
        public String getDescription() {
            return "()* loopback of 90:3: ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_packages_18_0= rulePackage ) ) (this_WS_19= RULE_WS )* ) )*";
        }
    }
    static final String DFA23_eotS =
        "\4\uffff";
    static final String DFA23_eofS =
        "\1\2\3\uffff";
    static final String DFA23_minS =
        "\2\4\2\uffff";
    static final String DFA23_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA23_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA23_specialS =
        "\4\uffff}>";
    static final String[] DFA23_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\5\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA23_eot = DFA.unpackEncodedString(DFA23_eotS);
    static final short[] DFA23_eof = DFA.unpackEncodedString(DFA23_eofS);
    static final char[] DFA23_min = DFA.unpackEncodedStringToUnsignedChars(DFA23_minS);
    static final char[] DFA23_max = DFA.unpackEncodedStringToUnsignedChars(DFA23_maxS);
    static final short[] DFA23_accept = DFA.unpackEncodedString(DFA23_acceptS);
    static final short[] DFA23_special = DFA.unpackEncodedString(DFA23_specialS);
    static final short[][] DFA23_transition;

    static {
        int numStates = DFA23_transitionS.length;
        DFA23_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA23_transition[i] = DFA.unpackEncodedString(DFA23_transitionS[i]);
        }
    }

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = DFA23_eot;
            this.eof = DFA23_eof;
            this.min = DFA23_min;
            this.max = DFA23_max;
            this.accept = DFA23_accept;
            this.special = DFA23_special;
            this.transition = DFA23_transition;
        }
        public String getDescription() {
            return "1499:2: ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA22_eotS =
        "\4\uffff";
    static final String DFA22_eofS =
        "\1\2\3\uffff";
    static final String DFA22_minS =
        "\2\4\2\uffff";
    static final String DFA22_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA22_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA22_specialS =
        "\4\uffff}>";
    static final String[] DFA22_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\1\3\5\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA22_eot = DFA.unpackEncodedString(DFA22_eotS);
    static final short[] DFA22_eof = DFA.unpackEncodedString(DFA22_eofS);
    static final char[] DFA22_min = DFA.unpackEncodedStringToUnsignedChars(DFA22_minS);
    static final char[] DFA22_max = DFA.unpackEncodedStringToUnsignedChars(DFA22_maxS);
    static final short[] DFA22_accept = DFA.unpackEncodedString(DFA22_acceptS);
    static final short[] DFA22_special = DFA.unpackEncodedString(DFA22_specialS);
    static final short[][] DFA22_transition;

    static {
        int numStates = DFA22_transitionS.length;
        DFA22_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA22_transition[i] = DFA.unpackEncodedString(DFA22_transitionS[i]);
        }
    }

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = DFA22_eot;
            this.eof = DFA22_eof;
            this.min = DFA22_min;
            this.max = DFA22_max;
            this.accept = DFA22_accept;
            this.special = DFA22_special;
            this.transition = DFA22_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1507:1: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA31_eotS =
        "\4\uffff";
    static final String DFA31_eofS =
        "\1\2\3\uffff";
    static final String DFA31_minS =
        "\2\4\2\uffff";
    static final String DFA31_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA31_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA31_specialS =
        "\4\uffff}>";
    static final String[] DFA31_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\5\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA31_eot = DFA.unpackEncodedString(DFA31_eotS);
    static final short[] DFA31_eof = DFA.unpackEncodedString(DFA31_eofS);
    static final char[] DFA31_min = DFA.unpackEncodedStringToUnsignedChars(DFA31_minS);
    static final char[] DFA31_max = DFA.unpackEncodedStringToUnsignedChars(DFA31_maxS);
    static final short[] DFA31_accept = DFA.unpackEncodedString(DFA31_acceptS);
    static final short[] DFA31_special = DFA.unpackEncodedString(DFA31_specialS);
    static final short[][] DFA31_transition;

    static {
        int numStates = DFA31_transitionS.length;
        DFA31_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA31_transition[i] = DFA.unpackEncodedString(DFA31_transitionS[i]);
        }
    }

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = DFA31_eot;
            this.eof = DFA31_eof;
            this.min = DFA31_min;
            this.max = DFA31_max;
            this.accept = DFA31_accept;
            this.special = DFA31_special;
            this.transition = DFA31_transition;
        }
        public String getDescription() {
            return "1599:2: ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA30_eotS =
        "\4\uffff";
    static final String DFA30_eofS =
        "\1\2\3\uffff";
    static final String DFA30_minS =
        "\2\4\2\uffff";
    static final String DFA30_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA30_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA30_specialS =
        "\4\uffff}>";
    static final String[] DFA30_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\1\3\5\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA30_eot = DFA.unpackEncodedString(DFA30_eotS);
    static final short[] DFA30_eof = DFA.unpackEncodedString(DFA30_eofS);
    static final char[] DFA30_min = DFA.unpackEncodedStringToUnsignedChars(DFA30_minS);
    static final char[] DFA30_max = DFA.unpackEncodedStringToUnsignedChars(DFA30_maxS);
    static final short[] DFA30_accept = DFA.unpackEncodedString(DFA30_acceptS);
    static final short[] DFA30_special = DFA.unpackEncodedString(DFA30_specialS);
    static final short[][] DFA30_transition;

    static {
        int numStates = DFA30_transitionS.length;
        DFA30_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA30_transition[i] = DFA.unpackEncodedString(DFA30_transitionS[i]);
        }
    }

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = DFA30_eot;
            this.eof = DFA30_eof;
            this.min = DFA30_min;
            this.max = DFA30_max;
            this.accept = DFA30_accept;
            this.special = DFA30_special;
            this.transition = DFA30_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1607:1: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA39_eotS =
        "\4\uffff";
    static final String DFA39_eofS =
        "\1\2\3\uffff";
    static final String DFA39_minS =
        "\2\4\2\uffff";
    static final String DFA39_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA39_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA39_specialS =
        "\4\uffff}>";
    static final String[] DFA39_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\5\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "1699:2: ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA38_eotS =
        "\4\uffff";
    static final String DFA38_eofS =
        "\1\2\3\uffff";
    static final String DFA38_minS =
        "\2\4\2\uffff";
    static final String DFA38_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA38_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA38_specialS =
        "\4\uffff}>";
    static final String[] DFA38_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\1\3\5\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
    static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
    static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
    static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
    static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
    static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
    static final short[][] DFA38_transition;

    static {
        int numStates = DFA38_transitionS.length;
        DFA38_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
        }
    }

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = DFA38_eot;
            this.eof = DFA38_eof;
            this.min = DFA38_min;
            this.max = DFA38_max;
            this.accept = DFA38_accept;
            this.special = DFA38_special;
            this.transition = DFA38_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1707:1: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA47_eotS =
        "\4\uffff";
    static final String DFA47_eofS =
        "\1\2\3\uffff";
    static final String DFA47_minS =
        "\2\4\2\uffff";
    static final String DFA47_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA47_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA47_specialS =
        "\4\uffff}>";
    static final String[] DFA47_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\5\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
    static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
    static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
    static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
    static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
    static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
    static final short[][] DFA47_transition;

    static {
        int numStates = DFA47_transitionS.length;
        DFA47_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
        }
    }

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = DFA47_eot;
            this.eof = DFA47_eof;
            this.min = DFA47_min;
            this.max = DFA47_max;
            this.accept = DFA47_accept;
            this.special = DFA47_special;
            this.transition = DFA47_transition;
        }
        public String getDescription() {
            return "1799:2: ( (this_WS_2= RULE_WS )+ this_PLUS_3= RULE_PLUS ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA46_eotS =
        "\4\uffff";
    static final String DFA46_eofS =
        "\1\2\3\uffff";
    static final String DFA46_minS =
        "\2\4\2\uffff";
    static final String DFA46_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA46_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA46_specialS =
        "\4\uffff}>";
    static final String[] DFA46_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\1\3\5\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
    static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
    static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
    static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
    static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
    static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
    static final short[][] DFA46_transition;

    static {
        int numStates = DFA46_transitionS.length;
        DFA46_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
        }
    }

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = DFA46_eot;
            this.eof = DFA46_eof;
            this.min = DFA46_min;
            this.max = DFA46_max;
            this.accept = DFA46_accept;
            this.special = DFA46_special;
            this.transition = DFA46_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1807:1: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA155_eotS =
        "\4\uffff";
    static final String DFA155_eofS =
        "\1\2\3\uffff";
    static final String DFA155_minS =
        "\2\4\2\uffff";
    static final String DFA155_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA155_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA155_specialS =
        "\4\uffff}>";
    static final String[] DFA155_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\5\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA155_eot = DFA.unpackEncodedString(DFA155_eotS);
    static final short[] DFA155_eof = DFA.unpackEncodedString(DFA155_eofS);
    static final char[] DFA155_min = DFA.unpackEncodedStringToUnsignedChars(DFA155_minS);
    static final char[] DFA155_max = DFA.unpackEncodedStringToUnsignedChars(DFA155_maxS);
    static final short[] DFA155_accept = DFA.unpackEncodedString(DFA155_acceptS);
    static final short[] DFA155_special = DFA.unpackEncodedString(DFA155_specialS);
    static final short[][] DFA155_transition;

    static {
        int numStates = DFA155_transitionS.length;
        DFA155_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA155_transition[i] = DFA.unpackEncodedString(DFA155_transitionS[i]);
        }
    }

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = DFA155_eot;
            this.eof = DFA155_eof;
            this.min = DFA155_min;
            this.max = DFA155_max;
            this.accept = DFA155_accept;
            this.special = DFA155_special;
            this.transition = DFA155_transition;
        }
        public String getDescription() {
            return "4649:2: ( (this_WS_142= RULE_WS )+ this_PLUS_143= RULE_PLUS ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA154_eotS =
        "\4\uffff";
    static final String DFA154_eofS =
        "\1\2\3\uffff";
    static final String DFA154_minS =
        "\2\4\2\uffff";
    static final String DFA154_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA154_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA154_specialS =
        "\4\uffff}>";
    static final String[] DFA154_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\1\3\5\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA154_eot = DFA.unpackEncodedString(DFA154_eotS);
    static final short[] DFA154_eof = DFA.unpackEncodedString(DFA154_eofS);
    static final char[] DFA154_min = DFA.unpackEncodedStringToUnsignedChars(DFA154_minS);
    static final char[] DFA154_max = DFA.unpackEncodedStringToUnsignedChars(DFA154_maxS);
    static final short[] DFA154_accept = DFA.unpackEncodedString(DFA154_acceptS);
    static final short[] DFA154_special = DFA.unpackEncodedString(DFA154_specialS);
    static final short[][] DFA154_transition;

    static {
        int numStates = DFA154_transitionS.length;
        DFA154_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA154_transition[i] = DFA.unpackEncodedString(DFA154_transitionS[i]);
        }
    }

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = DFA154_eot;
            this.eof = DFA154_eof;
            this.min = DFA154_min;
            this.max = DFA154_max;
            this.accept = DFA154_accept;
            this.special = DFA154_special;
            this.transition = DFA154_transition;
        }
        public String getDescription() {
            return "()+ loopback of 4657:1: ( (this_WS_144= RULE_WS )+ ( (lv_dbTables_145_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA177_eotS =
        "\4\uffff";
    static final String DFA177_eofS =
        "\1\2\3\uffff";
    static final String DFA177_minS =
        "\2\4\2\uffff";
    static final String DFA177_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA177_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA177_specialS =
        "\4\uffff}>";
    static final String[] DFA177_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\5\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA177_eot = DFA.unpackEncodedString(DFA177_eotS);
    static final short[] DFA177_eof = DFA.unpackEncodedString(DFA177_eofS);
    static final char[] DFA177_min = DFA.unpackEncodedStringToUnsignedChars(DFA177_minS);
    static final char[] DFA177_max = DFA.unpackEncodedStringToUnsignedChars(DFA177_maxS);
    static final short[] DFA177_accept = DFA.unpackEncodedString(DFA177_acceptS);
    static final short[] DFA177_special = DFA.unpackEncodedString(DFA177_specialS);
    static final short[][] DFA177_transition;

    static {
        int numStates = DFA177_transitionS.length;
        DFA177_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA177_transition[i] = DFA.unpackEncodedString(DFA177_transitionS[i]);
        }
    }

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = DFA177_eot;
            this.eof = DFA177_eof;
            this.min = DFA177_min;
            this.max = DFA177_max;
            this.accept = DFA177_accept;
            this.special = DFA177_special;
            this.transition = DFA177_transition;
        }
        public String getDescription() {
            return "5118:3: ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA176_eotS =
        "\4\uffff";
    static final String DFA176_eofS =
        "\1\2\3\uffff";
    static final String DFA176_minS =
        "\2\4\2\uffff";
    static final String DFA176_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA176_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA176_specialS =
        "\4\uffff}>";
    static final String[] DFA176_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\1\3\5\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA176_eot = DFA.unpackEncodedString(DFA176_eotS);
    static final short[] DFA176_eof = DFA.unpackEncodedString(DFA176_eofS);
    static final char[] DFA176_min = DFA.unpackEncodedStringToUnsignedChars(DFA176_minS);
    static final char[] DFA176_max = DFA.unpackEncodedStringToUnsignedChars(DFA176_maxS);
    static final short[] DFA176_accept = DFA.unpackEncodedString(DFA176_acceptS);
    static final short[] DFA176_special = DFA.unpackEncodedString(DFA176_specialS);
    static final short[][] DFA176_transition;

    static {
        int numStates = DFA176_transitionS.length;
        DFA176_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA176_transition[i] = DFA.unpackEncodedString(DFA176_transitionS[i]);
        }
    }

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = DFA176_eot;
            this.eof = DFA176_eof;
            this.min = DFA176_min;
            this.max = DFA176_max;
            this.accept = DFA176_accept;
            this.special = DFA176_special;
            this.transition = DFA176_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5126:1: ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA188_eotS =
        "\4\uffff";
    static final String DFA188_eofS =
        "\1\2\3\uffff";
    static final String DFA188_minS =
        "\2\4\2\uffff";
    static final String DFA188_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA188_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA188_specialS =
        "\4\uffff}>";
    static final String[] DFA188_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\1\3\4\uffff\2\2",
            "",
            ""
    };

    static final short[] DFA188_eot = DFA.unpackEncodedString(DFA188_eotS);
    static final short[] DFA188_eof = DFA.unpackEncodedString(DFA188_eofS);
    static final char[] DFA188_min = DFA.unpackEncodedStringToUnsignedChars(DFA188_minS);
    static final char[] DFA188_max = DFA.unpackEncodedStringToUnsignedChars(DFA188_maxS);
    static final short[] DFA188_accept = DFA.unpackEncodedString(DFA188_acceptS);
    static final short[] DFA188_special = DFA.unpackEncodedString(DFA188_specialS);
    static final short[][] DFA188_transition;

    static {
        int numStates = DFA188_transitionS.length;
        DFA188_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA188_transition[i] = DFA.unpackEncodedString(DFA188_transitionS[i]);
        }
    }

    class DFA188 extends DFA {

        public DFA188(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 188;
            this.eot = DFA188_eot;
            this.eof = DFA188_eof;
            this.min = DFA188_min;
            this.max = DFA188_max;
            this.accept = DFA188_accept;
            this.special = DFA188_special;
            this.transition = DFA188_transition;
        }
        public String getDescription() {
            return "5276:2: ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )?";
        }
    }
    static final String DFA192_eotS =
        "\4\uffff";
    static final String DFA192_eofS =
        "\1\2\3\uffff";
    static final String DFA192_minS =
        "\2\4\2\uffff";
    static final String DFA192_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA192_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA192_specialS =
        "\4\uffff}>";
    static final String[] DFA192_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\5\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA192_eot = DFA.unpackEncodedString(DFA192_eotS);
    static final short[] DFA192_eof = DFA.unpackEncodedString(DFA192_eofS);
    static final char[] DFA192_min = DFA.unpackEncodedStringToUnsignedChars(DFA192_minS);
    static final char[] DFA192_max = DFA.unpackEncodedStringToUnsignedChars(DFA192_maxS);
    static final short[] DFA192_accept = DFA.unpackEncodedString(DFA192_acceptS);
    static final short[] DFA192_special = DFA.unpackEncodedString(DFA192_specialS);
    static final short[][] DFA192_transition;

    static {
        int numStates = DFA192_transitionS.length;
        DFA192_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA192_transition[i] = DFA.unpackEncodedString(DFA192_transitionS[i]);
        }
    }

    class DFA192 extends DFA {

        public DFA192(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 192;
            this.eot = DFA192_eot;
            this.eof = DFA192_eof;
            this.min = DFA192_min;
            this.max = DFA192_max;
            this.accept = DFA192_accept;
            this.special = DFA192_special;
            this.transition = DFA192_transition;
        }
        public String getDescription() {
            return "5316:5: ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA191_eotS =
        "\4\uffff";
    static final String DFA191_eofS =
        "\1\2\3\uffff";
    static final String DFA191_minS =
        "\2\4\2\uffff";
    static final String DFA191_maxS =
        "\1\14\1\13\2\uffff";
    static final String DFA191_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA191_specialS =
        "\4\uffff}>";
    static final String[] DFA191_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\1\3\5\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA191_eot = DFA.unpackEncodedString(DFA191_eotS);
    static final short[] DFA191_eof = DFA.unpackEncodedString(DFA191_eofS);
    static final char[] DFA191_min = DFA.unpackEncodedStringToUnsignedChars(DFA191_minS);
    static final char[] DFA191_max = DFA.unpackEncodedStringToUnsignedChars(DFA191_maxS);
    static final short[] DFA191_accept = DFA.unpackEncodedString(DFA191_acceptS);
    static final short[] DFA191_special = DFA.unpackEncodedString(DFA191_specialS);
    static final short[][] DFA191_transition;

    static {
        int numStates = DFA191_transitionS.length;
        DFA191_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA191_transition[i] = DFA.unpackEncodedString(DFA191_transitionS[i]);
        }
    }

    class DFA191 extends DFA {

        public DFA191(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 191;
            this.eot = DFA191_eot;
            this.eof = DFA191_eof;
            this.min = DFA191_min;
            this.max = DFA191_max;
            this.accept = DFA191_accept;
            this.special = DFA191_special;
            this.transition = DFA191_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5324:1: ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA245_eotS =
        "\43\uffff";
    static final String DFA245_eofS =
        "\1\1\42\uffff";
    static final String DFA245_minS =
        "\1\4\1\uffff\1\0\40\uffff";
    static final String DFA245_maxS =
        "\1\45\1\uffff\1\0\40\uffff";
    static final String DFA245_acceptS =
        "\1\uffff\1\2\1\uffff\40\1";
    static final String DFA245_specialS =
        "\1\0\1\uffff\1\1\40\uffff}>";
    static final String[] DFA245_transitionS = {
            "\1\2\1\5\1\14\1\6\1\15\1\7\1\13\1\12\1\1\1\3\1\4\1\10\1\11\1"+
            "\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1"+
            "\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA245_eot = DFA.unpackEncodedString(DFA245_eotS);
    static final short[] DFA245_eof = DFA.unpackEncodedString(DFA245_eofS);
    static final char[] DFA245_min = DFA.unpackEncodedStringToUnsignedChars(DFA245_minS);
    static final char[] DFA245_max = DFA.unpackEncodedStringToUnsignedChars(DFA245_maxS);
    static final short[] DFA245_accept = DFA.unpackEncodedString(DFA245_acceptS);
    static final short[] DFA245_special = DFA.unpackEncodedString(DFA245_specialS);
    static final short[][] DFA245_transition;

    static {
        int numStates = DFA245_transitionS.length;
        DFA245_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA245_transition[i] = DFA.unpackEncodedString(DFA245_transitionS[i]);
        }
    }

    class DFA245 extends DFA {

        public DFA245(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 245;
            this.eot = DFA245_eot;
            this.eof = DFA245_eof;
            this.min = DFA245_min;
            this.max = DFA245_max;
            this.accept = DFA245_accept;
            this.special = DFA245_special;
            this.transition = DFA245_transition;
        }
        public String getDescription() {
            return "()* loopback of 6862:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA245_0 = input.LA(1);

                         
                        int index245_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA245_0==EOF||LA245_0==RULE_SEMICOLON) ) {s = 1;}

                        else if ( (LA245_0==RULE_WS) ) {s = 2;}

                        else if ( (LA245_0==RULE_REST) && (synpred2_InternalProcessorDsl())) {s = 3;}

                        else if ( (LA245_0==RULE_IDENT_DOT) && (synpred2_InternalProcessorDsl())) {s = 4;}

                        else if ( (LA245_0==RULE_IDENT) && (synpred2_InternalProcessorDsl())) {s = 5;}

                        else if ( (LA245_0==RULE_NUMBER) && (synpred2_InternalProcessorDsl())) {s = 6;}

                        else if ( (LA245_0==RULE_COLON) && (synpred2_InternalProcessorDsl())) {s = 7;}

                        else if ( (LA245_0==RULE_STRING) && (synpred2_InternalProcessorDsl())) {s = 8;}

                        else if ( (LA245_0==RULE_COMMA) && (synpred2_InternalProcessorDsl())) {s = 9;}

                        else if ( (LA245_0==RULE_MINUS) && (synpred2_InternalProcessorDsl())) {s = 10;}

                        else if ( (LA245_0==RULE_PLUS) && (synpred2_InternalProcessorDsl())) {s = 11;}

                        else if ( (LA245_0==RULE_LPAREN) && (synpred2_InternalProcessorDsl())) {s = 12;}

                        else if ( (LA245_0==RULE_RPAREN) && (synpred2_InternalProcessorDsl())) {s = 13;}

                        else if ( (LA245_0==RULE_LBRACE) && (synpred2_InternalProcessorDsl())) {s = 14;}

                        else if ( (LA245_0==RULE_RBRACE) && (synpred2_InternalProcessorDsl())) {s = 15;}

                        else if ( (LA245_0==RULE_QUESTI) && (synpred2_InternalProcessorDsl())) {s = 16;}

                        else if ( (LA245_0==RULE_NOT) && (synpred2_InternalProcessorDsl())) {s = 17;}

                        else if ( (LA245_0==RULE_BAND) && (synpred2_InternalProcessorDsl())) {s = 18;}

                        else if ( (LA245_0==RULE_BOR) && (synpred2_InternalProcessorDsl())) {s = 19;}

                        else if ( (LA245_0==RULE_HASH) && (synpred2_InternalProcessorDsl())) {s = 20;}

                        else if ( (LA245_0==RULE_AT) && (synpred2_InternalProcessorDsl())) {s = 21;}

                        else if ( (LA245_0==RULE_CARET) && (synpred2_InternalProcessorDsl())) {s = 22;}

                        else if ( (LA245_0==RULE_EQUALS) && (synpred2_InternalProcessorDsl())) {s = 23;}

                        else if ( (LA245_0==RULE_LESS_THAN) && (synpred2_InternalProcessorDsl())) {s = 24;}

                        else if ( (LA245_0==RULE_MORE_THAN) && (synpred2_InternalProcessorDsl())) {s = 25;}

                        else if ( (LA245_0==RULE_PERCENT) && (synpred2_InternalProcessorDsl())) {s = 26;}

                        else if ( (LA245_0==RULE_DOT) && (synpred2_InternalProcessorDsl())) {s = 27;}

                        else if ( (LA245_0==RULE_AND) && (synpred2_InternalProcessorDsl())) {s = 28;}

                        else if ( (LA245_0==RULE_OR) && (synpred2_InternalProcessorDsl())) {s = 29;}

                        else if ( (LA245_0==RULE_ESC_CHAR) && (synpred2_InternalProcessorDsl())) {s = 30;}

                        else if ( (LA245_0==RULE_ON_OFF) && (synpred2_InternalProcessorDsl())) {s = 31;}

                        else if ( (LA245_0==RULE_STATEMENT_TYPE) && (synpred2_InternalProcessorDsl())) {s = 32;}

                        else if ( (LA245_0==RULE_MAPPING_TYPE) && (synpred2_InternalProcessorDsl())) {s = 33;}

                        else if ( (LA245_0==RULE_OPTION_TYPE) && (synpred2_InternalProcessorDsl())) {s = 34;}

                         
                        input.seek(index245_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA245_2 = input.LA(1);

                         
                        int index245_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalProcessorDsl()) ) {s = 34;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index245_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 245, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA252_eotS =
        "\13\uffff";
    static final String DFA252_eofS =
        "\13\uffff";
    static final String DFA252_minS =
        "\1\4\2\uffff\2\5\6\uffff";
    static final String DFA252_maxS =
        "\1\45\2\uffff\1\17\1\34\6\uffff";
    static final String DFA252_acceptS =
        "\1\uffff\1\1\1\2\2\uffff\1\7\1\10\1\5\1\3\1\6\1\4";
    static final String DFA252_specialS =
        "\13\uffff}>";
    static final String[] DFA252_transitionS = {
            "\5\1\1\4\2\1\1\uffff\2\1\1\3\1\1\1\5\6\1\1\2\4\1\1\6\10\1",
            "",
            "",
            "\1\10\4\uffff\2\10\2\uffff\1\10\1\7",
            "\1\12\1\uffff\1\12\1\uffff\1\11\2\12\2\uffff\1\12\13\uffff"+
            "\3\12",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA252_eot = DFA.unpackEncodedString(DFA252_eotS);
    static final short[] DFA252_eof = DFA.unpackEncodedString(DFA252_eofS);
    static final char[] DFA252_min = DFA.unpackEncodedStringToUnsignedChars(DFA252_minS);
    static final char[] DFA252_max = DFA.unpackEncodedStringToUnsignedChars(DFA252_maxS);
    static final short[] DFA252_accept = DFA.unpackEncodedString(DFA252_acceptS);
    static final short[] DFA252_special = DFA.unpackEncodedString(DFA252_specialS);
    static final short[][] DFA252_transition;

    static {
        int numStates = DFA252_transitionS.length;
        DFA252_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA252_transition[i] = DFA.unpackEncodedString(DFA252_transitionS[i]);
        }
    }

    class DFA252 extends DFA {

        public DFA252(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 252;
            this.eot = DFA252_eot;
            this.eof = DFA252_eof;
            this.min = DFA252_min;
            this.max = DFA252_max;
            this.accept = DFA252_accept;
            this.special = DFA252_special;
            this.transition = DFA252_transition;
        }
        public String getDescription() {
            return "7676:1: ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) )";
        }
    }
    static final String DFA255_eotS =
        "\37\uffff";
    static final String DFA255_eofS =
        "\1\1\36\uffff";
    static final String DFA255_minS =
        "\1\4\1\uffff\34\0\1\uffff";
    static final String DFA255_maxS =
        "\1\45\1\uffff\34\0\1\uffff";
    static final String DFA255_acceptS =
        "\1\uffff\1\2\34\uffff\1\1";
    static final String DFA255_specialS =
        "\2\uffff\1\31\1\14\1\30\1\12\1\33\1\0\1\16\1\5\1\26\1\23\1\2\1\21"+
        "\1\3\1\25\1\7\1\4\1\22\1\24\1\13\1\27\1\11\1\20\1\10\1\32\1\15\1"+
        "\6\1\17\1\1\1\uffff}>";
    static final String[] DFA255_transitionS = {
            "\1\6\1\4\1\12\1\5\1\13\1\1\1\11\1\10\1\1\1\2\1\3\1\1\1\7\1\1"+
            "\1\14\1\15\1\16\1\17\1\20\1\21\1\1\1\22\1\23\1\24\1\25\1\1\1"+
            "\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA255_eot = DFA.unpackEncodedString(DFA255_eotS);
    static final short[] DFA255_eof = DFA.unpackEncodedString(DFA255_eofS);
    static final char[] DFA255_min = DFA.unpackEncodedStringToUnsignedChars(DFA255_minS);
    static final char[] DFA255_max = DFA.unpackEncodedStringToUnsignedChars(DFA255_maxS);
    static final short[] DFA255_accept = DFA.unpackEncodedString(DFA255_acceptS);
    static final short[] DFA255_special = DFA.unpackEncodedString(DFA255_specialS);
    static final short[][] DFA255_transition;

    static {
        int numStates = DFA255_transitionS.length;
        DFA255_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA255_transition[i] = DFA.unpackEncodedString(DFA255_transitionS[i]);
        }
    }

    class DFA255 extends DFA {

        public DFA255(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 255;
            this.eot = DFA255_eot;
            this.eof = DFA255_eof;
            this.min = DFA255_min;
            this.max = DFA255_max;
            this.accept = DFA255_accept;
            this.special = DFA255_special;
            this.transition = DFA255_transition;
        }
        public String getDescription() {
            return "()* loopback of 8134:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA255_7 = input.LA(1);

                         
                        int index255_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA255_29 = input.LA(1);

                         
                        int index255_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_29);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA255_12 = input.LA(1);

                         
                        int index255_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA255_14 = input.LA(1);

                         
                        int index255_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA255_17 = input.LA(1);

                         
                        int index255_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_17);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA255_9 = input.LA(1);

                         
                        int index255_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA255_27 = input.LA(1);

                         
                        int index255_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_27);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA255_16 = input.LA(1);

                         
                        int index255_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_16);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA255_24 = input.LA(1);

                         
                        int index255_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_24);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA255_22 = input.LA(1);

                         
                        int index255_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_22);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA255_5 = input.LA(1);

                         
                        int index255_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_5);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA255_20 = input.LA(1);

                         
                        int index255_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_20);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA255_3 = input.LA(1);

                         
                        int index255_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_3);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA255_26 = input.LA(1);

                         
                        int index255_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_26);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA255_8 = input.LA(1);

                         
                        int index255_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_8);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA255_28 = input.LA(1);

                         
                        int index255_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_28);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA255_23 = input.LA(1);

                         
                        int index255_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA255_13 = input.LA(1);

                         
                        int index255_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_13);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA255_18 = input.LA(1);

                         
                        int index255_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA255_11 = input.LA(1);

                         
                        int index255_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_11);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA255_19 = input.LA(1);

                         
                        int index255_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_19);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA255_15 = input.LA(1);

                         
                        int index255_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_15);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA255_10 = input.LA(1);

                         
                        int index255_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_10);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA255_21 = input.LA(1);

                         
                        int index255_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_21);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA255_4 = input.LA(1);

                         
                        int index255_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_4);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA255_2 = input.LA(1);

                         
                        int index255_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_2);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA255_25 = input.LA(1);

                         
                        int index255_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_25);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA255_6 = input.LA(1);

                         
                        int index255_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 255, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA264_eotS =
        "\13\uffff";
    static final String DFA264_eofS =
        "\13\uffff";
    static final String DFA264_minS =
        "\1\4\2\uffff\2\5\6\uffff";
    static final String DFA264_maxS =
        "\1\45\2\uffff\1\17\1\34\6\uffff";
    static final String DFA264_acceptS =
        "\1\uffff\1\1\1\2\2\uffff\1\7\1\10\1\5\1\3\1\6\1\4";
    static final String DFA264_specialS =
        "\13\uffff}>";
    static final String[] DFA264_transitionS = {
            "\5\1\1\4\5\1\1\3\1\1\1\6\1\uffff\3\1\1\uffff\1\1\1\2\4\1\1\5"+
            "\10\1",
            "",
            "",
            "\1\10\4\uffff\2\10\2\uffff\1\10\1\7",
            "\1\12\1\uffff\1\12\1\uffff\1\11\2\12\2\uffff\1\12\13\uffff"+
            "\3\12",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA264_eot = DFA.unpackEncodedString(DFA264_eotS);
    static final short[] DFA264_eof = DFA.unpackEncodedString(DFA264_eofS);
    static final char[] DFA264_min = DFA.unpackEncodedStringToUnsignedChars(DFA264_minS);
    static final char[] DFA264_max = DFA.unpackEncodedStringToUnsignedChars(DFA264_maxS);
    static final short[] DFA264_accept = DFA.unpackEncodedString(DFA264_acceptS);
    static final short[] DFA264_special = DFA.unpackEncodedString(DFA264_specialS);
    static final short[][] DFA264_transition;

    static {
        int numStates = DFA264_transitionS.length;
        DFA264_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA264_transition[i] = DFA.unpackEncodedString(DFA264_transitionS[i]);
        }
    }

    class DFA264 extends DFA {

        public DFA264(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 264;
            this.eot = DFA264_eot;
            this.eof = DFA264_eof;
            this.min = DFA264_min;
            this.max = DFA264_max;
            this.accept = DFA264_accept;
            this.special = DFA264_special;
            this.transition = DFA264_transition;
        }
        public String getDescription() {
            return "8808:1: ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) )";
        }
    }
    static final String DFA267_eotS =
        "\36\uffff";
    static final String DFA267_eofS =
        "\1\1\35\uffff";
    static final String DFA267_minS =
        "\1\4\1\uffff\33\0\1\uffff";
    static final String DFA267_maxS =
        "\1\45\1\uffff\33\0\1\uffff";
    static final String DFA267_acceptS =
        "\1\uffff\1\2\33\uffff\1\1";
    static final String DFA267_specialS =
        "\2\uffff\1\7\1\25\1\13\1\30\1\21\1\2\1\20\1\27\1\1\1\17\1\3\1\16"+
        "\1\31\1\14\1\22\1\4\1\23\1\12\1\24\1\10\1\5\1\6\1\15\1\0\1\32\1"+
        "\11\1\26\1\uffff}>";
    static final String[] DFA267_transitionS = {
            "\1\6\1\4\1\13\1\5\1\14\1\1\1\12\1\11\1\7\1\2\1\3\1\1\1\10\2"+
            "\1\1\15\1\16\1\17\1\1\1\20\1\1\1\21\1\22\1\23\1\24\1\1\1\25"+
            "\1\26\1\27\1\30\1\31\1\32\1\33\1\34",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA267_eot = DFA.unpackEncodedString(DFA267_eotS);
    static final short[] DFA267_eof = DFA.unpackEncodedString(DFA267_eofS);
    static final char[] DFA267_min = DFA.unpackEncodedStringToUnsignedChars(DFA267_minS);
    static final char[] DFA267_max = DFA.unpackEncodedStringToUnsignedChars(DFA267_maxS);
    static final short[] DFA267_accept = DFA.unpackEncodedString(DFA267_acceptS);
    static final short[] DFA267_special = DFA.unpackEncodedString(DFA267_specialS);
    static final short[][] DFA267_transition;

    static {
        int numStates = DFA267_transitionS.length;
        DFA267_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA267_transition[i] = DFA.unpackEncodedString(DFA267_transitionS[i]);
        }
    }

    class DFA267 extends DFA {

        public DFA267(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 267;
            this.eot = DFA267_eot;
            this.eof = DFA267_eof;
            this.min = DFA267_min;
            this.max = DFA267_max;
            this.accept = DFA267_accept;
            this.special = DFA267_special;
            this.transition = DFA267_transition;
        }
        public String getDescription() {
            return "()* loopback of 9258:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA267_25 = input.LA(1);

                         
                        int index267_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_25);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA267_10 = input.LA(1);

                         
                        int index267_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA267_7 = input.LA(1);

                         
                        int index267_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA267_12 = input.LA(1);

                         
                        int index267_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA267_17 = input.LA(1);

                         
                        int index267_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_17);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA267_22 = input.LA(1);

                         
                        int index267_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_22);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA267_23 = input.LA(1);

                         
                        int index267_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_23);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA267_2 = input.LA(1);

                         
                        int index267_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_2);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA267_21 = input.LA(1);

                         
                        int index267_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_21);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA267_27 = input.LA(1);

                         
                        int index267_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_27);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA267_19 = input.LA(1);

                         
                        int index267_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_19);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA267_4 = input.LA(1);

                         
                        int index267_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_4);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA267_15 = input.LA(1);

                         
                        int index267_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA267_24 = input.LA(1);

                         
                        int index267_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_24);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA267_13 = input.LA(1);

                         
                        int index267_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_13);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA267_11 = input.LA(1);

                         
                        int index267_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_11);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA267_8 = input.LA(1);

                         
                        int index267_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_8);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA267_6 = input.LA(1);

                         
                        int index267_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_6);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA267_16 = input.LA(1);

                         
                        int index267_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_16);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA267_18 = input.LA(1);

                         
                        int index267_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_18);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA267_20 = input.LA(1);

                         
                        int index267_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA267_3 = input.LA(1);

                         
                        int index267_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_3);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA267_28 = input.LA(1);

                         
                        int index267_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_28);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA267_9 = input.LA(1);

                         
                        int index267_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_9);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA267_5 = input.LA(1);

                         
                        int index267_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_5);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA267_14 = input.LA(1);

                         
                        int index267_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_14);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA267_26 = input.LA(1);

                         
                        int index267_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_26);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 267, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA287_eotS =
        "\41\uffff";
    static final String DFA287_eofS =
        "\1\1\40\uffff";
    static final String DFA287_minS =
        "\1\4\1\uffff\36\0\1\uffff";
    static final String DFA287_maxS =
        "\1\45\1\uffff\36\0\1\uffff";
    static final String DFA287_acceptS =
        "\1\uffff\1\2\36\uffff\1\1";
    static final String DFA287_specialS =
        "\2\uffff\1\33\1\21\1\6\1\11\1\32\1\12\1\27\1\7\1\24\1\14\1\34\1"+
        "\22\1\4\1\17\1\0\1\5\1\23\1\1\1\20\1\25\1\10\1\35\1\3\1\31\1\13"+
        "\1\26\1\15\1\2\1\16\1\30\1\uffff}>";
    static final String[] DFA287_transitionS = {
            "\1\6\1\4\1\13\1\5\1\14\1\1\1\12\1\11\1\7\1\2\1\3\1\1\1\10\1"+
            "\15\1\1\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1"+
            "\1\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA287_eot = DFA.unpackEncodedString(DFA287_eotS);
    static final short[] DFA287_eof = DFA.unpackEncodedString(DFA287_eofS);
    static final char[] DFA287_min = DFA.unpackEncodedStringToUnsignedChars(DFA287_minS);
    static final char[] DFA287_max = DFA.unpackEncodedStringToUnsignedChars(DFA287_maxS);
    static final short[] DFA287_accept = DFA.unpackEncodedString(DFA287_acceptS);
    static final short[] DFA287_special = DFA.unpackEncodedString(DFA287_specialS);
    static final short[][] DFA287_transition;

    static {
        int numStates = DFA287_transitionS.length;
        DFA287_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA287_transition[i] = DFA.unpackEncodedString(DFA287_transitionS[i]);
        }
    }

    class DFA287 extends DFA {

        public DFA287(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 287;
            this.eot = DFA287_eot;
            this.eof = DFA287_eof;
            this.min = DFA287_min;
            this.max = DFA287_max;
            this.accept = DFA287_accept;
            this.special = DFA287_special;
            this.transition = DFA287_transition;
        }
        public String getDescription() {
            return "()* loopback of 10426:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA287_16 = input.LA(1);

                         
                        int index287_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_16);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA287_19 = input.LA(1);

                         
                        int index287_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_19);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA287_29 = input.LA(1);

                         
                        int index287_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_29);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA287_24 = input.LA(1);

                         
                        int index287_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_24);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA287_14 = input.LA(1);

                         
                        int index287_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_14);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA287_17 = input.LA(1);

                         
                        int index287_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA287_4 = input.LA(1);

                         
                        int index287_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA287_9 = input.LA(1);

                         
                        int index287_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA287_22 = input.LA(1);

                         
                        int index287_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_22);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA287_5 = input.LA(1);

                         
                        int index287_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_5);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA287_7 = input.LA(1);

                         
                        int index287_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_7);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA287_26 = input.LA(1);

                         
                        int index287_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_26);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA287_11 = input.LA(1);

                         
                        int index287_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_11);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA287_28 = input.LA(1);

                         
                        int index287_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_28);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA287_30 = input.LA(1);

                         
                        int index287_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_30);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA287_15 = input.LA(1);

                         
                        int index287_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA287_20 = input.LA(1);

                         
                        int index287_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_20);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA287_3 = input.LA(1);

                         
                        int index287_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_3);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA287_13 = input.LA(1);

                         
                        int index287_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_13);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA287_18 = input.LA(1);

                         
                        int index287_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_18);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA287_10 = input.LA(1);

                         
                        int index287_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_10);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA287_21 = input.LA(1);

                         
                        int index287_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA287_27 = input.LA(1);

                         
                        int index287_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_27);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA287_8 = input.LA(1);

                         
                        int index287_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_8);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA287_31 = input.LA(1);

                         
                        int index287_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA287_25 = input.LA(1);

                         
                        int index287_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA287_6 = input.LA(1);

                         
                        int index287_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_6);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA287_2 = input.LA(1);

                         
                        int index287_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_2);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA287_12 = input.LA(1);

                         
                        int index287_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_12);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA287_23 = input.LA(1);

                         
                        int index287_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index287_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 287, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA290_eotS =
        "\14\uffff";
    static final String DFA290_eofS =
        "\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff";
    static final String DFA290_minS =
        "\2\4\1\uffff\4\4\1\0\3\4\1\uffff";
    static final String DFA290_maxS =
        "\2\45\1\uffff\4\45\1\0\3\45\1\uffff";
    static final String DFA290_acceptS =
        "\2\uffff\1\2\10\uffff\1\1";
    static final String DFA290_specialS =
        "\7\uffff\1\0\4\uffff}>";
    static final String[] DFA290_transitionS = {
            "\2\2\1\1\37\2",
            "\1\2\1\4\1\2\1\5\14\2\1\3\21\2",
            "",
            "\1\2\1\4\1\2\1\5\36\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\10\1\2\1\11\14\2\1\12\21\2",
            "\1\uffff",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\10\1\2\1\11\36\2",
            ""
    };

    static final short[] DFA290_eot = DFA.unpackEncodedString(DFA290_eotS);
    static final short[] DFA290_eof = DFA.unpackEncodedString(DFA290_eofS);
    static final char[] DFA290_min = DFA.unpackEncodedStringToUnsignedChars(DFA290_minS);
    static final char[] DFA290_max = DFA.unpackEncodedStringToUnsignedChars(DFA290_maxS);
    static final short[] DFA290_accept = DFA.unpackEncodedString(DFA290_acceptS);
    static final short[] DFA290_special = DFA.unpackEncodedString(DFA290_specialS);
    static final short[][] DFA290_transition;

    static {
        int numStates = DFA290_transitionS.length;
        DFA290_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA290_transition[i] = DFA.unpackEncodedString(DFA290_transitionS[i]);
        }
    }

    class DFA290 extends DFA {

        public DFA290(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 290;
            this.eot = DFA290_eot;
            this.eof = DFA290_eof;
            this.min = DFA290_min;
            this.max = DFA290_max;
            this.accept = DFA290_accept;
            this.special = DFA290_special;
            this.transition = DFA290_transition;
        }
        public String getDescription() {
            return "10794:2: ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA290_7 = input.LA(1);

                         
                        int index290_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalProcessorDsl()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index290_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 290, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA296_eotS =
        "\14\uffff";
    static final String DFA296_eofS =
        "\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff";
    static final String DFA296_minS =
        "\2\4\1\uffff\4\4\1\0\3\4\1\uffff";
    static final String DFA296_maxS =
        "\2\45\1\uffff\4\45\1\0\3\45\1\uffff";
    static final String DFA296_acceptS =
        "\2\uffff\1\2\10\uffff\1\1";
    static final String DFA296_specialS =
        "\7\uffff\1\0\4\uffff}>";
    static final String[] DFA296_transitionS = {
            "\2\2\1\1\37\2",
            "\1\2\1\3\1\2\1\4\14\2\1\5\21\2",
            "",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\3\1\2\1\4\36\2",
            "\1\2\1\10\1\2\1\11\14\2\1\12\21\2",
            "\1\uffff",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\10\1\2\1\11\36\2",
            ""
    };

    static final short[] DFA296_eot = DFA.unpackEncodedString(DFA296_eotS);
    static final short[] DFA296_eof = DFA.unpackEncodedString(DFA296_eofS);
    static final char[] DFA296_min = DFA.unpackEncodedStringToUnsignedChars(DFA296_minS);
    static final char[] DFA296_max = DFA.unpackEncodedStringToUnsignedChars(DFA296_maxS);
    static final short[] DFA296_accept = DFA.unpackEncodedString(DFA296_acceptS);
    static final short[] DFA296_special = DFA.unpackEncodedString(DFA296_specialS);
    static final short[][] DFA296_transition;

    static {
        int numStates = DFA296_transitionS.length;
        DFA296_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA296_transition[i] = DFA.unpackEncodedString(DFA296_transitionS[i]);
        }
    }

    class DFA296 extends DFA {

        public DFA296(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 296;
            this.eot = DFA296_eot;
            this.eof = DFA296_eof;
            this.min = DFA296_min;
            this.max = DFA296_max;
            this.accept = DFA296_accept;
            this.special = DFA296_special;
            this.transition = DFA296_transition;
        }
        public String getDescription() {
            return "11007:2: ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA296_7 = input.LA(1);

                         
                        int index296_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalProcessorDsl()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index296_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 296, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA303_eotS =
        "\14\uffff";
    static final String DFA303_eofS =
        "\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff";
    static final String DFA303_minS =
        "\2\4\1\uffff\4\4\1\0\3\4\1\uffff";
    static final String DFA303_maxS =
        "\2\45\1\uffff\4\45\1\0\3\45\1\uffff";
    static final String DFA303_acceptS =
        "\2\uffff\1\2\10\uffff\1\1";
    static final String DFA303_specialS =
        "\7\uffff\1\0\4\uffff}>";
    static final String[] DFA303_transitionS = {
            "\2\2\1\1\37\2",
            "\1\2\1\3\1\2\1\4\14\2\1\5\21\2",
            "",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\3\1\2\1\4\36\2",
            "\1\2\1\10\1\2\1\11\14\2\1\12\21\2",
            "\1\uffff",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\10\1\2\1\11\36\2",
            ""
    };

    static final short[] DFA303_eot = DFA.unpackEncodedString(DFA303_eotS);
    static final short[] DFA303_eof = DFA.unpackEncodedString(DFA303_eofS);
    static final char[] DFA303_min = DFA.unpackEncodedStringToUnsignedChars(DFA303_minS);
    static final char[] DFA303_max = DFA.unpackEncodedStringToUnsignedChars(DFA303_maxS);
    static final short[] DFA303_accept = DFA.unpackEncodedString(DFA303_acceptS);
    static final short[] DFA303_special = DFA.unpackEncodedString(DFA303_specialS);
    static final short[][] DFA303_transition;

    static {
        int numStates = DFA303_transitionS.length;
        DFA303_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA303_transition[i] = DFA.unpackEncodedString(DFA303_transitionS[i]);
        }
    }

    class DFA303 extends DFA {

        public DFA303(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 303;
            this.eot = DFA303_eot;
            this.eof = DFA303_eof;
            this.min = DFA303_min;
            this.max = DFA303_max;
            this.accept = DFA303_accept;
            this.special = DFA303_special;
            this.transition = DFA303_transition;
        }
        public String getDescription() {
            return "11214:2: ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA303_7 = input.LA(1);

                         
                        int index303_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalProcessorDsl()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index303_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 303, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA311_eotS =
        "\4\uffff";
    static final String DFA311_eofS =
        "\2\2\2\uffff";
    static final String DFA311_minS =
        "\2\4\2\uffff";
    static final String DFA311_maxS =
        "\2\14\2\uffff";
    static final String DFA311_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA311_specialS =
        "\4\uffff}>";
    static final String[] DFA311_transitionS = {
            "\1\1\7\uffff\1\2",
            "\1\1\1\3\1\uffff\1\3\4\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA311_eot = DFA.unpackEncodedString(DFA311_eotS);
    static final short[] DFA311_eof = DFA.unpackEncodedString(DFA311_eofS);
    static final char[] DFA311_min = DFA.unpackEncodedStringToUnsignedChars(DFA311_minS);
    static final char[] DFA311_max = DFA.unpackEncodedStringToUnsignedChars(DFA311_maxS);
    static final short[] DFA311_accept = DFA.unpackEncodedString(DFA311_acceptS);
    static final short[] DFA311_special = DFA.unpackEncodedString(DFA311_specialS);
    static final short[][] DFA311_transition;

    static {
        int numStates = DFA311_transitionS.length;
        DFA311_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA311_transition[i] = DFA.unpackEncodedString(DFA311_transitionS[i]);
        }
    }

    class DFA311 extends DFA {

        public DFA311(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 311;
            this.eot = DFA311_eot;
            this.eof = DFA311_eof;
            this.min = DFA311_min;
            this.max = DFA311_max;
            this.accept = DFA311_accept;
            this.special = DFA311_special;
            this.transition = DFA311_transition;
        }
        public String getDescription() {
            return "()* loopback of 11646:2: ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )*";
        }
    }
    static final String DFA343_eotS =
        "\53\uffff";
    static final String DFA343_eofS =
        "\53\uffff";
    static final String DFA343_minS =
        "\1\u0083\7\6\1\u0083\2\uffff\1\5\1\7\1\5\1\7\3\5\1\10\1\20\6\10"+
        "\1\5\1\u0083\1\5\3\u0083\1\5\1\u0083\1\5\1\u0083\4\10\1\5\1\u0083"+
        "\1\10";
    static final String DFA343_maxS =
        "\1\u00ac\2\6\1\u00ac\4\6\1\u00ac\2\uffff\1\5\1\7\1\5\2\7\2\5\2\20"+
        "\4\10\2\20\1\5\1\u00ac\1\5\3\u00ac\1\5\1\u00ac\1\5\1\u00ac\4\20"+
        "\1\5\1\u00ac\1\20";
    static final String DFA343_acceptS =
        "\11\uffff\1\1\1\2\40\uffff";
    static final String DFA343_specialS =
        "\53\uffff}>";
    static final String[] DFA343_transitionS = {
            "\1\11\25\uffff\1\10\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\12\uffff"+
            "\1\12",
            "\1\13",
            "\1\14",
            "\1\15\174\uffff\1\11\25\uffff\1\10\1\11\1\1\1\2\1\3\1\4\1\5"+
            "\1\6\1\7\12\uffff\1\12",
            "\1\16",
            "\1\17",
            "\1\20",
            "\1\21",
            "\1\11\25\uffff\1\10\1\11\21\uffff\1\12",
            "",
            "",
            "\1\22",
            "\1\23",
            "\1\24",
            "\1\25",
            "\1\26\1\uffff\1\27",
            "\1\30",
            "\1\31",
            "\1\33\7\uffff\1\32",
            "\1\34",
            "\1\35",
            "\1\36",
            "\1\37",
            "\1\37",
            "\1\41\7\uffff\1\40",
            "\1\43\7\uffff\1\42",
            "\1\44",
            "\1\11\25\uffff\1\10\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\12\uffff"+
            "\1\12",
            "\1\45",
            "\1\11\25\uffff\1\10\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\12\uffff"+
            "\1\12",
            "\1\11\25\uffff\1\10\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\12\uffff"+
            "\1\12",
            "\1\11\25\uffff\1\10\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\12\uffff"+
            "\1\12",
            "\1\46",
            "\1\11\25\uffff\1\10\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\12\uffff"+
            "\1\12",
            "\1\47",
            "\1\11\25\uffff\1\10\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\12\uffff"+
            "\1\12",
            "\1\33\7\uffff\1\32",
            "\1\51\7\uffff\1\50",
            "\1\41\7\uffff\1\40",
            "\1\43\7\uffff\1\42",
            "\1\52",
            "\1\11\25\uffff\1\10\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\12\uffff"+
            "\1\12",
            "\1\51\7\uffff\1\50"
    };

    static final short[] DFA343_eot = DFA.unpackEncodedString(DFA343_eotS);
    static final short[] DFA343_eof = DFA.unpackEncodedString(DFA343_eofS);
    static final char[] DFA343_min = DFA.unpackEncodedStringToUnsignedChars(DFA343_minS);
    static final char[] DFA343_max = DFA.unpackEncodedStringToUnsignedChars(DFA343_maxS);
    static final short[] DFA343_accept = DFA.unpackEncodedString(DFA343_acceptS);
    static final short[] DFA343_special = DFA.unpackEncodedString(DFA343_specialS);
    static final short[][] DFA343_transition;

    static {
        int numStates = DFA343_transitionS.length;
        DFA343_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA343_transition[i] = DFA.unpackEncodedString(DFA343_transitionS[i]);
        }
    }

    class DFA343 extends DFA {

        public DFA343(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 343;
            this.eot = DFA343_eot;
            this.eof = DFA343_eof;
            this.min = DFA343_min;
            this.max = DFA343_max;
            this.accept = DFA343_accept;
            this.special = DFA343_special;
            this.transition = DFA343_transition;
        }
        public String getDescription() {
            return "13278:1: (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity )";
        }
    }
    static final String DFA345_eotS =
        "\17\uffff";
    static final String DFA345_eofS =
        "\17\uffff";
    static final String DFA345_minS =
        "\1\30\2\uffff\1\6\2\u0083\1\uffff\1\u0092\3\uffff\1\7\1\u0083\1"+
        "\10\1\u0083";
    static final String DFA345_maxS =
        "\1\u00b6\2\uffff\1\6\2\u00b6\1\uffff\1\u0098\3\uffff\1\7\1\u00b6"+
        "\1\10\1\u00b6";
    static final String DFA345_acceptS =
        "\1\uffff\1\1\1\2\3\uffff\1\3\1\uffff\1\4\1\5\1\6\4\uffff";
    static final String DFA345_specialS =
        "\17\uffff}>";
    static final String[] DFA345_transitionS = {
            "\1\2\127\uffff\1\1\22\uffff\1\2\4\uffff\2\1\7\2\1\6\1\7\1\10"+
            "\4\uffff\1\11\1\4\1\5\3\2\1\3\3\2\12\uffff\1\2\1\uffff\11\12",
            "",
            "",
            "\1\13",
            "\1\2\25\uffff\1\4\1\5\21\uffff\1\2\11\uffff\1\12",
            "\1\2\25\uffff\1\14\1\5\33\uffff\1\12",
            "",
            "\1\7\1\10\4\uffff\1\11",
            "",
            "",
            "",
            "\1\15",
            "\1\2\25\uffff\1\14\1\5\33\uffff\1\12",
            "\1\16",
            "\1\2\25\uffff\1\4\1\5\3\2\1\3\3\2\12\uffff\1\2\1\uffff\11\12"
    };

    static final short[] DFA345_eot = DFA.unpackEncodedString(DFA345_eotS);
    static final short[] DFA345_eof = DFA.unpackEncodedString(DFA345_eofS);
    static final char[] DFA345_min = DFA.unpackEncodedStringToUnsignedChars(DFA345_minS);
    static final char[] DFA345_max = DFA.unpackEncodedStringToUnsignedChars(DFA345_maxS);
    static final short[] DFA345_accept = DFA.unpackEncodedString(DFA345_acceptS);
    static final short[] DFA345_special = DFA.unpackEncodedString(DFA345_specialS);
    static final short[][] DFA345_transition;

    static {
        int numStates = DFA345_transitionS.length;
        DFA345_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA345_transition[i] = DFA.unpackEncodedString(DFA345_transitionS[i]);
        }
    }

    class DFA345 extends DFA {

        public DFA345(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 345;
            this.eot = DFA345_eot;
            this.eof = DFA345_eof;
            this.min = DFA345_min;
            this.max = DFA345_max;
            this.accept = DFA345_accept;
            this.special = DFA345_special;
            this.transition = DFA345_transition;
        }
        public String getDescription() {
            return "13382:1: (this_Package_0= rulePackage | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_PojoDao_5= rulePojoDao )";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_ruleArtifacts_in_entryRuleArtifacts75 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleArtifacts85 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts131 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_ruleProperty_in_ruleArtifacts155 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts167 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_rulePojoDefinition_in_ruleArtifacts197 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts209 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_ruleTableDefinition_in_ruleArtifacts239 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts251 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_ruleProcedureDefinition_in_ruleArtifacts281 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts293 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_ruleFunctionDefinition_in_ruleArtifacts323 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts335 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_ruleMetaStatement_in_ruleArtifacts365 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts377 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_ruleMappingRule_in_ruleArtifacts407 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts419 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_ruleOptionalFeature_in_ruleArtifacts449 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts461 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_rulePackage_in_ruleArtifacts491 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts503 = new BitSet(new long[]{0x0007FC0000000032L,0x0001000000000000L,0x0000000000000378L});
        public static final BitSet FOLLOW_ruleDatabaseCatalogAssignement_in_entryRuleDatabaseCatalogAssignement543 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseCatalogAssignement553 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseCatalogAssignement598 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseSchemaAssignement_in_entryRuleDatabaseSchemaAssignement633 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseSchemaAssignement643 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseSchemaAssignement688 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseTypeAssignement_in_entryRuleDatabaseTypeAssignement723 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseTypeAssignement733 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDatabaseTypeAssignement774 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseMetaInfoAssignement_in_entryRuleDatabaseMetaInfoAssignement814 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseMetaInfoAssignement824 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseMetaInfoAssignement869 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDriverMetaInfoAssignement_in_entryRuleDriverMetaInfoAssignement904 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDriverMetaInfoAssignement914 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDriverMetaInfoAssignement959 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDriverMethodOutputAssignement_in_entryRuleDriverMethodOutputAssignement994 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDriverMethodOutputAssignement1004 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDriverMethodOutputAssignement1046 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleDriverMethodOutputAssignement1063 = new BitSet(new long[]{0x0000007FFFFFEFE0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDriverMethodOutputAssignement1084 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSqlTypeAssignement_in_entryRuleSqlTypeAssignement1120 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSqlTypeAssignement1130 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleSqlTypeAssignement1172 = new BitSet(new long[]{0x0000020000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleSqlTypeAssignement1189 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleSqlTypeAssignement1205 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleSqlTypeAssignement1221 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleSqlTypeAssignement1234 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleSqlTypeAssignement1255 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_entryRuleColumnTypeAssignement1291 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleColumnTypeAssignement1301 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleColumnTypeAssignement1343 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleColumnTypeAssignement1360 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleColumnTypeAssignement1381 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleShowColumnTypeAssignement_in_entryRuleShowColumnTypeAssignement1417 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleShowColumnTypeAssignement1427 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleShowColumnTypeAssignement1469 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleShowColumnTypeAssignement1486 = new BitSet(new long[]{0x0000007FFFFFEFE0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleShowColumnTypeAssignement1507 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTableAssignement_in_entryRuleTableAssignement1543 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleTableAssignement1553 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleTableAssignement1595 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleTableAssignement1612 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleTableAssignement1629 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleJoinTableAssignement_in_entryRuleJoinTableAssignement1670 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleJoinTableAssignement1680 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleJoinTableAssignement1722 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleJoinTableAssignement1740 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleJoinTableAssignement1757 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_ruleColumnAssignement_in_entryRuleColumnAssignement1800 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleColumnAssignement1810 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleColumnAssignement1852 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleColumnAssignement1869 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleColumnAssignement1886 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImportAssignement_in_entryRuleImportAssignement1927 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImportAssignement1937 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImportAssignement1979 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleImportAssignement1996 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImportAssignement2013 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_41_in_ruleImportAssignement2031 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImportAssignement2048 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExportAssignement_in_entryRuleExportAssignement2091 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExportAssignement2101 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExportAssignement2143 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleExportAssignement2160 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExportAssignement2177 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_41_in_ruleExportAssignement2195 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExportAssignement2212 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInheritanceAssignement_in_entryRuleInheritanceAssignement2255 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleInheritanceAssignement2265 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2307 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleInheritanceAssignement2324 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2341 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleInheritanceAssignement2359 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2376 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_ruleManyToManyAssignement_in_entryRuleManyToManyAssignement2419 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleManyToManyAssignement2429 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2471 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleManyToManyAssignement2488 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2505 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_41_in_ruleManyToManyAssignement2523 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2540 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_entryRuleDebugLevelAssignement2583 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDebugLevelAssignement2593 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDebugLevelAssignement2635 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDebugLevelAssignement2653 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDebugLevelAssignement2675 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleProcedurePojoAssignement_in_entryRuleProcedurePojoAssignement2713 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleProcedurePojoAssignement2723 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProcedurePojoAssignement2765 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleProcedurePojoAssignement2782 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleProcedurePojoAssignement2803 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunctionPojoAssignement_in_entryRuleFunctionPojoAssignement2839 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFunctionPojoAssignement2849 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleFunctionPojoAssignement2891 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleFunctionPojoAssignement2908 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleFunctionPojoAssignement2929 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplementsAssignement_in_entryRuleImplementsAssignement2965 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImplementsAssignement2975 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleImplementsAssignement3011 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleImplementsAssignement3033 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignement3046 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleImplementsAssignement3058 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignement3070 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplementsAssignement3088 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignement3110 = new BitSet(new long[]{0x0000000000000810L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleImplementsAssignement3122 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignement3134 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplementsAssignement3152 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleExtendsAssignement_in_entryRuleExtendsAssignement3197 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendsAssignement3207 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleExtendsAssignement3243 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleExtendsAssignement3265 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignement3278 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleExtendsAssignement3290 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignement3302 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendsAssignement3320 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignement3342 = new BitSet(new long[]{0x0000000000000810L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleExtendsAssignement3354 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignement3366 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendsAssignement3384 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleImplementsAssignementGenerics_in_entryRuleImplementsAssignementGenerics3429 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImplementsAssignementGenerics3439 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleImplementsAssignementGenerics3475 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleImplementsAssignementGenerics3497 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3510 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleImplementsAssignementGenerics3522 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3534 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplementsAssignementGenerics3552 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3574 = new BitSet(new long[]{0x0000000000000810L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleImplementsAssignementGenerics3586 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3598 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplementsAssignementGenerics3616 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleExtendsAssignementGenerics_in_entryRuleExtendsAssignementGenerics3661 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendsAssignementGenerics3671 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleExtendsAssignementGenerics3707 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleExtendsAssignementGenerics3729 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3742 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleExtendsAssignementGenerics3754 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3766 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendsAssignementGenerics3784 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3806 = new BitSet(new long[]{0x0000000000000810L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleExtendsAssignementGenerics3818 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3830 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendsAssignementGenerics3848 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleProperty_in_entryRuleProperty3893 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleProperty3903 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_42_in_ruleProperty3947 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_43_in_ruleProperty3984 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_44_in_ruleProperty4022 = new BitSet(new long[]{0xFFF8000000000000L,0x00000000000001FFL});
        public static final BitSet FOLLOW_ruleDatabaseProperty_in_ruleProperty4056 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_45_in_ruleProperty4082 = new BitSet(new long[]{0x0000000000000000L,0x0003FFFFFFFFFE20L});
        public static final BitSet FOLLOW_rulePojogenProperty_in_ruleProperty4116 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_46_in_ruleProperty4142 = new BitSet(new long[]{0x0000000000000000L,0xFFFC880800000020L,0x0000000000000007L});
        public static final BitSet FOLLOW_ruleMetagenProperty_in_ruleProperty4176 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_47_in_ruleProperty4202 = new BitSet(new long[]{0x0000000000000000L,0x400188F000060020L});
        public static final BitSet FOLLOW_ruleDaogenProperty_in_ruleProperty4236 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_48_in_ruleProperty4262 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleProperty4287 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProperty4305 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleProperty4322 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleProperty4344 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_49_in_ruleProperty4370 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleProperty4395 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProperty4413 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleProperty4430 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleProperty4452 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_50_in_ruleProperty4477 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleProperty4502 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseProperty_in_entryRuleDatabaseProperty4537 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseProperty4547 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_51_in_ruleDatabaseProperty4590 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_52_in_ruleDatabaseProperty4627 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_53_in_ruleDatabaseProperty4665 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4690 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4712 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_54_in_ruleDatabaseProperty4738 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4763 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4785 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_55_in_ruleDatabaseProperty4811 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4836 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4858 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_56_in_ruleDatabaseProperty4884 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4909 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_ruleDatabaseCatalogAssignement_in_ruleDatabaseProperty4931 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_57_in_ruleDatabaseProperty4957 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4982 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_ruleDatabaseSchemaAssignement_in_ruleDatabaseProperty5004 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_58_in_ruleDatabaseProperty5030 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5055 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleDatabaseProperty5075 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleDatabaseProperty5098 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5126 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_59_in_ruleDatabaseProperty5153 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5178 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5200 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_60_in_ruleDatabaseProperty5226 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5251 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5273 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_61_in_ruleDatabaseProperty5299 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5324 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5346 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_62_in_ruleDatabaseProperty5371 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_63_in_ruleDatabaseProperty5408 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_64_in_ruleDatabaseProperty5445 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_65_in_ruleDatabaseProperty5483 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5508 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDatabaseTypeAssignement_in_ruleDatabaseProperty5530 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_66_in_ruleDatabaseProperty5556 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5581 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_ruleDatabaseMetaInfoAssignement_in_ruleDatabaseProperty5603 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_67_in_ruleDatabaseProperty5629 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5654 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_ruleDriverMetaInfoAssignement_in_ruleDatabaseProperty5676 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_68_in_ruleDatabaseProperty5702 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5728 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDriverMethodOutputAssignement_in_ruleDatabaseProperty5750 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_69_in_ruleDatabaseProperty5778 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5803 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_ruleDatabaseProperty5825 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_70_in_ruleDatabaseProperty5850 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_71_in_ruleDatabaseProperty5887 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_72_in_ruleDatabaseProperty5924 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojogenProperty_in_entryRulePojogenProperty5973 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojogenProperty5983 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_73_in_rulePojogenProperty6027 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6053 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleSqlTypeAssignement_in_rulePojogenProperty6075 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_74_in_rulePojogenProperty6103 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6128 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6146 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6164 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleSqlTypeAssignement_in_rulePojogenProperty6186 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_75_in_rulePojogenProperty6214 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6239 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6257 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6275 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6297 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_76_in_rulePojogenProperty6325 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6350 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6368 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6386 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6408 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_77_in_rulePojogenProperty6436 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6461 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6479 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6497 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6519 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_78_in_rulePojogenProperty6547 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6572 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6590 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6607 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6629 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_79_in_rulePojogenProperty6655 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6680 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6698 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6715 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6737 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_80_in_rulePojogenProperty6763 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6788 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6806 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6823 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6845 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_81_in_rulePojogenProperty6871 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6897 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6915 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_82_in_rulePojogenProperty6948 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6974 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6992 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_83_in_rulePojogenProperty7025 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7051 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7069 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_84_in_rulePojogenProperty7102 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7128 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleJoinTableAssignement_in_rulePojogenProperty7150 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_85_in_rulePojogenProperty7178 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7203 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7221 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7239 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7257 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_86_in_rulePojogenProperty7290 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7315 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7333 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7351 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7369 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_87_in_rulePojogenProperty7402 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7427 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7445 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7463 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7481 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_88_in_rulePojogenProperty7514 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7539 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7557 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7575 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty7597 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_89_in_rulePojogenProperty7625 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7651 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleTableAssignement_in_rulePojogenProperty7673 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_90_in_rulePojogenProperty7701 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7726 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7744 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7762 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnAssignement_in_rulePojogenProperty7784 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_91_in_rulePojogenProperty7812 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7837 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7855 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7873 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleExportAssignement_in_rulePojogenProperty7895 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_92_in_rulePojogenProperty7923 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7948 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7966 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7984 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleImportAssignement_in_rulePojogenProperty8006 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_93_in_rulePojogenProperty8034 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8059 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8077 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8095 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleImportAssignement_in_rulePojogenProperty8117 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_94_in_rulePojogenProperty8145 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8170 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8188 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8206 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleExportAssignement_in_rulePojogenProperty8228 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_95_in_rulePojogenProperty8256 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8281 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8299 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8317 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleImportAssignement_in_rulePojogenProperty8339 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_96_in_rulePojogenProperty8367 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8392 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8410 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8428 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleManyToManyAssignement_in_rulePojogenProperty8450 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_97_in_rulePojogenProperty8478 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8503 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8521 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8538 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8556 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8574 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleInheritanceAssignement_in_rulePojogenProperty8596 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_98_in_rulePojogenProperty8624 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8650 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8668 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_99_in_rulePojogenProperty8701 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8727 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8745 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_100_in_rulePojogenProperty8778 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8803 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_ruleImplementsAssignement_in_rulePojogenProperty8825 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_101_in_rulePojogenProperty8851 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8876 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_ruleExtendsAssignement_in_rulePojogenProperty8898 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_102_in_rulePojogenProperty8924 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8949 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_ruleImplementsAssignementGenerics_in_rulePojogenProperty8971 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_103_in_rulePojogenProperty8997 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9022 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_ruleExtendsAssignementGenerics_in_rulePojogenProperty9044 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_104_in_rulePojogenProperty9069 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_105_in_rulePojogenProperty9106 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_106_in_rulePojogenProperty9144 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9170 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9188 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_107_in_rulePojogenProperty9220 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_108_in_rulePojogenProperty9258 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9283 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9301 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9319 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_PLUS_in_rulePojogenProperty9331 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9343 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9361 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9383 = new BitSet(new long[]{0x0000000000000810L});
        public static final BitSet FOLLOW_RULE_MINUS_in_rulePojogenProperty9395 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9407 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9425 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_69_in_rulePojogenProperty9460 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9485 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_rulePojogenProperty9507 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_109_in_rulePojogenProperty9533 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9559 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleProcedurePojoAssignement_in_rulePojogenProperty9581 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_110_in_rulePojogenProperty9609 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9635 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleFunctionPojoAssignement_in_rulePojogenProperty9657 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_111_in_rulePojogenProperty9685 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9710 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_rulePojogenProperty9732 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_112_in_rulePojogenProperty9758 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9783 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_rulePojogenProperty9805 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_113_in_rulePojogenProperty9831 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9856 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9874 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9892 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9910 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleMetaTypeAssignement_in_entryRuleMetaTypeAssignement9954 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMetaTypeAssignement9964 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement10006 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleMetaTypeAssignement10023 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement10040 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_41_in_ruleMetaTypeAssignement10058 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement10075 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMetagenProperty_in_entryRuleMetagenProperty10118 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMetagenProperty10128 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_114_in_ruleMetagenProperty10172 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10197 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10215 = new BitSet(new long[]{0x0000000000000032L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10237 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10256 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleMetagenProperty10268 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10280 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10298 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10320 = new BitSet(new long[]{0x0000000000000810L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleMetagenProperty10332 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10344 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10362 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_115_in_ruleMetagenProperty10397 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10422 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10440 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10457 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10475 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10493 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10511 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_116_in_ruleMetagenProperty10544 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10570 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10588 = new BitSet(new long[]{0x0000000000000032L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10610 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10631 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleMetagenProperty10643 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10655 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10673 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10695 = new BitSet(new long[]{0x0000000000000810L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleMetagenProperty10707 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10719 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10737 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_117_in_ruleMetagenProperty10772 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10797 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10815 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10832 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10850 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10868 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10886 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_118_in_ruleMetagenProperty10919 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10944 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10962 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10980 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleMetaTypeAssignement_in_ruleMetagenProperty11002 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_119_in_ruleMetagenProperty11030 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11055 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11073 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11091 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleMetaTypeAssignement_in_ruleMetagenProperty11113 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_107_in_ruleMetagenProperty11140 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_120_in_ruleMetagenProperty11178 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11204 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11222 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11240 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11258 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_121_in_ruleMetagenProperty11293 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11319 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11337 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11355 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11373 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_122_in_ruleMetagenProperty11407 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_123_in_ruleMetagenProperty11444 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_124_in_ruleMetagenProperty11481 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_125_in_ruleMetagenProperty11518 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_126_in_ruleMetagenProperty11556 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11581 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11599 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11616 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11634 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_127_in_ruleMetagenProperty11665 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11690 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11708 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11725 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11743 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_128_in_ruleMetagenProperty11774 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11799 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11817 = new BitSet(new long[]{0x0000000000000010L});
    }

    private static class FollowSets001 {
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11834 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11852 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_69_in_ruleMetagenProperty11883 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11908 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_ruleMetagenProperty11930 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_99_in_ruleMetagenProperty11955 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_129_in_ruleMetagenProperty11993 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty12019 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty12037 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_130_in_ruleMetagenProperty12070 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty12095 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty12113 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty12131 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty12149 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_111_in_ruleMetagenProperty12182 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty12207 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleMetagenProperty12229 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDaogenProperty_in_entryRuleDaogenProperty12266 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDaogenProperty12276 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_81_in_ruleDaogenProperty12320 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12346 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDaogenProperty12364 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_82_in_ruleDaogenProperty12397 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12423 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDaogenProperty12441 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_100_in_ruleDaogenProperty12474 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12499 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_ruleImplementsAssignement_in_ruleDaogenProperty12521 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_101_in_ruleDaogenProperty12547 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12572 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_ruleExtendsAssignement_in_ruleDaogenProperty12594 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_102_in_ruleDaogenProperty12620 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12645 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_ruleImplementsAssignementGenerics_in_ruleDaogenProperty12667 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_103_in_ruleDaogenProperty12693 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12718 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_ruleExtendsAssignementGenerics_in_ruleDaogenProperty12740 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_107_in_ruleDaogenProperty12765 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_126_in_ruleDaogenProperty12803 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12828 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDaogenProperty12846 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12863 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleDaogenProperty12885 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_69_in_ruleDaogenProperty12911 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12936 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_ruleDaogenProperty12958 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_111_in_ruleDaogenProperty12984 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty13009 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDaogenProperty13031 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_112_in_ruleDaogenProperty13057 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty13082 = new BitSet(new long[]{0x0000007FFFFFEFF0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDaogenProperty13104 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_entryRulePropertyValue13142 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePropertyValue13153 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_rulePropertyValue13195 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_rulePropertyValue13221 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePropertyValue13247 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePropertyValue13273 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePropertyValue13299 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_STRING_in_rulePropertyValue13325 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_rulePropertyValue13351 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_rulePropertyValue13377 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_rulePropertyValue13403 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePropertyValue13429 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePropertyValue13455 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePropertyValue13481 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePropertyValue13507 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_rulePropertyValue13533 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_rulePropertyValue13559 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_rulePropertyValue13585 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_BOR_in_rulePropertyValue13611 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_rulePropertyValue13637 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_AT_in_rulePropertyValue13663 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_rulePropertyValue13689 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_rulePropertyValue13715 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_rulePropertyValue13741 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_rulePropertyValue13767 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_rulePropertyValue13793 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_rulePropertyValue13819 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_AND_in_rulePropertyValue13845 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_OR_in_rulePropertyValue13871 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_rulePropertyValue13897 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_rulePropertyValue13923 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_rulePropertyValue13949 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_rulePropertyValue13975 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_rulePropertyValue14001 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_REST_in_rulePropertyValue14287 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_rulePropertyValue14313 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePropertyValue14339 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePropertyValue14365 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePropertyValue14391 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePropertyValue14417 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_STRING_in_rulePropertyValue14443 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_rulePropertyValue14469 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_rulePropertyValue14495 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_rulePropertyValue14521 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePropertyValue14547 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePropertyValue14573 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePropertyValue14599 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePropertyValue14625 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_rulePropertyValue14651 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_rulePropertyValue14677 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_rulePropertyValue14703 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_BOR_in_rulePropertyValue14729 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_rulePropertyValue14755 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_AT_in_rulePropertyValue14781 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_rulePropertyValue14807 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_rulePropertyValue14833 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_rulePropertyValue14859 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_rulePropertyValue14885 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_rulePropertyValue14911 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_rulePropertyValue14937 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_AND_in_rulePropertyValue14963 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_OR_in_rulePropertyValue14989 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_rulePropertyValue15015 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_rulePropertyValue15041 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_rulePropertyValue15067 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_rulePropertyValue15093 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_rulePropertyValue15119 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_RULE_STRING_VALUE_in_rulePropertyValue15149 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDefinition_in_entryRulePojoDefinition15200 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoDefinition15210 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_131_in_rulePojoDefinition15251 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDefinition15268 = new BitSet(new long[]{0x0000000000004220L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDefinition15293 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_rulePojoDefinition15313 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoDefinition15339 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoDefinition15361 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_rulePojoDefinition15374 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTableDefinition_in_entryRuleTableDefinition15419 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleTableDefinition15429 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_132_in_ruleTableDefinition15470 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleTableDefinition15487 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleTableDefinition15509 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleTableDefinition15525 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleProcedureDefinition_in_entryRuleProcedureDefinition15570 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleProcedureDefinition15580 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_133_in_ruleProcedureDefinition15621 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProcedureDefinition15638 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProcedureDefinition15660 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleProcedureDefinition15676 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunctionDefinition_in_entryRuleFunctionDefinition15721 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFunctionDefinition15731 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_134_in_ruleFunctionDefinition15772 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleFunctionDefinition15789 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleFunctionDefinition15811 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleFunctionDefinition15827 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMetaStatement_in_entryRuleMetaStatement15866 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMetaStatement15876 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaStatement15918 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleMetaStatement15934 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleMetaStatement15950 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleMetaStatement15967 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleStatementModifier_in_ruleMetaStatement15987 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleMetaStatement16000 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleMetaStatement16010 = new BitSet(new long[]{0x0000003FFFFFEFF0L});
        public static final BitSet FOLLOW_ruleSql_in_ruleMetaStatement16030 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleMetaStatement16041 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSql_in_entryRuleSql16076 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSql16086 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSqlFragment_in_ruleSql16131 = new BitSet(new long[]{0x0000003FFFFFEFF2L});
        public static final BitSet FOLLOW_ruleSqlFragment_in_entryRuleSqlFragment16167 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSqlFragment16177 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSqlValue_in_ruleSqlFragment16223 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleSqlFragment16241 = new BitSet(new long[]{0x00000000000040A0L});
        public static final BitSet FOLLOW_ruleColumn_in_ruleSqlFragment16261 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleSqlFragment16280 = new BitSet(new long[]{0x0000000000004C20L});
        public static final BitSet FOLLOW_ruleConstant_in_ruleSqlFragment16300 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleSqlFragment16319 = new BitSet(new long[]{0x000000001C004CA0L});
        public static final BitSet FOLLOW_ruleIdentifier_in_ruleSqlFragment16339 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleSqlFragment16358 = new BitSet(new long[]{0x0000000000008000L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleSqlFragment16368 = new BitSet(new long[]{0x0000000004000020L});
        public static final BitSet FOLLOW_ruleConstantOperator_in_ruleSqlFragment16388 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleSqlFragment16407 = new BitSet(new long[]{0x0000000000000200L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleSqlFragment16417 = new BitSet(new long[]{0x0000000004000020L});
        public static final BitSet FOLLOW_ruleIdentifierOperator_in_ruleSqlFragment16437 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleSqlFragment16456 = new BitSet(new long[]{0x0000000004E80010L});
        public static final BitSet FOLLOW_ruleMetaSql_in_ruleSqlFragment16476 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleSqlFragment16487 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleSqlFragment16505 = new BitSet(new long[]{0x0000000020004020L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleSqlFragment16517 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleDatabaseTable_in_ruleSqlFragment16537 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseColumn_in_ruleSqlFragment16565 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSqlValue_in_entryRuleSqlValue16604 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSqlValue16615 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleSqlValue16656 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleSqlValue16682 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleSqlValue16708 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleSqlValue16734 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleSqlValue16760 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleSqlValue16786 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleSqlValue16812 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleSqlValue16838 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleSqlValue16864 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleSqlValue16890 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleSqlValue16916 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleSqlValue16942 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleSqlValue16968 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleSqlValue16994 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleSqlValue17020 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleSqlValue17046 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleSqlValue17072 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleSqlValue17098 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleSqlValue17124 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleSqlValue17150 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleSqlValue17176 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleSqlValue17202 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleSqlValue17228 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleSqlValue17254 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleSqlValue17280 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleSqlValue17306 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleSqlValue17332 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleSqlValue17358 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleSqlValue17604 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleSqlValue17630 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleSqlValue17656 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleSqlValue17682 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleSqlValue17708 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleSqlValue17734 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleSqlValue17760 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleSqlValue17786 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleSqlValue17812 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleSqlValue17838 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleSqlValue17864 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleSqlValue17890 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleSqlValue17916 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleSqlValue17942 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleSqlValue17968 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleSqlValue17994 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleSqlValue18020 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleSqlValue18046 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleSqlValue18072 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleSqlValue18098 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleSqlValue18124 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleSqlValue18150 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleSqlValue18176 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleSqlValue18202 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleSqlValue18228 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleSqlValue18254 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleSqlValue18280 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleSqlValue18306 = new BitSet(new long[]{0x0000003FDEFD6DF2L});
        public static final BitSet FOLLOW_ruleMetaSql_in_entryRuleMetaSql18354 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMetaSql18364 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetaSql18401 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18421 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18433 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18453 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleMetaSql18480 = new BitSet(new long[]{0x0000000000108250L});
        public static final BitSet FOLLOW_ruleIfSqlCond_in_ruleMetaSql18506 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18517 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18537 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18549 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18569 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleMetaSql18596 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18622 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18634 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18654 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18681 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18707 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18719 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18739 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleMetaSql18766 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetaSql18783 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaSql18801 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18827 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleMetaSql18852 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMetaSql18868 = new BitSet(new long[]{0x0000003FFFFBFFF0L});
        public static final BitSet FOLLOW_ruleOrdSql_in_ruleMetaSql18888 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIfSql_in_entryRuleIfSql18925 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSql18935 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIfSqlFragment_in_ruleIfSql18980 = new BitSet(new long[]{0x0000003FFFBBFFF2L});
        public static final BitSet FOLLOW_ruleIfSqlFragment_in_entryRuleIfSqlFragment19016 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSqlFragment19026 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIfSqlValue_in_ruleIfSqlFragment19072 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleIfSqlFragment19090 = new BitSet(new long[]{0x00000000000040A0L});
        public static final BitSet FOLLOW_ruleColumn_in_ruleIfSqlFragment19110 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleIfSqlFragment19129 = new BitSet(new long[]{0x0000000000004C20L});
        public static final BitSet FOLLOW_ruleConstant_in_ruleIfSqlFragment19149 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleIfSqlFragment19168 = new BitSet(new long[]{0x000000001C004CA0L});
        public static final BitSet FOLLOW_ruleIdentifier_in_ruleIfSqlFragment19188 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleIfSqlFragment19207 = new BitSet(new long[]{0x0000000000008000L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleIfSqlFragment19217 = new BitSet(new long[]{0x0000000004000020L});
        public static final BitSet FOLLOW_ruleConstantOperator_in_ruleIfSqlFragment19237 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleIfSqlFragment19256 = new BitSet(new long[]{0x0000000000000200L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleIfSqlFragment19266 = new BitSet(new long[]{0x0000000004000020L});
        public static final BitSet FOLLOW_ruleIdentifierOperator_in_ruleIfSqlFragment19286 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleIfSqlFragment19305 = new BitSet(new long[]{0x0000000020004020L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleIfSqlFragment19317 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleDatabaseTable_in_ruleIfSqlFragment19337 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseColumn_in_ruleIfSqlFragment19365 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleIfSqlFragment19385 = new BitSet(new long[]{0x0000000000680010L});
        public static final BitSet FOLLOW_ruleIfMetaSql_in_ruleIfSqlFragment19405 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleIfSqlFragment19416 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIfSqlValue_in_entryRuleIfSqlValue19453 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSqlValue19464 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleIfSqlValue19505 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleIfSqlValue19531 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleIfSqlValue19557 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleIfSqlValue19583 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlValue19609 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleIfSqlValue19635 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleIfSqlValue19661 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleIfSqlValue19687 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleIfSqlValue19713 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleIfSqlValue19739 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleIfSqlValue19765 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleIfSqlValue19791 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlValue19817 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleIfSqlValue19843 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleIfSqlValue19869 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleIfSqlValue19895 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleIfSqlValue19921 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleIfSqlValue19947 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleIfSqlValue19973 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleIfSqlValue19999 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleIfSqlValue20025 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleIfSqlValue20051 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleIfSqlValue20077 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleIfSqlValue20103 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleIfSqlValue20129 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleIfSqlValue20155 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleIfSqlValue20181 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleIfSqlValue20419 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleIfSqlValue20445 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleIfSqlValue20471 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleIfSqlValue20497 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlValue20523 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleIfSqlValue20549 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleIfSqlValue20575 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleIfSqlValue20601 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleIfSqlValue20627 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleIfSqlValue20653 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleIfSqlValue20679 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleIfSqlValue20705 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlValue20731 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleIfSqlValue20757 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleIfSqlValue20783 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleIfSqlValue20809 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleIfSqlValue20835 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleIfSqlValue20861 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleIfSqlValue20887 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleIfSqlValue20913 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleIfSqlValue20939 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleIfSqlValue20965 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleIfSqlValue20991 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleIfSqlValue21017 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleIfSqlValue21043 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleIfSqlValue21069 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleIfSqlValue21095 = new BitSet(new long[]{0x0000003FDEB97DF2L});
        public static final BitSet FOLLOW_ruleIfMetaSql_in_entryRuleIfMetaSql21143 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfMetaSql21153 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfMetaSql21190 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21210 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21222 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21242 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleIfMetaSql21269 = new BitSet(new long[]{0x0000000000108250L});
        public static final BitSet FOLLOW_ruleIfSqlCond_in_ruleIfMetaSql21295 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21306 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21326 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21338 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21358 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleIfMetaSql21385 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21411 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21423 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21443 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21470 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21496 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21508 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21528 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_ruleIfSqlCond_in_entryRuleIfSqlCond21567 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSqlCond21577 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlCond21614 = new BitSet(new long[]{0x0000000000108250L});
        public static final BitSet FOLLOW_ruleIfSqlBool_in_ruleIfSqlCond21636 = new BitSet(new long[]{0x0000000180000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlCond21648 = new BitSet(new long[]{0x0000000180000012L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleIfSqlCond21669 = new BitSet(new long[]{0x0000000000108250L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleIfSqlCond21689 = new BitSet(new long[]{0x0000000000108250L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlCond21709 = new BitSet(new long[]{0x0000000000108250L});
        public static final BitSet FOLLOW_ruleIfSqlBool_in_ruleIfSqlCond21731 = new BitSet(new long[]{0x0000000180000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlCond21743 = new BitSet(new long[]{0x0000000180000012L});
        public static final BitSet FOLLOW_ruleIfSqlBool_in_entryRuleIfSqlBool21782 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSqlBool21792 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlBool21835 = new BitSet(new long[]{0x0000000000008000L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleIfSqlBool21852 = new BitSet(new long[]{0x0000000000004C20L});
        public static final BitSet FOLLOW_ruleConstant_in_ruleIfSqlBool21872 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlBool21897 = new BitSet(new long[]{0x0000000000000200L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleIfSqlBool21914 = new BitSet(new long[]{0x000000001C004CA0L});
        public static final BitSet FOLLOW_ruleIdentifier_in_ruleIfSqlBool21934 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlBool21959 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleIfSqlBool21976 = new BitSet(new long[]{0x0000000000108250L});
        public static final BitSet FOLLOW_ruleIfSqlCond_in_ruleIfSqlBool21996 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleIfSqlBool22007 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrdSql_in_entryRuleOrdSql22043 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOrdSql22053 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrdSql2_in_ruleOrdSql22098 = new BitSet(new long[]{0x0000003FFFFBFFF2L});
        public static final BitSet FOLLOW_ruleOrdSql2_in_entryRuleOrdSql222134 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOrdSql222144 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrdSqlValue_in_ruleOrdSql222190 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleOrdSql222208 = new BitSet(new long[]{0x0000000000004C20L});
        public static final BitSet FOLLOW_ruleConstant_in_ruleOrdSql222228 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleOrdSql222247 = new BitSet(new long[]{0x000000001C004CA0L});
        public static final BitSet FOLLOW_ruleIdentifier_in_ruleOrdSql222267 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleOrdSql222286 = new BitSet(new long[]{0x0000000020004020L});
        public static final BitSet FOLLOW_ruleDatabaseColumn_in_ruleOrdSql222306 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrdSqlValue_in_entryRuleOrdSqlValue22344 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOrdSqlValue22355 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleOrdSqlValue22396 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleOrdSqlValue22422 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleOrdSqlValue22448 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleOrdSqlValue22474 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleOrdSqlValue22500 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleOrdSqlValue22526 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleOrdSqlValue22552 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleOrdSqlValue22578 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleOrdSqlValue22604 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleOrdSqlValue22630 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleOrdSqlValue22656 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleOrdSqlValue22682 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleOrdSqlValue22708 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleOrdSqlValue22734 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleOrdSqlValue22760 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleOrdSqlValue22786 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleOrdSqlValue22812 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleOrdSqlValue22838 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleOrdSqlValue22864 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleOrdSqlValue22890 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleOrdSqlValue22916 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleOrdSqlValue22942 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleOrdSqlValue22968 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleOrdSqlValue22994 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleOrdSqlValue23020 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleOrdSqlValue23046 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleOrdSqlValue23072 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleOrdSqlValue23098 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleOrdSqlValue23124 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleOrdSqlValue23150 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleOrdSqlValue23412 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleOrdSqlValue23438 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleOrdSqlValue23464 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleOrdSqlValue23490 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleOrdSqlValue23516 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleOrdSqlValue23542 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleOrdSqlValue23568 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleOrdSqlValue23594 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleOrdSqlValue23620 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleOrdSqlValue23646 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleOrdSqlValue23672 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleOrdSqlValue23698 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleOrdSqlValue23724 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleOrdSqlValue23750 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleOrdSqlValue23776 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleOrdSqlValue23802 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleOrdSqlValue23828 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleOrdSqlValue23854 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleOrdSqlValue23880 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleOrdSqlValue23906 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleOrdSqlValue23932 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleOrdSqlValue23958 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleOrdSqlValue23984 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleOrdSqlValue24010 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleOrdSqlValue24036 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleOrdSqlValue24062 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleOrdSqlValue24088 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleOrdSqlValue24114 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleOrdSqlValue24140 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleOrdSqlValue24166 = new BitSet(new long[]{0x0000003FDFFB7DF2L});
        public static final BitSet FOLLOW_ruleColumn_in_entryRuleColumn24214 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleColumn24224 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedColumn_in_ruleColumn24270 = new BitSet(new long[]{0x00000000000040A2L});
        public static final BitSet FOLLOW_ruleExtendedColumn_in_ruleColumn24301 = new BitSet(new long[]{0x00000000000040A2L});
        public static final BitSet FOLLOW_ruleExtendedColumn_in_entryRuleExtendedColumn24338 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendedColumn24348 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedColumnName_in_ruleExtendedColumn24394 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleExtendedColumn24412 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleExtendedColumn24433 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleExtendedColumn24445 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleExtendedColumn24465 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleExtendedColumn24478 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedColumnName_in_entryRuleExtendedColumnName24515 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendedColumnName24525 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendedColumnName24568 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleExtendedColumnName24588 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleExtendedColumnName24608 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleConstant_in_entryRuleConstant24651 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleConstant24661 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleConstant24705 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleConstant24725 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleConstant24753 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleConstant24773 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleConstant24799 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleConstant24820 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleConstant24832 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleConstant24852 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleConstant24865 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIdentifier_in_entryRuleIdentifier24902 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIdentifier24912 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleIdentifier24956 = new BitSet(new long[]{0x0000000000004CA0L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleIdentifier24976 = new BitSet(new long[]{0x0000000000004CA0L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleIdentifier24996 = new BitSet(new long[]{0x0000000000004CA0L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleIdentifier25024 = new BitSet(new long[]{0x00000000000040A0L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleIdentifier25044 = new BitSet(new long[]{0x00000000000040A0L});
    }

    private static class FollowSets002 {
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleIdentifier25072 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleIdentifier25092 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleIdentifier25112 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleIdentifier25138 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleIdentifier25159 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleIdentifier25171 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleIdentifier25191 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleIdentifier25204 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleConstantOperator_in_entryRuleConstantOperator25241 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleConstantOperator25251 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleConstantOperator25294 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleConstantOperator25314 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIdentifierOperator_in_entryRuleIdentifierOperator25357 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIdentifierOperator25367 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleIdentifierOperator25410 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleIdentifierOperator25430 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseColumn_in_entryRuleDatabaseColumn25473 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseColumn25483 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDatabaseColumn25526 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleDatabaseColumn25546 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseTable_in_entryRuleDatabaseTable25589 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseTable25599 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDatabaseTable25642 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleDatabaseTable25662 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingRule_in_entryRuleMappingRule25705 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingRule25715 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingRule25757 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleMappingRule25773 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleMappingRule25789 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleMappingRule25806 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleMappingRuleModifier_in_ruleMappingRule25826 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleMappingRule25839 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleMappingRule25849 = new BitSet(new long[]{0x00000000000000B0L});
        public static final BitSet FOLLOW_ruleMapping_in_ruleMappingRule25869 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleMappingRule25880 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMapping_in_entryRuleMapping25915 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMapping25925 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMapping25962 = new BitSet(new long[]{0x00000000000000B0L});
        public static final BitSet FOLLOW_ruleMappingItem_in_ruleMapping25984 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMapping25997 = new BitSet(new long[]{0x00000000000000B0L});
        public static final BitSet FOLLOW_ruleMappingItem_in_ruleMapping26019 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMapping26033 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleMappingItem_in_entryRuleMappingItem26070 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingItem26080 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingItem26124 = new BitSet(new long[]{0x0000000000008002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMappingItem26144 = new BitSet(new long[]{0x0000000000008002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleMappingItem26164 = new BitSet(new long[]{0x00000000000040A0L});
        public static final BitSet FOLLOW_ruleMappingColumn_in_ruleMappingItem26184 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingColumn_in_entryRuleMappingColumn26222 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingColumn26232 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedMappingItem_in_ruleMappingColumn26278 = new BitSet(new long[]{0x00000000000040A2L});
        public static final BitSet FOLLOW_ruleExtendedMappingItem_in_ruleMappingColumn26309 = new BitSet(new long[]{0x00000000000040A2L});
        public static final BitSet FOLLOW_ruleExtendedMappingItem_in_entryRuleExtendedMappingItem26346 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendedMappingItem26356 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingColumnName_in_ruleExtendedMappingItem26402 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleExtendedMappingItem26420 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleMappingItemModifier_in_ruleExtendedMappingItem26441 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleExtendedMappingItem26453 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleMappingItemModifier_in_ruleExtendedMappingItem26473 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleExtendedMappingItem26486 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingColumnName_in_entryRuleMappingColumnName26523 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingColumnName26533 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingColumnName26576 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleMappingColumnName26596 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMappingColumnName26616 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOptionalFeature_in_entryRuleOptionalFeature26659 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOptionalFeature26669 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleOptionalFeature26711 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleOptionalFeature26727 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleOptionalFeature26743 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleOptionalFeature26760 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleOptionalFeatureModifier_in_ruleOptionalFeature26780 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleOptionalFeature26793 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleOptionalFeature26803 = new BitSet(new long[]{0x0000003FBFFFEFF0L});
        public static final BitSet FOLLOW_ruleFeatureValue_in_ruleOptionalFeature26823 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleOptionalFeature26834 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleStatementModifier_in_entryRuleStatementModifier26870 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleStatementModifier26881 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleStatementModifier26921 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleStatementModifier26947 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingRuleModifier_in_entryRuleMappingRuleModifier26993 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingRuleModifier27004 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingRuleModifier27044 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMappingRuleModifier27070 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingItemModifier_in_entryRuleMappingItemModifier27116 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingItemModifier27127 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingItemModifier27167 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMappingItemModifier27193 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOptionalFeatureModifier_in_entryRuleOptionalFeatureModifier27239 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOptionalFeatureModifier27250 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleOptionalFeatureModifier27290 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleOptionalFeatureModifier27316 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleModifier_in_entryRuleModifier27362 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleModifier27373 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleModifier27414 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleModifier27437 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleModifier27463 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureValue_in_entryRuleFeatureValue27510 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFeatureValue27521 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleFeatureValue27561 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleFeatureValue27587 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleFeatureValue27613 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleFeatureValue27639 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleFeatureValue27665 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleFeatureValue27691 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleFeatureValue27717 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleFeatureValue27743 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleFeatureValue27769 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleFeatureValue27795 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleFeatureValue27821 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleFeatureValue27847 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleFeatureValue27873 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleFeatureValue27899 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleFeatureValue27925 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleFeatureValue27951 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleFeatureValue27977 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleFeatureValue28003 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleFeatureValue28029 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleFeatureValue28055 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleFeatureValue28081 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleFeatureValue28107 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleFeatureValue28133 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleFeatureValue28159 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleFeatureValue28185 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleFeatureValue28211 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleFeatureValue28237 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleFeatureValue28263 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleFeatureValue28289 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleFeatureValue28315 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleFeatureValue28341 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleFeatureValue28367 = new BitSet(new long[]{0x0000003FBFFFEFF2L});
        public static final BitSet FOLLOW_rulePojoType_in_entryRulePojoType28413 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoType28423 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoType28461 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoType28483 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoType28510 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_rulePojoType28523 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoType28535 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoType28557 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoType28584 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_rulePojoType28596 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_135_in_rulePojoType28615 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePackageDirective_in_entryRulePackageDirective28671 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePackageDirective28681 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_136_in_rulePackageDirective28732 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePackageDirective28743 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePackageDirective28761 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePackageDirective28781 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePackageDirective28800 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_137_in_rulePackageDirective28828 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePackageDirective28839 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePackageDirective28857 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_rulePackageDirective28877 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePackageDirective28896 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePackage_in_entryRulePackage28942 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePackage28952 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePackageDirective_in_rulePackage29002 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000000000300L});
        public static final BitSet FOLLOW_112_in_rulePackage29015 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePackage29034 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_rulePackage29054 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePackage29073 = new BitSet(new long[]{0x0007FC0001040020L,0x0001000000000000L,0x007FD003FF0FFF78L});
        public static final BitSet FOLLOW_ruleAbstractPojoEntity_in_rulePackage29093 = new BitSet(new long[]{0x0007FC0001040020L,0x0001000000000000L,0x007FD003FF0FFF78L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePackage29105 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotationDirective_in_entryRuleAnnotationDirective29150 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAnnotationDirective29160 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_138_in_ruleAnnotationDirective29211 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_139_in_ruleAnnotationDirective29240 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_140_in_ruleAnnotationDirective29269 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_141_in_ruleAnnotationDirective29298 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_142_in_ruleAnnotationDirective29327 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_143_in_ruleAnnotationDirective29356 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_144_in_ruleAnnotationDirective29385 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotation_in_entryRuleAnnotation29426 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAnnotation29436 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotationDirective_in_ruleAnnotation29482 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000000L,0x000000000001FC00L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleAnnotation29494 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleAnnotation29516 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleAnnotation29534 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_ruleAnnotationProperty_in_ruleAnnotation29555 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleAnnotation29567 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_ruleAnnotationProperty_in_ruleAnnotation29587 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleAnnotation29600 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotationProperty_in_entryRuleAnnotationProperty29637 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAnnotationProperty29647 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29689 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleAnnotationProperty29705 = new BitSet(new long[]{0x00000040000000A0L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleAnnotationProperty29722 = new BitSet(new long[]{0x0000000000000222L});
        public static final BitSet FOLLOW_RULE_STRING_VALUE_in_ruleAnnotationProperty29750 = new BitSet(new long[]{0x0000000000000222L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29778 = new BitSet(new long[]{0x0000000000000222L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleAnnotationProperty29797 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleAnnotationProperty29819 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29846 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEntity_in_entryRuleEntity29884 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEntity29894 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoEntity_in_ruleEntity29941 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumEntity_in_ruleEntity29968 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotatedEntity_in_entryRuleAnnotatedEntity30003 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAnnotatedEntity30013 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity30059 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000000L,0x00001003FE01FC08L});
        public static final BitSet FOLLOW_ruleEntity_in_ruleAnnotatedEntity30081 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAbstractPojoEntity_in_entryRuleAbstractPojoEntity30123 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAbstractPojoEntity30133 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePackage_in_ruleAbstractPojoEntity30184 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotatedEntity_in_ruleAbstractPojoEntity30211 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImport_in_ruleAbstractPojoEntity30238 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplements_in_ruleAbstractPojoEntity30265 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtends_in_ruleAbstractPojoEntity30292 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDao_in_ruleAbstractPojoEntity30319 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImport_in_entryRuleImport30364 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImport30374 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_145_in_ruleImport30415 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_ruleImport30436 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplementsExtendsDirective_in_entryRuleImplementsExtendsDirective30482 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImplementsExtendsDirective30492 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_146_in_ruleImplementsExtendsDirective30542 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplements_in_entryRuleImplements30588 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImplements30598 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplementsExtendsDirective_in_ruleImplements30648 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000000C0000L});
        public static final BitSet FOLLOW_147_in_ruleImplements30661 = new BitSet(new long[]{0x0000000000000200L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleImplements30672 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleImplements30694 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000F00000L});
        public static final BitSet FOLLOW_148_in_ruleImplements30707 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000E00000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplements30727 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000E00000L});
        public static final BitSet FOLLOW_149_in_ruleImplements30743 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000C00000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplements30763 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000C00000L});
        public static final BitSet FOLLOW_150_in_ruleImplements30779 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplements30799 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_151_in_ruleImplements30815 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplements30835 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_ruleExtends_in_entryRuleExtends30884 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtends30894 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplementsExtendsDirective_in_ruleExtends30944 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001040000L});
        public static final BitSet FOLLOW_152_in_ruleExtends30957 = new BitSet(new long[]{0x0000000000000200L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleExtends30968 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleExtends30990 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000F00000L});
        public static final BitSet FOLLOW_148_in_ruleExtends31003 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000E00000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtends31023 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000E00000L});
        public static final BitSet FOLLOW_149_in_ruleExtends31039 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000C00000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtends31059 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000C00000L});
        public static final BitSet FOLLOW_150_in_ruleExtends31075 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtends31095 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_151_in_ruleExtends31111 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtends31131 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_rulePojoEntityModifier1_in_entryRulePojoEntityModifier131174 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoEntityModifier131184 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_153_in_rulePojoEntityModifier131227 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_154_in_rulePojoEntityModifier131264 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDirectiveProperties_in_entryRuleDirectiveProperties31319 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDirectiveProperties31329 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDirectiveProperties31378 = new BitSet(new long[]{0x0000000000010002L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleDirectiveProperties31390 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDirectiveProperties31409 = new BitSet(new long[]{0x0000000000010002L});
        public static final BitSet FOLLOW_rulePojoDirective_in_entryRulePojoDirective31457 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoDirective31467 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_155_in_rulePojoDirective31518 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoDirective31529 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_ruleDirectiveProperties_in_rulePojoDirective31549 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoDirective31560 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_156_in_rulePojoDirective31588 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoDirective31599 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePojoDirective31615 = new BitSet(new long[]{0x0000000000010000L});
        public static final BitSet FOLLOW_RULE_COMMA_in_rulePojoDirective31631 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_ruleDirectiveProperties_in_rulePojoDirective31651 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoDirective31662 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_157_in_rulePojoDirective31690 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoDirective31702 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDirective31718 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoDirective31734 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_158_in_rulePojoDirective31764 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoDirective31775 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePojoDirective31791 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoDirective31807 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_159_in_rulePojoDirective31835 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoDirective31846 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDirective31864 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePojoDirective31884 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoDirective31903 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_160_in_rulePojoDirective31931 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoDirective31942 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_ruleDirectiveProperties_in_rulePojoDirective31962 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoDirective31973 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_161_in_rulePojoDirective32001 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoDirective32012 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_ruleDirectiveProperties_in_rulePojoDirective32032 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoDirective32043 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoEntityModifier2_in_entryRulePojoEntityModifier232083 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoEntityModifier232093 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_152_in_rulePojoEntityModifier232130 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoEntityModifier232150 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoEntity_in_entryRulePojoEntity32192 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoEntity32202 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDirective_in_rulePojoEntity32252 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000003FE000008L});
        public static final BitSet FOLLOW_rulePojoEntityModifier1_in_rulePojoEntity32274 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000006000008L});
        public static final BitSet FOLLOW_131_in_rulePojoEntity32287 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoEntity32304 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_rulePojoEntityModifier2_in_rulePojoEntity32330 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePojoEntity32342 = new BitSet(new long[]{0x0000000001040020L,0x0000000000000000L,0x00000FFC1001FC00L});
        public static final BitSet FOLLOW_rulePojoAnnotatedProperty_in_rulePojoEntity32362 = new BitSet(new long[]{0x0000000001040020L,0x0000000000000000L,0x00000FFC1001FC00L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePojoEntity32374 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoAnnotatedProperty_in_entryRulePojoAnnotatedProperty32413 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoAnnotatedProperty32423 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotation_in_rulePojoAnnotatedProperty32469 = new BitSet(new long[]{0x0000000001000020L,0x0000000000000000L,0x00000FFC1001FC00L});
        public static final BitSet FOLLOW_rulePojoProperty_in_rulePojoAnnotatedProperty32491 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoPropertyDirective_in_entryRulePojoPropertyDirective32533 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoPropertyDirective32543 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_162_in_rulePojoPropertyDirective32594 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_163_in_rulePojoPropertyDirective32623 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_164_in_rulePojoPropertyDirective32652 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_156_in_rulePojoPropertyDirective32681 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoPropertyDirective32692 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePojoPropertyDirective32708 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoPropertyDirective32724 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_165_in_rulePojoPropertyDirective32752 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_166_in_rulePojoPropertyDirective32781 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoPropertyDirective32792 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoPropertyDirective32808 = new BitSet(new long[]{0x0000000000010000L});
        public static final BitSet FOLLOW_RULE_COMMA_in_rulePojoPropertyDirective32824 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoPropertyDirective32840 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoPropertyDirective32856 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_167_in_rulePojoPropertyDirective32884 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePojoPropertyDirective32895 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoPropertyDirective32911 = new BitSet(new long[]{0x0000000000010000L});
        public static final BitSet FOLLOW_RULE_COMMA_in_rulePojoPropertyDirective32927 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoPropertyDirective32943 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePojoPropertyDirective32959 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_168_in_rulePojoPropertyDirective32987 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_169_in_rulePojoPropertyDirective33016 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_170_in_rulePojoPropertyDirective33045 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_171_in_rulePojoPropertyDirective33074 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoProperty_in_entryRulePojoProperty33121 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoProperty33131 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoPropertyDirective_in_rulePojoProperty33181 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x00000FFC10000000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoProperty33199 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoProperty33217 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoProperty33239 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoProperty33266 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_rulePojoProperty33279 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoProperty33291 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoProperty33313 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoProperty33340 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_rulePojoProperty33352 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_135_in_rulePojoProperty33371 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumEntityModifier1_in_entryRuleEnumEntityModifier133425 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumEntityModifier133435 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_153_in_ruleEnumEntityModifier133477 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumEntityModifier2_in_entryRuleEnumEntityModifier233525 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumEntityModifier233535 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_152_in_ruleEnumEntityModifier233572 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleEnumEntityModifier233592 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumEntity_in_entryRuleEnumEntity33634 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumEntity33644 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDirective_in_ruleEnumEntity33694 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00001003FA000000L});
        public static final BitSet FOLLOW_ruleEnumEntityModifier1_in_ruleEnumEntity33716 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100002000000L});
        public static final BitSet FOLLOW_172_in_ruleEnumEntity33729 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleEnumEntity33746 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_ruleEnumEntityModifier2_in_ruleEnumEntity33772 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleEnumEntity33784 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000000L,0x0000200000000000L});
        public static final BitSet FOLLOW_ruleEnumProperty_in_ruleEnumEntity33804 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000000L,0x0000200000000000L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleEnumEntity33816 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumPropertyValue_in_entryRuleEnumPropertyValue33855 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumPropertyValue33865 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleEnumPropertyValue33907 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleEnumPropertyValue33923 = new BitSet(new long[]{0x0000004000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleEnumPropertyValue33941 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_VALUE_in_ruleEnumPropertyValue33961 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumPropertyDirective_in_entryRuleEnumPropertyDirective34011 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumPropertyDirective34021 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_173_in_ruleEnumPropertyDirective34071 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleEnumPropertyDirective34082 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_ruleEnumPropertyValue_in_ruleEnumPropertyDirective34102 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleEnumPropertyDirective34114 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_ruleEnumPropertyValue_in_ruleEnumPropertyDirective34134 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleEnumPropertyDirective34147 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumProperty_in_entryRuleEnumProperty34192 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumProperty34202 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumPropertyDirective_in_ruleEnumProperty34252 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleEnumProperty34269 = new BitSet(new long[]{0x0000000000000200L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleEnumProperty34285 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleEnumProperty34307 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDaoDirectiveParameters_in_entryRuleDaoDirectiveParameters34353 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDaoDirectiveParameters34363 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleDaoDirectiveParameters34413 = new BitSet(new long[]{0x0000000000010002L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleDaoDirectiveParameters34425 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleDaoDirectiveParameters34445 = new BitSet(new long[]{0x0000000000010002L});
        public static final BitSet FOLLOW_ruleDescendantAssignment_in_entryRuleDescendantAssignment34493 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDescendantAssignment34503 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleDescendantAssignment34551 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_STRING_VALUE_in_ruleDescendantAssignment34571 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleDescendantAssignment34590 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleDescendantAssignment34610 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunProcType_in_entryRuleFunProcType34656 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFunProcType34666 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_174_in_ruleFunProcType34717 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_175_in_ruleFunProcType34746 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_176_in_ruleFunProcType34775 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_177_in_ruleFunProcType34804 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_178_in_ruleFunProcType34833 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDaoDirective_in_entryRuleDaoDirective34880 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDaoDirective34890 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_158_in_ruleDaoDirective34941 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleDaoDirective34952 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleDaoDirective34968 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleDaoDirective34984 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_179_in_ruleDaoDirective35012 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleDaoDirective35023 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDaoDirective35042 = new BitSet(new long[]{0x0000000000010000L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleDaoDirective35054 = new BitSet(new long[]{0x0000004000000080L});
        public static final BitSet FOLLOW_ruleDescendantAssignment_in_ruleDaoDirective35074 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleDaoDirective35087 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_180_in_ruleDaoDirective35115 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleDaoDirective35133 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleDaoDirective35154 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleDaoDirective35165 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_181_in_ruleDaoDirective35195 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleDaoDirective35213 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleDaoDirective35234 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleDaoDirective35245 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunProcType_in_ruleDaoDirective35284 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleDaoDirective35302 = new BitSet(new long[]{0x0000000000000220L});
        public static final BitSet FOLLOW_ruleDaoDirectiveParameters_in_ruleDaoDirective35323 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleDaoDirective35334 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDaoModifier_in_entryRulePojoDaoModifier35376 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoDaoModifier35386 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_152_in_rulePojoDaoModifier35423 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDaoModifier35443 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDao_in_entryRulePojoDao35485 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoDao35495 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDaoDirective_in_rulePojoDao35545 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x007FC00046000000L});
        public static final BitSet FOLLOW_rulePojoEntityModifier1_in_rulePojoDao35567 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0040000006000000L});
        public static final BitSet FOLLOW_182_in_rulePojoDao35580 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDao35597 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_rulePojoDaoModifier_in_rulePojoDao35623 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePojoDao35635 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePojoDao35645 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard35685 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard35696 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard35743 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0080000000000000L});
        public static final BitSet FOLLOW_183_in_ruleQualifiedNameWithWildcard35762 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName35805 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName35816 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleQualifiedName35856 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleQualifiedName35882 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_synpred1_InternalProcessorDsl5070 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred2_InternalProcessorDsl14018 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred3_InternalProcessorDsl17375 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred4_InternalProcessorDsl20198 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred5_InternalProcessorDsl23167 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedColumn_in_synpred6_InternalProcessorDsl24284 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred7_InternalProcessorDsl24407 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred8_InternalProcessorDsl24794 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred9_InternalProcessorDsl25133 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedMappingItem_in_synpred10_InternalProcessorDsl26292 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred11_InternalProcessorDsl26415 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred12_InternalProcessorDsl29529 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred13_InternalProcessorDsl35128 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred14_InternalProcessorDsl35208 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred15_InternalProcessorDsl35297 = new BitSet(new long[]{0x0000000000000002L});
    }


}