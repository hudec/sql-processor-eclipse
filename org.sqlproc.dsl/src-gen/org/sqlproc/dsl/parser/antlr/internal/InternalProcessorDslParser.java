package org.sqlproc.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sqlproc.dsl.services.ProcessorDslGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalProcessorDslParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_WS", "RULE_IDENT", "RULE_LPAREN", "RULE_NUMBER", "RULE_RPAREN", "RULE_PLUS", "RULE_MINUS", "RULE_SEMICOLON", "RULE_COLON", "RULE_REST", "RULE_IDENT_DOT", "RULE_STRING", "RULE_COMMA", "RULE_LBRACE", "RULE_RBRACE", "RULE_QUESTI", "RULE_NOT", "RULE_BAND", "RULE_BOR", "RULE_HASH", "RULE_AT", "RULE_CARET", "RULE_EQUALS", "RULE_LESS_THAN", "RULE_MORE_THAN", "RULE_PERCENT", "RULE_DOT", "RULE_AND", "RULE_OR", "RULE_ESC_CHAR", "RULE_ON_OFF", "RULE_STATEMENT_TYPE", "RULE_MAPPING_TYPE", "RULE_OPTION_TYPE", "RULE_STRING_VALUE", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "'->'", "'resolve-pojo-on'", "'resolve-pojo-off'", "'database-'", "'pojogen-'", "'metagen-'", "'daogen-'", "'replace-all-regex'", "'replace-all-replacement'", "'is-online'", "'is-offline'", "'has-url'", "'login-username'", "'login-password'", "'in-catalog'", "'active-schema'", "'jdbc-driver'", "'ddl-create'", "'ddl-drop'", "'index-types'", "'skip-indexes'", "'skip-functions-procedures'", "'skip-check-constraints'", "'is-of-type'", "'show-database-info'", "'show-driver-info'", "'show-driver-output'", "'debug-level'", "'take-comments'", "'lowercase-names'", "'uppercase-names'", "'types-sqltypes'", "'types-in-table'", "'types-for-columns'", "'types-for-procedure'", "'types-for-function'", "'show-type-for-column'", "'show-type-for-procedure'", "'show-type-for-function'", "'ignore-tables'", "'only-tables'", "'not-abstract-tables'", "'join-tables'", "'ignore-columns'", "'required-columns'", "'not-required-columns'", "'create-columns'", "'rename-tables'", "'rename-columns'", "'ignore-one-to-many'", "'ignore-many-to-one'", "'inherit-many-to-one'", "'create-one-to-many'", "'create-many-to-one'", "'table-many-to-many'", "'inherit-discriminator'", "'generate-methods'", "'generate-operators'", "'implements-interfaces'", "'extends-class'", "'implements-interfaces-generics'", "'extends-class-generics'", "'generate-wrappers'", "'generate-validation-annotations'", "'preserve-foreign-keys'", "'implementation-package'", "'make-it-final'", "'version-column'", "'pojos-for-procedures'", "'pojos-for-functions'", "'active-filter'", "'global-sequence'", "'table-sequence'", "'global-identity'", "'table-identity'", "'column-meta-type'", "'statement-meta-type'", "'like-columns'", "'not-like-columns'", "'generate-sequences'", "'generate-identities'", "'generate-idgenerators'", "'generate-default-idgenerators'", "'function-result'", "'function-result-set'", "'procedure-result-set'", "'optimize-insert'", "'optional-features'", "'pojo'", "'table'", "'procedure'", "'function'", "'_void'", "'_char'", "'_byte'", "'_short'", "'_int'", "'_long'", "'_float'", "'_double'", "'_boolean'", "'[]'", "'package'", "'suffix'", "'import'", "'implements'", "'<<>>'", "'onlyPojos'", "'onlyDaos'", "'exceptPojos'", "'exceptDaos'", "'extends'", "'final'", "'abstract'", "'discriminator'", "'operators'", "'serializable'", "'required'", "'primaryKey'", "'index'", "'optLock'", "'updateCol'", "'createCol'", "'enum'", "'dao'", "'callFunction'", "'callUpdate'", "'callQuery'", "'callQueryFunction'", "'callSelectFunction'", "'.*'"
    };
    public static final int T__159=159;
    public static final int T__158=158;
    public static final int RULE_OR=32;
    public static final int RULE_PERCENT=29;
    public static final int T__160=160;
    public static final int RULE_AND=31;
    public static final int T__167=167;
    public static final int T__168=168;
    public static final int EOF=-1;
    public static final int T__165=165;
    public static final int T__166=166;
    public static final int T__163=163;
    public static final int T__164=164;
    public static final int T__161=161;
    public static final int T__162=162;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int RULE_REST=13;
    public static final int T__148=148;
    public static final int T__147=147;
    public static final int T__90=90;
    public static final int T__149=149;
    public static final int RULE_LPAREN=6;
    public static final int T__154=154;
    public static final int RULE_IDENT_DOT=14;
    public static final int T__155=155;
    public static final int T__156=156;
    public static final int T__157=157;
    public static final int T__99=99;
    public static final int T__150=150;
    public static final int T__98=98;
    public static final int T__151=151;
    public static final int T__97=97;
    public static final int T__152=152;
    public static final int T__96=96;
    public static final int T__153=153;
    public static final int T__95=95;
    public static final int T__139=139;
    public static final int RULE_BAND=21;
    public static final int T__138=138;
    public static final int T__137=137;
    public static final int T__136=136;
    public static final int T__80=80;
    public static final int RULE_RBRACE=18;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_STRING_VALUE=38;
    public static final int RULE_HASH=23;
    public static final int RULE_COMMA=16;
    public static final int T__141=141;
    public static final int T__85=85;
    public static final int RULE_QUESTI=19;
    public static final int T__142=142;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__140=140;
    public static final int T__86=86;
    public static final int T__145=145;
    public static final int T__89=89;
    public static final int T__146=146;
    public static final int T__88=88;
    public static final int RULE_ML_COMMENT=39;
    public static final int T__143=143;
    public static final int T__144=144;
    public static final int RULE_ON_OFF=34;
    public static final int T__126=126;
    public static final int T__125=125;
    public static final int RULE_MINUS=10;
    public static final int T__128=128;
    public static final int RULE_STRING=15;
    public static final int T__127=127;
    public static final int T__71=71;
    public static final int T__129=129;
    public static final int T__72=72;
    public static final int T__70=70;
    public static final int RULE_IDENT=5;
    public static final int RULE_RPAREN=8;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__130=130;
    public static final int T__74=74;
    public static final int T__131=131;
    public static final int T__73=73;
    public static final int T__132=132;
    public static final int T__133=133;
    public static final int T__79=79;
    public static final int RULE_AT=24;
    public static final int T__134=134;
    public static final int T__78=78;
    public static final int T__135=135;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__118=118;
    public static final int RULE_SEMICOLON=11;
    public static final int T__119=119;
    public static final int T__116=116;
    public static final int T__117=117;
    public static final int T__114=114;
    public static final int T__115=115;
    public static final int RULE_OPTION_TYPE=37;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__120=120;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int RULE_NOT=20;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int RULE_DOT=30;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int RULE_NUMBER=7;
    public static final int T__107=107;
    public static final int T__108=108;
    public static final int T__109=109;
    public static final int RULE_STATEMENT_TYPE=35;
    public static final int T__59=59;
    public static final int T__103=103;
    public static final int T__104=104;
    public static final int T__105=105;
    public static final int T__106=106;
    public static final int T__111=111;
    public static final int T__110=110;
    public static final int T__113=113;
    public static final int T__112=112;
    public static final int RULE_LBRACE=17;
    public static final int RULE_BOR=22;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_CARET=25;
    public static final int T__48=48;
    public static final int RULE_MORE_THAN=28;
    public static final int T__49=49;
    public static final int RULE_PLUS=9;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__100=100;
    public static final int RULE_SL_COMMENT=40;
    public static final int RULE_COLON=12;
    public static final int RULE_ESC_CHAR=33;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int RULE_EQUALS=26;
    public static final int RULE_LESS_THAN=27;
    public static final int RULE_WS=4;
    public static final int T__169=169;
    public static final int RULE_MAPPING_TYPE=36;

    // delegates
    // delegators


        public InternalProcessorDslParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalProcessorDslParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalProcessorDslParser.tokenNames; }
    public String getGrammarFileName() { return "//home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g"; }



     	private ProcessorDslGrammarAccess grammarAccess;
     	
        public InternalProcessorDslParser(TokenStream input, ProcessorDslGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "Artifacts";	
       	}
       	
       	@Override
       	protected ProcessorDslGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleArtifacts"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:67:1: entryRuleArtifacts returns [EObject current=null] : iv_ruleArtifacts= ruleArtifacts EOF ;
    public final EObject entryRuleArtifacts() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArtifacts = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:68:2: (iv_ruleArtifacts= ruleArtifacts EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:69:2: iv_ruleArtifacts= ruleArtifacts EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArtifactsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleArtifacts_in_entryRuleArtifacts75);
            iv_ruleArtifacts=ruleArtifacts();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArtifacts; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleArtifacts85); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArtifacts"


    // $ANTLR start "ruleArtifacts"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:76:1: ruleArtifacts returns [EObject current=null] : ( () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )* ) )* ) ;
    public final EObject ruleArtifacts() throws RecognitionException {
        EObject current = null;

        Token this_WS_1=null;
        Token this_WS_3=null;
        Token this_WS_5=null;
        Token this_WS_7=null;
        Token this_WS_9=null;
        Token this_WS_11=null;
        Token this_WS_13=null;
        Token this_WS_15=null;
        Token this_WS_17=null;
        Token this_WS_19=null;
        EObject lv_properties_2_0 = null;

        EObject lv_pojos_4_0 = null;

        EObject lv_tables_6_0 = null;

        EObject lv_procedures_8_0 = null;

        EObject lv_functions_10_0 = null;

        EObject lv_statements_12_0 = null;

        EObject lv_mappings_14_0 = null;

        EObject lv_features_16_0 = null;

        EObject lv_pojoPackages_18_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:79:28: ( ( () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )* ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:80:1: ( () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )* ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:80:1: ( () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )* ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:80:2: () (this_WS_1= RULE_WS )* ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )* ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:80:2: ()
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:81:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArtifactsAccess().getArtifactsAction_0(),
                          current);
                  
            }

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:86:2: (this_WS_1= RULE_WS )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_WS) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:86:3: this_WS_1= RULE_WS
            	    {
            	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts131); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_1, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:3: ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )* ) )*
            loop11:
            do {
                int alt11=10;
                alt11 = dfa11.predict(input);
                switch (alt11) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:4: ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:4: ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:5: ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:90:5: ( (lv_properties_2_0= ruleProperty ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:91:1: (lv_properties_2_0= ruleProperty )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:91:1: (lv_properties_2_0= ruleProperty )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:92:3: lv_properties_2_0= ruleProperty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getPropertiesPropertyParserRuleCall_2_0_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleProperty_in_ruleArtifacts155);
            	    lv_properties_2_0=ruleProperty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"properties",
            	              		lv_properties_2_0, 
            	              		"Property");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:108:2: (this_WS_3= RULE_WS )*
            	    loop2:
            	    do {
            	        int alt2=2;
            	        int LA2_0 = input.LA(1);

            	        if ( (LA2_0==RULE_WS) ) {
            	            alt2=1;
            	        }


            	        switch (alt2) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:108:3: this_WS_3= RULE_WS
            	    	    {
            	    	    this_WS_3=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts167); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_3, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_0_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop2;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:113:6: ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:113:6: ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:113:7: ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:113:7: ( (lv_pojos_4_0= rulePojoDefinition ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:114:1: (lv_pojos_4_0= rulePojoDefinition )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:114:1: (lv_pojos_4_0= rulePojoDefinition )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:115:3: lv_pojos_4_0= rulePojoDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getPojosPojoDefinitionParserRuleCall_2_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_rulePojoDefinition_in_ruleArtifacts197);
            	    lv_pojos_4_0=rulePojoDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pojos",
            	              		lv_pojos_4_0, 
            	              		"PojoDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:131:2: (this_WS_5= RULE_WS )*
            	    loop3:
            	    do {
            	        int alt3=2;
            	        int LA3_0 = input.LA(1);

            	        if ( (LA3_0==RULE_WS) ) {
            	            alt3=1;
            	        }


            	        switch (alt3) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:131:3: this_WS_5= RULE_WS
            	    	    {
            	    	    this_WS_5=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts209); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_5, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_1_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop3;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:136:6: ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:136:6: ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:136:7: ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:136:7: ( (lv_tables_6_0= ruleTableDefinition ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:137:1: (lv_tables_6_0= ruleTableDefinition )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:137:1: (lv_tables_6_0= ruleTableDefinition )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:138:3: lv_tables_6_0= ruleTableDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getTablesTableDefinitionParserRuleCall_2_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleTableDefinition_in_ruleArtifacts239);
            	    lv_tables_6_0=ruleTableDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"tables",
            	              		lv_tables_6_0, 
            	              		"TableDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:154:2: (this_WS_7= RULE_WS )*
            	    loop4:
            	    do {
            	        int alt4=2;
            	        int LA4_0 = input.LA(1);

            	        if ( (LA4_0==RULE_WS) ) {
            	            alt4=1;
            	        }


            	        switch (alt4) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:154:3: this_WS_7= RULE_WS
            	    	    {
            	    	    this_WS_7=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts251); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_7, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_2_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop4;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 4 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:159:6: ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:159:6: ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:159:7: ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:159:7: ( (lv_procedures_8_0= ruleProcedureDefinition ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:160:1: (lv_procedures_8_0= ruleProcedureDefinition )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:160:1: (lv_procedures_8_0= ruleProcedureDefinition )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:161:3: lv_procedures_8_0= ruleProcedureDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getProceduresProcedureDefinitionParserRuleCall_2_3_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleProcedureDefinition_in_ruleArtifacts281);
            	    lv_procedures_8_0=ruleProcedureDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"procedures",
            	              		lv_procedures_8_0, 
            	              		"ProcedureDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:177:2: (this_WS_9= RULE_WS )*
            	    loop5:
            	    do {
            	        int alt5=2;
            	        int LA5_0 = input.LA(1);

            	        if ( (LA5_0==RULE_WS) ) {
            	            alt5=1;
            	        }


            	        switch (alt5) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:177:3: this_WS_9= RULE_WS
            	    	    {
            	    	    this_WS_9=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts293); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_9, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_3_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop5;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 5 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:182:6: ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:182:6: ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:182:7: ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:182:7: ( (lv_functions_10_0= ruleFunctionDefinition ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:183:1: (lv_functions_10_0= ruleFunctionDefinition )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:183:1: (lv_functions_10_0= ruleFunctionDefinition )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:184:3: lv_functions_10_0= ruleFunctionDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getFunctionsFunctionDefinitionParserRuleCall_2_4_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleFunctionDefinition_in_ruleArtifacts323);
            	    lv_functions_10_0=ruleFunctionDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"functions",
            	              		lv_functions_10_0, 
            	              		"FunctionDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:200:2: (this_WS_11= RULE_WS )*
            	    loop6:
            	    do {
            	        int alt6=2;
            	        int LA6_0 = input.LA(1);

            	        if ( (LA6_0==RULE_WS) ) {
            	            alt6=1;
            	        }


            	        switch (alt6) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:200:3: this_WS_11= RULE_WS
            	    	    {
            	    	    this_WS_11=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts335); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_11, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_4_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop6;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 6 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:205:6: ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:205:6: ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:205:7: ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:205:7: ( (lv_statements_12_0= ruleMetaStatement ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:206:1: (lv_statements_12_0= ruleMetaStatement )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:206:1: (lv_statements_12_0= ruleMetaStatement )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:207:3: lv_statements_12_0= ruleMetaStatement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getStatementsMetaStatementParserRuleCall_2_5_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleMetaStatement_in_ruleArtifacts365);
            	    lv_statements_12_0=ruleMetaStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_12_0, 
            	              		"MetaStatement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:223:2: (this_WS_13= RULE_WS )*
            	    loop7:
            	    do {
            	        int alt7=2;
            	        int LA7_0 = input.LA(1);

            	        if ( (LA7_0==RULE_WS) ) {
            	            alt7=1;
            	        }


            	        switch (alt7) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:223:3: this_WS_13= RULE_WS
            	    	    {
            	    	    this_WS_13=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts377); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_13, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_5_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop7;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 7 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:228:6: ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:228:6: ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:228:7: ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:228:7: ( (lv_mappings_14_0= ruleMappingRule ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:229:1: (lv_mappings_14_0= ruleMappingRule )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:229:1: (lv_mappings_14_0= ruleMappingRule )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:230:3: lv_mappings_14_0= ruleMappingRule
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getMappingsMappingRuleParserRuleCall_2_6_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleMappingRule_in_ruleArtifacts407);
            	    lv_mappings_14_0=ruleMappingRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"mappings",
            	              		lv_mappings_14_0, 
            	              		"MappingRule");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:246:2: (this_WS_15= RULE_WS )*
            	    loop8:
            	    do {
            	        int alt8=2;
            	        int LA8_0 = input.LA(1);

            	        if ( (LA8_0==RULE_WS) ) {
            	            alt8=1;
            	        }


            	        switch (alt8) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:246:3: this_WS_15= RULE_WS
            	    	    {
            	    	    this_WS_15=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts419); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_15, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_6_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop8;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 8 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:251:6: ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:251:6: ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:251:7: ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:251:7: ( (lv_features_16_0= ruleOptionalFeature ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:252:1: (lv_features_16_0= ruleOptionalFeature )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:252:1: (lv_features_16_0= ruleOptionalFeature )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:253:3: lv_features_16_0= ruleOptionalFeature
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getFeaturesOptionalFeatureParserRuleCall_2_7_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_ruleOptionalFeature_in_ruleArtifacts449);
            	    lv_features_16_0=ruleOptionalFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"features",
            	              		lv_features_16_0, 
            	              		"OptionalFeature");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:269:2: (this_WS_17= RULE_WS )*
            	    loop9:
            	    do {
            	        int alt9=2;
            	        int LA9_0 = input.LA(1);

            	        if ( (LA9_0==RULE_WS) ) {
            	            alt9=1;
            	        }


            	        switch (alt9) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:269:3: this_WS_17= RULE_WS
            	    	    {
            	    	    this_WS_17=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts461); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_17, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_7_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop9;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 9 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:274:6: ( ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )* )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:274:6: ( ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )* )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:274:7: ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:274:7: ( (lv_pojoPackages_18_0= rulePackageDeclaration ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:275:1: (lv_pojoPackages_18_0= rulePackageDeclaration )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:275:1: (lv_pojoPackages_18_0= rulePackageDeclaration )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:276:3: lv_pojoPackages_18_0= rulePackageDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArtifactsAccess().getPojoPackagesPackageDeclarationParserRuleCall_2_8_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_rulePackageDeclaration_in_ruleArtifacts491);
            	    lv_pojoPackages_18_0=rulePackageDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArtifactsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pojoPackages",
            	              		lv_pojoPackages_18_0, 
            	              		"PackageDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:292:2: (this_WS_19= RULE_WS )*
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==RULE_WS) ) {
            	            alt10=1;
            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:292:3: this_WS_19= RULE_WS
            	    	    {
            	    	    this_WS_19=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleArtifacts503); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_19, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_2_8_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop10;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArtifacts"


    // $ANTLR start "entryRuleDatabaseCatalogAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:304:1: entryRuleDatabaseCatalogAssignement returns [EObject current=null] : iv_ruleDatabaseCatalogAssignement= ruleDatabaseCatalogAssignement EOF ;
    public final EObject entryRuleDatabaseCatalogAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseCatalogAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:305:2: (iv_ruleDatabaseCatalogAssignement= ruleDatabaseCatalogAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:306:2: iv_ruleDatabaseCatalogAssignement= ruleDatabaseCatalogAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseCatalogAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseCatalogAssignement_in_entryRuleDatabaseCatalogAssignement543);
            iv_ruleDatabaseCatalogAssignement=ruleDatabaseCatalogAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseCatalogAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseCatalogAssignement553); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseCatalogAssignement"


    // $ANTLR start "ruleDatabaseCatalogAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:313:1: ruleDatabaseCatalogAssignement returns [EObject current=null] : ( (lv_dbCatalog_0_0= rulePropertyValue ) ) ;
    public final EObject ruleDatabaseCatalogAssignement() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_dbCatalog_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:316:28: ( ( (lv_dbCatalog_0_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:317:1: ( (lv_dbCatalog_0_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:317:1: ( (lv_dbCatalog_0_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:318:1: (lv_dbCatalog_0_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:318:1: (lv_dbCatalog_0_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:319:3: lv_dbCatalog_0_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDatabaseCatalogAssignementAccess().getDbCatalogPropertyValueParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseCatalogAssignement598);
            lv_dbCatalog_0_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDatabaseCatalogAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"dbCatalog",
                      		lv_dbCatalog_0_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseCatalogAssignement"


    // $ANTLR start "entryRuleDatabaseSchemaAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:343:1: entryRuleDatabaseSchemaAssignement returns [EObject current=null] : iv_ruleDatabaseSchemaAssignement= ruleDatabaseSchemaAssignement EOF ;
    public final EObject entryRuleDatabaseSchemaAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseSchemaAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:344:2: (iv_ruleDatabaseSchemaAssignement= ruleDatabaseSchemaAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:345:2: iv_ruleDatabaseSchemaAssignement= ruleDatabaseSchemaAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseSchemaAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseSchemaAssignement_in_entryRuleDatabaseSchemaAssignement633);
            iv_ruleDatabaseSchemaAssignement=ruleDatabaseSchemaAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseSchemaAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseSchemaAssignement643); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseSchemaAssignement"


    // $ANTLR start "ruleDatabaseSchemaAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:352:1: ruleDatabaseSchemaAssignement returns [EObject current=null] : ( (lv_dbSchema_0_0= rulePropertyValue ) ) ;
    public final EObject ruleDatabaseSchemaAssignement() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_dbSchema_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:355:28: ( ( (lv_dbSchema_0_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:356:1: ( (lv_dbSchema_0_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:356:1: ( (lv_dbSchema_0_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:357:1: (lv_dbSchema_0_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:357:1: (lv_dbSchema_0_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:358:3: lv_dbSchema_0_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDatabaseSchemaAssignementAccess().getDbSchemaPropertyValueParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseSchemaAssignement688);
            lv_dbSchema_0_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDatabaseSchemaAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"dbSchema",
                      		lv_dbSchema_0_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseSchemaAssignement"


    // $ANTLR start "entryRuleDatabaseTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:382:1: entryRuleDatabaseTypeAssignement returns [EObject current=null] : iv_ruleDatabaseTypeAssignement= ruleDatabaseTypeAssignement EOF ;
    public final EObject entryRuleDatabaseTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:383:2: (iv_ruleDatabaseTypeAssignement= ruleDatabaseTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:384:2: iv_ruleDatabaseTypeAssignement= ruleDatabaseTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseTypeAssignement_in_entryRuleDatabaseTypeAssignement723);
            iv_ruleDatabaseTypeAssignement=ruleDatabaseTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseTypeAssignement733); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseTypeAssignement"


    // $ANTLR start "ruleDatabaseTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:391:1: ruleDatabaseTypeAssignement returns [EObject current=null] : ( (lv_dbType_0_0= RULE_IDENT ) ) ;
    public final EObject ruleDatabaseTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbType_0_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:394:28: ( ( (lv_dbType_0_0= RULE_IDENT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:395:1: ( (lv_dbType_0_0= RULE_IDENT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:395:1: ( (lv_dbType_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:396:1: (lv_dbType_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:396:1: (lv_dbType_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:397:3: lv_dbType_0_0= RULE_IDENT
            {
            lv_dbType_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleDatabaseTypeAssignement774); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbType_0_0, grammarAccess.getDatabaseTypeAssignementAccess().getDbTypeIDENTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDatabaseTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbType",
                      		lv_dbType_0_0, 
                      		"IDENT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseTypeAssignement"


    // $ANTLR start "entryRuleDatabaseMetaInfoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:421:1: entryRuleDatabaseMetaInfoAssignement returns [EObject current=null] : iv_ruleDatabaseMetaInfoAssignement= ruleDatabaseMetaInfoAssignement EOF ;
    public final EObject entryRuleDatabaseMetaInfoAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseMetaInfoAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:422:2: (iv_ruleDatabaseMetaInfoAssignement= ruleDatabaseMetaInfoAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:423:2: iv_ruleDatabaseMetaInfoAssignement= ruleDatabaseMetaInfoAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseMetaInfoAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseMetaInfoAssignement_in_entryRuleDatabaseMetaInfoAssignement814);
            iv_ruleDatabaseMetaInfoAssignement=ruleDatabaseMetaInfoAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseMetaInfoAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseMetaInfoAssignement824); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseMetaInfoAssignement"


    // $ANTLR start "ruleDatabaseMetaInfoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:430:1: ruleDatabaseMetaInfoAssignement returns [EObject current=null] : ( (lv_dbMetaInfo_0_0= rulePropertyValue ) ) ;
    public final EObject ruleDatabaseMetaInfoAssignement() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_dbMetaInfo_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:433:28: ( ( (lv_dbMetaInfo_0_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:434:1: ( (lv_dbMetaInfo_0_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:434:1: ( (lv_dbMetaInfo_0_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:435:1: (lv_dbMetaInfo_0_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:435:1: (lv_dbMetaInfo_0_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:436:3: lv_dbMetaInfo_0_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDatabaseMetaInfoAssignementAccess().getDbMetaInfoPropertyValueParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseMetaInfoAssignement869);
            lv_dbMetaInfo_0_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDatabaseMetaInfoAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"dbMetaInfo",
                      		lv_dbMetaInfo_0_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseMetaInfoAssignement"


    // $ANTLR start "entryRuleDriverMetaInfoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:460:1: entryRuleDriverMetaInfoAssignement returns [EObject current=null] : iv_ruleDriverMetaInfoAssignement= ruleDriverMetaInfoAssignement EOF ;
    public final EObject entryRuleDriverMetaInfoAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDriverMetaInfoAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:461:2: (iv_ruleDriverMetaInfoAssignement= ruleDriverMetaInfoAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:462:2: iv_ruleDriverMetaInfoAssignement= ruleDriverMetaInfoAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDriverMetaInfoAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDriverMetaInfoAssignement_in_entryRuleDriverMetaInfoAssignement904);
            iv_ruleDriverMetaInfoAssignement=ruleDriverMetaInfoAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDriverMetaInfoAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDriverMetaInfoAssignement914); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDriverMetaInfoAssignement"


    // $ANTLR start "ruleDriverMetaInfoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:469:1: ruleDriverMetaInfoAssignement returns [EObject current=null] : ( (lv_dbDriverInfo_0_0= rulePropertyValue ) ) ;
    public final EObject ruleDriverMetaInfoAssignement() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_dbDriverInfo_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:472:28: ( ( (lv_dbDriverInfo_0_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:473:1: ( (lv_dbDriverInfo_0_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:473:1: ( (lv_dbDriverInfo_0_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:474:1: (lv_dbDriverInfo_0_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:474:1: (lv_dbDriverInfo_0_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:475:3: lv_dbDriverInfo_0_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDriverMetaInfoAssignementAccess().getDbDriverInfoPropertyValueParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDriverMetaInfoAssignement959);
            lv_dbDriverInfo_0_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDriverMetaInfoAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"dbDriverInfo",
                      		lv_dbDriverInfo_0_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDriverMetaInfoAssignement"


    // $ANTLR start "entryRuleDriverMethodOutputAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:499:1: entryRuleDriverMethodOutputAssignement returns [EObject current=null] : iv_ruleDriverMethodOutputAssignement= ruleDriverMethodOutputAssignement EOF ;
    public final EObject entryRuleDriverMethodOutputAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDriverMethodOutputAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:500:2: (iv_ruleDriverMethodOutputAssignement= ruleDriverMethodOutputAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:501:2: iv_ruleDriverMethodOutputAssignement= ruleDriverMethodOutputAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDriverMethodOutputAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDriverMethodOutputAssignement_in_entryRuleDriverMethodOutputAssignement994);
            iv_ruleDriverMethodOutputAssignement=ruleDriverMethodOutputAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDriverMethodOutputAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDriverMethodOutputAssignement1004); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDriverMethodOutputAssignement"


    // $ANTLR start "ruleDriverMethodOutputAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:508:1: ruleDriverMethodOutputAssignement returns [EObject current=null] : ( ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) ) ) ;
    public final EObject ruleDriverMethodOutputAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_driverMethod_0_0=null;
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_callOutput_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:511:28: ( ( ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:512:1: ( ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:512:1: ( ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:512:2: ( (lv_driverMethod_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_callOutput_2_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:512:2: ( (lv_driverMethod_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:513:1: (lv_driverMethod_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:513:1: (lv_driverMethod_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:514:3: lv_driverMethod_0_0= RULE_IDENT
            {
            lv_driverMethod_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleDriverMethodOutputAssignement1046); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_driverMethod_0_0, grammarAccess.getDriverMethodOutputAssignementAccess().getDriverMethodIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDriverMethodOutputAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"driverMethod",
                      		lv_driverMethod_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleDriverMethodOutputAssignement1063); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDriverMethodOutputAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:534:1: ( (lv_callOutput_2_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:535:1: (lv_callOutput_2_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:535:1: (lv_callOutput_2_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:536:3: lv_callOutput_2_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDriverMethodOutputAssignementAccess().getCallOutputPropertyValueParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDriverMethodOutputAssignement1084);
            lv_callOutput_2_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDriverMethodOutputAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"callOutput",
                      		lv_callOutput_2_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDriverMethodOutputAssignement"


    // $ANTLR start "entryRuleSqlTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:560:1: entryRuleSqlTypeAssignement returns [EObject current=null] : iv_ruleSqlTypeAssignement= ruleSqlTypeAssignement EOF ;
    public final EObject entryRuleSqlTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSqlTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:561:2: (iv_ruleSqlTypeAssignement= ruleSqlTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:562:2: iv_ruleSqlTypeAssignement= ruleSqlTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSqlTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleSqlTypeAssignement_in_entryRuleSqlTypeAssignement1120);
            iv_ruleSqlTypeAssignement=ruleSqlTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSqlTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleSqlTypeAssignement1130); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSqlTypeAssignement"


    // $ANTLR start "ruleSqlTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:569:1: ruleSqlTypeAssignement returns [EObject current=null] : ( ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) ) ) ;
    public final EObject ruleSqlTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_typeName_0_0=null;
        Token this_LPAREN_1=null;
        Token lv_size_2_0=null;
        Token this_RPAREN_3=null;
        Token otherlv_4=null;
        EObject lv_type_5_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:572:28: ( ( ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:573:1: ( ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:573:1: ( ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:573:2: ( (lv_typeName_0_0= RULE_IDENT ) ) (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )? otherlv_4= '->' ( (lv_type_5_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:573:2: ( (lv_typeName_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:574:1: (lv_typeName_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:574:1: (lv_typeName_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:575:3: lv_typeName_0_0= RULE_IDENT
            {
            lv_typeName_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleSqlTypeAssignement1172); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_typeName_0_0, grammarAccess.getSqlTypeAssignementAccess().getTypeNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSqlTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"typeName",
                      		lv_typeName_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:591:2: (this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_LPAREN) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:591:3: this_LPAREN_1= RULE_LPAREN ( (lv_size_2_0= RULE_NUMBER ) ) this_RPAREN_3= RULE_RPAREN
                    {
                    this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets000.FOLLOW_RULE_LPAREN_in_ruleSqlTypeAssignement1189); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_1, grammarAccess.getSqlTypeAssignementAccess().getLPARENTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:595:1: ( (lv_size_2_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:596:1: (lv_size_2_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:596:1: (lv_size_2_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:597:3: lv_size_2_0= RULE_NUMBER
                    {
                    lv_size_2_0=(Token)match(input,RULE_NUMBER,FollowSets000.FOLLOW_RULE_NUMBER_in_ruleSqlTypeAssignement1205); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_size_2_0, grammarAccess.getSqlTypeAssignementAccess().getSizeNUMBERTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSqlTypeAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"size",
                              		lv_size_2_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }

                    this_RPAREN_3=(Token)match(input,RULE_RPAREN,FollowSets000.FOLLOW_RULE_RPAREN_in_ruleSqlTypeAssignement1221); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_3, grammarAccess.getSqlTypeAssignementAccess().getRPARENTerminalRuleCall_1_2()); 
                          
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleSqlTypeAssignement1234); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSqlTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_2());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:621:1: ( (lv_type_5_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:622:1: (lv_type_5_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:622:1: (lv_type_5_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:623:3: lv_type_5_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSqlTypeAssignementAccess().getTypePojoTypeParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePojoType_in_ruleSqlTypeAssignement1255);
            lv_type_5_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSqlTypeAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_5_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSqlTypeAssignement"


    // $ANTLR start "entryRuleColumnTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:647:1: entryRuleColumnTypeAssignement returns [EObject current=null] : iv_ruleColumnTypeAssignement= ruleColumnTypeAssignement EOF ;
    public final EObject entryRuleColumnTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColumnTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:648:2: (iv_ruleColumnTypeAssignement= ruleColumnTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:649:2: iv_ruleColumnTypeAssignement= ruleColumnTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getColumnTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_entryRuleColumnTypeAssignement1291);
            iv_ruleColumnTypeAssignement=ruleColumnTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleColumnTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleColumnTypeAssignement1301); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColumnTypeAssignement"


    // $ANTLR start "ruleColumnTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:656:1: ruleColumnTypeAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) ) ) ;
    public final EObject ruleColumnTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        EObject lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:659:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:660:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:660:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:660:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:660:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:661:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:661:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:662:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleColumnTypeAssignement1343); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getColumnTypeAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getColumnTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleColumnTypeAssignement1360); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getColumnTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:682:1: ( (lv_type_2_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:683:1: (lv_type_2_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:683:1: (lv_type_2_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:684:3: lv_type_2_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getColumnTypeAssignementAccess().getTypePojoTypeParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePojoType_in_ruleColumnTypeAssignement1381);
            lv_type_2_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getColumnTypeAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColumnTypeAssignement"


    // $ANTLR start "entryRuleShowColumnTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:708:1: entryRuleShowColumnTypeAssignement returns [EObject current=null] : iv_ruleShowColumnTypeAssignement= ruleShowColumnTypeAssignement EOF ;
    public final EObject entryRuleShowColumnTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShowColumnTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:709:2: (iv_ruleShowColumnTypeAssignement= ruleShowColumnTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:710:2: iv_ruleShowColumnTypeAssignement= ruleShowColumnTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShowColumnTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleShowColumnTypeAssignement_in_entryRuleShowColumnTypeAssignement1417);
            iv_ruleShowColumnTypeAssignement=ruleShowColumnTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShowColumnTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleShowColumnTypeAssignement1427); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShowColumnTypeAssignement"


    // $ANTLR start "ruleShowColumnTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:717:1: ruleShowColumnTypeAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) ) ) ;
    public final EObject ruleShowColumnTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:720:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:721:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:721:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:721:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= rulePropertyValue ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:721:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:722:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:722:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:723:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleShowColumnTypeAssignement1469); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getShowColumnTypeAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getShowColumnTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleShowColumnTypeAssignement1486); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getShowColumnTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:743:1: ( (lv_type_2_0= rulePropertyValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:744:1: (lv_type_2_0= rulePropertyValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:744:1: (lv_type_2_0= rulePropertyValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:745:3: lv_type_2_0= rulePropertyValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getShowColumnTypeAssignementAccess().getTypePropertyValueParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleShowColumnTypeAssignement1507);
            lv_type_2_0=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getShowColumnTypeAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"PropertyValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShowColumnTypeAssignement"


    // $ANTLR start "entryRuleTableAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:769:1: entryRuleTableAssignement returns [EObject current=null] : iv_ruleTableAssignement= ruleTableAssignement EOF ;
    public final EObject entryRuleTableAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:770:2: (iv_ruleTableAssignement= ruleTableAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:771:2: iv_ruleTableAssignement= ruleTableAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleTableAssignement_in_entryRuleTableAssignement1543);
            iv_ruleTableAssignement=ruleTableAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleTableAssignement1553); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableAssignement"


    // $ANTLR start "ruleTableAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:778:1: ruleTableAssignement returns [EObject current=null] : ( ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) ) ;
    public final EObject ruleTableAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbTable_0_0=null;
        Token otherlv_1=null;
        Token lv_newName_2_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:781:28: ( ( ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:782:1: ( ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:782:1: ( ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:782:2: ( (lv_dbTable_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:782:2: ( (lv_dbTable_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:783:1: (lv_dbTable_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:783:1: (lv_dbTable_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:784:3: lv_dbTable_0_0= RULE_IDENT
            {
            lv_dbTable_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleTableAssignement1595); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbTable_0_0, grammarAccess.getTableAssignementAccess().getDbTableIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTableAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbTable",
                      		lv_dbTable_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleTableAssignement1612); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTableAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:804:1: ( (lv_newName_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:805:1: (lv_newName_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:805:1: (lv_newName_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:806:3: lv_newName_2_0= RULE_IDENT
            {
            lv_newName_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleTableAssignement1629); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_newName_2_0, grammarAccess.getTableAssignementAccess().getNewNameIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTableAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"newName",
                      		lv_newName_2_0, 
                      		"IDENT");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableAssignement"


    // $ANTLR start "entryRuleJoinTableAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:830:1: entryRuleJoinTableAssignement returns [EObject current=null] : iv_ruleJoinTableAssignement= ruleJoinTableAssignement EOF ;
    public final EObject entryRuleJoinTableAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJoinTableAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:831:2: (iv_ruleJoinTableAssignement= ruleJoinTableAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:832:2: iv_ruleJoinTableAssignement= ruleJoinTableAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJoinTableAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleJoinTableAssignement_in_entryRuleJoinTableAssignement1670);
            iv_ruleJoinTableAssignement=ruleJoinTableAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJoinTableAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleJoinTableAssignement1680); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJoinTableAssignement"


    // $ANTLR start "ruleJoinTableAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:839:1: ruleJoinTableAssignement returns [EObject current=null] : ( ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) ;
    public final EObject ruleJoinTableAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbTable_0_0=null;
        Token otherlv_1=null;
        Token lv_dbTables_2_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:842:28: ( ( ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:843:1: ( ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:843:1: ( ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:843:2: ( (lv_dbTable_0_0= RULE_IDENT ) ) (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:843:2: ( (lv_dbTable_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:844:1: (lv_dbTable_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:844:1: (lv_dbTable_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:845:3: lv_dbTable_0_0= RULE_IDENT
            {
            lv_dbTable_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleJoinTableAssignement1722); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbTable_0_0, grammarAccess.getJoinTableAssignementAccess().getDbTableIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getJoinTableAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbTable",
                      		lv_dbTable_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:861:2: (otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) ) )+
            int cnt13=0;
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==41) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:861:4: otherlv_1= '->' ( (lv_dbTables_2_0= RULE_IDENT ) )
            	    {
            	    otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleJoinTableAssignement1740); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getJoinTableAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:865:1: ( (lv_dbTables_2_0= RULE_IDENT ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:866:1: (lv_dbTables_2_0= RULE_IDENT )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:866:1: (lv_dbTables_2_0= RULE_IDENT )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:867:3: lv_dbTables_2_0= RULE_IDENT
            	    {
            	    lv_dbTables_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleJoinTableAssignement1757); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_dbTables_2_0, grammarAccess.getJoinTableAssignementAccess().getDbTablesIDENTTerminalRuleCall_1_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getJoinTableAssignementRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"dbTables",
            	              		lv_dbTables_2_0, 
            	              		"IDENT");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt13 >= 1 ) break loop13;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(13, input);
                        throw eee;
                }
                cnt13++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJoinTableAssignement"


    // $ANTLR start "entryRuleColumnAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:891:1: entryRuleColumnAssignement returns [EObject current=null] : iv_ruleColumnAssignement= ruleColumnAssignement EOF ;
    public final EObject entryRuleColumnAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColumnAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:892:2: (iv_ruleColumnAssignement= ruleColumnAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:893:2: iv_ruleColumnAssignement= ruleColumnAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getColumnAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleColumnAssignement_in_entryRuleColumnAssignement1800);
            iv_ruleColumnAssignement=ruleColumnAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleColumnAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleColumnAssignement1810); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColumnAssignement"


    // $ANTLR start "ruleColumnAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:900:1: ruleColumnAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) ) ;
    public final EObject ruleColumnAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_newName_2_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:903:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:904:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:904:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:904:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_newName_2_0= RULE_IDENT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:904:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:905:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:905:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:906:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleColumnAssignement1852); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getColumnAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getColumnAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleColumnAssignement1869); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getColumnAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:926:1: ( (lv_newName_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:927:1: (lv_newName_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:927:1: (lv_newName_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:928:3: lv_newName_2_0= RULE_IDENT
            {
            lv_newName_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleColumnAssignement1886); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_newName_2_0, grammarAccess.getColumnAssignementAccess().getNewNameIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getColumnAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"newName",
                      		lv_newName_2_0, 
                      		"IDENT");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColumnAssignement"


    // $ANTLR start "entryRuleImportAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:952:1: entryRuleImportAssignement returns [EObject current=null] : iv_ruleImportAssignement= ruleImportAssignement EOF ;
    public final EObject entryRuleImportAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:953:2: (iv_ruleImportAssignement= ruleImportAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:954:2: iv_ruleImportAssignement= ruleImportAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleImportAssignement_in_entryRuleImportAssignement1927);
            iv_ruleImportAssignement=ruleImportAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleImportAssignement1937); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportAssignement"


    // $ANTLR start "ruleImportAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:961:1: ruleImportAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )? ) ;
    public final EObject ruleImportAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_pkTable_2_0=null;
        Token otherlv_3=null;
        Token lv_pkColumn_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:964:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:965:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:965:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:965:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:965:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:966:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:966:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:967:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImportAssignement1979); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getImportAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getImportAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleImportAssignement1996); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getImportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:987:1: ( (lv_pkTable_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:988:1: (lv_pkTable_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:988:1: (lv_pkTable_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:989:3: lv_pkTable_2_0= RULE_IDENT
            {
            lv_pkTable_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImportAssignement2013); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_pkTable_2_0, grammarAccess.getImportAssignementAccess().getPkTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getImportAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"pkTable",
                      		lv_pkTable_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1005:2: (otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==41) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1005:4: otherlv_3= '->' ( (lv_pkColumn_4_0= RULE_IDENT ) )
                    {
                    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleImportAssignement2031); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getImportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1009:1: ( (lv_pkColumn_4_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1010:1: (lv_pkColumn_4_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1010:1: (lv_pkColumn_4_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1011:3: lv_pkColumn_4_0= RULE_IDENT
                    {
                    lv_pkColumn_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImportAssignement2048); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_pkColumn_4_0, grammarAccess.getImportAssignementAccess().getPkColumnIDENTTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImportAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"pkColumn",
                              		lv_pkColumn_4_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportAssignement"


    // $ANTLR start "entryRuleExportAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1035:1: entryRuleExportAssignement returns [EObject current=null] : iv_ruleExportAssignement= ruleExportAssignement EOF ;
    public final EObject entryRuleExportAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1036:2: (iv_ruleExportAssignement= ruleExportAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1037:2: iv_ruleExportAssignement= ruleExportAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleExportAssignement_in_entryRuleExportAssignement2091);
            iv_ruleExportAssignement=ruleExportAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleExportAssignement2101); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExportAssignement"


    // $ANTLR start "ruleExportAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1044:1: ruleExportAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? ) ;
    public final EObject ruleExportAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_fkTable_2_0=null;
        Token otherlv_3=null;
        Token lv_fkColumn_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1047:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1048:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1048:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1048:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_fkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1048:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1049:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1049:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1050:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExportAssignement2143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getExportAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getExportAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleExportAssignement2160); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1070:1: ( (lv_fkTable_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1071:1: (lv_fkTable_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1071:1: (lv_fkTable_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1072:3: lv_fkTable_2_0= RULE_IDENT
            {
            lv_fkTable_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExportAssignement2177); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_fkTable_2_0, grammarAccess.getExportAssignementAccess().getFkTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getExportAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"fkTable",
                      		lv_fkTable_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1088:2: (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==41) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1088:4: otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) )
                    {
                    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleExportAssignement2195); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getExportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1092:1: ( (lv_fkColumn_4_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1093:1: (lv_fkColumn_4_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1093:1: (lv_fkColumn_4_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1094:3: lv_fkColumn_4_0= RULE_IDENT
                    {
                    lv_fkColumn_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExportAssignement2212); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_fkColumn_4_0, grammarAccess.getExportAssignementAccess().getFkColumnIDENTTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExportAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"fkColumn",
                              		lv_fkColumn_4_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExportAssignement"


    // $ANTLR start "entryRuleInheritanceAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1118:1: entryRuleInheritanceAssignement returns [EObject current=null] : iv_ruleInheritanceAssignement= ruleInheritanceAssignement EOF ;
    public final EObject entryRuleInheritanceAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInheritanceAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1119:2: (iv_ruleInheritanceAssignement= ruleInheritanceAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1120:2: iv_ruleInheritanceAssignement= ruleInheritanceAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInheritanceAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleInheritanceAssignement_in_entryRuleInheritanceAssignement2255);
            iv_ruleInheritanceAssignement=ruleInheritanceAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInheritanceAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleInheritanceAssignement2265); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInheritanceAssignement"


    // $ANTLR start "ruleInheritanceAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1127:1: ruleInheritanceAssignement returns [EObject current=null] : ( ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+ ) ;
    public final EObject ruleInheritanceAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_discriminator_0_0=null;
        Token otherlv_1=null;
        Token lv_dbTable_2_0=null;
        Token otherlv_3=null;
        Token lv_dbColumns_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1130:28: ( ( ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+ ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1131:1: ( ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+ )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1131:1: ( ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1131:2: ( (lv_discriminator_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_dbTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1131:2: ( (lv_discriminator_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1132:1: (lv_discriminator_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1132:1: (lv_discriminator_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1133:3: lv_discriminator_0_0= RULE_IDENT
            {
            lv_discriminator_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2307); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_discriminator_0_0, grammarAccess.getInheritanceAssignementAccess().getDiscriminatorIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getInheritanceAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"discriminator",
                      		lv_discriminator_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleInheritanceAssignement2324); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInheritanceAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1153:1: ( (lv_dbTable_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1154:1: (lv_dbTable_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1154:1: (lv_dbTable_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1155:3: lv_dbTable_2_0= RULE_IDENT
            {
            lv_dbTable_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2341); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbTable_2_0, grammarAccess.getInheritanceAssignementAccess().getDbTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getInheritanceAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbTable",
                      		lv_dbTable_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1171:2: (otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) ) )+
            int cnt16=0;
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==41) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1171:4: otherlv_3= '->' ( (lv_dbColumns_4_0= RULE_IDENT ) )
            	    {
            	    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleInheritanceAssignement2359); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getInheritanceAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1175:1: ( (lv_dbColumns_4_0= RULE_IDENT ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1176:1: (lv_dbColumns_4_0= RULE_IDENT )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1176:1: (lv_dbColumns_4_0= RULE_IDENT )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1177:3: lv_dbColumns_4_0= RULE_IDENT
            	    {
            	    lv_dbColumns_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2376); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_dbColumns_4_0, grammarAccess.getInheritanceAssignementAccess().getDbColumnsIDENTTerminalRuleCall_3_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getInheritanceAssignementRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"dbColumns",
            	              		lv_dbColumns_4_0, 
            	              		"IDENT");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt16 >= 1 ) break loop16;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(16, input);
                        throw eee;
                }
                cnt16++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInheritanceAssignement"


    // $ANTLR start "entryRuleManyToManyAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1201:1: entryRuleManyToManyAssignement returns [EObject current=null] : iv_ruleManyToManyAssignement= ruleManyToManyAssignement EOF ;
    public final EObject entryRuleManyToManyAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleManyToManyAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1202:2: (iv_ruleManyToManyAssignement= ruleManyToManyAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1203:2: iv_ruleManyToManyAssignement= ruleManyToManyAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getManyToManyAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleManyToManyAssignement_in_entryRuleManyToManyAssignement2419);
            iv_ruleManyToManyAssignement=ruleManyToManyAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleManyToManyAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleManyToManyAssignement2429); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleManyToManyAssignement"


    // $ANTLR start "ruleManyToManyAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1210:1: ruleManyToManyAssignement returns [EObject current=null] : ( ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? ) ;
    public final EObject ruleManyToManyAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_pkColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_pkTable_2_0=null;
        Token otherlv_3=null;
        Token lv_fkColumn_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1213:28: ( ( ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1214:1: ( ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1214:1: ( ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1214:2: ( (lv_pkColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pkTable_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1214:2: ( (lv_pkColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1215:1: (lv_pkColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1215:1: (lv_pkColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1216:3: lv_pkColumn_0_0= RULE_IDENT
            {
            lv_pkColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2471); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_pkColumn_0_0, grammarAccess.getManyToManyAssignementAccess().getPkColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getManyToManyAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"pkColumn",
                      		lv_pkColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleManyToManyAssignement2488); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getManyToManyAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1236:1: ( (lv_pkTable_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1237:1: (lv_pkTable_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1237:1: (lv_pkTable_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1238:3: lv_pkTable_2_0= RULE_IDENT
            {
            lv_pkTable_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2505); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_pkTable_2_0, grammarAccess.getManyToManyAssignementAccess().getPkTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getManyToManyAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"pkTable",
                      		lv_pkTable_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1254:2: (otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==41) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1254:4: otherlv_3= '->' ( (lv_fkColumn_4_0= RULE_IDENT ) )
                    {
                    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleManyToManyAssignement2523); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getManyToManyAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1258:1: ( (lv_fkColumn_4_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1259:1: (lv_fkColumn_4_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1259:1: (lv_fkColumn_4_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1260:3: lv_fkColumn_4_0= RULE_IDENT
                    {
                    lv_fkColumn_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2540); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_fkColumn_4_0, grammarAccess.getManyToManyAssignementAccess().getFkColumnIDENTTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getManyToManyAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"fkColumn",
                              		lv_fkColumn_4_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleManyToManyAssignement"


    // $ANTLR start "entryRuleDebugLevelAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1284:1: entryRuleDebugLevelAssignement returns [EObject current=null] : iv_ruleDebugLevelAssignement= ruleDebugLevelAssignement EOF ;
    public final EObject entryRuleDebugLevelAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDebugLevelAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1285:2: (iv_ruleDebugLevelAssignement= ruleDebugLevelAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1286:2: iv_ruleDebugLevelAssignement= ruleDebugLevelAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDebugLevelAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDebugLevelAssignement_in_entryRuleDebugLevelAssignement2583);
            iv_ruleDebugLevelAssignement=ruleDebugLevelAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDebugLevelAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDebugLevelAssignement2593); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDebugLevelAssignement"


    // $ANTLR start "ruleDebugLevelAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1293:1: ruleDebugLevelAssignement returns [EObject current=null] : ( ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )? ) ;
    public final EObject ruleDebugLevelAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_debug_0_0=null;
        Token this_WS_1=null;
        AntlrDatatypeRuleToken lv_scope_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1296:28: ( ( ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1297:1: ( ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1297:1: ( ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1297:2: ( (lv_debug_0_0= RULE_IDENT ) ) ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1297:2: ( (lv_debug_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1298:1: (lv_debug_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1298:1: (lv_debug_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1299:3: lv_debug_0_0= RULE_IDENT
            {
            lv_debug_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleDebugLevelAssignement2635); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_debug_0_0, grammarAccess.getDebugLevelAssignementAccess().getDebugIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDebugLevelAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"debug",
                      		lv_debug_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1315:2: ( (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_WS) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1315:3: (this_WS_1= RULE_WS )+ ( (lv_scope_2_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1315:3: (this_WS_1= RULE_WS )+
                    int cnt18=0;
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==RULE_WS) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1315:4: this_WS_1= RULE_WS
                    	    {
                    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDebugLevelAssignement2653); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_1, grammarAccess.getDebugLevelAssignementAccess().getWSTerminalRuleCall_1_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt18 >= 1 ) break loop18;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(18, input);
                                throw eee;
                        }
                        cnt18++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1319:3: ( (lv_scope_2_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1320:1: (lv_scope_2_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1320:1: (lv_scope_2_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1321:3: lv_scope_2_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDebugLevelAssignementAccess().getScopePropertyValueParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDebugLevelAssignement2675);
                    lv_scope_2_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDebugLevelAssignementRule());
                      	        }
                             		set(
                             			current, 
                             			"scope",
                              		lv_scope_2_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDebugLevelAssignement"


    // $ANTLR start "entryRuleProcedurePojoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1345:1: entryRuleProcedurePojoAssignement returns [EObject current=null] : iv_ruleProcedurePojoAssignement= ruleProcedurePojoAssignement EOF ;
    public final EObject entryRuleProcedurePojoAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcedurePojoAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1346:2: (iv_ruleProcedurePojoAssignement= ruleProcedurePojoAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1347:2: iv_ruleProcedurePojoAssignement= ruleProcedurePojoAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcedurePojoAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleProcedurePojoAssignement_in_entryRuleProcedurePojoAssignement2713);
            iv_ruleProcedurePojoAssignement=ruleProcedurePojoAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcedurePojoAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleProcedurePojoAssignement2723); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcedurePojoAssignement"


    // $ANTLR start "ruleProcedurePojoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1354:1: ruleProcedurePojoAssignement returns [EObject current=null] : ( ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) ) ;
    public final EObject ruleProcedurePojoAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbProcedure_0_0=null;
        Token otherlv_1=null;
        EObject lv_pojo_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1357:28: ( ( ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1358:1: ( ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1358:1: ( ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1358:2: ( (lv_dbProcedure_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1358:2: ( (lv_dbProcedure_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1359:1: (lv_dbProcedure_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1359:1: (lv_dbProcedure_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1360:3: lv_dbProcedure_0_0= RULE_IDENT
            {
            lv_dbProcedure_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleProcedurePojoAssignement2765); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbProcedure_0_0, grammarAccess.getProcedurePojoAssignementAccess().getDbProcedureIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getProcedurePojoAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbProcedure",
                      		lv_dbProcedure_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleProcedurePojoAssignement2782); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getProcedurePojoAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1380:1: ( (lv_pojo_2_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1381:1: (lv_pojo_2_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1381:1: (lv_pojo_2_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1382:3: lv_pojo_2_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProcedurePojoAssignementAccess().getPojoPojoTypeParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePojoType_in_ruleProcedurePojoAssignement2803);
            lv_pojo_2_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProcedurePojoAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"pojo",
                      		lv_pojo_2_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcedurePojoAssignement"


    // $ANTLR start "entryRuleFunctionPojoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1406:1: entryRuleFunctionPojoAssignement returns [EObject current=null] : iv_ruleFunctionPojoAssignement= ruleFunctionPojoAssignement EOF ;
    public final EObject entryRuleFunctionPojoAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionPojoAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1407:2: (iv_ruleFunctionPojoAssignement= ruleFunctionPojoAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1408:2: iv_ruleFunctionPojoAssignement= ruleFunctionPojoAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionPojoAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleFunctionPojoAssignement_in_entryRuleFunctionPojoAssignement2839);
            iv_ruleFunctionPojoAssignement=ruleFunctionPojoAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionPojoAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleFunctionPojoAssignement2849); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionPojoAssignement"


    // $ANTLR start "ruleFunctionPojoAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1415:1: ruleFunctionPojoAssignement returns [EObject current=null] : ( ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) ) ;
    public final EObject ruleFunctionPojoAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbFunction_0_0=null;
        Token otherlv_1=null;
        EObject lv_pojo_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1418:28: ( ( ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1419:1: ( ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1419:1: ( ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1419:2: ( (lv_dbFunction_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_pojo_2_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1419:2: ( (lv_dbFunction_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1420:1: (lv_dbFunction_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1420:1: (lv_dbFunction_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1421:3: lv_dbFunction_0_0= RULE_IDENT
            {
            lv_dbFunction_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleFunctionPojoAssignement2891); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbFunction_0_0, grammarAccess.getFunctionPojoAssignementAccess().getDbFunctionIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFunctionPojoAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbFunction",
                      		lv_dbFunction_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleFunctionPojoAssignement2908); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFunctionPojoAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1441:1: ( (lv_pojo_2_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1442:1: (lv_pojo_2_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1442:1: (lv_pojo_2_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1443:3: lv_pojo_2_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionPojoAssignementAccess().getPojoPojoTypeParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_rulePojoType_in_ruleFunctionPojoAssignement2929);
            lv_pojo_2_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionPojoAssignementRule());
              	        }
                     		set(
                     			current, 
                     			"pojo",
                      		lv_pojo_2_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionPojoAssignement"


    // $ANTLR start "entryRuleImplementsAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1467:1: entryRuleImplementsAssignement returns [EObject current=null] : iv_ruleImplementsAssignement= ruleImplementsAssignement EOF ;
    public final EObject entryRuleImplementsAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplementsAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1468:2: (iv_ruleImplementsAssignement= ruleImplementsAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1469:2: iv_ruleImplementsAssignement= ruleImplementsAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplementsAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleImplementsAssignement_in_entryRuleImplementsAssignement2965);
            iv_ruleImplementsAssignement=ruleImplementsAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplementsAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleImplementsAssignement2975); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplementsAssignement"


    // $ANTLR start "ruleImplementsAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1476:1: ruleImplementsAssignement returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? ) ;
    public final EObject ruleImplementsAssignement() throws RecognitionException {
        EObject current = null;

        Token this_WS_1=null;
        Token this_PLUS_2=null;
        Token this_WS_3=null;
        Token lv_dbTables_4_0=null;
        Token this_WS_5=null;
        Token this_MINUS_6=null;
        Token this_WS_7=null;
        Token lv_dbNotTables_8_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1479:28: ( ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1480:1: ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1480:1: ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1480:2: ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1480:2: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1481:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1481:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1482:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getImplementsAssignementRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImplementsAssignementAccess().getToImplementJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleImplementsAssignement3023);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1495:2: ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )?
            int alt23=2;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1495:3: (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1495:3: (this_WS_1= RULE_WS )+
                    int cnt20=0;
                    loop20:
                    do {
                        int alt20=2;
                        int LA20_0 = input.LA(1);

                        if ( (LA20_0==RULE_WS) ) {
                            alt20=1;
                        }


                        switch (alt20) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1495:4: this_WS_1= RULE_WS
                    	    {
                    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignement3036); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_1, grammarAccess.getImplementsAssignementAccess().getWSTerminalRuleCall_1_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt20 >= 1 ) break loop20;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(20, input);
                                throw eee;
                        }
                        cnt20++;
                    } while (true);

                    this_PLUS_2=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleImplementsAssignement3048); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_2, grammarAccess.getImplementsAssignementAccess().getPLUSTerminalRuleCall_1_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1503:1: ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+
                    int cnt22=0;
                    loop22:
                    do {
                        int alt22=2;
                        alt22 = dfa22.predict(input);
                        switch (alt22) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1503:2: (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1503:2: (this_WS_3= RULE_WS )+
                    	    int cnt21=0;
                    	    loop21:
                    	    do {
                    	        int alt21=2;
                    	        int LA21_0 = input.LA(1);

                    	        if ( (LA21_0==RULE_WS) ) {
                    	            alt21=1;
                    	        }


                    	        switch (alt21) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1503:3: this_WS_3= RULE_WS
                    	    	    {
                    	    	    this_WS_3=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignement3060); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_3, grammarAccess.getImplementsAssignementAccess().getWSTerminalRuleCall_1_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt21 >= 1 ) break loop21;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(21, input);
                    	                throw eee;
                    	        }
                    	        cnt21++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1507:3: ( (lv_dbTables_4_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1508:1: (lv_dbTables_4_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1508:1: (lv_dbTables_4_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1509:3: lv_dbTables_4_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImplementsAssignement3078); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_4_0, grammarAccess.getImplementsAssignementAccess().getDbTablesIDENTTerminalRuleCall_1_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsAssignementRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_4_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt22 >= 1 ) break loop22;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(22, input);
                                throw eee;
                        }
                        cnt22++;
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1525:6: ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_WS) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1525:7: (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1525:7: (this_WS_5= RULE_WS )+
                    int cnt24=0;
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==RULE_WS) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1525:8: this_WS_5= RULE_WS
                    	    {
                    	    this_WS_5=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignement3100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_5, grammarAccess.getImplementsAssignementAccess().getWSTerminalRuleCall_2_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt24 >= 1 ) break loop24;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(24, input);
                                throw eee;
                        }
                        cnt24++;
                    } while (true);

                    this_MINUS_6=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleImplementsAssignement3112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_6, grammarAccess.getImplementsAssignementAccess().getMINUSTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1533:1: ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+
                    int cnt26=0;
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( (LA26_0==RULE_WS) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1533:2: (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1533:2: (this_WS_7= RULE_WS )+
                    	    int cnt25=0;
                    	    loop25:
                    	    do {
                    	        int alt25=2;
                    	        int LA25_0 = input.LA(1);

                    	        if ( (LA25_0==RULE_WS) ) {
                    	            alt25=1;
                    	        }


                    	        switch (alt25) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1533:3: this_WS_7= RULE_WS
                    	    	    {
                    	    	    this_WS_7=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignement3124); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_7, grammarAccess.getImplementsAssignementAccess().getWSTerminalRuleCall_2_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt25 >= 1 ) break loop25;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(25, input);
                    	                throw eee;
                    	        }
                    	        cnt25++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1537:3: ( (lv_dbNotTables_8_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1538:1: (lv_dbNotTables_8_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1538:1: (lv_dbNotTables_8_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1539:3: lv_dbNotTables_8_0= RULE_IDENT
                    	    {
                    	    lv_dbNotTables_8_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImplementsAssignement3142); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbNotTables_8_0, grammarAccess.getImplementsAssignementAccess().getDbNotTablesIDENTTerminalRuleCall_2_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsAssignementRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbNotTables",
                    	              		lv_dbNotTables_8_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt26 >= 1 ) break loop26;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(26, input);
                                throw eee;
                        }
                        cnt26++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplementsAssignement"


    // $ANTLR start "entryRuleExtendsAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1563:1: entryRuleExtendsAssignement returns [EObject current=null] : iv_ruleExtendsAssignement= ruleExtendsAssignement EOF ;
    public final EObject entryRuleExtendsAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendsAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1564:2: (iv_ruleExtendsAssignement= ruleExtendsAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1565:2: iv_ruleExtendsAssignement= ruleExtendsAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendsAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleExtendsAssignement_in_entryRuleExtendsAssignement3187);
            iv_ruleExtendsAssignement=ruleExtendsAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendsAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleExtendsAssignement3197); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendsAssignement"


    // $ANTLR start "ruleExtendsAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1572:1: ruleExtendsAssignement returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? ) ;
    public final EObject ruleExtendsAssignement() throws RecognitionException {
        EObject current = null;

        Token this_WS_1=null;
        Token this_PLUS_2=null;
        Token this_WS_3=null;
        Token lv_dbTables_4_0=null;
        Token this_WS_5=null;
        Token this_MINUS_6=null;
        Token this_WS_7=null;
        Token lv_dbNotTables_8_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1575:28: ( ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1576:1: ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1576:1: ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1576:2: ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1576:2: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1577:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1577:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1578:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExtendsAssignementRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendsAssignementAccess().getToExtendsJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleExtendsAssignement3245);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1591:2: ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )?
            int alt31=2;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1591:3: (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1591:3: (this_WS_1= RULE_WS )+
                    int cnt28=0;
                    loop28:
                    do {
                        int alt28=2;
                        int LA28_0 = input.LA(1);

                        if ( (LA28_0==RULE_WS) ) {
                            alt28=1;
                        }


                        switch (alt28) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1591:4: this_WS_1= RULE_WS
                    	    {
                    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignement3258); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_1, grammarAccess.getExtendsAssignementAccess().getWSTerminalRuleCall_1_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt28 >= 1 ) break loop28;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(28, input);
                                throw eee;
                        }
                        cnt28++;
                    } while (true);

                    this_PLUS_2=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleExtendsAssignement3270); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_2, grammarAccess.getExtendsAssignementAccess().getPLUSTerminalRuleCall_1_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1599:1: ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+
                    int cnt30=0;
                    loop30:
                    do {
                        int alt30=2;
                        alt30 = dfa30.predict(input);
                        switch (alt30) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1599:2: (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1599:2: (this_WS_3= RULE_WS )+
                    	    int cnt29=0;
                    	    loop29:
                    	    do {
                    	        int alt29=2;
                    	        int LA29_0 = input.LA(1);

                    	        if ( (LA29_0==RULE_WS) ) {
                    	            alt29=1;
                    	        }


                    	        switch (alt29) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1599:3: this_WS_3= RULE_WS
                    	    	    {
                    	    	    this_WS_3=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignement3282); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_3, grammarAccess.getExtendsAssignementAccess().getWSTerminalRuleCall_1_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt29 >= 1 ) break loop29;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(29, input);
                    	                throw eee;
                    	        }
                    	        cnt29++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1603:3: ( (lv_dbTables_4_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1604:1: (lv_dbTables_4_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1604:1: (lv_dbTables_4_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1605:3: lv_dbTables_4_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExtendsAssignement3300); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_4_0, grammarAccess.getExtendsAssignementAccess().getDbTablesIDENTTerminalRuleCall_1_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsAssignementRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_4_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt30 >= 1 ) break loop30;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(30, input);
                                throw eee;
                        }
                        cnt30++;
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1621:6: ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_WS) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1621:7: (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1621:7: (this_WS_5= RULE_WS )+
                    int cnt32=0;
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==RULE_WS) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1621:8: this_WS_5= RULE_WS
                    	    {
                    	    this_WS_5=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignement3322); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_5, grammarAccess.getExtendsAssignementAccess().getWSTerminalRuleCall_2_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt32 >= 1 ) break loop32;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(32, input);
                                throw eee;
                        }
                        cnt32++;
                    } while (true);

                    this_MINUS_6=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleExtendsAssignement3334); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_6, grammarAccess.getExtendsAssignementAccess().getMINUSTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1629:1: ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+
                    int cnt34=0;
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==RULE_WS) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1629:2: (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1629:2: (this_WS_7= RULE_WS )+
                    	    int cnt33=0;
                    	    loop33:
                    	    do {
                    	        int alt33=2;
                    	        int LA33_0 = input.LA(1);

                    	        if ( (LA33_0==RULE_WS) ) {
                    	            alt33=1;
                    	        }


                    	        switch (alt33) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1629:3: this_WS_7= RULE_WS
                    	    	    {
                    	    	    this_WS_7=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignement3346); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_7, grammarAccess.getExtendsAssignementAccess().getWSTerminalRuleCall_2_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt33 >= 1 ) break loop33;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(33, input);
                    	                throw eee;
                    	        }
                    	        cnt33++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1633:3: ( (lv_dbNotTables_8_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1634:1: (lv_dbNotTables_8_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1634:1: (lv_dbNotTables_8_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1635:3: lv_dbNotTables_8_0= RULE_IDENT
                    	    {
                    	    lv_dbNotTables_8_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExtendsAssignement3364); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbNotTables_8_0, grammarAccess.getExtendsAssignementAccess().getDbNotTablesIDENTTerminalRuleCall_2_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsAssignementRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbNotTables",
                    	              		lv_dbNotTables_8_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt34 >= 1 ) break loop34;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(34, input);
                                throw eee;
                        }
                        cnt34++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendsAssignement"


    // $ANTLR start "entryRuleImplementsAssignementGenerics"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1659:1: entryRuleImplementsAssignementGenerics returns [EObject current=null] : iv_ruleImplementsAssignementGenerics= ruleImplementsAssignementGenerics EOF ;
    public final EObject entryRuleImplementsAssignementGenerics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplementsAssignementGenerics = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1660:2: (iv_ruleImplementsAssignementGenerics= ruleImplementsAssignementGenerics EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1661:2: iv_ruleImplementsAssignementGenerics= ruleImplementsAssignementGenerics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplementsAssignementGenericsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleImplementsAssignementGenerics_in_entryRuleImplementsAssignementGenerics3409);
            iv_ruleImplementsAssignementGenerics=ruleImplementsAssignementGenerics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplementsAssignementGenerics; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleImplementsAssignementGenerics3419); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplementsAssignementGenerics"


    // $ANTLR start "ruleImplementsAssignementGenerics"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1668:1: ruleImplementsAssignementGenerics returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? ) ;
    public final EObject ruleImplementsAssignementGenerics() throws RecognitionException {
        EObject current = null;

        Token this_WS_1=null;
        Token this_PLUS_2=null;
        Token this_WS_3=null;
        Token lv_dbTables_4_0=null;
        Token this_WS_5=null;
        Token this_MINUS_6=null;
        Token this_WS_7=null;
        Token lv_dbNotTables_8_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1671:28: ( ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1672:1: ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1672:1: ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1672:2: ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1672:2: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1673:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1673:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1674:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getImplementsAssignementGenericsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImplementsAssignementGenericsAccess().getToImplementJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleImplementsAssignementGenerics3467);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1687:2: ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )?
            int alt39=2;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1687:3: (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1687:3: (this_WS_1= RULE_WS )+
                    int cnt36=0;
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==RULE_WS) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1687:4: this_WS_1= RULE_WS
                    	    {
                    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3480); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_1, grammarAccess.getImplementsAssignementGenericsAccess().getWSTerminalRuleCall_1_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt36 >= 1 ) break loop36;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(36, input);
                                throw eee;
                        }
                        cnt36++;
                    } while (true);

                    this_PLUS_2=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleImplementsAssignementGenerics3492); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_2, grammarAccess.getImplementsAssignementGenericsAccess().getPLUSTerminalRuleCall_1_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1695:1: ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+
                    int cnt38=0;
                    loop38:
                    do {
                        int alt38=2;
                        alt38 = dfa38.predict(input);
                        switch (alt38) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1695:2: (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1695:2: (this_WS_3= RULE_WS )+
                    	    int cnt37=0;
                    	    loop37:
                    	    do {
                    	        int alt37=2;
                    	        int LA37_0 = input.LA(1);

                    	        if ( (LA37_0==RULE_WS) ) {
                    	            alt37=1;
                    	        }


                    	        switch (alt37) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1695:3: this_WS_3= RULE_WS
                    	    	    {
                    	    	    this_WS_3=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3504); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_3, grammarAccess.getImplementsAssignementGenericsAccess().getWSTerminalRuleCall_1_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt37 >= 1 ) break loop37;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(37, input);
                    	                throw eee;
                    	        }
                    	        cnt37++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1699:3: ( (lv_dbTables_4_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1700:1: (lv_dbTables_4_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1700:1: (lv_dbTables_4_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1701:3: lv_dbTables_4_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImplementsAssignementGenerics3522); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_4_0, grammarAccess.getImplementsAssignementGenericsAccess().getDbTablesIDENTTerminalRuleCall_1_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsAssignementGenericsRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_4_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt38 >= 1 ) break loop38;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(38, input);
                                throw eee;
                        }
                        cnt38++;
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1717:6: ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_WS) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1717:7: (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1717:7: (this_WS_5= RULE_WS )+
                    int cnt40=0;
                    loop40:
                    do {
                        int alt40=2;
                        int LA40_0 = input.LA(1);

                        if ( (LA40_0==RULE_WS) ) {
                            alt40=1;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1717:8: this_WS_5= RULE_WS
                    	    {
                    	    this_WS_5=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3544); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_5, grammarAccess.getImplementsAssignementGenericsAccess().getWSTerminalRuleCall_2_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt40 >= 1 ) break loop40;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(40, input);
                                throw eee;
                        }
                        cnt40++;
                    } while (true);

                    this_MINUS_6=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleImplementsAssignementGenerics3556); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_6, grammarAccess.getImplementsAssignementGenericsAccess().getMINUSTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1725:1: ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+
                    int cnt42=0;
                    loop42:
                    do {
                        int alt42=2;
                        int LA42_0 = input.LA(1);

                        if ( (LA42_0==RULE_WS) ) {
                            alt42=1;
                        }


                        switch (alt42) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1725:2: (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1725:2: (this_WS_7= RULE_WS )+
                    	    int cnt41=0;
                    	    loop41:
                    	    do {
                    	        int alt41=2;
                    	        int LA41_0 = input.LA(1);

                    	        if ( (LA41_0==RULE_WS) ) {
                    	            alt41=1;
                    	        }


                    	        switch (alt41) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1725:3: this_WS_7= RULE_WS
                    	    	    {
                    	    	    this_WS_7=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3568); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_7, grammarAccess.getImplementsAssignementGenericsAccess().getWSTerminalRuleCall_2_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt41 >= 1 ) break loop41;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(41, input);
                    	                throw eee;
                    	        }
                    	        cnt41++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1729:3: ( (lv_dbNotTables_8_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1730:1: (lv_dbNotTables_8_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1730:1: (lv_dbNotTables_8_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1731:3: lv_dbNotTables_8_0= RULE_IDENT
                    	    {
                    	    lv_dbNotTables_8_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleImplementsAssignementGenerics3586); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbNotTables_8_0, grammarAccess.getImplementsAssignementGenericsAccess().getDbNotTablesIDENTTerminalRuleCall_2_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsAssignementGenericsRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbNotTables",
                    	              		lv_dbNotTables_8_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt42 >= 1 ) break loop42;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(42, input);
                                throw eee;
                        }
                        cnt42++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplementsAssignementGenerics"


    // $ANTLR start "entryRuleExtendsAssignementGenerics"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1755:1: entryRuleExtendsAssignementGenerics returns [EObject current=null] : iv_ruleExtendsAssignementGenerics= ruleExtendsAssignementGenerics EOF ;
    public final EObject entryRuleExtendsAssignementGenerics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendsAssignementGenerics = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1756:2: (iv_ruleExtendsAssignementGenerics= ruleExtendsAssignementGenerics EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1757:2: iv_ruleExtendsAssignementGenerics= ruleExtendsAssignementGenerics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendsAssignementGenericsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleExtendsAssignementGenerics_in_entryRuleExtendsAssignementGenerics3631);
            iv_ruleExtendsAssignementGenerics=ruleExtendsAssignementGenerics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendsAssignementGenerics; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleExtendsAssignementGenerics3641); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendsAssignementGenerics"


    // $ANTLR start "ruleExtendsAssignementGenerics"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1764:1: ruleExtendsAssignementGenerics returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? ) ;
    public final EObject ruleExtendsAssignementGenerics() throws RecognitionException {
        EObject current = null;

        Token this_WS_1=null;
        Token this_PLUS_2=null;
        Token this_WS_3=null;
        Token lv_dbTables_4_0=null;
        Token this_WS_5=null;
        Token this_MINUS_6=null;
        Token this_WS_7=null;
        Token lv_dbNotTables_8_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1767:28: ( ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1768:1: ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1768:1: ( ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1768:2: ( ( ruleQualifiedName ) ) ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )? ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1768:2: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1769:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1769:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1770:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExtendsAssignementGenericsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendsAssignementGenericsAccess().getToExtendsJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleExtendsAssignementGenerics3689);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1783:2: ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )?
            int alt47=2;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1783:3: (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1783:3: (this_WS_1= RULE_WS )+
                    int cnt44=0;
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==RULE_WS) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1783:4: this_WS_1= RULE_WS
                    	    {
                    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3702); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_1, grammarAccess.getExtendsAssignementGenericsAccess().getWSTerminalRuleCall_1_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt44 >= 1 ) break loop44;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(44, input);
                                throw eee;
                        }
                        cnt44++;
                    } while (true);

                    this_PLUS_2=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleExtendsAssignementGenerics3714); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_2, grammarAccess.getExtendsAssignementGenericsAccess().getPLUSTerminalRuleCall_1_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1791:1: ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+
                    int cnt46=0;
                    loop46:
                    do {
                        int alt46=2;
                        alt46 = dfa46.predict(input);
                        switch (alt46) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1791:2: (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1791:2: (this_WS_3= RULE_WS )+
                    	    int cnt45=0;
                    	    loop45:
                    	    do {
                    	        int alt45=2;
                    	        int LA45_0 = input.LA(1);

                    	        if ( (LA45_0==RULE_WS) ) {
                    	            alt45=1;
                    	        }


                    	        switch (alt45) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1791:3: this_WS_3= RULE_WS
                    	    	    {
                    	    	    this_WS_3=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3726); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_3, grammarAccess.getExtendsAssignementGenericsAccess().getWSTerminalRuleCall_1_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt45 >= 1 ) break loop45;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(45, input);
                    	                throw eee;
                    	        }
                    	        cnt45++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1795:3: ( (lv_dbTables_4_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1796:1: (lv_dbTables_4_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1796:1: (lv_dbTables_4_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1797:3: lv_dbTables_4_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExtendsAssignementGenerics3744); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_4_0, grammarAccess.getExtendsAssignementGenericsAccess().getDbTablesIDENTTerminalRuleCall_1_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsAssignementGenericsRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_4_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt46 >= 1 ) break loop46;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(46, input);
                                throw eee;
                        }
                        cnt46++;
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1813:6: ( (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+ )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_WS) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1813:7: (this_WS_5= RULE_WS )+ this_MINUS_6= RULE_MINUS ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1813:7: (this_WS_5= RULE_WS )+
                    int cnt48=0;
                    loop48:
                    do {
                        int alt48=2;
                        int LA48_0 = input.LA(1);

                        if ( (LA48_0==RULE_WS) ) {
                            alt48=1;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1813:8: this_WS_5= RULE_WS
                    	    {
                    	    this_WS_5=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3766); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_5, grammarAccess.getExtendsAssignementGenericsAccess().getWSTerminalRuleCall_2_0()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt48 >= 1 ) break loop48;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(48, input);
                                throw eee;
                        }
                        cnt48++;
                    } while (true);

                    this_MINUS_6=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleExtendsAssignementGenerics3778); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_6, grammarAccess.getExtendsAssignementGenericsAccess().getMINUSTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1821:1: ( (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) ) )+
                    int cnt50=0;
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==RULE_WS) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1821:2: (this_WS_7= RULE_WS )+ ( (lv_dbNotTables_8_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1821:2: (this_WS_7= RULE_WS )+
                    	    int cnt49=0;
                    	    loop49:
                    	    do {
                    	        int alt49=2;
                    	        int LA49_0 = input.LA(1);

                    	        if ( (LA49_0==RULE_WS) ) {
                    	            alt49=1;
                    	        }


                    	        switch (alt49) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1821:3: this_WS_7= RULE_WS
                    	    	    {
                    	    	    this_WS_7=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3790); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_7, grammarAccess.getExtendsAssignementGenericsAccess().getWSTerminalRuleCall_2_2_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt49 >= 1 ) break loop49;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(49, input);
                    	                throw eee;
                    	        }
                    	        cnt49++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1825:3: ( (lv_dbNotTables_8_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1826:1: (lv_dbNotTables_8_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1826:1: (lv_dbNotTables_8_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1827:3: lv_dbNotTables_8_0= RULE_IDENT
                    	    {
                    	    lv_dbNotTables_8_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleExtendsAssignementGenerics3808); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbNotTables_8_0, grammarAccess.getExtendsAssignementGenericsAccess().getDbNotTablesIDENTTerminalRuleCall_2_2_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsAssignementGenericsRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbNotTables",
                    	              		lv_dbNotTables_8_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt50 >= 1 ) break loop50;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(50, input);
                                throw eee;
                        }
                        cnt50++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendsAssignementGenerics"


    // $ANTLR start "entryRuleProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1851:1: entryRuleProperty returns [EObject current=null] : iv_ruleProperty= ruleProperty EOF ;
    public final EObject entryRuleProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1852:2: (iv_ruleProperty= ruleProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1853:2: iv_ruleProperty= ruleProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleProperty_in_entryRuleProperty3853);
            iv_ruleProperty=ruleProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProperty; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleProperty3863); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProperty"


    // $ANTLR start "ruleProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1860:1: ruleProperty returns [EObject current=null] : ( ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) ) this_SEMICOLON_20= RULE_SEMICOLON ) ;
    public final EObject ruleProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_name_1_0=null;
        Token lv_name_2_0=null;
        Token lv_name_4_0=null;
        Token lv_name_6_0=null;
        Token lv_name_8_0=null;
        Token lv_name_10_0=null;
        Token this_WS_11=null;
        Token lv_replaceId_12_0=null;
        Token this_WS_13=null;
        Token lv_name_15_0=null;
        Token this_WS_16=null;
        Token lv_replaceId_17_0=null;
        Token this_WS_18=null;
        Token this_SEMICOLON_20=null;
        EObject lv_database_3_0 = null;

        EObject lv_pojogen_5_0 = null;

        EObject lv_metagen_7_0 = null;

        EObject lv_daogen_9_0 = null;

        AntlrDatatypeRuleToken lv_regex_14_0 = null;

        AntlrDatatypeRuleToken lv_replacement_19_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1863:28: ( ( ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) ) this_SEMICOLON_20= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1864:1: ( ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) ) this_SEMICOLON_20= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1864:1: ( ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) ) this_SEMICOLON_20= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1864:2: ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) ) this_SEMICOLON_20= RULE_SEMICOLON
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1864:2: ( ( (lv_name_0_0= 'resolve-pojo-on' ) ) | ( (lv_name_1_0= 'resolve-pojo-off' ) ) | ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) ) | ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) ) | ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) ) | ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) ) | ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) ) | ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) ) )
            int alt56=8;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt56=1;
                }
                break;
            case 43:
                {
                alt56=2;
                }
                break;
            case 44:
                {
                alt56=3;
                }
                break;
            case 45:
                {
                alt56=4;
                }
                break;
            case 46:
                {
                alt56=5;
                }
                break;
            case 47:
                {
                alt56=6;
                }
                break;
            case 48:
                {
                alt56=7;
                }
                break;
            case 49:
                {
                alt56=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1864:3: ( (lv_name_0_0= 'resolve-pojo-on' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1864:3: ( (lv_name_0_0= 'resolve-pojo-on' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1865:1: (lv_name_0_0= 'resolve-pojo-on' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1865:1: (lv_name_0_0= 'resolve-pojo-on' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1866:3: lv_name_0_0= 'resolve-pojo-on'
                    {
                    lv_name_0_0=(Token)match(input,42,FollowSets000.FOLLOW_42_in_ruleProperty3907); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getPropertyAccess().getNameResolvePojoOnKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "resolve-pojo-on");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1880:6: ( (lv_name_1_0= 'resolve-pojo-off' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1880:6: ( (lv_name_1_0= 'resolve-pojo-off' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1881:1: (lv_name_1_0= 'resolve-pojo-off' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1881:1: (lv_name_1_0= 'resolve-pojo-off' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1882:3: lv_name_1_0= 'resolve-pojo-off'
                    {
                    lv_name_1_0=(Token)match(input,43,FollowSets000.FOLLOW_43_in_ruleProperty3944); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_1_0, grammarAccess.getPropertyAccess().getNameResolvePojoOffKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_1_0, "resolve-pojo-off");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1896:6: ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1896:6: ( ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1896:7: ( (lv_name_2_0= 'database-' ) ) ( (lv_database_3_0= ruleDatabaseProperty ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1896:7: ( (lv_name_2_0= 'database-' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1897:1: (lv_name_2_0= 'database-' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1897:1: (lv_name_2_0= 'database-' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1898:3: lv_name_2_0= 'database-'
                    {
                    lv_name_2_0=(Token)match(input,44,FollowSets000.FOLLOW_44_in_ruleProperty3982); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_2_0, grammarAccess.getPropertyAccess().getNameDatabaseKeyword_0_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_2_0, "database-");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1911:2: ( (lv_database_3_0= ruleDatabaseProperty ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1912:1: (lv_database_3_0= ruleDatabaseProperty )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1912:1: (lv_database_3_0= ruleDatabaseProperty )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1913:3: lv_database_3_0= ruleDatabaseProperty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getDatabaseDatabasePropertyParserRuleCall_0_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseProperty_in_ruleProperty4016);
                    lv_database_3_0=ruleDatabaseProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"database",
                              		lv_database_3_0, 
                              		"DatabaseProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1930:6: ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1930:6: ( ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1930:7: ( (lv_name_4_0= 'pojogen-' ) ) ( (lv_pojogen_5_0= rulePojogenProperty ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1930:7: ( (lv_name_4_0= 'pojogen-' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1931:1: (lv_name_4_0= 'pojogen-' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1931:1: (lv_name_4_0= 'pojogen-' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1932:3: lv_name_4_0= 'pojogen-'
                    {
                    lv_name_4_0=(Token)match(input,45,FollowSets000.FOLLOW_45_in_ruleProperty4042); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_4_0, grammarAccess.getPropertyAccess().getNamePojogenKeyword_0_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_4_0, "pojogen-");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1945:2: ( (lv_pojogen_5_0= rulePojogenProperty ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1946:1: (lv_pojogen_5_0= rulePojogenProperty )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1946:1: (lv_pojogen_5_0= rulePojogenProperty )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1947:3: lv_pojogen_5_0= rulePojogenProperty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getPojogenPojogenPropertyParserRuleCall_0_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePojogenProperty_in_ruleProperty4076);
                    lv_pojogen_5_0=rulePojogenProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"pojogen",
                              		lv_pojogen_5_0, 
                              		"PojogenProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1964:6: ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1964:6: ( ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1964:7: ( (lv_name_6_0= 'metagen-' ) ) ( (lv_metagen_7_0= ruleMetagenProperty ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1964:7: ( (lv_name_6_0= 'metagen-' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1965:1: (lv_name_6_0= 'metagen-' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1965:1: (lv_name_6_0= 'metagen-' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1966:3: lv_name_6_0= 'metagen-'
                    {
                    lv_name_6_0=(Token)match(input,46,FollowSets000.FOLLOW_46_in_ruleProperty4102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_6_0, grammarAccess.getPropertyAccess().getNameMetagenKeyword_0_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_6_0, "metagen-");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1979:2: ( (lv_metagen_7_0= ruleMetagenProperty ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1980:1: (lv_metagen_7_0= ruleMetagenProperty )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1980:1: (lv_metagen_7_0= ruleMetagenProperty )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1981:3: lv_metagen_7_0= ruleMetagenProperty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getMetagenMetagenPropertyParserRuleCall_0_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleMetagenProperty_in_ruleProperty4136);
                    lv_metagen_7_0=ruleMetagenProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"metagen",
                              		lv_metagen_7_0, 
                              		"MetagenProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1998:6: ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1998:6: ( ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1998:7: ( (lv_name_8_0= 'daogen-' ) ) ( (lv_daogen_9_0= ruleDaogenProperty ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1998:7: ( (lv_name_8_0= 'daogen-' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1999:1: (lv_name_8_0= 'daogen-' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:1999:1: (lv_name_8_0= 'daogen-' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2000:3: lv_name_8_0= 'daogen-'
                    {
                    lv_name_8_0=(Token)match(input,47,FollowSets000.FOLLOW_47_in_ruleProperty4162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_8_0, grammarAccess.getPropertyAccess().getNameDaogenKeyword_0_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_8_0, "daogen-");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2013:2: ( (lv_daogen_9_0= ruleDaogenProperty ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2014:1: (lv_daogen_9_0= ruleDaogenProperty )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2014:1: (lv_daogen_9_0= ruleDaogenProperty )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2015:3: lv_daogen_9_0= ruleDaogenProperty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getDaogenDaogenPropertyParserRuleCall_0_5_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDaogenProperty_in_ruleProperty4196);
                    lv_daogen_9_0=ruleDaogenProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"daogen",
                              		lv_daogen_9_0, 
                              		"DaogenProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2032:6: ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2032:6: ( ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2032:7: ( (lv_name_10_0= 'replace-all-regex' ) ) (this_WS_11= RULE_WS )+ ( (lv_replaceId_12_0= RULE_IDENT ) ) (this_WS_13= RULE_WS )+ ( (lv_regex_14_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2032:7: ( (lv_name_10_0= 'replace-all-regex' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2033:1: (lv_name_10_0= 'replace-all-regex' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2033:1: (lv_name_10_0= 'replace-all-regex' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2034:3: lv_name_10_0= 'replace-all-regex'
                    {
                    lv_name_10_0=(Token)match(input,48,FollowSets000.FOLLOW_48_in_ruleProperty4222); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_10_0, grammarAccess.getPropertyAccess().getNameReplaceAllRegexKeyword_0_6_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_10_0, "replace-all-regex");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2047:2: (this_WS_11= RULE_WS )+
                    int cnt52=0;
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==RULE_WS) ) {
                            alt52=1;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2047:3: this_WS_11= RULE_WS
                    	    {
                    	    this_WS_11=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleProperty4247); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_11, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_6_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt52 >= 1 ) break loop52;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(52, input);
                                throw eee;
                        }
                        cnt52++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2051:3: ( (lv_replaceId_12_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2052:1: (lv_replaceId_12_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2052:1: (lv_replaceId_12_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2053:3: lv_replaceId_12_0= RULE_IDENT
                    {
                    lv_replaceId_12_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleProperty4265); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_replaceId_12_0, grammarAccess.getPropertyAccess().getReplaceIdIDENTTerminalRuleCall_0_6_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"replaceId",
                              		lv_replaceId_12_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2069:2: (this_WS_13= RULE_WS )+
                    int cnt53=0;
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==RULE_WS) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2069:3: this_WS_13= RULE_WS
                    	    {
                    	    this_WS_13=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleProperty4282); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_13, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_6_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt53 >= 1 ) break loop53;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(53, input);
                                throw eee;
                        }
                        cnt53++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2073:3: ( (lv_regex_14_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2074:1: (lv_regex_14_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2074:1: (lv_regex_14_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2075:3: lv_regex_14_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getRegexPropertyValueParserRuleCall_0_6_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleProperty4304);
                    lv_regex_14_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"regex",
                              		lv_regex_14_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2092:6: ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2092:6: ( ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2092:7: ( (lv_name_15_0= 'replace-all-replacement' ) ) (this_WS_16= RULE_WS )+ ( (lv_replaceId_17_0= RULE_IDENT ) ) (this_WS_18= RULE_WS )+ ( (lv_replacement_19_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2092:7: ( (lv_name_15_0= 'replace-all-replacement' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2093:1: (lv_name_15_0= 'replace-all-replacement' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2093:1: (lv_name_15_0= 'replace-all-replacement' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2094:3: lv_name_15_0= 'replace-all-replacement'
                    {
                    lv_name_15_0=(Token)match(input,49,FollowSets000.FOLLOW_49_in_ruleProperty4330); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_15_0, grammarAccess.getPropertyAccess().getNameReplaceAllReplacementKeyword_0_7_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_15_0, "replace-all-replacement");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2107:2: (this_WS_16= RULE_WS )+
                    int cnt54=0;
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==RULE_WS) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2107:3: this_WS_16= RULE_WS
                    	    {
                    	    this_WS_16=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleProperty4355); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_16, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_7_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt54 >= 1 ) break loop54;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(54, input);
                                throw eee;
                        }
                        cnt54++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2111:3: ( (lv_replaceId_17_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2112:1: (lv_replaceId_17_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2112:1: (lv_replaceId_17_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2113:3: lv_replaceId_17_0= RULE_IDENT
                    {
                    lv_replaceId_17_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleProperty4373); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_replaceId_17_0, grammarAccess.getPropertyAccess().getReplaceIdIDENTTerminalRuleCall_0_7_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"replaceId",
                              		lv_replaceId_17_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2129:2: (this_WS_18= RULE_WS )+
                    int cnt55=0;
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==RULE_WS) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2129:3: this_WS_18= RULE_WS
                    	    {
                    	    this_WS_18=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleProperty4390); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_18, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_7_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt55 >= 1 ) break loop55;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(55, input);
                                throw eee;
                        }
                        cnt55++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2133:3: ( (lv_replacement_19_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2134:1: (lv_replacement_19_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2134:1: (lv_replacement_19_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2135:3: lv_replacement_19_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyAccess().getReplacementPropertyValueParserRuleCall_0_7_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleProperty4412);
                    lv_replacement_19_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"replacement",
                              		lv_replacement_19_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            this_SEMICOLON_20=(Token)match(input,RULE_SEMICOLON,FollowSets000.FOLLOW_RULE_SEMICOLON_in_ruleProperty4425); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_20, grammarAccess.getPropertyAccess().getSEMICOLONTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProperty"


    // $ANTLR start "entryRuleDatabaseProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2163:1: entryRuleDatabaseProperty returns [EObject current=null] : iv_ruleDatabaseProperty= ruleDatabaseProperty EOF ;
    public final EObject entryRuleDatabaseProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2164:2: (iv_ruleDatabaseProperty= ruleDatabaseProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2165:2: iv_ruleDatabaseProperty= ruleDatabaseProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabasePropertyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleDatabaseProperty_in_entryRuleDatabaseProperty4460);
            iv_ruleDatabaseProperty=ruleDatabaseProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseProperty; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleDatabaseProperty4470); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseProperty"


    // $ANTLR start "ruleDatabaseProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2172:1: ruleDatabaseProperty returns [EObject current=null] : ( ( (lv_name_0_0= 'is-online' ) ) | ( (lv_name_1_0= 'is-offline' ) ) | ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) ) | ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) ) | ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) ) | ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) ) | ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) ) | ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) ) | ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) ) | ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) ) | ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) ) | ( (lv_name_31_0= 'skip-indexes' ) ) | ( (lv_name_32_0= 'skip-functions-procedures' ) ) | ( (lv_name_33_0= 'skip-check-constraints' ) ) | ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) ) | ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) ) | ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) ) | ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ ) | ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_49_0= 'take-comments' ) ) | ( (lv_name_50_0= 'lowercase-names' ) ) | ( (lv_name_51_0= 'uppercase-names' ) ) ) ;
    public final EObject ruleDatabaseProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_name_1_0=null;
        Token lv_name_2_0=null;
        Token this_WS_3=null;
        Token lv_name_5_0=null;
        Token this_WS_6=null;
        Token lv_name_8_0=null;
        Token this_WS_9=null;
        Token lv_name_11_0=null;
        Token this_WS_12=null;
        Token lv_name_14_0=null;
        Token this_WS_15=null;
        Token lv_name_17_0=null;
        Token this_WS_18=null;
        Token this_COLON_19=null;
        Token lv_name_22_0=null;
        Token this_WS_23=null;
        Token lv_name_25_0=null;
        Token this_WS_26=null;
        Token lv_name_28_0=null;
        Token this_WS_29=null;
        Token lv_name_31_0=null;
        Token lv_name_32_0=null;
        Token lv_name_33_0=null;
        Token lv_name_34_0=null;
        Token this_WS_35=null;
        Token lv_name_37_0=null;
        Token this_WS_38=null;
        Token lv_name_40_0=null;
        Token this_WS_41=null;
        Token lv_name_43_0=null;
        Token this_WS_44=null;
        Token lv_name_46_0=null;
        Token this_WS_47=null;
        Token lv_name_49_0=null;
        Token lv_name_50_0=null;
        Token lv_name_51_0=null;
        AntlrDatatypeRuleToken lv_dbUrl_4_0 = null;

        AntlrDatatypeRuleToken lv_dbUsername_7_0 = null;

        AntlrDatatypeRuleToken lv_dbPassword_10_0 = null;

        EObject lv_dbCatalog_13_0 = null;

        EObject lv_dbSchema_16_0 = null;

        AntlrDatatypeRuleToken lv_dbDriver_21_0 = null;

        AntlrDatatypeRuleToken lv_dbExecuteBefore_24_0 = null;

        AntlrDatatypeRuleToken lv_dbExecuteAfter_27_0 = null;

        AntlrDatatypeRuleToken lv_dbIndexTypes_30_0 = null;

        EObject lv_dbType_36_0 = null;

        EObject lv_dbMetaInfo_39_0 = null;

        EObject lv_dbDriverInfo_42_0 = null;

        EObject lv_dbMethodsCalls_45_0 = null;

        EObject lv_debug_48_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2175:28: ( ( ( (lv_name_0_0= 'is-online' ) ) | ( (lv_name_1_0= 'is-offline' ) ) | ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) ) | ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) ) | ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) ) | ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) ) | ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) ) | ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) ) | ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) ) | ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) ) | ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) ) | ( (lv_name_31_0= 'skip-indexes' ) ) | ( (lv_name_32_0= 'skip-functions-procedures' ) ) | ( (lv_name_33_0= 'skip-check-constraints' ) ) | ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) ) | ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) ) | ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) ) | ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ ) | ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_49_0= 'take-comments' ) ) | ( (lv_name_50_0= 'lowercase-names' ) ) | ( (lv_name_51_0= 'uppercase-names' ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2176:1: ( ( (lv_name_0_0= 'is-online' ) ) | ( (lv_name_1_0= 'is-offline' ) ) | ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) ) | ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) ) | ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) ) | ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) ) | ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) ) | ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) ) | ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) ) | ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) ) | ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) ) | ( (lv_name_31_0= 'skip-indexes' ) ) | ( (lv_name_32_0= 'skip-functions-procedures' ) ) | ( (lv_name_33_0= 'skip-check-constraints' ) ) | ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) ) | ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) ) | ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) ) | ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ ) | ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_49_0= 'take-comments' ) ) | ( (lv_name_50_0= 'lowercase-names' ) ) | ( (lv_name_51_0= 'uppercase-names' ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2176:1: ( ( (lv_name_0_0= 'is-online' ) ) | ( (lv_name_1_0= 'is-offline' ) ) | ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) ) | ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) ) | ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) ) | ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) ) | ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) ) | ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) ) | ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) ) | ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) ) | ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) ) | ( (lv_name_31_0= 'skip-indexes' ) ) | ( (lv_name_32_0= 'skip-functions-procedures' ) ) | ( (lv_name_33_0= 'skip-check-constraints' ) ) | ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) ) | ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) ) | ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) ) | ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ ) | ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_49_0= 'take-comments' ) ) | ( (lv_name_50_0= 'lowercase-names' ) ) | ( (lv_name_51_0= 'uppercase-names' ) ) )
            int alt73=22;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt73=1;
                }
                break;
            case 51:
                {
                alt73=2;
                }
                break;
            case 52:
                {
                alt73=3;
                }
                break;
            case 53:
                {
                alt73=4;
                }
                break;
            case 54:
                {
                alt73=5;
                }
                break;
            case 55:
                {
                alt73=6;
                }
                break;
            case 56:
                {
                alt73=7;
                }
                break;
            case 57:
                {
                alt73=8;
                }
                break;
            case 58:
                {
                alt73=9;
                }
                break;
            case 59:
                {
                alt73=10;
                }
                break;
            case 60:
                {
                alt73=11;
                }
                break;
            case 61:
                {
                alt73=12;
                }
                break;
            case 62:
                {
                alt73=13;
                }
                break;
            case 63:
                {
                alt73=14;
                }
                break;
            case 64:
                {
                alt73=15;
                }
                break;
            case 65:
                {
                alt73=16;
                }
                break;
            case 66:
                {
                alt73=17;
                }
                break;
            case 67:
                {
                alt73=18;
                }
                break;
            case 68:
                {
                alt73=19;
                }
                break;
            case 69:
                {
                alt73=20;
                }
                break;
            case 70:
                {
                alt73=21;
                }
                break;
            case 71:
                {
                alt73=22;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }

            switch (alt73) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2176:2: ( (lv_name_0_0= 'is-online' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2176:2: ( (lv_name_0_0= 'is-online' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2177:1: (lv_name_0_0= 'is-online' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2177:1: (lv_name_0_0= 'is-online' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2178:3: lv_name_0_0= 'is-online'
                    {
                    lv_name_0_0=(Token)match(input,50,FollowSets000.FOLLOW_50_in_ruleDatabaseProperty4513); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getDatabasePropertyAccess().getNameIsOnlineKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "is-online");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2192:6: ( (lv_name_1_0= 'is-offline' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2192:6: ( (lv_name_1_0= 'is-offline' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2193:1: (lv_name_1_0= 'is-offline' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2193:1: (lv_name_1_0= 'is-offline' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2194:3: lv_name_1_0= 'is-offline'
                    {
                    lv_name_1_0=(Token)match(input,51,FollowSets000.FOLLOW_51_in_ruleDatabaseProperty4550); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_1_0, grammarAccess.getDatabasePropertyAccess().getNameIsOfflineKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_1_0, "is-offline");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2208:6: ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2208:6: ( ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2208:7: ( (lv_name_2_0= 'has-url' ) ) (this_WS_3= RULE_WS )+ ( (lv_dbUrl_4_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2208:7: ( (lv_name_2_0= 'has-url' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2209:1: (lv_name_2_0= 'has-url' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2209:1: (lv_name_2_0= 'has-url' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2210:3: lv_name_2_0= 'has-url'
                    {
                    lv_name_2_0=(Token)match(input,52,FollowSets000.FOLLOW_52_in_ruleDatabaseProperty4588); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_2_0, grammarAccess.getDatabasePropertyAccess().getNameHasUrlKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_2_0, "has-url");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2223:2: (this_WS_3= RULE_WS )+
                    int cnt57=0;
                    loop57:
                    do {
                        int alt57=2;
                        int LA57_0 = input.LA(1);

                        if ( (LA57_0==RULE_WS) ) {
                            alt57=1;
                        }


                        switch (alt57) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2223:3: this_WS_3= RULE_WS
                    	    {
                    	    this_WS_3=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4613); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_3, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_2_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt57 >= 1 ) break loop57;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(57, input);
                                throw eee;
                        }
                        cnt57++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2227:3: ( (lv_dbUrl_4_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2228:1: (lv_dbUrl_4_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2228:1: (lv_dbUrl_4_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2229:3: lv_dbUrl_4_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbUrlPropertyValueParserRuleCall_2_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4635);
                    lv_dbUrl_4_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbUrl",
                              		lv_dbUrl_4_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2246:6: ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2246:6: ( ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2246:7: ( (lv_name_5_0= 'login-username' ) ) (this_WS_6= RULE_WS )+ ( (lv_dbUsername_7_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2246:7: ( (lv_name_5_0= 'login-username' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2247:1: (lv_name_5_0= 'login-username' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2247:1: (lv_name_5_0= 'login-username' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2248:3: lv_name_5_0= 'login-username'
                    {
                    lv_name_5_0=(Token)match(input,53,FollowSets000.FOLLOW_53_in_ruleDatabaseProperty4661); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_5_0, grammarAccess.getDatabasePropertyAccess().getNameLoginUsernameKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_5_0, "login-username");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2261:2: (this_WS_6= RULE_WS )+
                    int cnt58=0;
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==RULE_WS) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2261:3: this_WS_6= RULE_WS
                    	    {
                    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4686); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_6, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_3_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt58 >= 1 ) break loop58;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(58, input);
                                throw eee;
                        }
                        cnt58++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2265:3: ( (lv_dbUsername_7_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2266:1: (lv_dbUsername_7_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2266:1: (lv_dbUsername_7_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2267:3: lv_dbUsername_7_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbUsernamePropertyValueParserRuleCall_3_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4708);
                    lv_dbUsername_7_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbUsername",
                              		lv_dbUsername_7_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2284:6: ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2284:6: ( ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2284:7: ( (lv_name_8_0= 'login-password' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbPassword_10_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2284:7: ( (lv_name_8_0= 'login-password' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2285:1: (lv_name_8_0= 'login-password' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2285:1: (lv_name_8_0= 'login-password' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2286:3: lv_name_8_0= 'login-password'
                    {
                    lv_name_8_0=(Token)match(input,54,FollowSets000.FOLLOW_54_in_ruleDatabaseProperty4734); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_8_0, grammarAccess.getDatabasePropertyAccess().getNameLoginPasswordKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_8_0, "login-password");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2299:2: (this_WS_9= RULE_WS )+
                    int cnt59=0;
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( (LA59_0==RULE_WS) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2299:3: this_WS_9= RULE_WS
                    	    {
                    	    this_WS_9=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4759); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_9, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt59 >= 1 ) break loop59;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(59, input);
                                throw eee;
                        }
                        cnt59++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2303:3: ( (lv_dbPassword_10_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2304:1: (lv_dbPassword_10_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2304:1: (lv_dbPassword_10_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2305:3: lv_dbPassword_10_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbPasswordPropertyValueParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4781);
                    lv_dbPassword_10_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbPassword",
                              		lv_dbPassword_10_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2322:6: ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2322:6: ( ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2322:7: ( (lv_name_11_0= 'in-catalog' ) ) (this_WS_12= RULE_WS )+ ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2322:7: ( (lv_name_11_0= 'in-catalog' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2323:1: (lv_name_11_0= 'in-catalog' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2323:1: (lv_name_11_0= 'in-catalog' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2324:3: lv_name_11_0= 'in-catalog'
                    {
                    lv_name_11_0=(Token)match(input,55,FollowSets000.FOLLOW_55_in_ruleDatabaseProperty4807); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_11_0, grammarAccess.getDatabasePropertyAccess().getNameInCatalogKeyword_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_11_0, "in-catalog");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2337:2: (this_WS_12= RULE_WS )+
                    int cnt60=0;
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==RULE_WS) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2337:3: this_WS_12= RULE_WS
                    	    {
                    	    this_WS_12=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4832); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_12, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_5_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt60 >= 1 ) break loop60;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(60, input);
                                throw eee;
                        }
                        cnt60++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2341:3: ( (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2342:1: (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2342:1: (lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2343:3: lv_dbCatalog_13_0= ruleDatabaseCatalogAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbCatalogDatabaseCatalogAssignementParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseCatalogAssignement_in_ruleDatabaseProperty4854);
                    lv_dbCatalog_13_0=ruleDatabaseCatalogAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbCatalog",
                              		lv_dbCatalog_13_0, 
                              		"DatabaseCatalogAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2360:6: ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2360:6: ( ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2360:7: ( (lv_name_14_0= 'active-schema' ) ) (this_WS_15= RULE_WS )+ ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2360:7: ( (lv_name_14_0= 'active-schema' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2361:1: (lv_name_14_0= 'active-schema' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2361:1: (lv_name_14_0= 'active-schema' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2362:3: lv_name_14_0= 'active-schema'
                    {
                    lv_name_14_0=(Token)match(input,56,FollowSets000.FOLLOW_56_in_ruleDatabaseProperty4880); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_14_0, grammarAccess.getDatabasePropertyAccess().getNameActiveSchemaKeyword_6_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_14_0, "active-schema");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2375:2: (this_WS_15= RULE_WS )+
                    int cnt61=0;
                    loop61:
                    do {
                        int alt61=2;
                        int LA61_0 = input.LA(1);

                        if ( (LA61_0==RULE_WS) ) {
                            alt61=1;
                        }


                        switch (alt61) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2375:3: this_WS_15= RULE_WS
                    	    {
                    	    this_WS_15=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4905); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_15, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_6_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt61 >= 1 ) break loop61;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(61, input);
                                throw eee;
                        }
                        cnt61++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2379:3: ( (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2380:1: (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2380:1: (lv_dbSchema_16_0= ruleDatabaseSchemaAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2381:3: lv_dbSchema_16_0= ruleDatabaseSchemaAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbSchemaDatabaseSchemaAssignementParserRuleCall_6_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseSchemaAssignement_in_ruleDatabaseProperty4927);
                    lv_dbSchema_16_0=ruleDatabaseSchemaAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbSchema",
                              		lv_dbSchema_16_0, 
                              		"DatabaseSchemaAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2398:6: ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2398:6: ( ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2398:7: ( (lv_name_17_0= 'jdbc-driver' ) ) (this_WS_18= RULE_WS )+ ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2398:7: ( (lv_name_17_0= 'jdbc-driver' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2399:1: (lv_name_17_0= 'jdbc-driver' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2399:1: (lv_name_17_0= 'jdbc-driver' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2400:3: lv_name_17_0= 'jdbc-driver'
                    {
                    lv_name_17_0=(Token)match(input,57,FollowSets000.FOLLOW_57_in_ruleDatabaseProperty4953); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_17_0, grammarAccess.getDatabasePropertyAccess().getNameJdbcDriverKeyword_7_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_17_0, "jdbc-driver");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2413:2: (this_WS_18= RULE_WS )+
                    int cnt62=0;
                    loop62:
                    do {
                        int alt62=2;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==RULE_WS) ) {
                            alt62=1;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2413:3: this_WS_18= RULE_WS
                    	    {
                    	    this_WS_18=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty4978); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_18, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_7_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt62 >= 1 ) break loop62;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(62, input);
                                throw eee;
                        }
                        cnt62++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2417:3: ( ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) ) | ( (lv_dbDriver_21_0= rulePropertyValue ) ) )
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==RULE_COLON) ) {
                        switch ( input.LA(2) ) {
                        case EOF:
                        case RULE_WS:
                        case RULE_LPAREN:
                        case RULE_NUMBER:
                        case RULE_RPAREN:
                        case RULE_PLUS:
                        case RULE_MINUS:
                        case RULE_SEMICOLON:
                        case RULE_COLON:
                        case RULE_REST:
                        case RULE_STRING:
                        case RULE_COMMA:
                        case RULE_LBRACE:
                        case RULE_RBRACE:
                        case RULE_QUESTI:
                        case RULE_NOT:
                        case RULE_BAND:
                        case RULE_BOR:
                        case RULE_HASH:
                        case RULE_AT:
                        case RULE_CARET:
                        case RULE_EQUALS:
                        case RULE_LESS_THAN:
                        case RULE_MORE_THAN:
                        case RULE_PERCENT:
                        case RULE_DOT:
                        case RULE_AND:
                        case RULE_OR:
                        case RULE_ESC_CHAR:
                        case RULE_ON_OFF:
                        case RULE_STATEMENT_TYPE:
                        case RULE_MAPPING_TYPE:
                        case RULE_OPTION_TYPE:
                            {
                            alt63=2;
                            }
                            break;
                        case RULE_IDENT_DOT:
                            {
                            int LA63_3 = input.LA(3);

                            if ( (synpred1_InternalProcessorDsl()) ) {
                                alt63=1;
                            }
                            else if ( (true) ) {
                                alt63=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 63, 3, input);

                                throw nvae;
                            }
                            }
                            break;
                        case RULE_IDENT:
                            {
                            int LA63_4 = input.LA(3);

                            if ( (synpred1_InternalProcessorDsl()) ) {
                                alt63=1;
                            }
                            else if ( (true) ) {
                                alt63=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 63, 4, input);

                                throw nvae;
                            }
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 63, 1, input);

                            throw nvae;
                        }

                    }
                    else if ( ((LA63_0>=RULE_IDENT && LA63_0<=RULE_MINUS)||(LA63_0>=RULE_REST && LA63_0<=RULE_STRING_VALUE)) ) {
                        alt63=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 63, 0, input);

                        throw nvae;
                    }
                    switch (alt63) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2417:4: ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2417:4: ( ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2417:5: ( ( RULE_COLON )=>this_COLON_19= RULE_COLON ) ( ( ruleQualifiedName ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2417:5: ( ( RULE_COLON )=>this_COLON_19= RULE_COLON )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2417:6: ( RULE_COLON )=>this_COLON_19= RULE_COLON
                            {
                            this_COLON_19=(Token)match(input,RULE_COLON,FollowSets000.FOLLOW_RULE_COLON_in_ruleDatabaseProperty4998); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_19, grammarAccess.getDatabasePropertyAccess().getCOLONTerminalRuleCall_7_2_0_0()); 
                                  
                            }

                            }

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2421:2: ( ( ruleQualifiedName ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2422:1: ( ruleQualifiedName )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2422:1: ( ruleQualifiedName )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2423:3: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbDriverxJvmTypeCrossReference_7_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_ruleQualifiedName_in_ruleDatabaseProperty5021);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2437:6: ( (lv_dbDriver_21_0= rulePropertyValue ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2437:6: ( (lv_dbDriver_21_0= rulePropertyValue ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2438:1: (lv_dbDriver_21_0= rulePropertyValue )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2438:1: (lv_dbDriver_21_0= rulePropertyValue )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2439:3: lv_dbDriver_21_0= rulePropertyValue
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbDriverPropertyValueParserRuleCall_7_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5049);
                            lv_dbDriver_21_0=rulePropertyValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbDriver",
                                      		lv_dbDriver_21_0, 
                                      		"PropertyValue");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2456:6: ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2456:6: ( ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2456:7: ( (lv_name_22_0= 'ddl-create' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2456:7: ( (lv_name_22_0= 'ddl-create' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2457:1: (lv_name_22_0= 'ddl-create' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2457:1: (lv_name_22_0= 'ddl-create' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2458:3: lv_name_22_0= 'ddl-create'
                    {
                    lv_name_22_0=(Token)match(input,58,FollowSets000.FOLLOW_58_in_ruleDatabaseProperty5076); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_22_0, grammarAccess.getDatabasePropertyAccess().getNameDdlCreateKeyword_8_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_22_0, "ddl-create");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2471:2: (this_WS_23= RULE_WS )+
                    int cnt64=0;
                    loop64:
                    do {
                        int alt64=2;
                        int LA64_0 = input.LA(1);

                        if ( (LA64_0==RULE_WS) ) {
                            alt64=1;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2471:3: this_WS_23= RULE_WS
                    	    {
                    	    this_WS_23=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5101); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_23, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_8_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt64 >= 1 ) break loop64;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(64, input);
                                throw eee;
                        }
                        cnt64++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2475:3: ( (lv_dbExecuteBefore_24_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2476:1: (lv_dbExecuteBefore_24_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2476:1: (lv_dbExecuteBefore_24_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2477:3: lv_dbExecuteBefore_24_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbExecuteBeforePropertyValueParserRuleCall_8_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5123);
                    lv_dbExecuteBefore_24_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbExecuteBefore",
                              		lv_dbExecuteBefore_24_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2494:6: ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2494:6: ( ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2494:7: ( (lv_name_25_0= 'ddl-drop' ) ) (this_WS_26= RULE_WS )+ ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2494:7: ( (lv_name_25_0= 'ddl-drop' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2495:1: (lv_name_25_0= 'ddl-drop' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2495:1: (lv_name_25_0= 'ddl-drop' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2496:3: lv_name_25_0= 'ddl-drop'
                    {
                    lv_name_25_0=(Token)match(input,59,FollowSets000.FOLLOW_59_in_ruleDatabaseProperty5149); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_25_0, grammarAccess.getDatabasePropertyAccess().getNameDdlDropKeyword_9_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_25_0, "ddl-drop");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2509:2: (this_WS_26= RULE_WS )+
                    int cnt65=0;
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==RULE_WS) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2509:3: this_WS_26= RULE_WS
                    	    {
                    	    this_WS_26=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5174); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_26, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_9_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt65 >= 1 ) break loop65;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(65, input);
                                throw eee;
                        }
                        cnt65++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2513:3: ( (lv_dbExecuteAfter_27_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2514:1: (lv_dbExecuteAfter_27_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2514:1: (lv_dbExecuteAfter_27_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2515:3: lv_dbExecuteAfter_27_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbExecuteAfterPropertyValueParserRuleCall_9_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5196);
                    lv_dbExecuteAfter_27_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbExecuteAfter",
                              		lv_dbExecuteAfter_27_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2532:6: ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2532:6: ( ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2532:7: ( (lv_name_28_0= 'index-types' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbIndexTypes_30_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2532:7: ( (lv_name_28_0= 'index-types' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2533:1: (lv_name_28_0= 'index-types' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2533:1: (lv_name_28_0= 'index-types' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2534:3: lv_name_28_0= 'index-types'
                    {
                    lv_name_28_0=(Token)match(input,60,FollowSets000.FOLLOW_60_in_ruleDatabaseProperty5222); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_28_0, grammarAccess.getDatabasePropertyAccess().getNameIndexTypesKeyword_10_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_28_0, "index-types");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2547:2: (this_WS_29= RULE_WS )+
                    int cnt66=0;
                    loop66:
                    do {
                        int alt66=2;
                        int LA66_0 = input.LA(1);

                        if ( (LA66_0==RULE_WS) ) {
                            alt66=1;
                        }


                        switch (alt66) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2547:3: this_WS_29= RULE_WS
                    	    {
                    	    this_WS_29=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5247); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_29, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_10_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt66 >= 1 ) break loop66;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(66, input);
                                throw eee;
                        }
                        cnt66++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2551:3: ( (lv_dbIndexTypes_30_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2552:1: (lv_dbIndexTypes_30_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2552:1: (lv_dbIndexTypes_30_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2553:3: lv_dbIndexTypes_30_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbIndexTypesPropertyValueParserRuleCall_10_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5269);
                    lv_dbIndexTypes_30_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbIndexTypes",
                              		lv_dbIndexTypes_30_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2570:6: ( (lv_name_31_0= 'skip-indexes' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2570:6: ( (lv_name_31_0= 'skip-indexes' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2571:1: (lv_name_31_0= 'skip-indexes' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2571:1: (lv_name_31_0= 'skip-indexes' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2572:3: lv_name_31_0= 'skip-indexes'
                    {
                    lv_name_31_0=(Token)match(input,61,FollowSets000.FOLLOW_61_in_ruleDatabaseProperty5294); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_31_0, grammarAccess.getDatabasePropertyAccess().getNameSkipIndexesKeyword_11_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_31_0, "skip-indexes");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2586:6: ( (lv_name_32_0= 'skip-functions-procedures' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2586:6: ( (lv_name_32_0= 'skip-functions-procedures' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2587:1: (lv_name_32_0= 'skip-functions-procedures' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2587:1: (lv_name_32_0= 'skip-functions-procedures' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2588:3: lv_name_32_0= 'skip-functions-procedures'
                    {
                    lv_name_32_0=(Token)match(input,62,FollowSets000.FOLLOW_62_in_ruleDatabaseProperty5331); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_32_0, grammarAccess.getDatabasePropertyAccess().getNameSkipFunctionsProceduresKeyword_12_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_32_0, "skip-functions-procedures");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2602:6: ( (lv_name_33_0= 'skip-check-constraints' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2602:6: ( (lv_name_33_0= 'skip-check-constraints' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2603:1: (lv_name_33_0= 'skip-check-constraints' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2603:1: (lv_name_33_0= 'skip-check-constraints' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2604:3: lv_name_33_0= 'skip-check-constraints'
                    {
                    lv_name_33_0=(Token)match(input,63,FollowSets000.FOLLOW_63_in_ruleDatabaseProperty5368); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_33_0, grammarAccess.getDatabasePropertyAccess().getNameSkipCheckConstraintsKeyword_13_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_33_0, "skip-check-constraints");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2618:6: ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2618:6: ( ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2618:7: ( (lv_name_34_0= 'is-of-type' ) ) (this_WS_35= RULE_WS )+ ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2618:7: ( (lv_name_34_0= 'is-of-type' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2619:1: (lv_name_34_0= 'is-of-type' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2619:1: (lv_name_34_0= 'is-of-type' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2620:3: lv_name_34_0= 'is-of-type'
                    {
                    lv_name_34_0=(Token)match(input,64,FollowSets000.FOLLOW_64_in_ruleDatabaseProperty5406); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_34_0, grammarAccess.getDatabasePropertyAccess().getNameIsOfTypeKeyword_14_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_34_0, "is-of-type");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2633:2: (this_WS_35= RULE_WS )+
                    int cnt67=0;
                    loop67:
                    do {
                        int alt67=2;
                        int LA67_0 = input.LA(1);

                        if ( (LA67_0==RULE_WS) ) {
                            alt67=1;
                        }


                        switch (alt67) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2633:3: this_WS_35= RULE_WS
                    	    {
                    	    this_WS_35=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5431); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_35, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_14_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt67 >= 1 ) break loop67;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(67, input);
                                throw eee;
                        }
                        cnt67++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2637:3: ( (lv_dbType_36_0= ruleDatabaseTypeAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2638:1: (lv_dbType_36_0= ruleDatabaseTypeAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2638:1: (lv_dbType_36_0= ruleDatabaseTypeAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2639:3: lv_dbType_36_0= ruleDatabaseTypeAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbTypeDatabaseTypeAssignementParserRuleCall_14_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseTypeAssignement_in_ruleDatabaseProperty5453);
                    lv_dbType_36_0=ruleDatabaseTypeAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbType",
                              		lv_dbType_36_0, 
                              		"DatabaseTypeAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2656:6: ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2656:6: ( ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2656:7: ( (lv_name_37_0= 'show-database-info' ) ) (this_WS_38= RULE_WS )+ ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2656:7: ( (lv_name_37_0= 'show-database-info' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2657:1: (lv_name_37_0= 'show-database-info' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2657:1: (lv_name_37_0= 'show-database-info' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2658:3: lv_name_37_0= 'show-database-info'
                    {
                    lv_name_37_0=(Token)match(input,65,FollowSets000.FOLLOW_65_in_ruleDatabaseProperty5479); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_37_0, grammarAccess.getDatabasePropertyAccess().getNameShowDatabaseInfoKeyword_15_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_37_0, "show-database-info");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2671:2: (this_WS_38= RULE_WS )+
                    int cnt68=0;
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==RULE_WS) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2671:3: this_WS_38= RULE_WS
                    	    {
                    	    this_WS_38=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5504); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_38, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_15_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt68 >= 1 ) break loop68;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(68, input);
                                throw eee;
                        }
                        cnt68++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2675:3: ( (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2676:1: (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2676:1: (lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2677:3: lv_dbMetaInfo_39_0= ruleDatabaseMetaInfoAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbMetaInfoDatabaseMetaInfoAssignementParserRuleCall_15_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDatabaseMetaInfoAssignement_in_ruleDatabaseProperty5526);
                    lv_dbMetaInfo_39_0=ruleDatabaseMetaInfoAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbMetaInfo",
                              		lv_dbMetaInfo_39_0, 
                              		"DatabaseMetaInfoAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2694:6: ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2694:6: ( ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2694:7: ( (lv_name_40_0= 'show-driver-info' ) ) (this_WS_41= RULE_WS )+ ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2694:7: ( (lv_name_40_0= 'show-driver-info' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2695:1: (lv_name_40_0= 'show-driver-info' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2695:1: (lv_name_40_0= 'show-driver-info' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2696:3: lv_name_40_0= 'show-driver-info'
                    {
                    lv_name_40_0=(Token)match(input,66,FollowSets000.FOLLOW_66_in_ruleDatabaseProperty5552); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_40_0, grammarAccess.getDatabasePropertyAccess().getNameShowDriverInfoKeyword_16_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_40_0, "show-driver-info");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2709:2: (this_WS_41= RULE_WS )+
                    int cnt69=0;
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==RULE_WS) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2709:3: this_WS_41= RULE_WS
                    	    {
                    	    this_WS_41=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5577); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_41, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_16_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt69 >= 1 ) break loop69;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(69, input);
                                throw eee;
                        }
                        cnt69++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2713:3: ( (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2714:1: (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2714:1: (lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2715:3: lv_dbDriverInfo_42_0= ruleDriverMetaInfoAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbDriverInfoDriverMetaInfoAssignementParserRuleCall_16_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDriverMetaInfoAssignement_in_ruleDatabaseProperty5599);
                    lv_dbDriverInfo_42_0=ruleDriverMetaInfoAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"dbDriverInfo",
                              		lv_dbDriverInfo_42_0, 
                              		"DriverMetaInfoAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2732:6: ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2732:6: ( ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2732:7: ( (lv_name_43_0= 'show-driver-output' ) ) ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2732:7: ( (lv_name_43_0= 'show-driver-output' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2733:1: (lv_name_43_0= 'show-driver-output' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2733:1: (lv_name_43_0= 'show-driver-output' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2734:3: lv_name_43_0= 'show-driver-output'
                    {
                    lv_name_43_0=(Token)match(input,67,FollowSets000.FOLLOW_67_in_ruleDatabaseProperty5625); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_43_0, grammarAccess.getDatabasePropertyAccess().getNameShowDriverOutputKeyword_17_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_43_0, "show-driver-output");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2747:2: ( (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) ) )+
                    int cnt71=0;
                    loop71:
                    do {
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==RULE_WS) ) {
                            alt71=1;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2747:3: (this_WS_44= RULE_WS )+ ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2747:3: (this_WS_44= RULE_WS )+
                    	    int cnt70=0;
                    	    loop70:
                    	    do {
                    	        int alt70=2;
                    	        int LA70_0 = input.LA(1);

                    	        if ( (LA70_0==RULE_WS) ) {
                    	            alt70=1;
                    	        }


                    	        switch (alt70) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2747:4: this_WS_44= RULE_WS
                    	    	    {
                    	    	    this_WS_44=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5651); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_44, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_17_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt70 >= 1 ) break loop70;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(70, input);
                    	                throw eee;
                    	        }
                    	        cnt70++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2751:3: ( (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2752:1: (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2752:1: (lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2753:3: lv_dbMethodsCalls_45_0= ruleDriverMethodOutputAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbMethodsCallsDriverMethodOutputAssignementParserRuleCall_17_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleDriverMethodOutputAssignement_in_ruleDatabaseProperty5673);
                    	    lv_dbMethodsCalls_45_0=ruleDriverMethodOutputAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"dbMethodsCalls",
                    	              		lv_dbMethodsCalls_45_0, 
                    	              		"DriverMethodOutputAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt71 >= 1 ) break loop71;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(71, input);
                                throw eee;
                        }
                        cnt71++;
                    } while (true);


                    }


                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2770:6: ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2770:6: ( ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2770:7: ( (lv_name_46_0= 'debug-level' ) ) (this_WS_47= RULE_WS )+ ( (lv_debug_48_0= ruleDebugLevelAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2770:7: ( (lv_name_46_0= 'debug-level' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2771:1: (lv_name_46_0= 'debug-level' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2771:1: (lv_name_46_0= 'debug-level' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2772:3: lv_name_46_0= 'debug-level'
                    {
                    lv_name_46_0=(Token)match(input,68,FollowSets000.FOLLOW_68_in_ruleDatabaseProperty5701); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_46_0, grammarAccess.getDatabasePropertyAccess().getNameDebugLevelKeyword_18_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_46_0, "debug-level");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2785:2: (this_WS_47= RULE_WS )+
                    int cnt72=0;
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==RULE_WS) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2785:3: this_WS_47= RULE_WS
                    	    {
                    	    this_WS_47=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleDatabaseProperty5726); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_47, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_18_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt72 >= 1 ) break loop72;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(72, input);
                                throw eee;
                        }
                        cnt72++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2789:3: ( (lv_debug_48_0= ruleDebugLevelAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2790:1: (lv_debug_48_0= ruleDebugLevelAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2790:1: (lv_debug_48_0= ruleDebugLevelAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2791:3: lv_debug_48_0= ruleDebugLevelAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDebugDebugLevelAssignementParserRuleCall_18_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDebugLevelAssignement_in_ruleDatabaseProperty5748);
                    lv_debug_48_0=ruleDebugLevelAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"debug",
                              		lv_debug_48_0, 
                              		"DebugLevelAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2808:6: ( (lv_name_49_0= 'take-comments' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2808:6: ( (lv_name_49_0= 'take-comments' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2809:1: (lv_name_49_0= 'take-comments' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2809:1: (lv_name_49_0= 'take-comments' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2810:3: lv_name_49_0= 'take-comments'
                    {
                    lv_name_49_0=(Token)match(input,69,FollowSets000.FOLLOW_69_in_ruleDatabaseProperty5773); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_49_0, grammarAccess.getDatabasePropertyAccess().getNameTakeCommentsKeyword_19_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_49_0, "take-comments");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2824:6: ( (lv_name_50_0= 'lowercase-names' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2824:6: ( (lv_name_50_0= 'lowercase-names' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2825:1: (lv_name_50_0= 'lowercase-names' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2825:1: (lv_name_50_0= 'lowercase-names' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2826:3: lv_name_50_0= 'lowercase-names'
                    {
                    lv_name_50_0=(Token)match(input,70,FollowSets000.FOLLOW_70_in_ruleDatabaseProperty5810); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_50_0, grammarAccess.getDatabasePropertyAccess().getNameLowercaseNamesKeyword_20_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_50_0, "lowercase-names");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2840:6: ( (lv_name_51_0= 'uppercase-names' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2840:6: ( (lv_name_51_0= 'uppercase-names' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2841:1: (lv_name_51_0= 'uppercase-names' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2841:1: (lv_name_51_0= 'uppercase-names' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2842:3: lv_name_51_0= 'uppercase-names'
                    {
                    lv_name_51_0=(Token)match(input,71,FollowSets000.FOLLOW_71_in_ruleDatabaseProperty5847); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_51_0, grammarAccess.getDatabasePropertyAccess().getNameUppercaseNamesKeyword_21_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabasePropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_51_0, "uppercase-names");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseProperty"


    // $ANTLR start "entryRulePojogenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2863:1: entryRulePojogenProperty returns [EObject current=null] : iv_rulePojogenProperty= rulePojogenProperty EOF ;
    public final EObject entryRulePojogenProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojogenProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2864:2: (iv_rulePojogenProperty= rulePojogenProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2865:2: iv_rulePojogenProperty= rulePojogenProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojogenPropertyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_rulePojogenProperty_in_entryRulePojogenProperty5896);
            iv_rulePojogenProperty=rulePojogenProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojogenProperty; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRulePojogenProperty5906); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojogenProperty"


    // $ANTLR start "rulePojogenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2872:1: rulePojogenProperty returns [EObject current=null] : ( ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ ) | ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ ) | ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ ) | ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ ) | ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ ) | ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_133_0= 'generate-wrappers' ) ) | ( (lv_name_134_0= 'generate-validation-annotations' ) ) | ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_138_0= 'implementation-package' ) ) (this_WS_139= RULE_WS )+ ( (lv_implPackage_140_0= RULE_IDENT ) ) ) | ( (lv_name_141_0= 'make-it-final' ) ) | ( ( (lv_name_142_0= 'version-column' ) ) (this_WS_143= RULE_WS )+ ( (lv_version_144_0= RULE_IDENT ) ) ( (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+ )? ( (this_WS_149= RULE_WS )+ this_MINUS_150= RULE_MINUS ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_153_0= 'debug-level' ) ) (this_WS_154= RULE_WS )+ ( (lv_debug_155_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_156_0= 'pojos-for-procedures' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) ) )+ ) | ( ( (lv_name_159_0= 'pojos-for-functions' ) ) ( (this_WS_160= RULE_WS )+ ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) ) )+ ) | ( ( (lv_name_162_0= 'active-filter' ) ) (this_WS_163= RULE_WS )+ ( (lv_activeFilter_164_0= rulePropertyValue ) ) ) ) ;
    public final EObject rulePojogenProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_WS_1=null;
        Token lv_name_3_0=null;
        Token this_WS_4=null;
        Token lv_dbTable_5_0=null;
        Token this_WS_6=null;
        Token lv_name_8_0=null;
        Token this_WS_9=null;
        Token lv_dbTable_10_0=null;
        Token this_WS_11=null;
        Token lv_name_13_0=null;
        Token this_WS_14=null;
        Token lv_dbProcedure_15_0=null;
        Token this_WS_16=null;
        Token lv_name_18_0=null;
        Token this_WS_19=null;
        Token lv_dbFunction_20_0=null;
        Token this_WS_21=null;
        Token lv_name_23_0=null;
        Token this_WS_24=null;
        Token lv_dbTable_25_0=null;
        Token this_WS_26=null;
        Token lv_name_28_0=null;
        Token this_WS_29=null;
        Token lv_dbProcedure_30_0=null;
        Token this_WS_31=null;
        Token lv_name_33_0=null;
        Token this_WS_34=null;
        Token lv_dbFunction_35_0=null;
        Token this_WS_36=null;
        Token lv_name_38_0=null;
        Token this_WS_39=null;
        Token lv_dbTables_40_0=null;
        Token lv_name_41_0=null;
        Token this_WS_42=null;
        Token lv_dbTables_43_0=null;
        Token lv_name_44_0=null;
        Token this_WS_45=null;
        Token lv_dbTables_46_0=null;
        Token lv_name_47_0=null;
        Token this_WS_48=null;
        Token lv_name_50_0=null;
        Token this_WS_51=null;
        Token lv_dbTable_52_0=null;
        Token this_WS_53=null;
        Token lv_dbColumns_54_0=null;
        Token lv_name_55_0=null;
        Token this_WS_56=null;
        Token lv_dbTable_57_0=null;
        Token this_WS_58=null;
        Token lv_dbColumns_59_0=null;
        Token lv_name_60_0=null;
        Token this_WS_61=null;
        Token lv_dbTable_62_0=null;
        Token this_WS_63=null;
        Token lv_dbColumns_64_0=null;
        Token lv_name_65_0=null;
        Token this_WS_66=null;
        Token lv_dbTable_67_0=null;
        Token this_WS_68=null;
        Token lv_name_70_0=null;
        Token this_WS_71=null;
        Token lv_name_73_0=null;
        Token this_WS_74=null;
        Token lv_dbTable_75_0=null;
        Token this_WS_76=null;
        Token lv_name_78_0=null;
        Token this_WS_79=null;
        Token lv_dbTable_80_0=null;
        Token this_WS_81=null;
        Token lv_name_83_0=null;
        Token this_WS_84=null;
        Token lv_dbTable_85_0=null;
        Token this_WS_86=null;
        Token lv_name_88_0=null;
        Token this_WS_89=null;
        Token lv_dbTable_90_0=null;
        Token this_WS_91=null;
        Token lv_name_93_0=null;
        Token this_WS_94=null;
        Token lv_dbTable_95_0=null;
        Token this_WS_96=null;
        Token lv_name_98_0=null;
        Token this_WS_99=null;
        Token lv_dbTable_100_0=null;
        Token this_WS_101=null;
        Token lv_name_103_0=null;
        Token this_WS_104=null;
        Token lv_dbTable_105_0=null;
        Token this_WS_106=null;
        Token lv_name_108_0=null;
        Token this_WS_109=null;
        Token lv_dbTable_110_0=null;
        Token this_WS_111=null;
        Token lv_dbColumn_112_0=null;
        Token this_WS_113=null;
        Token lv_name_115_0=null;
        Token this_WS_116=null;
        Token lv_methods_117_0=null;
        Token lv_name_118_0=null;
        Token this_WS_119=null;
        Token lv_operatorsSuffix_120_0=null;
        Token lv_name_121_0=null;
        Token this_WS_122=null;
        Token lv_name_124_0=null;
        Token this_WS_125=null;
        Token lv_name_127_0=null;
        Token this_WS_128=null;
        Token lv_name_130_0=null;
        Token this_WS_131=null;
        Token lv_name_133_0=null;
        Token lv_name_134_0=null;
        Token lv_name_135_0=null;
        Token this_WS_136=null;
        Token lv_dbTables_137_0=null;
        Token lv_name_138_0=null;
        Token this_WS_139=null;
        Token lv_implPackage_140_0=null;
        Token lv_name_141_0=null;
        Token lv_name_142_0=null;
        Token this_WS_143=null;
        Token lv_version_144_0=null;
        Token this_WS_145=null;
        Token this_PLUS_146=null;
        Token this_WS_147=null;
        Token lv_dbTables_148_0=null;
        Token this_WS_149=null;
        Token this_MINUS_150=null;
        Token this_WS_151=null;
        Token lv_dbNotTables_152_0=null;
        Token lv_name_153_0=null;
        Token this_WS_154=null;
        Token lv_name_156_0=null;
        Token this_WS_157=null;
        Token lv_name_159_0=null;
        Token this_WS_160=null;
        Token lv_name_162_0=null;
        Token this_WS_163=null;
        EObject lv_sqlTypes_2_0 = null;

        EObject lv_sqlTypes_7_0 = null;

        EObject lv_columnTypes_12_0 = null;

        EObject lv_columnTypes_17_0 = null;

        EObject lv_columnTypes_22_0 = null;

        EObject lv_columnType_27_0 = null;

        EObject lv_columnType_32_0 = null;

        EObject lv_columnType_37_0 = null;

        EObject lv_joinTables_49_0 = null;

        EObject lv_columnTypes_69_0 = null;

        EObject lv_tables_72_0 = null;

        EObject lv_columns_77_0 = null;

        EObject lv_exports_82_0 = null;

        EObject lv_imports_87_0 = null;

        EObject lv_imports_92_0 = null;

        EObject lv_exports_97_0 = null;

        EObject lv_imports_102_0 = null;

        EObject lv_many2s_107_0 = null;

        EObject lv_inheritance_114_0 = null;

        EObject lv_toImplements_123_0 = null;

        EObject lv_toExtends_126_0 = null;

        EObject lv_toImplementsGenerics_129_0 = null;

        EObject lv_toExtendsGenerics_132_0 = null;

        EObject lv_debug_155_0 = null;

        EObject lv_procPojos_158_0 = null;

        EObject lv_funPojos_161_0 = null;

        AntlrDatatypeRuleToken lv_activeFilter_164_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2875:28: ( ( ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ ) | ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ ) | ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ ) | ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ ) | ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ ) | ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_133_0= 'generate-wrappers' ) ) | ( (lv_name_134_0= 'generate-validation-annotations' ) ) | ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_138_0= 'implementation-package' ) ) (this_WS_139= RULE_WS )+ ( (lv_implPackage_140_0= RULE_IDENT ) ) ) | ( (lv_name_141_0= 'make-it-final' ) ) | ( ( (lv_name_142_0= 'version-column' ) ) (this_WS_143= RULE_WS )+ ( (lv_version_144_0= RULE_IDENT ) ) ( (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+ )? ( (this_WS_149= RULE_WS )+ this_MINUS_150= RULE_MINUS ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_153_0= 'debug-level' ) ) (this_WS_154= RULE_WS )+ ( (lv_debug_155_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_156_0= 'pojos-for-procedures' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) ) )+ ) | ( ( (lv_name_159_0= 'pojos-for-functions' ) ) ( (this_WS_160= RULE_WS )+ ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) ) )+ ) | ( ( (lv_name_162_0= 'active-filter' ) ) (this_WS_163= RULE_WS )+ ( (lv_activeFilter_164_0= rulePropertyValue ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2876:1: ( ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ ) | ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ ) | ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ ) | ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ ) | ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ ) | ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_133_0= 'generate-wrappers' ) ) | ( (lv_name_134_0= 'generate-validation-annotations' ) ) | ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_138_0= 'implementation-package' ) ) (this_WS_139= RULE_WS )+ ( (lv_implPackage_140_0= RULE_IDENT ) ) ) | ( (lv_name_141_0= 'make-it-final' ) ) | ( ( (lv_name_142_0= 'version-column' ) ) (this_WS_143= RULE_WS )+ ( (lv_version_144_0= RULE_IDENT ) ) ( (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+ )? ( (this_WS_149= RULE_WS )+ this_MINUS_150= RULE_MINUS ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_153_0= 'debug-level' ) ) (this_WS_154= RULE_WS )+ ( (lv_debug_155_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_156_0= 'pojos-for-procedures' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) ) )+ ) | ( ( (lv_name_159_0= 'pojos-for-functions' ) ) ( (this_WS_160= RULE_WS )+ ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) ) )+ ) | ( ( (lv_name_162_0= 'active-filter' ) ) (this_WS_163= RULE_WS )+ ( (lv_activeFilter_164_0= rulePropertyValue ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2876:1: ( ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ ) | ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) ) | ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ ) | ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ ) | ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ ) | ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ ) | ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ ) | ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ ) | ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ ) | ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ ) | ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_133_0= 'generate-wrappers' ) ) | ( (lv_name_134_0= 'generate-validation-annotations' ) ) | ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_138_0= 'implementation-package' ) ) (this_WS_139= RULE_WS )+ ( (lv_implPackage_140_0= RULE_IDENT ) ) ) | ( (lv_name_141_0= 'make-it-final' ) ) | ( ( (lv_name_142_0= 'version-column' ) ) (this_WS_143= RULE_WS )+ ( (lv_version_144_0= RULE_IDENT ) ) ( (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+ )? ( (this_WS_149= RULE_WS )+ this_MINUS_150= RULE_MINUS ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_153_0= 'debug-level' ) ) (this_WS_154= RULE_WS )+ ( (lv_debug_155_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_156_0= 'pojos-for-procedures' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) ) )+ ) | ( ( (lv_name_159_0= 'pojos-for-functions' ) ) ( (this_WS_160= RULE_WS )+ ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) ) )+ ) | ( ( (lv_name_162_0= 'active-filter' ) ) (this_WS_163= RULE_WS )+ ( (lv_activeFilter_164_0= rulePropertyValue ) ) ) )
            int alt167=41;
            switch ( input.LA(1) ) {
            case 72:
                {
                alt167=1;
                }
                break;
            case 73:
                {
                alt167=2;
                }
                break;
            case 74:
                {
                alt167=3;
                }
                break;
            case 75:
                {
                alt167=4;
                }
                break;
            case 76:
                {
                alt167=5;
                }
                break;
            case 77:
                {
                alt167=6;
                }
                break;
            case 78:
                {
                alt167=7;
                }
                break;
            case 79:
                {
                alt167=8;
                }
                break;
            case 80:
                {
                alt167=9;
                }
                break;
            case 81:
                {
                alt167=10;
                }
                break;
            case 82:
                {
                alt167=11;
                }
                break;
            case 83:
                {
                alt167=12;
                }
                break;
            case 84:
                {
                alt167=13;
                }
                break;
            case 85:
                {
                alt167=14;
                }
                break;
            case 86:
                {
                alt167=15;
                }
                break;
            case 87:
                {
                alt167=16;
                }
                break;
            case 88:
                {
                alt167=17;
                }
                break;
            case 89:
                {
                alt167=18;
                }
                break;
            case 90:
                {
                alt167=19;
                }
                break;
            case 91:
                {
                alt167=20;
                }
                break;
            case 92:
                {
                alt167=21;
                }
                break;
            case 93:
                {
                alt167=22;
                }
                break;
            case 94:
                {
                alt167=23;
                }
                break;
            case 95:
                {
                alt167=24;
                }
                break;
            case 96:
                {
                alt167=25;
                }
                break;
            case 97:
                {
                alt167=26;
                }
                break;
            case 98:
                {
                alt167=27;
                }
                break;
            case 99:
                {
                alt167=28;
                }
                break;
            case 100:
                {
                alt167=29;
                }
                break;
            case 101:
                {
                alt167=30;
                }
                break;
            case 102:
                {
                alt167=31;
                }
                break;
            case 103:
                {
                alt167=32;
                }
                break;
            case 104:
                {
                alt167=33;
                }
                break;
            case 105:
                {
                alt167=34;
                }
                break;
            case 106:
                {
                alt167=35;
                }
                break;
            case 107:
                {
                alt167=36;
                }
                break;
            case 108:
                {
                alt167=37;
                }
                break;
            case 68:
                {
                alt167=38;
                }
                break;
            case 109:
                {
                alt167=39;
                }
                break;
            case 110:
                {
                alt167=40;
                }
                break;
            case 111:
                {
                alt167=41;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }

            switch (alt167) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2876:2: ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2876:2: ( ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2876:3: ( (lv_name_0_0= 'types-sqltypes' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2876:3: ( (lv_name_0_0= 'types-sqltypes' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2877:1: (lv_name_0_0= 'types-sqltypes' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2877:1: (lv_name_0_0= 'types-sqltypes' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2878:3: lv_name_0_0= 'types-sqltypes'
                    {
                    lv_name_0_0=(Token)match(input,72,FollowSets000.FOLLOW_72_in_rulePojogenProperty5950); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getPojogenPropertyAccess().getNameTypesSqltypesKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "types-sqltypes");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2891:2: ( (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) ) )+
                    int cnt75=0;
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==RULE_WS) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2891:3: (this_WS_1= RULE_WS )+ ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2891:3: (this_WS_1= RULE_WS )+
                    	    int cnt74=0;
                    	    loop74:
                    	    do {
                    	        int alt74=2;
                    	        int LA74_0 = input.LA(1);

                    	        if ( (LA74_0==RULE_WS) ) {
                    	            alt74=1;
                    	        }


                    	        switch (alt74) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2891:4: this_WS_1= RULE_WS
                    	    	    {
                    	    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty5976); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_1, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_0_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt74 >= 1 ) break loop74;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(74, input);
                    	                throw eee;
                    	        }
                    	        cnt74++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2895:3: ( (lv_sqlTypes_2_0= ruleSqlTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2896:1: (lv_sqlTypes_2_0= ruleSqlTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2896:1: (lv_sqlTypes_2_0= ruleSqlTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2897:3: lv_sqlTypes_2_0= ruleSqlTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getSqlTypesSqlTypeAssignementParserRuleCall_0_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleSqlTypeAssignement_in_rulePojogenProperty5998);
                    	    lv_sqlTypes_2_0=ruleSqlTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"sqlTypes",
                    	              		lv_sqlTypes_2_0, 
                    	              		"SqlTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt75 >= 1 ) break loop75;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(75, input);
                                throw eee;
                        }
                        cnt75++;
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2914:6: ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2914:6: ( ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2914:7: ( (lv_name_3_0= 'types-in-table' ) ) (this_WS_4= RULE_WS )+ ( (lv_dbTable_5_0= RULE_IDENT ) ) ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2914:7: ( (lv_name_3_0= 'types-in-table' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2915:1: (lv_name_3_0= 'types-in-table' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2915:1: (lv_name_3_0= 'types-in-table' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2916:3: lv_name_3_0= 'types-in-table'
                    {
                    lv_name_3_0=(Token)match(input,73,FollowSets000.FOLLOW_73_in_rulePojogenProperty6026); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_3_0, grammarAccess.getPojogenPropertyAccess().getNameTypesInTableKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_3_0, "types-in-table");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2929:2: (this_WS_4= RULE_WS )+
                    int cnt76=0;
                    loop76:
                    do {
                        int alt76=2;
                        int LA76_0 = input.LA(1);

                        if ( (LA76_0==RULE_WS) ) {
                            alt76=1;
                        }


                        switch (alt76) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2929:3: this_WS_4= RULE_WS
                    	    {
                    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6051); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_4, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_1_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt76 >= 1 ) break loop76;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(76, input);
                                throw eee;
                        }
                        cnt76++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2933:3: ( (lv_dbTable_5_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2934:1: (lv_dbTable_5_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2934:1: (lv_dbTable_5_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2935:3: lv_dbTable_5_0= RULE_IDENT
                    {
                    lv_dbTable_5_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6069); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_5_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_1_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_5_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2951:2: ( (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) ) )+
                    int cnt78=0;
                    loop78:
                    do {
                        int alt78=2;
                        int LA78_0 = input.LA(1);

                        if ( (LA78_0==RULE_WS) ) {
                            alt78=1;
                        }


                        switch (alt78) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2951:3: (this_WS_6= RULE_WS )+ ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2951:3: (this_WS_6= RULE_WS )+
                    	    int cnt77=0;
                    	    loop77:
                    	    do {
                    	        int alt77=2;
                    	        int LA77_0 = input.LA(1);

                    	        if ( (LA77_0==RULE_WS) ) {
                    	            alt77=1;
                    	        }


                    	        switch (alt77) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2951:4: this_WS_6= RULE_WS
                    	    	    {
                    	    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6087); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_6, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_1_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt77 >= 1 ) break loop77;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(77, input);
                    	                throw eee;
                    	        }
                    	        cnt77++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2955:3: ( (lv_sqlTypes_7_0= ruleSqlTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2956:1: (lv_sqlTypes_7_0= ruleSqlTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2956:1: (lv_sqlTypes_7_0= ruleSqlTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2957:3: lv_sqlTypes_7_0= ruleSqlTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getSqlTypesSqlTypeAssignementParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleSqlTypeAssignement_in_rulePojogenProperty6109);
                    	    lv_sqlTypes_7_0=ruleSqlTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"sqlTypes",
                    	              		lv_sqlTypes_7_0, 
                    	              		"SqlTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt78 >= 1 ) break loop78;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(78, input);
                                throw eee;
                        }
                        cnt78++;
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2974:6: ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2974:6: ( ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2974:7: ( (lv_name_8_0= 'types-for-columns' ) ) (this_WS_9= RULE_WS )+ ( (lv_dbTable_10_0= RULE_IDENT ) ) ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2974:7: ( (lv_name_8_0= 'types-for-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2975:1: (lv_name_8_0= 'types-for-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2975:1: (lv_name_8_0= 'types-for-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2976:3: lv_name_8_0= 'types-for-columns'
                    {
                    lv_name_8_0=(Token)match(input,74,FollowSets000.FOLLOW_74_in_rulePojogenProperty6137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_8_0, grammarAccess.getPojogenPropertyAccess().getNameTypesForColumnsKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_8_0, "types-for-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2989:2: (this_WS_9= RULE_WS )+
                    int cnt79=0;
                    loop79:
                    do {
                        int alt79=2;
                        int LA79_0 = input.LA(1);

                        if ( (LA79_0==RULE_WS) ) {
                            alt79=1;
                        }


                        switch (alt79) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2989:3: this_WS_9= RULE_WS
                    	    {
                    	    this_WS_9=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6162); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_9, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_2_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt79 >= 1 ) break loop79;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(79, input);
                                throw eee;
                        }
                        cnt79++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2993:3: ( (lv_dbTable_10_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2994:1: (lv_dbTable_10_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2994:1: (lv_dbTable_10_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2995:3: lv_dbTable_10_0= RULE_IDENT
                    {
                    lv_dbTable_10_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6180); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_10_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_2_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_10_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3011:2: ( (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) ) )+
                    int cnt81=0;
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==RULE_WS) ) {
                            alt81=1;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3011:3: (this_WS_11= RULE_WS )+ ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3011:3: (this_WS_11= RULE_WS )+
                    	    int cnt80=0;
                    	    loop80:
                    	    do {
                    	        int alt80=2;
                    	        int LA80_0 = input.LA(1);

                    	        if ( (LA80_0==RULE_WS) ) {
                    	            alt80=1;
                    	        }


                    	        switch (alt80) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3011:4: this_WS_11= RULE_WS
                    	    	    {
                    	    	    this_WS_11=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6198); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_11, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_2_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt80 >= 1 ) break loop80;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(80, input);
                    	                throw eee;
                    	        }
                    	        cnt80++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3015:3: ( (lv_columnTypes_12_0= ruleColumnTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3016:1: (lv_columnTypes_12_0= ruleColumnTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3016:1: (lv_columnTypes_12_0= ruleColumnTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3017:3: lv_columnTypes_12_0= ruleColumnTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_2_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6220);
                    	    lv_columnTypes_12_0=ruleColumnTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columnTypes",
                    	              		lv_columnTypes_12_0, 
                    	              		"ColumnTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt81 >= 1 ) break loop81;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(81, input);
                                throw eee;
                        }
                        cnt81++;
                    } while (true);


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3034:6: ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3034:6: ( ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3034:7: ( (lv_name_13_0= 'types-for-procedure' ) ) (this_WS_14= RULE_WS )+ ( (lv_dbProcedure_15_0= RULE_IDENT ) ) ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3034:7: ( (lv_name_13_0= 'types-for-procedure' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3035:1: (lv_name_13_0= 'types-for-procedure' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3035:1: (lv_name_13_0= 'types-for-procedure' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3036:3: lv_name_13_0= 'types-for-procedure'
                    {
                    lv_name_13_0=(Token)match(input,75,FollowSets000.FOLLOW_75_in_rulePojogenProperty6248); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_13_0, grammarAccess.getPojogenPropertyAccess().getNameTypesForProcedureKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_13_0, "types-for-procedure");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3049:2: (this_WS_14= RULE_WS )+
                    int cnt82=0;
                    loop82:
                    do {
                        int alt82=2;
                        int LA82_0 = input.LA(1);

                        if ( (LA82_0==RULE_WS) ) {
                            alt82=1;
                        }


                        switch (alt82) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3049:3: this_WS_14= RULE_WS
                    	    {
                    	    this_WS_14=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6273); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_14, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_3_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt82 >= 1 ) break loop82;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(82, input);
                                throw eee;
                        }
                        cnt82++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3053:3: ( (lv_dbProcedure_15_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3054:1: (lv_dbProcedure_15_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3054:1: (lv_dbProcedure_15_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3055:3: lv_dbProcedure_15_0= RULE_IDENT
                    {
                    lv_dbProcedure_15_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6291); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbProcedure_15_0, grammarAccess.getPojogenPropertyAccess().getDbProcedureIDENTTerminalRuleCall_3_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbProcedure",
                              		lv_dbProcedure_15_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3071:2: ( (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) ) )+
                    int cnt84=0;
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

                        if ( (LA84_0==RULE_WS) ) {
                            alt84=1;
                        }


                        switch (alt84) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3071:3: (this_WS_16= RULE_WS )+ ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3071:3: (this_WS_16= RULE_WS )+
                    	    int cnt83=0;
                    	    loop83:
                    	    do {
                    	        int alt83=2;
                    	        int LA83_0 = input.LA(1);

                    	        if ( (LA83_0==RULE_WS) ) {
                    	            alt83=1;
                    	        }


                    	        switch (alt83) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3071:4: this_WS_16= RULE_WS
                    	    	    {
                    	    	    this_WS_16=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6309); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_16, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_3_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt83 >= 1 ) break loop83;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(83, input);
                    	                throw eee;
                    	        }
                    	        cnt83++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3075:3: ( (lv_columnTypes_17_0= ruleColumnTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3076:1: (lv_columnTypes_17_0= ruleColumnTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3076:1: (lv_columnTypes_17_0= ruleColumnTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3077:3: lv_columnTypes_17_0= ruleColumnTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_3_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6331);
                    	    lv_columnTypes_17_0=ruleColumnTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columnTypes",
                    	              		lv_columnTypes_17_0, 
                    	              		"ColumnTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt84 >= 1 ) break loop84;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(84, input);
                                throw eee;
                        }
                        cnt84++;
                    } while (true);


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3094:6: ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3094:6: ( ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3094:7: ( (lv_name_18_0= 'types-for-function' ) ) (this_WS_19= RULE_WS )+ ( (lv_dbFunction_20_0= RULE_IDENT ) ) ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3094:7: ( (lv_name_18_0= 'types-for-function' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3095:1: (lv_name_18_0= 'types-for-function' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3095:1: (lv_name_18_0= 'types-for-function' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3096:3: lv_name_18_0= 'types-for-function'
                    {
                    lv_name_18_0=(Token)match(input,76,FollowSets000.FOLLOW_76_in_rulePojogenProperty6359); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_18_0, grammarAccess.getPojogenPropertyAccess().getNameTypesForFunctionKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_18_0, "types-for-function");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3109:2: (this_WS_19= RULE_WS )+
                    int cnt85=0;
                    loop85:
                    do {
                        int alt85=2;
                        int LA85_0 = input.LA(1);

                        if ( (LA85_0==RULE_WS) ) {
                            alt85=1;
                        }


                        switch (alt85) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3109:3: this_WS_19= RULE_WS
                    	    {
                    	    this_WS_19=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6384); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_19, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt85 >= 1 ) break loop85;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(85, input);
                                throw eee;
                        }
                        cnt85++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3113:3: ( (lv_dbFunction_20_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3114:1: (lv_dbFunction_20_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3114:1: (lv_dbFunction_20_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3115:3: lv_dbFunction_20_0= RULE_IDENT
                    {
                    lv_dbFunction_20_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6402); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_20_0, grammarAccess.getPojogenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_4_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_20_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3131:2: ( (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) ) )+
                    int cnt87=0;
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==RULE_WS) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3131:3: (this_WS_21= RULE_WS )+ ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3131:3: (this_WS_21= RULE_WS )+
                    	    int cnt86=0;
                    	    loop86:
                    	    do {
                    	        int alt86=2;
                    	        int LA86_0 = input.LA(1);

                    	        if ( (LA86_0==RULE_WS) ) {
                    	            alt86=1;
                    	        }


                    	        switch (alt86) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3131:4: this_WS_21= RULE_WS
                    	    	    {
                    	    	    this_WS_21=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6420); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_21, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_4_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt86 >= 1 ) break loop86;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(86, input);
                    	                throw eee;
                    	        }
                    	        cnt86++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3135:3: ( (lv_columnTypes_22_0= ruleColumnTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3136:1: (lv_columnTypes_22_0= ruleColumnTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3136:1: (lv_columnTypes_22_0= ruleColumnTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3137:3: lv_columnTypes_22_0= ruleColumnTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_4_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6442);
                    	    lv_columnTypes_22_0=ruleColumnTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columnTypes",
                    	              		lv_columnTypes_22_0, 
                    	              		"ColumnTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt87 >= 1 ) break loop87;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(87, input);
                                throw eee;
                        }
                        cnt87++;
                    } while (true);


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3154:6: ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3154:6: ( ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3154:7: ( (lv_name_23_0= 'show-type-for-column' ) ) (this_WS_24= RULE_WS )+ ( (lv_dbTable_25_0= RULE_IDENT ) ) (this_WS_26= RULE_WS )+ ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3154:7: ( (lv_name_23_0= 'show-type-for-column' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3155:1: (lv_name_23_0= 'show-type-for-column' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3155:1: (lv_name_23_0= 'show-type-for-column' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3156:3: lv_name_23_0= 'show-type-for-column'
                    {
                    lv_name_23_0=(Token)match(input,77,FollowSets000.FOLLOW_77_in_rulePojogenProperty6470); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_23_0, grammarAccess.getPojogenPropertyAccess().getNameShowTypeForColumnKeyword_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_23_0, "show-type-for-column");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3169:2: (this_WS_24= RULE_WS )+
                    int cnt88=0;
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==RULE_WS) ) {
                            alt88=1;
                        }


                        switch (alt88) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3169:3: this_WS_24= RULE_WS
                    	    {
                    	    this_WS_24=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6495); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_24, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_5_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt88 >= 1 ) break loop88;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(88, input);
                                throw eee;
                        }
                        cnt88++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3173:3: ( (lv_dbTable_25_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3174:1: (lv_dbTable_25_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3174:1: (lv_dbTable_25_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3175:3: lv_dbTable_25_0= RULE_IDENT
                    {
                    lv_dbTable_25_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6513); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_25_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_5_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_25_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3191:2: (this_WS_26= RULE_WS )+
                    int cnt89=0;
                    loop89:
                    do {
                        int alt89=2;
                        int LA89_0 = input.LA(1);

                        if ( (LA89_0==RULE_WS) ) {
                            alt89=1;
                        }


                        switch (alt89) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3191:3: this_WS_26= RULE_WS
                    	    {
                    	    this_WS_26=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6530); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_26, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_5_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt89 >= 1 ) break loop89;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(89, input);
                                throw eee;
                        }
                        cnt89++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3195:3: ( (lv_columnType_27_0= ruleShowColumnTypeAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3196:1: (lv_columnType_27_0= ruleShowColumnTypeAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3196:1: (lv_columnType_27_0= ruleShowColumnTypeAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3197:3: lv_columnType_27_0= ruleShowColumnTypeAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypeShowColumnTypeAssignementParserRuleCall_5_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6552);
                    lv_columnType_27_0=ruleShowColumnTypeAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"columnType",
                              		lv_columnType_27_0, 
                              		"ShowColumnTypeAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3214:6: ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3214:6: ( ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3214:7: ( (lv_name_28_0= 'show-type-for-procedure' ) ) (this_WS_29= RULE_WS )+ ( (lv_dbProcedure_30_0= RULE_IDENT ) ) (this_WS_31= RULE_WS )+ ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3214:7: ( (lv_name_28_0= 'show-type-for-procedure' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3215:1: (lv_name_28_0= 'show-type-for-procedure' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3215:1: (lv_name_28_0= 'show-type-for-procedure' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3216:3: lv_name_28_0= 'show-type-for-procedure'
                    {
                    lv_name_28_0=(Token)match(input,78,FollowSets000.FOLLOW_78_in_rulePojogenProperty6578); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_28_0, grammarAccess.getPojogenPropertyAccess().getNameShowTypeForProcedureKeyword_6_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_28_0, "show-type-for-procedure");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3229:2: (this_WS_29= RULE_WS )+
                    int cnt90=0;
                    loop90:
                    do {
                        int alt90=2;
                        int LA90_0 = input.LA(1);

                        if ( (LA90_0==RULE_WS) ) {
                            alt90=1;
                        }


                        switch (alt90) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3229:3: this_WS_29= RULE_WS
                    	    {
                    	    this_WS_29=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6603); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_29, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_6_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt90 >= 1 ) break loop90;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(90, input);
                                throw eee;
                        }
                        cnt90++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3233:3: ( (lv_dbProcedure_30_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3234:1: (lv_dbProcedure_30_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3234:1: (lv_dbProcedure_30_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3235:3: lv_dbProcedure_30_0= RULE_IDENT
                    {
                    lv_dbProcedure_30_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6621); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbProcedure_30_0, grammarAccess.getPojogenPropertyAccess().getDbProcedureIDENTTerminalRuleCall_6_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbProcedure",
                              		lv_dbProcedure_30_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3251:2: (this_WS_31= RULE_WS )+
                    int cnt91=0;
                    loop91:
                    do {
                        int alt91=2;
                        int LA91_0 = input.LA(1);

                        if ( (LA91_0==RULE_WS) ) {
                            alt91=1;
                        }


                        switch (alt91) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3251:3: this_WS_31= RULE_WS
                    	    {
                    	    this_WS_31=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6638); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_31, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_6_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt91 >= 1 ) break loop91;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(91, input);
                                throw eee;
                        }
                        cnt91++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3255:3: ( (lv_columnType_32_0= ruleShowColumnTypeAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3256:1: (lv_columnType_32_0= ruleShowColumnTypeAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3256:1: (lv_columnType_32_0= ruleShowColumnTypeAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3257:3: lv_columnType_32_0= ruleShowColumnTypeAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypeShowColumnTypeAssignementParserRuleCall_6_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6660);
                    lv_columnType_32_0=ruleShowColumnTypeAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"columnType",
                              		lv_columnType_32_0, 
                              		"ShowColumnTypeAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3274:6: ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3274:6: ( ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3274:7: ( (lv_name_33_0= 'show-type-for-function' ) ) (this_WS_34= RULE_WS )+ ( (lv_dbFunction_35_0= RULE_IDENT ) ) (this_WS_36= RULE_WS )+ ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3274:7: ( (lv_name_33_0= 'show-type-for-function' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3275:1: (lv_name_33_0= 'show-type-for-function' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3275:1: (lv_name_33_0= 'show-type-for-function' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3276:3: lv_name_33_0= 'show-type-for-function'
                    {
                    lv_name_33_0=(Token)match(input,79,FollowSets000.FOLLOW_79_in_rulePojogenProperty6686); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_33_0, grammarAccess.getPojogenPropertyAccess().getNameShowTypeForFunctionKeyword_7_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_33_0, "show-type-for-function");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3289:2: (this_WS_34= RULE_WS )+
                    int cnt92=0;
                    loop92:
                    do {
                        int alt92=2;
                        int LA92_0 = input.LA(1);

                        if ( (LA92_0==RULE_WS) ) {
                            alt92=1;
                        }


                        switch (alt92) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3289:3: this_WS_34= RULE_WS
                    	    {
                    	    this_WS_34=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6711); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_34, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_7_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt92 >= 1 ) break loop92;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(92, input);
                                throw eee;
                        }
                        cnt92++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3293:3: ( (lv_dbFunction_35_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3294:1: (lv_dbFunction_35_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3294:1: (lv_dbFunction_35_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3295:3: lv_dbFunction_35_0= RULE_IDENT
                    {
                    lv_dbFunction_35_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6729); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_35_0, grammarAccess.getPojogenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_7_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_35_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3311:2: (this_WS_36= RULE_WS )+
                    int cnt93=0;
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==RULE_WS) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3311:3: this_WS_36= RULE_WS
                    	    {
                    	    this_WS_36=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6746); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_36, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_7_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt93 >= 1 ) break loop93;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(93, input);
                                throw eee;
                        }
                        cnt93++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3315:3: ( (lv_columnType_37_0= ruleShowColumnTypeAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3316:1: (lv_columnType_37_0= ruleShowColumnTypeAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3316:1: (lv_columnType_37_0= ruleShowColumnTypeAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3317:3: lv_columnType_37_0= ruleShowColumnTypeAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypeShowColumnTypeAssignementParserRuleCall_7_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6768);
                    lv_columnType_37_0=ruleShowColumnTypeAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"columnType",
                              		lv_columnType_37_0, 
                              		"ShowColumnTypeAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3334:6: ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3334:6: ( ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3334:7: ( (lv_name_38_0= 'ignore-tables' ) ) ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3334:7: ( (lv_name_38_0= 'ignore-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3335:1: (lv_name_38_0= 'ignore-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3335:1: (lv_name_38_0= 'ignore-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3336:3: lv_name_38_0= 'ignore-tables'
                    {
                    lv_name_38_0=(Token)match(input,80,FollowSets000.FOLLOW_80_in_rulePojogenProperty6794); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_38_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreTablesKeyword_8_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_38_0, "ignore-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3349:2: ( (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) ) )+
                    int cnt95=0;
                    loop95:
                    do {
                        int alt95=2;
                        int LA95_0 = input.LA(1);

                        if ( (LA95_0==RULE_WS) ) {
                            alt95=1;
                        }


                        switch (alt95) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3349:3: (this_WS_39= RULE_WS )+ ( (lv_dbTables_40_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3349:3: (this_WS_39= RULE_WS )+
                    	    int cnt94=0;
                    	    loop94:
                    	    do {
                    	        int alt94=2;
                    	        int LA94_0 = input.LA(1);

                    	        if ( (LA94_0==RULE_WS) ) {
                    	            alt94=1;
                    	        }


                    	        switch (alt94) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3349:4: this_WS_39= RULE_WS
                    	    	    {
                    	    	    this_WS_39=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6820); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_39, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_8_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt94 >= 1 ) break loop94;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(94, input);
                    	                throw eee;
                    	        }
                    	        cnt94++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3353:3: ( (lv_dbTables_40_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3354:1: (lv_dbTables_40_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3354:1: (lv_dbTables_40_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3355:3: lv_dbTables_40_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_40_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6838); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_40_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_8_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_40_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt95 >= 1 ) break loop95;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(95, input);
                                throw eee;
                        }
                        cnt95++;
                    } while (true);


                    }


                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3372:6: ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3372:6: ( ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3372:7: ( (lv_name_41_0= 'only-tables' ) ) ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3372:7: ( (lv_name_41_0= 'only-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3373:1: (lv_name_41_0= 'only-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3373:1: (lv_name_41_0= 'only-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3374:3: lv_name_41_0= 'only-tables'
                    {
                    lv_name_41_0=(Token)match(input,81,FollowSets000.FOLLOW_81_in_rulePojogenProperty6871); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_41_0, grammarAccess.getPojogenPropertyAccess().getNameOnlyTablesKeyword_9_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_41_0, "only-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3387:2: ( (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) ) )+
                    int cnt97=0;
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==RULE_WS) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3387:3: (this_WS_42= RULE_WS )+ ( (lv_dbTables_43_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3387:3: (this_WS_42= RULE_WS )+
                    	    int cnt96=0;
                    	    loop96:
                    	    do {
                    	        int alt96=2;
                    	        int LA96_0 = input.LA(1);

                    	        if ( (LA96_0==RULE_WS) ) {
                    	            alt96=1;
                    	        }


                    	        switch (alt96) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3387:4: this_WS_42= RULE_WS
                    	    	    {
                    	    	    this_WS_42=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6897); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_42, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_9_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt96 >= 1 ) break loop96;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(96, input);
                    	                throw eee;
                    	        }
                    	        cnt96++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3391:3: ( (lv_dbTables_43_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3392:1: (lv_dbTables_43_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3392:1: (lv_dbTables_43_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3393:3: lv_dbTables_43_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_43_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6915); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_43_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_9_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_43_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt97 >= 1 ) break loop97;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(97, input);
                                throw eee;
                        }
                        cnt97++;
                    } while (true);


                    }


                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3410:6: ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3410:6: ( ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3410:7: ( (lv_name_44_0= 'not-abstract-tables' ) ) ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3410:7: ( (lv_name_44_0= 'not-abstract-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3411:1: (lv_name_44_0= 'not-abstract-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3411:1: (lv_name_44_0= 'not-abstract-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3412:3: lv_name_44_0= 'not-abstract-tables'
                    {
                    lv_name_44_0=(Token)match(input,82,FollowSets000.FOLLOW_82_in_rulePojogenProperty6948); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_44_0, grammarAccess.getPojogenPropertyAccess().getNameNotAbstractTablesKeyword_10_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_44_0, "not-abstract-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3425:2: ( (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) ) )+
                    int cnt99=0;
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==RULE_WS) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3425:3: (this_WS_45= RULE_WS )+ ( (lv_dbTables_46_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3425:3: (this_WS_45= RULE_WS )+
                    	    int cnt98=0;
                    	    loop98:
                    	    do {
                    	        int alt98=2;
                    	        int LA98_0 = input.LA(1);

                    	        if ( (LA98_0==RULE_WS) ) {
                    	            alt98=1;
                    	        }


                    	        switch (alt98) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3425:4: this_WS_45= RULE_WS
                    	    	    {
                    	    	    this_WS_45=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty6974); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_45, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_10_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt98 >= 1 ) break loop98;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(98, input);
                    	                throw eee;
                    	        }
                    	        cnt98++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3429:3: ( (lv_dbTables_46_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3430:1: (lv_dbTables_46_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3430:1: (lv_dbTables_46_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3431:3: lv_dbTables_46_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_46_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty6992); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_46_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_10_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_46_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt99 >= 1 ) break loop99;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(99, input);
                                throw eee;
                        }
                        cnt99++;
                    } while (true);


                    }


                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3448:6: ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3448:6: ( ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3448:7: ( (lv_name_47_0= 'join-tables' ) ) ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3448:7: ( (lv_name_47_0= 'join-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3449:1: (lv_name_47_0= 'join-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3449:1: (lv_name_47_0= 'join-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3450:3: lv_name_47_0= 'join-tables'
                    {
                    lv_name_47_0=(Token)match(input,83,FollowSets000.FOLLOW_83_in_rulePojogenProperty7025); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_47_0, grammarAccess.getPojogenPropertyAccess().getNameJoinTablesKeyword_11_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_47_0, "join-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3463:2: ( (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) ) )+
                    int cnt101=0;
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==RULE_WS) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3463:3: (this_WS_48= RULE_WS )+ ( (lv_joinTables_49_0= ruleJoinTableAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3463:3: (this_WS_48= RULE_WS )+
                    	    int cnt100=0;
                    	    loop100:
                    	    do {
                    	        int alt100=2;
                    	        int LA100_0 = input.LA(1);

                    	        if ( (LA100_0==RULE_WS) ) {
                    	            alt100=1;
                    	        }


                    	        switch (alt100) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3463:4: this_WS_48= RULE_WS
                    	    	    {
                    	    	    this_WS_48=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7051); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_48, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_11_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt100 >= 1 ) break loop100;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(100, input);
                    	                throw eee;
                    	        }
                    	        cnt100++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3467:3: ( (lv_joinTables_49_0= ruleJoinTableAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3468:1: (lv_joinTables_49_0= ruleJoinTableAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3468:1: (lv_joinTables_49_0= ruleJoinTableAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3469:3: lv_joinTables_49_0= ruleJoinTableAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getJoinTablesJoinTableAssignementParserRuleCall_11_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleJoinTableAssignement_in_rulePojogenProperty7073);
                    	    lv_joinTables_49_0=ruleJoinTableAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"joinTables",
                    	              		lv_joinTables_49_0, 
                    	              		"JoinTableAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt101 >= 1 ) break loop101;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(101, input);
                                throw eee;
                        }
                        cnt101++;
                    } while (true);


                    }


                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3486:6: ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3486:6: ( ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3486:7: ( (lv_name_50_0= 'ignore-columns' ) ) (this_WS_51= RULE_WS )+ ( (lv_dbTable_52_0= RULE_IDENT ) ) ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3486:7: ( (lv_name_50_0= 'ignore-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3487:1: (lv_name_50_0= 'ignore-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3487:1: (lv_name_50_0= 'ignore-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3488:3: lv_name_50_0= 'ignore-columns'
                    {
                    lv_name_50_0=(Token)match(input,84,FollowSets000.FOLLOW_84_in_rulePojogenProperty7101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_50_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreColumnsKeyword_12_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_50_0, "ignore-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3501:2: (this_WS_51= RULE_WS )+
                    int cnt102=0;
                    loop102:
                    do {
                        int alt102=2;
                        int LA102_0 = input.LA(1);

                        if ( (LA102_0==RULE_WS) ) {
                            alt102=1;
                        }


                        switch (alt102) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3501:3: this_WS_51= RULE_WS
                    	    {
                    	    this_WS_51=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7126); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_51, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_12_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt102 >= 1 ) break loop102;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(102, input);
                                throw eee;
                        }
                        cnt102++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3505:3: ( (lv_dbTable_52_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3506:1: (lv_dbTable_52_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3506:1: (lv_dbTable_52_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3507:3: lv_dbTable_52_0= RULE_IDENT
                    {
                    lv_dbTable_52_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_52_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_12_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_52_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3523:2: ( (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) ) )+
                    int cnt104=0;
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==RULE_WS) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3523:3: (this_WS_53= RULE_WS )+ ( (lv_dbColumns_54_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3523:3: (this_WS_53= RULE_WS )+
                    	    int cnt103=0;
                    	    loop103:
                    	    do {
                    	        int alt103=2;
                    	        int LA103_0 = input.LA(1);

                    	        if ( (LA103_0==RULE_WS) ) {
                    	            alt103=1;
                    	        }


                    	        switch (alt103) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3523:4: this_WS_53= RULE_WS
                    	    	    {
                    	    	    this_WS_53=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7162); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_53, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_12_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt103 >= 1 ) break loop103;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(103, input);
                    	                throw eee;
                    	        }
                    	        cnt103++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3527:3: ( (lv_dbColumns_54_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3528:1: (lv_dbColumns_54_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3528:1: (lv_dbColumns_54_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3529:3: lv_dbColumns_54_0= RULE_IDENT
                    	    {
                    	    lv_dbColumns_54_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7180); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbColumns_54_0, grammarAccess.getPojogenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_12_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbColumns",
                    	              		lv_dbColumns_54_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt104 >= 1 ) break loop104;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(104, input);
                                throw eee;
                        }
                        cnt104++;
                    } while (true);


                    }


                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3546:6: ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3546:6: ( ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3546:7: ( (lv_name_55_0= 'required-columns' ) ) (this_WS_56= RULE_WS )+ ( (lv_dbTable_57_0= RULE_IDENT ) ) ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3546:7: ( (lv_name_55_0= 'required-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3547:1: (lv_name_55_0= 'required-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3547:1: (lv_name_55_0= 'required-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3548:3: lv_name_55_0= 'required-columns'
                    {
                    lv_name_55_0=(Token)match(input,85,FollowSets000.FOLLOW_85_in_rulePojogenProperty7213); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_55_0, grammarAccess.getPojogenPropertyAccess().getNameRequiredColumnsKeyword_13_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_55_0, "required-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3561:2: (this_WS_56= RULE_WS )+
                    int cnt105=0;
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==RULE_WS) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3561:3: this_WS_56= RULE_WS
                    	    {
                    	    this_WS_56=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7238); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_56, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_13_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt105 >= 1 ) break loop105;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(105, input);
                                throw eee;
                        }
                        cnt105++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3565:3: ( (lv_dbTable_57_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3566:1: (lv_dbTable_57_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3566:1: (lv_dbTable_57_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3567:3: lv_dbTable_57_0= RULE_IDENT
                    {
                    lv_dbTable_57_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7256); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_57_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_13_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_57_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3583:2: ( (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) ) )+
                    int cnt107=0;
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==RULE_WS) ) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3583:3: (this_WS_58= RULE_WS )+ ( (lv_dbColumns_59_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3583:3: (this_WS_58= RULE_WS )+
                    	    int cnt106=0;
                    	    loop106:
                    	    do {
                    	        int alt106=2;
                    	        int LA106_0 = input.LA(1);

                    	        if ( (LA106_0==RULE_WS) ) {
                    	            alt106=1;
                    	        }


                    	        switch (alt106) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3583:4: this_WS_58= RULE_WS
                    	    	    {
                    	    	    this_WS_58=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7274); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_58, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_13_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt106 >= 1 ) break loop106;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(106, input);
                    	                throw eee;
                    	        }
                    	        cnt106++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3587:3: ( (lv_dbColumns_59_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3588:1: (lv_dbColumns_59_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3588:1: (lv_dbColumns_59_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3589:3: lv_dbColumns_59_0= RULE_IDENT
                    	    {
                    	    lv_dbColumns_59_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7292); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbColumns_59_0, grammarAccess.getPojogenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_13_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbColumns",
                    	              		lv_dbColumns_59_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt107 >= 1 ) break loop107;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(107, input);
                                throw eee;
                        }
                        cnt107++;
                    } while (true);


                    }


                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3606:6: ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3606:6: ( ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3606:7: ( (lv_name_60_0= 'not-required-columns' ) ) (this_WS_61= RULE_WS )+ ( (lv_dbTable_62_0= RULE_IDENT ) ) ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3606:7: ( (lv_name_60_0= 'not-required-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3607:1: (lv_name_60_0= 'not-required-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3607:1: (lv_name_60_0= 'not-required-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3608:3: lv_name_60_0= 'not-required-columns'
                    {
                    lv_name_60_0=(Token)match(input,86,FollowSets000.FOLLOW_86_in_rulePojogenProperty7325); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_60_0, grammarAccess.getPojogenPropertyAccess().getNameNotRequiredColumnsKeyword_14_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_60_0, "not-required-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3621:2: (this_WS_61= RULE_WS )+
                    int cnt108=0;
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==RULE_WS) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3621:3: this_WS_61= RULE_WS
                    	    {
                    	    this_WS_61=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7350); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_61, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_14_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt108 >= 1 ) break loop108;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(108, input);
                                throw eee;
                        }
                        cnt108++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3625:3: ( (lv_dbTable_62_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3626:1: (lv_dbTable_62_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3626:1: (lv_dbTable_62_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3627:3: lv_dbTable_62_0= RULE_IDENT
                    {
                    lv_dbTable_62_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7368); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_62_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_14_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_62_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3643:2: ( (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) ) )+
                    int cnt110=0;
                    loop110:
                    do {
                        int alt110=2;
                        int LA110_0 = input.LA(1);

                        if ( (LA110_0==RULE_WS) ) {
                            alt110=1;
                        }


                        switch (alt110) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3643:3: (this_WS_63= RULE_WS )+ ( (lv_dbColumns_64_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3643:3: (this_WS_63= RULE_WS )+
                    	    int cnt109=0;
                    	    loop109:
                    	    do {
                    	        int alt109=2;
                    	        int LA109_0 = input.LA(1);

                    	        if ( (LA109_0==RULE_WS) ) {
                    	            alt109=1;
                    	        }


                    	        switch (alt109) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3643:4: this_WS_63= RULE_WS
                    	    	    {
                    	    	    this_WS_63=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7386); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_63, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_14_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt109 >= 1 ) break loop109;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(109, input);
                    	                throw eee;
                    	        }
                    	        cnt109++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3647:3: ( (lv_dbColumns_64_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3648:1: (lv_dbColumns_64_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3648:1: (lv_dbColumns_64_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3649:3: lv_dbColumns_64_0= RULE_IDENT
                    	    {
                    	    lv_dbColumns_64_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7404); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbColumns_64_0, grammarAccess.getPojogenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_14_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbColumns",
                    	              		lv_dbColumns_64_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt110 >= 1 ) break loop110;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(110, input);
                                throw eee;
                        }
                        cnt110++;
                    } while (true);


                    }


                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3666:6: ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3666:6: ( ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3666:7: ( (lv_name_65_0= 'create-columns' ) ) (this_WS_66= RULE_WS )+ ( (lv_dbTable_67_0= RULE_IDENT ) ) ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3666:7: ( (lv_name_65_0= 'create-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3667:1: (lv_name_65_0= 'create-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3667:1: (lv_name_65_0= 'create-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3668:3: lv_name_65_0= 'create-columns'
                    {
                    lv_name_65_0=(Token)match(input,87,FollowSets000.FOLLOW_87_in_rulePojogenProperty7437); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_65_0, grammarAccess.getPojogenPropertyAccess().getNameCreateColumnsKeyword_15_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_65_0, "create-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3681:2: (this_WS_66= RULE_WS )+
                    int cnt111=0;
                    loop111:
                    do {
                        int alt111=2;
                        int LA111_0 = input.LA(1);

                        if ( (LA111_0==RULE_WS) ) {
                            alt111=1;
                        }


                        switch (alt111) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3681:3: this_WS_66= RULE_WS
                    	    {
                    	    this_WS_66=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7462); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_66, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_15_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt111 >= 1 ) break loop111;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(111, input);
                                throw eee;
                        }
                        cnt111++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3685:3: ( (lv_dbTable_67_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3686:1: (lv_dbTable_67_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3686:1: (lv_dbTable_67_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3687:3: lv_dbTable_67_0= RULE_IDENT
                    {
                    lv_dbTable_67_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7480); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_67_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_15_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_67_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3703:2: ( (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) ) )+
                    int cnt113=0;
                    loop113:
                    do {
                        int alt113=2;
                        int LA113_0 = input.LA(1);

                        if ( (LA113_0==RULE_WS) ) {
                            alt113=1;
                        }


                        switch (alt113) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3703:3: (this_WS_68= RULE_WS )+ ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3703:3: (this_WS_68= RULE_WS )+
                    	    int cnt112=0;
                    	    loop112:
                    	    do {
                    	        int alt112=2;
                    	        int LA112_0 = input.LA(1);

                    	        if ( (LA112_0==RULE_WS) ) {
                    	            alt112=1;
                    	        }


                    	        switch (alt112) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3703:4: this_WS_68= RULE_WS
                    	    	    {
                    	    	    this_WS_68=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7498); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_68, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_15_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt112 >= 1 ) break loop112;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(112, input);
                    	                throw eee;
                    	        }
                    	        cnt112++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3707:3: ( (lv_columnTypes_69_0= ruleColumnTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3708:1: (lv_columnTypes_69_0= ruleColumnTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3708:1: (lv_columnTypes_69_0= ruleColumnTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3709:3: lv_columnTypes_69_0= ruleColumnTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_15_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty7520);
                    	    lv_columnTypes_69_0=ruleColumnTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columnTypes",
                    	              		lv_columnTypes_69_0, 
                    	              		"ColumnTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt113 >= 1 ) break loop113;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(113, input);
                                throw eee;
                        }
                        cnt113++;
                    } while (true);


                    }


                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3726:6: ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3726:6: ( ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3726:7: ( (lv_name_70_0= 'rename-tables' ) ) ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3726:7: ( (lv_name_70_0= 'rename-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3727:1: (lv_name_70_0= 'rename-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3727:1: (lv_name_70_0= 'rename-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3728:3: lv_name_70_0= 'rename-tables'
                    {
                    lv_name_70_0=(Token)match(input,88,FollowSets000.FOLLOW_88_in_rulePojogenProperty7548); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_70_0, grammarAccess.getPojogenPropertyAccess().getNameRenameTablesKeyword_16_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_70_0, "rename-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3741:2: ( (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) ) )+
                    int cnt115=0;
                    loop115:
                    do {
                        int alt115=2;
                        int LA115_0 = input.LA(1);

                        if ( (LA115_0==RULE_WS) ) {
                            alt115=1;
                        }


                        switch (alt115) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3741:3: (this_WS_71= RULE_WS )+ ( (lv_tables_72_0= ruleTableAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3741:3: (this_WS_71= RULE_WS )+
                    	    int cnt114=0;
                    	    loop114:
                    	    do {
                    	        int alt114=2;
                    	        int LA114_0 = input.LA(1);

                    	        if ( (LA114_0==RULE_WS) ) {
                    	            alt114=1;
                    	        }


                    	        switch (alt114) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3741:4: this_WS_71= RULE_WS
                    	    	    {
                    	    	    this_WS_71=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7574); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_71, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_16_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt114 >= 1 ) break loop114;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(114, input);
                    	                throw eee;
                    	        }
                    	        cnt114++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3745:3: ( (lv_tables_72_0= ruleTableAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3746:1: (lv_tables_72_0= ruleTableAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3746:1: (lv_tables_72_0= ruleTableAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3747:3: lv_tables_72_0= ruleTableAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getTablesTableAssignementParserRuleCall_16_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleTableAssignement_in_rulePojogenProperty7596);
                    	    lv_tables_72_0=ruleTableAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"tables",
                    	              		lv_tables_72_0, 
                    	              		"TableAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt115 >= 1 ) break loop115;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(115, input);
                                throw eee;
                        }
                        cnt115++;
                    } while (true);


                    }


                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3764:6: ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3764:6: ( ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3764:7: ( (lv_name_73_0= 'rename-columns' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbTable_75_0= RULE_IDENT ) ) ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3764:7: ( (lv_name_73_0= 'rename-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3765:1: (lv_name_73_0= 'rename-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3765:1: (lv_name_73_0= 'rename-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3766:3: lv_name_73_0= 'rename-columns'
                    {
                    lv_name_73_0=(Token)match(input,89,FollowSets000.FOLLOW_89_in_rulePojogenProperty7624); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_73_0, grammarAccess.getPojogenPropertyAccess().getNameRenameColumnsKeyword_17_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_73_0, "rename-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3779:2: (this_WS_74= RULE_WS )+
                    int cnt116=0;
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==RULE_WS) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3779:3: this_WS_74= RULE_WS
                    	    {
                    	    this_WS_74=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7649); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_74, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_17_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt116 >= 1 ) break loop116;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(116, input);
                                throw eee;
                        }
                        cnt116++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3783:3: ( (lv_dbTable_75_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3784:1: (lv_dbTable_75_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3784:1: (lv_dbTable_75_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3785:3: lv_dbTable_75_0= RULE_IDENT
                    {
                    lv_dbTable_75_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7667); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_75_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_17_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_75_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3801:2: ( (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) ) )+
                    int cnt118=0;
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==RULE_WS) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3801:3: (this_WS_76= RULE_WS )+ ( (lv_columns_77_0= ruleColumnAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3801:3: (this_WS_76= RULE_WS )+
                    	    int cnt117=0;
                    	    loop117:
                    	    do {
                    	        int alt117=2;
                    	        int LA117_0 = input.LA(1);

                    	        if ( (LA117_0==RULE_WS) ) {
                    	            alt117=1;
                    	        }


                    	        switch (alt117) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3801:4: this_WS_76= RULE_WS
                    	    	    {
                    	    	    this_WS_76=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7685); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_76, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_17_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt117 >= 1 ) break loop117;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(117, input);
                    	                throw eee;
                    	        }
                    	        cnt117++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3805:3: ( (lv_columns_77_0= ruleColumnAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3806:1: (lv_columns_77_0= ruleColumnAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3806:1: (lv_columns_77_0= ruleColumnAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3807:3: lv_columns_77_0= ruleColumnAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnsColumnAssignementParserRuleCall_17_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleColumnAssignement_in_rulePojogenProperty7707);
                    	    lv_columns_77_0=ruleColumnAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"columns",
                    	              		lv_columns_77_0, 
                    	              		"ColumnAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt118 >= 1 ) break loop118;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(118, input);
                                throw eee;
                        }
                        cnt118++;
                    } while (true);


                    }


                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3824:6: ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3824:6: ( ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3824:7: ( (lv_name_78_0= 'ignore-one-to-many' ) ) (this_WS_79= RULE_WS )+ ( (lv_dbTable_80_0= RULE_IDENT ) ) ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3824:7: ( (lv_name_78_0= 'ignore-one-to-many' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3825:1: (lv_name_78_0= 'ignore-one-to-many' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3825:1: (lv_name_78_0= 'ignore-one-to-many' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3826:3: lv_name_78_0= 'ignore-one-to-many'
                    {
                    lv_name_78_0=(Token)match(input,90,FollowSets000.FOLLOW_90_in_rulePojogenProperty7735); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_78_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreOneToManyKeyword_18_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_78_0, "ignore-one-to-many");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3839:2: (this_WS_79= RULE_WS )+
                    int cnt119=0;
                    loop119:
                    do {
                        int alt119=2;
                        int LA119_0 = input.LA(1);

                        if ( (LA119_0==RULE_WS) ) {
                            alt119=1;
                        }


                        switch (alt119) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3839:3: this_WS_79= RULE_WS
                    	    {
                    	    this_WS_79=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7760); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_79, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_18_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt119 >= 1 ) break loop119;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(119, input);
                                throw eee;
                        }
                        cnt119++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3843:3: ( (lv_dbTable_80_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3844:1: (lv_dbTable_80_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3844:1: (lv_dbTable_80_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3845:3: lv_dbTable_80_0= RULE_IDENT
                    {
                    lv_dbTable_80_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7778); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_80_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_18_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_80_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3861:2: ( (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) ) )+
                    int cnt121=0;
                    loop121:
                    do {
                        int alt121=2;
                        int LA121_0 = input.LA(1);

                        if ( (LA121_0==RULE_WS) ) {
                            alt121=1;
                        }


                        switch (alt121) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3861:3: (this_WS_81= RULE_WS )+ ( (lv_exports_82_0= ruleExportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3861:3: (this_WS_81= RULE_WS )+
                    	    int cnt120=0;
                    	    loop120:
                    	    do {
                    	        int alt120=2;
                    	        int LA120_0 = input.LA(1);

                    	        if ( (LA120_0==RULE_WS) ) {
                    	            alt120=1;
                    	        }


                    	        switch (alt120) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3861:4: this_WS_81= RULE_WS
                    	    	    {
                    	    	    this_WS_81=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7796); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_81, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_18_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt120 >= 1 ) break loop120;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(120, input);
                    	                throw eee;
                    	        }
                    	        cnt120++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3865:3: ( (lv_exports_82_0= ruleExportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3866:1: (lv_exports_82_0= ruleExportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3866:1: (lv_exports_82_0= ruleExportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3867:3: lv_exports_82_0= ruleExportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getExportsExportAssignementParserRuleCall_18_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleExportAssignement_in_rulePojogenProperty7818);
                    	    lv_exports_82_0=ruleExportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exports",
                    	              		lv_exports_82_0, 
                    	              		"ExportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt121 >= 1 ) break loop121;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(121, input);
                                throw eee;
                        }
                        cnt121++;
                    } while (true);


                    }


                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3884:6: ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3884:6: ( ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3884:7: ( (lv_name_83_0= 'ignore-many-to-one' ) ) (this_WS_84= RULE_WS )+ ( (lv_dbTable_85_0= RULE_IDENT ) ) ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3884:7: ( (lv_name_83_0= 'ignore-many-to-one' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3885:1: (lv_name_83_0= 'ignore-many-to-one' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3885:1: (lv_name_83_0= 'ignore-many-to-one' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3886:3: lv_name_83_0= 'ignore-many-to-one'
                    {
                    lv_name_83_0=(Token)match(input,91,FollowSets000.FOLLOW_91_in_rulePojogenProperty7846); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_83_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreManyToOneKeyword_19_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_83_0, "ignore-many-to-one");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3899:2: (this_WS_84= RULE_WS )+
                    int cnt122=0;
                    loop122:
                    do {
                        int alt122=2;
                        int LA122_0 = input.LA(1);

                        if ( (LA122_0==RULE_WS) ) {
                            alt122=1;
                        }


                        switch (alt122) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3899:3: this_WS_84= RULE_WS
                    	    {
                    	    this_WS_84=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7871); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_84, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_19_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt122 >= 1 ) break loop122;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(122, input);
                                throw eee;
                        }
                        cnt122++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3903:3: ( (lv_dbTable_85_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3904:1: (lv_dbTable_85_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3904:1: (lv_dbTable_85_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3905:3: lv_dbTable_85_0= RULE_IDENT
                    {
                    lv_dbTable_85_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty7889); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_85_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_19_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_85_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3921:2: ( (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) ) )+
                    int cnt124=0;
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==RULE_WS) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3921:3: (this_WS_86= RULE_WS )+ ( (lv_imports_87_0= ruleImportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3921:3: (this_WS_86= RULE_WS )+
                    	    int cnt123=0;
                    	    loop123:
                    	    do {
                    	        int alt123=2;
                    	        int LA123_0 = input.LA(1);

                    	        if ( (LA123_0==RULE_WS) ) {
                    	            alt123=1;
                    	        }


                    	        switch (alt123) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3921:4: this_WS_86= RULE_WS
                    	    	    {
                    	    	    this_WS_86=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7907); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_86, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_19_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt123 >= 1 ) break loop123;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(123, input);
                    	                throw eee;
                    	        }
                    	        cnt123++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3925:3: ( (lv_imports_87_0= ruleImportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3926:1: (lv_imports_87_0= ruleImportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3926:1: (lv_imports_87_0= ruleImportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3927:3: lv_imports_87_0= ruleImportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getImportsImportAssignementParserRuleCall_19_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleImportAssignement_in_rulePojogenProperty7929);
                    	    lv_imports_87_0=ruleImportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"imports",
                    	              		lv_imports_87_0, 
                    	              		"ImportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt124 >= 1 ) break loop124;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(124, input);
                                throw eee;
                        }
                        cnt124++;
                    } while (true);


                    }


                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3944:6: ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3944:6: ( ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3944:7: ( (lv_name_88_0= 'inherit-many-to-one' ) ) (this_WS_89= RULE_WS )+ ( (lv_dbTable_90_0= RULE_IDENT ) ) ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3944:7: ( (lv_name_88_0= 'inherit-many-to-one' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3945:1: (lv_name_88_0= 'inherit-many-to-one' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3945:1: (lv_name_88_0= 'inherit-many-to-one' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3946:3: lv_name_88_0= 'inherit-many-to-one'
                    {
                    lv_name_88_0=(Token)match(input,92,FollowSets000.FOLLOW_92_in_rulePojogenProperty7957); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_88_0, grammarAccess.getPojogenPropertyAccess().getNameInheritManyToOneKeyword_20_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_88_0, "inherit-many-to-one");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3959:2: (this_WS_89= RULE_WS )+
                    int cnt125=0;
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==RULE_WS) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3959:3: this_WS_89= RULE_WS
                    	    {
                    	    this_WS_89=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty7982); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_89, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_20_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt125 >= 1 ) break loop125;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(125, input);
                                throw eee;
                        }
                        cnt125++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3963:3: ( (lv_dbTable_90_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3964:1: (lv_dbTable_90_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3964:1: (lv_dbTable_90_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3965:3: lv_dbTable_90_0= RULE_IDENT
                    {
                    lv_dbTable_90_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8000); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_90_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_20_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_90_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3981:2: ( (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) ) )+
                    int cnt127=0;
                    loop127:
                    do {
                        int alt127=2;
                        int LA127_0 = input.LA(1);

                        if ( (LA127_0==RULE_WS) ) {
                            alt127=1;
                        }


                        switch (alt127) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3981:3: (this_WS_91= RULE_WS )+ ( (lv_imports_92_0= ruleImportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3981:3: (this_WS_91= RULE_WS )+
                    	    int cnt126=0;
                    	    loop126:
                    	    do {
                    	        int alt126=2;
                    	        int LA126_0 = input.LA(1);

                    	        if ( (LA126_0==RULE_WS) ) {
                    	            alt126=1;
                    	        }


                    	        switch (alt126) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3981:4: this_WS_91= RULE_WS
                    	    	    {
                    	    	    this_WS_91=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8018); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_91, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_20_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt126 >= 1 ) break loop126;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(126, input);
                    	                throw eee;
                    	        }
                    	        cnt126++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3985:3: ( (lv_imports_92_0= ruleImportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3986:1: (lv_imports_92_0= ruleImportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3986:1: (lv_imports_92_0= ruleImportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:3987:3: lv_imports_92_0= ruleImportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getImportsImportAssignementParserRuleCall_20_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleImportAssignement_in_rulePojogenProperty8040);
                    	    lv_imports_92_0=ruleImportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"imports",
                    	              		lv_imports_92_0, 
                    	              		"ImportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt127 >= 1 ) break loop127;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(127, input);
                                throw eee;
                        }
                        cnt127++;
                    } while (true);


                    }


                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4004:6: ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4004:6: ( ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4004:7: ( (lv_name_93_0= 'create-one-to-many' ) ) (this_WS_94= RULE_WS )+ ( (lv_dbTable_95_0= RULE_IDENT ) ) ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4004:7: ( (lv_name_93_0= 'create-one-to-many' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4005:1: (lv_name_93_0= 'create-one-to-many' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4005:1: (lv_name_93_0= 'create-one-to-many' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4006:3: lv_name_93_0= 'create-one-to-many'
                    {
                    lv_name_93_0=(Token)match(input,93,FollowSets000.FOLLOW_93_in_rulePojogenProperty8068); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_93_0, grammarAccess.getPojogenPropertyAccess().getNameCreateOneToManyKeyword_21_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_93_0, "create-one-to-many");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4019:2: (this_WS_94= RULE_WS )+
                    int cnt128=0;
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==RULE_WS) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4019:3: this_WS_94= RULE_WS
                    	    {
                    	    this_WS_94=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8093); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_94, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_21_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt128 >= 1 ) break loop128;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(128, input);
                                throw eee;
                        }
                        cnt128++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4023:3: ( (lv_dbTable_95_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4024:1: (lv_dbTable_95_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4024:1: (lv_dbTable_95_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4025:3: lv_dbTable_95_0= RULE_IDENT
                    {
                    lv_dbTable_95_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_95_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_21_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_95_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4041:2: ( (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) ) )+
                    int cnt130=0;
                    loop130:
                    do {
                        int alt130=2;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==RULE_WS) ) {
                            alt130=1;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4041:3: (this_WS_96= RULE_WS )+ ( (lv_exports_97_0= ruleExportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4041:3: (this_WS_96= RULE_WS )+
                    	    int cnt129=0;
                    	    loop129:
                    	    do {
                    	        int alt129=2;
                    	        int LA129_0 = input.LA(1);

                    	        if ( (LA129_0==RULE_WS) ) {
                    	            alt129=1;
                    	        }


                    	        switch (alt129) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4041:4: this_WS_96= RULE_WS
                    	    	    {
                    	    	    this_WS_96=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8129); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_96, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_21_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt129 >= 1 ) break loop129;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(129, input);
                    	                throw eee;
                    	        }
                    	        cnt129++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4045:3: ( (lv_exports_97_0= ruleExportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4046:1: (lv_exports_97_0= ruleExportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4046:1: (lv_exports_97_0= ruleExportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4047:3: lv_exports_97_0= ruleExportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getExportsExportAssignementParserRuleCall_21_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleExportAssignement_in_rulePojogenProperty8151);
                    	    lv_exports_97_0=ruleExportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exports",
                    	              		lv_exports_97_0, 
                    	              		"ExportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt130 >= 1 ) break loop130;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(130, input);
                                throw eee;
                        }
                        cnt130++;
                    } while (true);


                    }


                    }
                    break;
                case 23 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4064:6: ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4064:6: ( ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4064:7: ( (lv_name_98_0= 'create-many-to-one' ) ) (this_WS_99= RULE_WS )+ ( (lv_dbTable_100_0= RULE_IDENT ) ) ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4064:7: ( (lv_name_98_0= 'create-many-to-one' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4065:1: (lv_name_98_0= 'create-many-to-one' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4065:1: (lv_name_98_0= 'create-many-to-one' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4066:3: lv_name_98_0= 'create-many-to-one'
                    {
                    lv_name_98_0=(Token)match(input,94,FollowSets000.FOLLOW_94_in_rulePojogenProperty8179); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_98_0, grammarAccess.getPojogenPropertyAccess().getNameCreateManyToOneKeyword_22_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_98_0, "create-many-to-one");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4079:2: (this_WS_99= RULE_WS )+
                    int cnt131=0;
                    loop131:
                    do {
                        int alt131=2;
                        int LA131_0 = input.LA(1);

                        if ( (LA131_0==RULE_WS) ) {
                            alt131=1;
                        }


                        switch (alt131) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4079:3: this_WS_99= RULE_WS
                    	    {
                    	    this_WS_99=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8204); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_99, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_22_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt131 >= 1 ) break loop131;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(131, input);
                                throw eee;
                        }
                        cnt131++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4083:3: ( (lv_dbTable_100_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4084:1: (lv_dbTable_100_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4084:1: (lv_dbTable_100_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4085:3: lv_dbTable_100_0= RULE_IDENT
                    {
                    lv_dbTable_100_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8222); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_100_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_22_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_100_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4101:2: ( (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) ) )+
                    int cnt133=0;
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==RULE_WS) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4101:3: (this_WS_101= RULE_WS )+ ( (lv_imports_102_0= ruleImportAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4101:3: (this_WS_101= RULE_WS )+
                    	    int cnt132=0;
                    	    loop132:
                    	    do {
                    	        int alt132=2;
                    	        int LA132_0 = input.LA(1);

                    	        if ( (LA132_0==RULE_WS) ) {
                    	            alt132=1;
                    	        }


                    	        switch (alt132) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4101:4: this_WS_101= RULE_WS
                    	    	    {
                    	    	    this_WS_101=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8240); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_101, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_22_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt132 >= 1 ) break loop132;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(132, input);
                    	                throw eee;
                    	        }
                    	        cnt132++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4105:3: ( (lv_imports_102_0= ruleImportAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4106:1: (lv_imports_102_0= ruleImportAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4106:1: (lv_imports_102_0= ruleImportAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4107:3: lv_imports_102_0= ruleImportAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getImportsImportAssignementParserRuleCall_22_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleImportAssignement_in_rulePojogenProperty8262);
                    	    lv_imports_102_0=ruleImportAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"imports",
                    	              		lv_imports_102_0, 
                    	              		"ImportAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt133 >= 1 ) break loop133;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(133, input);
                                throw eee;
                        }
                        cnt133++;
                    } while (true);


                    }


                    }
                    break;
                case 24 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4124:6: ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4124:6: ( ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4124:7: ( (lv_name_103_0= 'table-many-to-many' ) ) (this_WS_104= RULE_WS )+ ( (lv_dbTable_105_0= RULE_IDENT ) ) ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4124:7: ( (lv_name_103_0= 'table-many-to-many' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4125:1: (lv_name_103_0= 'table-many-to-many' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4125:1: (lv_name_103_0= 'table-many-to-many' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4126:3: lv_name_103_0= 'table-many-to-many'
                    {
                    lv_name_103_0=(Token)match(input,95,FollowSets000.FOLLOW_95_in_rulePojogenProperty8290); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_103_0, grammarAccess.getPojogenPropertyAccess().getNameTableManyToManyKeyword_23_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_103_0, "table-many-to-many");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4139:2: (this_WS_104= RULE_WS )+
                    int cnt134=0;
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==RULE_WS) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4139:3: this_WS_104= RULE_WS
                    	    {
                    	    this_WS_104=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8315); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_104, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_23_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt134 >= 1 ) break loop134;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(134, input);
                                throw eee;
                        }
                        cnt134++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4143:3: ( (lv_dbTable_105_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4144:1: (lv_dbTable_105_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4144:1: (lv_dbTable_105_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4145:3: lv_dbTable_105_0= RULE_IDENT
                    {
                    lv_dbTable_105_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8333); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_105_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_23_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_105_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4161:2: ( (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) ) )+
                    int cnt136=0;
                    loop136:
                    do {
                        int alt136=2;
                        int LA136_0 = input.LA(1);

                        if ( (LA136_0==RULE_WS) ) {
                            alt136=1;
                        }


                        switch (alt136) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4161:3: (this_WS_106= RULE_WS )+ ( (lv_many2s_107_0= ruleManyToManyAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4161:3: (this_WS_106= RULE_WS )+
                    	    int cnt135=0;
                    	    loop135:
                    	    do {
                    	        int alt135=2;
                    	        int LA135_0 = input.LA(1);

                    	        if ( (LA135_0==RULE_WS) ) {
                    	            alt135=1;
                    	        }


                    	        switch (alt135) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4161:4: this_WS_106= RULE_WS
                    	    	    {
                    	    	    this_WS_106=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8351); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_106, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_23_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt135 >= 1 ) break loop135;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(135, input);
                    	                throw eee;
                    	        }
                    	        cnt135++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4165:3: ( (lv_many2s_107_0= ruleManyToManyAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4166:1: (lv_many2s_107_0= ruleManyToManyAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4166:1: (lv_many2s_107_0= ruleManyToManyAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4167:3: lv_many2s_107_0= ruleManyToManyAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getMany2sManyToManyAssignementParserRuleCall_23_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleManyToManyAssignement_in_rulePojogenProperty8373);
                    	    lv_many2s_107_0=ruleManyToManyAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"many2s",
                    	              		lv_many2s_107_0, 
                    	              		"ManyToManyAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt136 >= 1 ) break loop136;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(136, input);
                                throw eee;
                        }
                        cnt136++;
                    } while (true);


                    }


                    }
                    break;
                case 25 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4184:6: ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4184:6: ( ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4184:7: ( (lv_name_108_0= 'inherit-discriminator' ) ) (this_WS_109= RULE_WS )+ ( (lv_dbTable_110_0= RULE_IDENT ) ) (this_WS_111= RULE_WS )+ ( (lv_dbColumn_112_0= RULE_IDENT ) ) ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4184:7: ( (lv_name_108_0= 'inherit-discriminator' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4185:1: (lv_name_108_0= 'inherit-discriminator' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4185:1: (lv_name_108_0= 'inherit-discriminator' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4186:3: lv_name_108_0= 'inherit-discriminator'
                    {
                    lv_name_108_0=(Token)match(input,96,FollowSets000.FOLLOW_96_in_rulePojogenProperty8401); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_108_0, grammarAccess.getPojogenPropertyAccess().getNameInheritDiscriminatorKeyword_24_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_108_0, "inherit-discriminator");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4199:2: (this_WS_109= RULE_WS )+
                    int cnt137=0;
                    loop137:
                    do {
                        int alt137=2;
                        int LA137_0 = input.LA(1);

                        if ( (LA137_0==RULE_WS) ) {
                            alt137=1;
                        }


                        switch (alt137) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4199:3: this_WS_109= RULE_WS
                    	    {
                    	    this_WS_109=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8426); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_109, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_24_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt137 >= 1 ) break loop137;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(137, input);
                                throw eee;
                        }
                        cnt137++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4203:3: ( (lv_dbTable_110_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4204:1: (lv_dbTable_110_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4204:1: (lv_dbTable_110_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4205:3: lv_dbTable_110_0= RULE_IDENT
                    {
                    lv_dbTable_110_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8444); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_110_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_24_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_110_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4221:2: (this_WS_111= RULE_WS )+
                    int cnt138=0;
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==RULE_WS) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4221:3: this_WS_111= RULE_WS
                    	    {
                    	    this_WS_111=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8461); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_111, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_24_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt138 >= 1 ) break loop138;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(138, input);
                                throw eee;
                        }
                        cnt138++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4225:3: ( (lv_dbColumn_112_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4226:1: (lv_dbColumn_112_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4226:1: (lv_dbColumn_112_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4227:3: lv_dbColumn_112_0= RULE_IDENT
                    {
                    lv_dbColumn_112_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8479); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbColumn_112_0, grammarAccess.getPojogenPropertyAccess().getDbColumnIDENTTerminalRuleCall_24_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbColumn",
                              		lv_dbColumn_112_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4243:2: ( (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) ) )+
                    int cnt140=0;
                    loop140:
                    do {
                        int alt140=2;
                        int LA140_0 = input.LA(1);

                        if ( (LA140_0==RULE_WS) ) {
                            alt140=1;
                        }


                        switch (alt140) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4243:3: (this_WS_113= RULE_WS )+ ( (lv_inheritance_114_0= ruleInheritanceAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4243:3: (this_WS_113= RULE_WS )+
                    	    int cnt139=0;
                    	    loop139:
                    	    do {
                    	        int alt139=2;
                    	        int LA139_0 = input.LA(1);

                    	        if ( (LA139_0==RULE_WS) ) {
                    	            alt139=1;
                    	        }


                    	        switch (alt139) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4243:4: this_WS_113= RULE_WS
                    	    	    {
                    	    	    this_WS_113=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8497); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_113, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_24_5_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt139 >= 1 ) break loop139;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(139, input);
                    	                throw eee;
                    	        }
                    	        cnt139++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4247:3: ( (lv_inheritance_114_0= ruleInheritanceAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4248:1: (lv_inheritance_114_0= ruleInheritanceAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4248:1: (lv_inheritance_114_0= ruleInheritanceAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4249:3: lv_inheritance_114_0= ruleInheritanceAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getInheritanceInheritanceAssignementParserRuleCall_24_5_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleInheritanceAssignement_in_rulePojogenProperty8519);
                    	    lv_inheritance_114_0=ruleInheritanceAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"inheritance",
                    	              		lv_inheritance_114_0, 
                    	              		"InheritanceAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt140 >= 1 ) break loop140;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(140, input);
                                throw eee;
                        }
                        cnt140++;
                    } while (true);


                    }


                    }
                    break;
                case 26 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4266:6: ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4266:6: ( ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4266:7: ( (lv_name_115_0= 'generate-methods' ) ) ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4266:7: ( (lv_name_115_0= 'generate-methods' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4267:1: (lv_name_115_0= 'generate-methods' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4267:1: (lv_name_115_0= 'generate-methods' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4268:3: lv_name_115_0= 'generate-methods'
                    {
                    lv_name_115_0=(Token)match(input,97,FollowSets000.FOLLOW_97_in_rulePojogenProperty8547); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_115_0, grammarAccess.getPojogenPropertyAccess().getNameGenerateMethodsKeyword_25_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_115_0, "generate-methods");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4281:2: ( (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) ) )+
                    int cnt142=0;
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==RULE_WS) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4281:3: (this_WS_116= RULE_WS )+ ( (lv_methods_117_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4281:3: (this_WS_116= RULE_WS )+
                    	    int cnt141=0;
                    	    loop141:
                    	    do {
                    	        int alt141=2;
                    	        int LA141_0 = input.LA(1);

                    	        if ( (LA141_0==RULE_WS) ) {
                    	            alt141=1;
                    	        }


                    	        switch (alt141) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4281:4: this_WS_116= RULE_WS
                    	    	    {
                    	    	    this_WS_116=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8573); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_116, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_25_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt141 >= 1 ) break loop141;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(141, input);
                    	                throw eee;
                    	        }
                    	        cnt141++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4285:3: ( (lv_methods_117_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4286:1: (lv_methods_117_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4286:1: (lv_methods_117_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4287:3: lv_methods_117_0= RULE_IDENT
                    	    {
                    	    lv_methods_117_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8591); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_methods_117_0, grammarAccess.getPojogenPropertyAccess().getMethodsIDENTTerminalRuleCall_25_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"methods",
                    	              		lv_methods_117_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt142 >= 1 ) break loop142;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(142, input);
                                throw eee;
                        }
                        cnt142++;
                    } while (true);


                    }


                    }
                    break;
                case 27 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4304:6: ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4304:6: ( ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4304:7: ( (lv_name_118_0= 'generate-operators' ) ) ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4304:7: ( (lv_name_118_0= 'generate-operators' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4305:1: (lv_name_118_0= 'generate-operators' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4305:1: (lv_name_118_0= 'generate-operators' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4306:3: lv_name_118_0= 'generate-operators'
                    {
                    lv_name_118_0=(Token)match(input,98,FollowSets000.FOLLOW_98_in_rulePojogenProperty8624); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_118_0, grammarAccess.getPojogenPropertyAccess().getNameGenerateOperatorsKeyword_26_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_118_0, "generate-operators");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4319:2: ( (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) ) )?
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==RULE_WS) ) {
                        alt144=1;
                    }
                    switch (alt144) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4319:3: (this_WS_119= RULE_WS )+ ( (lv_operatorsSuffix_120_0= RULE_IDENT ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4319:3: (this_WS_119= RULE_WS )+
                            int cnt143=0;
                            loop143:
                            do {
                                int alt143=2;
                                int LA143_0 = input.LA(1);

                                if ( (LA143_0==RULE_WS) ) {
                                    alt143=1;
                                }


                                switch (alt143) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4319:4: this_WS_119= RULE_WS
                            	    {
                            	    this_WS_119=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8650); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_119, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_26_1_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt143 >= 1 ) break loop143;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(143, input);
                                        throw eee;
                                }
                                cnt143++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4323:3: ( (lv_operatorsSuffix_120_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4324:1: (lv_operatorsSuffix_120_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4324:1: (lv_operatorsSuffix_120_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4325:3: lv_operatorsSuffix_120_0= RULE_IDENT
                            {
                            lv_operatorsSuffix_120_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty8668); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_operatorsSuffix_120_0, grammarAccess.getPojogenPropertyAccess().getOperatorsSuffixIDENTTerminalRuleCall_26_1_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"operatorsSuffix",
                                      		lv_operatorsSuffix_120_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 28 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4342:6: ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4342:6: ( ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4342:7: ( (lv_name_121_0= 'implements-interfaces' ) ) (this_WS_122= RULE_WS )+ ( (lv_toImplements_123_0= ruleImplementsAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4342:7: ( (lv_name_121_0= 'implements-interfaces' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4343:1: (lv_name_121_0= 'implements-interfaces' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4343:1: (lv_name_121_0= 'implements-interfaces' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4344:3: lv_name_121_0= 'implements-interfaces'
                    {
                    lv_name_121_0=(Token)match(input,99,FollowSets000.FOLLOW_99_in_rulePojogenProperty8701); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_121_0, grammarAccess.getPojogenPropertyAccess().getNameImplementsInterfacesKeyword_27_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_121_0, "implements-interfaces");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4357:2: (this_WS_122= RULE_WS )+
                    int cnt145=0;
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==RULE_WS) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4357:3: this_WS_122= RULE_WS
                    	    {
                    	    this_WS_122=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8726); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_122, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_27_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt145 >= 1 ) break loop145;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(145, input);
                                throw eee;
                        }
                        cnt145++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4361:3: ( (lv_toImplements_123_0= ruleImplementsAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4362:1: (lv_toImplements_123_0= ruleImplementsAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4362:1: (lv_toImplements_123_0= ruleImplementsAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4363:3: lv_toImplements_123_0= ruleImplementsAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToImplementsImplementsAssignementParserRuleCall_27_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleImplementsAssignement_in_rulePojogenProperty8748);
                    lv_toImplements_123_0=ruleImplementsAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toImplements",
                              		lv_toImplements_123_0, 
                              		"ImplementsAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 29 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4380:6: ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4380:6: ( ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4380:7: ( (lv_name_124_0= 'extends-class' ) ) (this_WS_125= RULE_WS )+ ( (lv_toExtends_126_0= ruleExtendsAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4380:7: ( (lv_name_124_0= 'extends-class' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4381:1: (lv_name_124_0= 'extends-class' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4381:1: (lv_name_124_0= 'extends-class' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4382:3: lv_name_124_0= 'extends-class'
                    {
                    lv_name_124_0=(Token)match(input,100,FollowSets000.FOLLOW_100_in_rulePojogenProperty8774); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_124_0, grammarAccess.getPojogenPropertyAccess().getNameExtendsClassKeyword_28_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_124_0, "extends-class");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4395:2: (this_WS_125= RULE_WS )+
                    int cnt146=0;
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==RULE_WS) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4395:3: this_WS_125= RULE_WS
                    	    {
                    	    this_WS_125=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8799); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_125, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_28_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt146 >= 1 ) break loop146;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(146, input);
                                throw eee;
                        }
                        cnt146++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4399:3: ( (lv_toExtends_126_0= ruleExtendsAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4400:1: (lv_toExtends_126_0= ruleExtendsAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4400:1: (lv_toExtends_126_0= ruleExtendsAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4401:3: lv_toExtends_126_0= ruleExtendsAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToExtendsExtendsAssignementParserRuleCall_28_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExtendsAssignement_in_rulePojogenProperty8821);
                    lv_toExtends_126_0=ruleExtendsAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toExtends",
                              		lv_toExtends_126_0, 
                              		"ExtendsAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 30 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4418:6: ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4418:6: ( ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4418:7: ( (lv_name_127_0= 'implements-interfaces-generics' ) ) (this_WS_128= RULE_WS )+ ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4418:7: ( (lv_name_127_0= 'implements-interfaces-generics' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4419:1: (lv_name_127_0= 'implements-interfaces-generics' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4419:1: (lv_name_127_0= 'implements-interfaces-generics' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4420:3: lv_name_127_0= 'implements-interfaces-generics'
                    {
                    lv_name_127_0=(Token)match(input,101,FollowSets000.FOLLOW_101_in_rulePojogenProperty8847); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_127_0, grammarAccess.getPojogenPropertyAccess().getNameImplementsInterfacesGenericsKeyword_29_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_127_0, "implements-interfaces-generics");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4433:2: (this_WS_128= RULE_WS )+
                    int cnt147=0;
                    loop147:
                    do {
                        int alt147=2;
                        int LA147_0 = input.LA(1);

                        if ( (LA147_0==RULE_WS) ) {
                            alt147=1;
                        }


                        switch (alt147) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4433:3: this_WS_128= RULE_WS
                    	    {
                    	    this_WS_128=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8872); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_128, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_29_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt147 >= 1 ) break loop147;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(147, input);
                                throw eee;
                        }
                        cnt147++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4437:3: ( (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4438:1: (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4438:1: (lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4439:3: lv_toImplementsGenerics_129_0= ruleImplementsAssignementGenerics
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToImplementsGenericsImplementsAssignementGenericsParserRuleCall_29_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleImplementsAssignementGenerics_in_rulePojogenProperty8894);
                    lv_toImplementsGenerics_129_0=ruleImplementsAssignementGenerics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toImplementsGenerics",
                              		lv_toImplementsGenerics_129_0, 
                              		"ImplementsAssignementGenerics");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 31 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4456:6: ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4456:6: ( ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4456:7: ( (lv_name_130_0= 'extends-class-generics' ) ) (this_WS_131= RULE_WS )+ ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4456:7: ( (lv_name_130_0= 'extends-class-generics' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4457:1: (lv_name_130_0= 'extends-class-generics' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4457:1: (lv_name_130_0= 'extends-class-generics' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4458:3: lv_name_130_0= 'extends-class-generics'
                    {
                    lv_name_130_0=(Token)match(input,102,FollowSets000.FOLLOW_102_in_rulePojogenProperty8920); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_130_0, grammarAccess.getPojogenPropertyAccess().getNameExtendsClassGenericsKeyword_30_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_130_0, "extends-class-generics");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4471:2: (this_WS_131= RULE_WS )+
                    int cnt148=0;
                    loop148:
                    do {
                        int alt148=2;
                        int LA148_0 = input.LA(1);

                        if ( (LA148_0==RULE_WS) ) {
                            alt148=1;
                        }


                        switch (alt148) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4471:3: this_WS_131= RULE_WS
                    	    {
                    	    this_WS_131=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty8945); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_131, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_30_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt148 >= 1 ) break loop148;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(148, input);
                                throw eee;
                        }
                        cnt148++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4475:3: ( (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4476:1: (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4476:1: (lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4477:3: lv_toExtendsGenerics_132_0= ruleExtendsAssignementGenerics
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToExtendsGenericsExtendsAssignementGenericsParserRuleCall_30_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleExtendsAssignementGenerics_in_rulePojogenProperty8967);
                    lv_toExtendsGenerics_132_0=ruleExtendsAssignementGenerics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toExtendsGenerics",
                              		lv_toExtendsGenerics_132_0, 
                              		"ExtendsAssignementGenerics");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 32 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4494:6: ( (lv_name_133_0= 'generate-wrappers' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4494:6: ( (lv_name_133_0= 'generate-wrappers' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4495:1: (lv_name_133_0= 'generate-wrappers' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4495:1: (lv_name_133_0= 'generate-wrappers' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4496:3: lv_name_133_0= 'generate-wrappers'
                    {
                    lv_name_133_0=(Token)match(input,103,FollowSets000.FOLLOW_103_in_rulePojogenProperty8992); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_133_0, grammarAccess.getPojogenPropertyAccess().getNameGenerateWrappersKeyword_31_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_133_0, "generate-wrappers");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 33 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4510:6: ( (lv_name_134_0= 'generate-validation-annotations' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4510:6: ( (lv_name_134_0= 'generate-validation-annotations' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4511:1: (lv_name_134_0= 'generate-validation-annotations' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4511:1: (lv_name_134_0= 'generate-validation-annotations' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4512:3: lv_name_134_0= 'generate-validation-annotations'
                    {
                    lv_name_134_0=(Token)match(input,104,FollowSets000.FOLLOW_104_in_rulePojogenProperty9029); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_134_0, grammarAccess.getPojogenPropertyAccess().getNameGenerateValidationAnnotationsKeyword_32_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_134_0, "generate-validation-annotations");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 34 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4526:6: ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4526:6: ( ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4526:7: ( (lv_name_135_0= 'preserve-foreign-keys' ) ) ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4526:7: ( (lv_name_135_0= 'preserve-foreign-keys' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4527:1: (lv_name_135_0= 'preserve-foreign-keys' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4527:1: (lv_name_135_0= 'preserve-foreign-keys' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4528:3: lv_name_135_0= 'preserve-foreign-keys'
                    {
                    lv_name_135_0=(Token)match(input,105,FollowSets000.FOLLOW_105_in_rulePojogenProperty9067); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_135_0, grammarAccess.getPojogenPropertyAccess().getNamePreserveForeignKeysKeyword_33_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_135_0, "preserve-foreign-keys");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4541:2: ( (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) ) )*
                    loop150:
                    do {
                        int alt150=2;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==RULE_WS) ) {
                            alt150=1;
                        }


                        switch (alt150) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4541:3: (this_WS_136= RULE_WS )+ ( (lv_dbTables_137_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4541:3: (this_WS_136= RULE_WS )+
                    	    int cnt149=0;
                    	    loop149:
                    	    do {
                    	        int alt149=2;
                    	        int LA149_0 = input.LA(1);

                    	        if ( (LA149_0==RULE_WS) ) {
                    	            alt149=1;
                    	        }


                    	        switch (alt149) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4541:4: this_WS_136= RULE_WS
                    	    	    {
                    	    	    this_WS_136=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9093); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_136, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_33_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt149 >= 1 ) break loop149;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(149, input);
                    	                throw eee;
                    	        }
                    	        cnt149++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4545:3: ( (lv_dbTables_137_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4546:1: (lv_dbTables_137_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4546:1: (lv_dbTables_137_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4547:3: lv_dbTables_137_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_137_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9111); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_137_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_33_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_137_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop150;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 35 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4564:6: ( ( (lv_name_138_0= 'implementation-package' ) ) (this_WS_139= RULE_WS )+ ( (lv_implPackage_140_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4564:6: ( ( (lv_name_138_0= 'implementation-package' ) ) (this_WS_139= RULE_WS )+ ( (lv_implPackage_140_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4564:7: ( (lv_name_138_0= 'implementation-package' ) ) (this_WS_139= RULE_WS )+ ( (lv_implPackage_140_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4564:7: ( (lv_name_138_0= 'implementation-package' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4565:1: (lv_name_138_0= 'implementation-package' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4565:1: (lv_name_138_0= 'implementation-package' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4566:3: lv_name_138_0= 'implementation-package'
                    {
                    lv_name_138_0=(Token)match(input,106,FollowSets000.FOLLOW_106_in_rulePojogenProperty9144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_138_0, grammarAccess.getPojogenPropertyAccess().getNameImplementationPackageKeyword_34_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_138_0, "implementation-package");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4579:2: (this_WS_139= RULE_WS )+
                    int cnt151=0;
                    loop151:
                    do {
                        int alt151=2;
                        int LA151_0 = input.LA(1);

                        if ( (LA151_0==RULE_WS) ) {
                            alt151=1;
                        }


                        switch (alt151) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4579:3: this_WS_139= RULE_WS
                    	    {
                    	    this_WS_139=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9169); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_139, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_34_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt151 >= 1 ) break loop151;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(151, input);
                                throw eee;
                        }
                        cnt151++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4583:3: ( (lv_implPackage_140_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4584:1: (lv_implPackage_140_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4584:1: (lv_implPackage_140_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4585:3: lv_implPackage_140_0= RULE_IDENT
                    {
                    lv_implPackage_140_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9187); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_implPackage_140_0, grammarAccess.getPojogenPropertyAccess().getImplPackageIDENTTerminalRuleCall_34_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"implPackage",
                              		lv_implPackage_140_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 36 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4602:6: ( (lv_name_141_0= 'make-it-final' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4602:6: ( (lv_name_141_0= 'make-it-final' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4603:1: (lv_name_141_0= 'make-it-final' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4603:1: (lv_name_141_0= 'make-it-final' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4604:3: lv_name_141_0= 'make-it-final'
                    {
                    lv_name_141_0=(Token)match(input,107,FollowSets000.FOLLOW_107_in_rulePojogenProperty9217); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_141_0, grammarAccess.getPojogenPropertyAccess().getNameMakeItFinalKeyword_35_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_141_0, "make-it-final");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 37 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4618:6: ( ( (lv_name_142_0= 'version-column' ) ) (this_WS_143= RULE_WS )+ ( (lv_version_144_0= RULE_IDENT ) ) ( (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+ )? ( (this_WS_149= RULE_WS )+ this_MINUS_150= RULE_MINUS ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+ )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4618:6: ( ( (lv_name_142_0= 'version-column' ) ) (this_WS_143= RULE_WS )+ ( (lv_version_144_0= RULE_IDENT ) ) ( (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+ )? ( (this_WS_149= RULE_WS )+ this_MINUS_150= RULE_MINUS ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+ )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4618:7: ( (lv_name_142_0= 'version-column' ) ) (this_WS_143= RULE_WS )+ ( (lv_version_144_0= RULE_IDENT ) ) ( (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+ )? ( (this_WS_149= RULE_WS )+ this_MINUS_150= RULE_MINUS ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+ )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4618:7: ( (lv_name_142_0= 'version-column' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4619:1: (lv_name_142_0= 'version-column' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4619:1: (lv_name_142_0= 'version-column' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4620:3: lv_name_142_0= 'version-column'
                    {
                    lv_name_142_0=(Token)match(input,108,FollowSets000.FOLLOW_108_in_rulePojogenProperty9255); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_142_0, grammarAccess.getPojogenPropertyAccess().getNameVersionColumnKeyword_36_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_142_0, "version-column");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4633:2: (this_WS_143= RULE_WS )+
                    int cnt152=0;
                    loop152:
                    do {
                        int alt152=2;
                        int LA152_0 = input.LA(1);

                        if ( (LA152_0==RULE_WS) ) {
                            alt152=1;
                        }


                        switch (alt152) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4633:3: this_WS_143= RULE_WS
                    	    {
                    	    this_WS_143=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9280); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_143, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_36_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt152 >= 1 ) break loop152;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(152, input);
                                throw eee;
                        }
                        cnt152++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4637:3: ( (lv_version_144_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4638:1: (lv_version_144_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4638:1: (lv_version_144_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4639:3: lv_version_144_0= RULE_IDENT
                    {
                    lv_version_144_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9298); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_version_144_0, grammarAccess.getPojogenPropertyAccess().getVersionIDENTTerminalRuleCall_36_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"version",
                              		lv_version_144_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4655:2: ( (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+ )?
                    int alt156=2;
                    alt156 = dfa156.predict(input);
                    switch (alt156) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4655:3: (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4655:3: (this_WS_145= RULE_WS )+
                            int cnt153=0;
                            loop153:
                            do {
                                int alt153=2;
                                int LA153_0 = input.LA(1);

                                if ( (LA153_0==RULE_WS) ) {
                                    alt153=1;
                                }


                                switch (alt153) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4655:4: this_WS_145= RULE_WS
                            	    {
                            	    this_WS_145=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9316); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_145, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_36_3_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt153 >= 1 ) break loop153;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(153, input);
                                        throw eee;
                                }
                                cnt153++;
                            } while (true);

                            this_PLUS_146=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_rulePojogenProperty9328); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PLUS_146, grammarAccess.getPojogenPropertyAccess().getPLUSTerminalRuleCall_36_3_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4663:1: ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+
                            int cnt155=0;
                            loop155:
                            do {
                                int alt155=2;
                                alt155 = dfa155.predict(input);
                                switch (alt155) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4663:2: (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4663:2: (this_WS_147= RULE_WS )+
                            	    int cnt154=0;
                            	    loop154:
                            	    do {
                            	        int alt154=2;
                            	        int LA154_0 = input.LA(1);

                            	        if ( (LA154_0==RULE_WS) ) {
                            	            alt154=1;
                            	        }


                            	        switch (alt154) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4663:3: this_WS_147= RULE_WS
                            	    	    {
                            	    	    this_WS_147=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9340); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_147, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_36_3_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt154 >= 1 ) break loop154;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(154, input);
                            	                throw eee;
                            	        }
                            	        cnt154++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4667:3: ( (lv_dbTables_148_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4668:1: (lv_dbTables_148_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4668:1: (lv_dbTables_148_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4669:3: lv_dbTables_148_0= RULE_IDENT
                            	    {
                            	    lv_dbTables_148_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9358); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbTables_148_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_36_3_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbTables",
                            	              		lv_dbTables_148_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt155 >= 1 ) break loop155;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(155, input);
                                        throw eee;
                                }
                                cnt155++;
                            } while (true);


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4685:6: ( (this_WS_149= RULE_WS )+ this_MINUS_150= RULE_MINUS ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+ )?
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==RULE_WS) ) {
                        alt160=1;
                    }
                    switch (alt160) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4685:7: (this_WS_149= RULE_WS )+ this_MINUS_150= RULE_MINUS ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4685:7: (this_WS_149= RULE_WS )+
                            int cnt157=0;
                            loop157:
                            do {
                                int alt157=2;
                                int LA157_0 = input.LA(1);

                                if ( (LA157_0==RULE_WS) ) {
                                    alt157=1;
                                }


                                switch (alt157) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4685:8: this_WS_149= RULE_WS
                            	    {
                            	    this_WS_149=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9380); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_149, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_36_4_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt157 >= 1 ) break loop157;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(157, input);
                                        throw eee;
                                }
                                cnt157++;
                            } while (true);

                            this_MINUS_150=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_rulePojogenProperty9392); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MINUS_150, grammarAccess.getPojogenPropertyAccess().getMINUSTerminalRuleCall_36_4_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4693:1: ( (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) ) )+
                            int cnt159=0;
                            loop159:
                            do {
                                int alt159=2;
                                int LA159_0 = input.LA(1);

                                if ( (LA159_0==RULE_WS) ) {
                                    alt159=1;
                                }


                                switch (alt159) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4693:2: (this_WS_151= RULE_WS )+ ( (lv_dbNotTables_152_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4693:2: (this_WS_151= RULE_WS )+
                            	    int cnt158=0;
                            	    loop158:
                            	    do {
                            	        int alt158=2;
                            	        int LA158_0 = input.LA(1);

                            	        if ( (LA158_0==RULE_WS) ) {
                            	            alt158=1;
                            	        }


                            	        switch (alt158) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4693:3: this_WS_151= RULE_WS
                            	    	    {
                            	    	    this_WS_151=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9404); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_151, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_36_4_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt158 >= 1 ) break loop158;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(158, input);
                            	                throw eee;
                            	        }
                            	        cnt158++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4697:3: ( (lv_dbNotTables_152_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4698:1: (lv_dbNotTables_152_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4698:1: (lv_dbNotTables_152_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4699:3: lv_dbNotTables_152_0= RULE_IDENT
                            	    {
                            	    lv_dbNotTables_152_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_rulePojogenProperty9422); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbNotTables_152_0, grammarAccess.getPojogenPropertyAccess().getDbNotTablesIDENTTerminalRuleCall_36_4_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbNotTables",
                            	              		lv_dbNotTables_152_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt159 >= 1 ) break loop159;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(159, input);
                                        throw eee;
                                }
                                cnt159++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 38 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4716:6: ( ( (lv_name_153_0= 'debug-level' ) ) (this_WS_154= RULE_WS )+ ( (lv_debug_155_0= ruleDebugLevelAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4716:6: ( ( (lv_name_153_0= 'debug-level' ) ) (this_WS_154= RULE_WS )+ ( (lv_debug_155_0= ruleDebugLevelAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4716:7: ( (lv_name_153_0= 'debug-level' ) ) (this_WS_154= RULE_WS )+ ( (lv_debug_155_0= ruleDebugLevelAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4716:7: ( (lv_name_153_0= 'debug-level' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4717:1: (lv_name_153_0= 'debug-level' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4717:1: (lv_name_153_0= 'debug-level' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4718:3: lv_name_153_0= 'debug-level'
                    {
                    lv_name_153_0=(Token)match(input,68,FollowSets000.FOLLOW_68_in_rulePojogenProperty9457); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_153_0, grammarAccess.getPojogenPropertyAccess().getNameDebugLevelKeyword_37_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_153_0, "debug-level");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4731:2: (this_WS_154= RULE_WS )+
                    int cnt161=0;
                    loop161:
                    do {
                        int alt161=2;
                        int LA161_0 = input.LA(1);

                        if ( (LA161_0==RULE_WS) ) {
                            alt161=1;
                        }


                        switch (alt161) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4731:3: this_WS_154= RULE_WS
                    	    {
                    	    this_WS_154=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9482); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_154, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_37_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt161 >= 1 ) break loop161;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(161, input);
                                throw eee;
                        }
                        cnt161++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4735:3: ( (lv_debug_155_0= ruleDebugLevelAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4736:1: (lv_debug_155_0= ruleDebugLevelAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4736:1: (lv_debug_155_0= ruleDebugLevelAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4737:3: lv_debug_155_0= ruleDebugLevelAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getDebugDebugLevelAssignementParserRuleCall_37_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDebugLevelAssignement_in_rulePojogenProperty9504);
                    lv_debug_155_0=ruleDebugLevelAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"debug",
                              		lv_debug_155_0, 
                              		"DebugLevelAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 39 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4754:6: ( ( (lv_name_156_0= 'pojos-for-procedures' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4754:6: ( ( (lv_name_156_0= 'pojos-for-procedures' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4754:7: ( (lv_name_156_0= 'pojos-for-procedures' ) ) ( (this_WS_157= RULE_WS )+ ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4754:7: ( (lv_name_156_0= 'pojos-for-procedures' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4755:1: (lv_name_156_0= 'pojos-for-procedures' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4755:1: (lv_name_156_0= 'pojos-for-procedures' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4756:3: lv_name_156_0= 'pojos-for-procedures'
                    {
                    lv_name_156_0=(Token)match(input,109,FollowSets000.FOLLOW_109_in_rulePojogenProperty9530); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_156_0, grammarAccess.getPojogenPropertyAccess().getNamePojosForProceduresKeyword_38_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_156_0, "pojos-for-procedures");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4769:2: ( (this_WS_157= RULE_WS )+ ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) ) )+
                    int cnt163=0;
                    loop163:
                    do {
                        int alt163=2;
                        int LA163_0 = input.LA(1);

                        if ( (LA163_0==RULE_WS) ) {
                            alt163=1;
                        }


                        switch (alt163) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4769:3: (this_WS_157= RULE_WS )+ ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4769:3: (this_WS_157= RULE_WS )+
                    	    int cnt162=0;
                    	    loop162:
                    	    do {
                    	        int alt162=2;
                    	        int LA162_0 = input.LA(1);

                    	        if ( (LA162_0==RULE_WS) ) {
                    	            alt162=1;
                    	        }


                    	        switch (alt162) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4769:4: this_WS_157= RULE_WS
                    	    	    {
                    	    	    this_WS_157=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9556); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_157, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_38_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt162 >= 1 ) break loop162;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(162, input);
                    	                throw eee;
                    	        }
                    	        cnt162++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4773:3: ( (lv_procPojos_158_0= ruleProcedurePojoAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4774:1: (lv_procPojos_158_0= ruleProcedurePojoAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4774:1: (lv_procPojos_158_0= ruleProcedurePojoAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4775:3: lv_procPojos_158_0= ruleProcedurePojoAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getProcPojosProcedurePojoAssignementParserRuleCall_38_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleProcedurePojoAssignement_in_rulePojogenProperty9578);
                    	    lv_procPojos_158_0=ruleProcedurePojoAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"procPojos",
                    	              		lv_procPojos_158_0, 
                    	              		"ProcedurePojoAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt163 >= 1 ) break loop163;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(163, input);
                                throw eee;
                        }
                        cnt163++;
                    } while (true);


                    }


                    }
                    break;
                case 40 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4792:6: ( ( (lv_name_159_0= 'pojos-for-functions' ) ) ( (this_WS_160= RULE_WS )+ ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4792:6: ( ( (lv_name_159_0= 'pojos-for-functions' ) ) ( (this_WS_160= RULE_WS )+ ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4792:7: ( (lv_name_159_0= 'pojos-for-functions' ) ) ( (this_WS_160= RULE_WS )+ ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4792:7: ( (lv_name_159_0= 'pojos-for-functions' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4793:1: (lv_name_159_0= 'pojos-for-functions' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4793:1: (lv_name_159_0= 'pojos-for-functions' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4794:3: lv_name_159_0= 'pojos-for-functions'
                    {
                    lv_name_159_0=(Token)match(input,110,FollowSets000.FOLLOW_110_in_rulePojogenProperty9606); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_159_0, grammarAccess.getPojogenPropertyAccess().getNamePojosForFunctionsKeyword_39_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_159_0, "pojos-for-functions");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4807:2: ( (this_WS_160= RULE_WS )+ ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) ) )+
                    int cnt165=0;
                    loop165:
                    do {
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( (LA165_0==RULE_WS) ) {
                            alt165=1;
                        }


                        switch (alt165) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4807:3: (this_WS_160= RULE_WS )+ ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4807:3: (this_WS_160= RULE_WS )+
                    	    int cnt164=0;
                    	    loop164:
                    	    do {
                    	        int alt164=2;
                    	        int LA164_0 = input.LA(1);

                    	        if ( (LA164_0==RULE_WS) ) {
                    	            alt164=1;
                    	        }


                    	        switch (alt164) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4807:4: this_WS_160= RULE_WS
                    	    	    {
                    	    	    this_WS_160=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9632); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_160, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_39_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt164 >= 1 ) break loop164;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(164, input);
                    	                throw eee;
                    	        }
                    	        cnt164++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4811:3: ( (lv_funPojos_161_0= ruleFunctionPojoAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4812:1: (lv_funPojos_161_0= ruleFunctionPojoAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4812:1: (lv_funPojos_161_0= ruleFunctionPojoAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4813:3: lv_funPojos_161_0= ruleFunctionPojoAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getFunPojosFunctionPojoAssignementParserRuleCall_39_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleFunctionPojoAssignement_in_rulePojogenProperty9654);
                    	    lv_funPojos_161_0=ruleFunctionPojoAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"funPojos",
                    	              		lv_funPojos_161_0, 
                    	              		"FunctionPojoAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt165 >= 1 ) break loop165;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(165, input);
                                throw eee;
                        }
                        cnt165++;
                    } while (true);


                    }


                    }
                    break;
                case 41 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4830:6: ( ( (lv_name_162_0= 'active-filter' ) ) (this_WS_163= RULE_WS )+ ( (lv_activeFilter_164_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4830:6: ( ( (lv_name_162_0= 'active-filter' ) ) (this_WS_163= RULE_WS )+ ( (lv_activeFilter_164_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4830:7: ( (lv_name_162_0= 'active-filter' ) ) (this_WS_163= RULE_WS )+ ( (lv_activeFilter_164_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4830:7: ( (lv_name_162_0= 'active-filter' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4831:1: (lv_name_162_0= 'active-filter' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4831:1: (lv_name_162_0= 'active-filter' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4832:3: lv_name_162_0= 'active-filter'
                    {
                    lv_name_162_0=(Token)match(input,111,FollowSets000.FOLLOW_111_in_rulePojogenProperty9682); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_162_0, grammarAccess.getPojogenPropertyAccess().getNameActiveFilterKeyword_40_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_162_0, "active-filter");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4845:2: (this_WS_163= RULE_WS )+
                    int cnt166=0;
                    loop166:
                    do {
                        int alt166=2;
                        int LA166_0 = input.LA(1);

                        if ( (LA166_0==RULE_WS) ) {
                            alt166=1;
                        }


                        switch (alt166) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4845:3: this_WS_163= RULE_WS
                    	    {
                    	    this_WS_163=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_rulePojogenProperty9707); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_163, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_40_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt166 >= 1 ) break loop166;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(166, input);
                                throw eee;
                        }
                        cnt166++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4849:3: ( (lv_activeFilter_164_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4850:1: (lv_activeFilter_164_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4850:1: (lv_activeFilter_164_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4851:3: lv_activeFilter_164_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getActiveFilterPropertyValueParserRuleCall_40_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_rulePropertyValue_in_rulePojogenProperty9729);
                    lv_activeFilter_164_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"activeFilter",
                              		lv_activeFilter_164_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojogenProperty"


    // $ANTLR start "entryRuleMetaTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4875:1: entryRuleMetaTypeAssignement returns [EObject current=null] : iv_ruleMetaTypeAssignement= ruleMetaTypeAssignement EOF ;
    public final EObject entryRuleMetaTypeAssignement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetaTypeAssignement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4876:2: (iv_ruleMetaTypeAssignement= ruleMetaTypeAssignement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4877:2: iv_ruleMetaTypeAssignement= ruleMetaTypeAssignement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaTypeAssignementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleMetaTypeAssignement_in_entryRuleMetaTypeAssignement9766);
            iv_ruleMetaTypeAssignement=ruleMetaTypeAssignement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaTypeAssignement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleMetaTypeAssignement9776); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaTypeAssignement"


    // $ANTLR start "ruleMetaTypeAssignement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4884:1: ruleMetaTypeAssignement returns [EObject current=null] : ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )? ) ;
    public final EObject ruleMetaTypeAssignement() throws RecognitionException {
        EObject current = null;

        Token lv_dbColumn_0_0=null;
        Token otherlv_1=null;
        Token lv_type_2_0=null;
        Token otherlv_3=null;
        Token lv_extension_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4887:28: ( ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4888:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4888:1: ( ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4888:2: ( (lv_dbColumn_0_0= RULE_IDENT ) ) otherlv_1= '->' ( (lv_type_2_0= RULE_IDENT ) ) (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4888:2: ( (lv_dbColumn_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4889:1: (lv_dbColumn_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4889:1: (lv_dbColumn_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4890:3: lv_dbColumn_0_0= RULE_IDENT
            {
            lv_dbColumn_0_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement9818); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_dbColumn_0_0, grammarAccess.getMetaTypeAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMetaTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"dbColumn",
                      		lv_dbColumn_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleMetaTypeAssignement9835); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMetaTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4910:1: ( (lv_type_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4911:1: (lv_type_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4911:1: (lv_type_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4912:3: lv_type_2_0= RULE_IDENT
            {
            lv_type_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement9852); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_type_2_0, grammarAccess.getMetaTypeAssignementAccess().getTypeIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMetaTypeAssignementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4928:2: (otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) ) )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==41) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4928:4: otherlv_3= '->' ( (lv_extension_4_0= RULE_IDENT ) )
                    {
                    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_41_in_ruleMetaTypeAssignement9870); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMetaTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4932:1: ( (lv_extension_4_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4933:1: (lv_extension_4_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4933:1: (lv_extension_4_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4934:3: lv_extension_4_0= RULE_IDENT
                    {
                    lv_extension_4_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement9887); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_extension_4_0, grammarAccess.getMetaTypeAssignementAccess().getExtensionIDENTTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaTypeAssignementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"extension",
                              		lv_extension_4_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaTypeAssignement"


    // $ANTLR start "entryRuleMetagenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4958:1: entryRuleMetagenProperty returns [EObject current=null] : iv_ruleMetagenProperty= ruleMetagenProperty EOF ;
    public final EObject entryRuleMetagenProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetagenProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4959:2: (iv_ruleMetagenProperty= ruleMetagenProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4960:2: iv_ruleMetagenProperty= ruleMetagenProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetagenPropertyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_ruleMetagenProperty_in_entryRuleMetagenProperty9930);
            iv_ruleMetagenProperty=ruleMetagenProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetagenProperty; 
            }
            match(input,EOF,FollowSets000.FOLLOW_EOF_in_entryRuleMetagenProperty9940); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetagenProperty"


    // $ANTLR start "ruleMetagenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4967:1: ruleMetagenProperty returns [EObject current=null] : ( ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ ) | ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ ) | ( (lv_name_48_0= 'make-it-final' ) ) | ( ( (lv_name_49_0= 'like-columns' ) ) (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_54_0= 'not-like-columns' ) ) (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ ) | ( (lv_name_59_0= 'generate-sequences' ) ) | ( (lv_name_60_0= 'generate-identities' ) ) | ( (lv_name_61_0= 'generate-idgenerators' ) ) | ( (lv_name_62_0= 'generate-default-idgenerators' ) ) | ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) ) | ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) ) | ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) ) | ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_81_0= 'generate-operators' ) ) | ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) ) ) ;
    public final EObject ruleMetagenProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_WS_1=null;
        Token lv_sequence_2_0=null;
        Token lv_type_3_0=null;
        Token this_WS_4=null;
        Token this_PLUS_5=null;
        Token this_WS_6=null;
        Token lv_dbTables_7_0=null;
        Token this_WS_8=null;
        Token this_MINUS_9=null;
        Token this_WS_10=null;
        Token lv_dbNotTables_11_0=null;
        Token lv_name_12_0=null;
        Token this_WS_13=null;
        Token lv_dbTable_14_0=null;
        Token this_WS_15=null;
        Token lv_sequence_16_0=null;
        Token this_WS_17=null;
        Token lv_type_18_0=null;
        Token lv_name_19_0=null;
        Token this_WS_20=null;
        Token lv_identity_21_0=null;
        Token lv_type_22_0=null;
        Token this_WS_23=null;
        Token this_PLUS_24=null;
        Token this_WS_25=null;
        Token lv_dbTables_26_0=null;
        Token this_WS_27=null;
        Token this_MINUS_28=null;
        Token this_WS_29=null;
        Token lv_dbNotTables_30_0=null;
        Token lv_name_31_0=null;
        Token this_WS_32=null;
        Token lv_dbTable_33_0=null;
        Token this_WS_34=null;
        Token lv_identity_35_0=null;
        Token this_WS_36=null;
        Token lv_type_37_0=null;
        Token lv_name_38_0=null;
        Token this_WS_39=null;
        Token lv_dbTable_40_0=null;
        Token this_WS_41=null;
        Token lv_name_43_0=null;
        Token this_WS_44=null;
        Token lv_dbStatement_45_0=null;
        Token this_WS_46=null;
        Token lv_name_48_0=null;
        Token lv_name_49_0=null;
        Token this_WS_50=null;
        Token lv_dbTable_51_0=null;
        Token this_WS_52=null;
        Token lv_dbColumns_53_0=null;
        Token lv_name_54_0=null;
        Token this_WS_55=null;
        Token lv_dbTable_56_0=null;
        Token this_WS_57=null;
        Token lv_dbColumns_58_0=null;
        Token lv_name_59_0=null;
        Token lv_name_60_0=null;
        Token lv_name_61_0=null;
        Token lv_name_62_0=null;
        Token lv_name_63_0=null;
        Token this_WS_64=null;
        Token lv_dbFunction_65_0=null;
        Token this_WS_66=null;
        Token lv_type_67_0=null;
        Token lv_name_68_0=null;
        Token this_WS_69=null;
        Token lv_dbFunction_70_0=null;
        Token this_WS_71=null;
        Token lv_dbTable_72_0=null;
        Token lv_name_73_0=null;
        Token this_WS_74=null;
        Token lv_dbProcedure_75_0=null;
        Token this_WS_76=null;
        Token lv_dbTable_77_0=null;
        Token lv_name_78_0=null;
        Token this_WS_79=null;
        Token lv_name_81_0=null;
        Token lv_name_82_0=null;
        Token this_WS_83=null;
        Token lv_dbTables_84_0=null;
        Token lv_name_85_0=null;
        Token this_WS_86=null;
        Token lv_dbStatement_87_0=null;
        Token this_WS_88=null;
        Token lv_optionalFeatures_89_0=null;
        Token lv_name_90_0=null;
        Token this_WS_91=null;
        EObject lv_metaTypes_42_0 = null;

        EObject lv_metaTypes_47_0 = null;

        EObject lv_debug_80_0 = null;

        AntlrDatatypeRuleToken lv_activeFilter_92_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4970:28: ( ( ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ ) | ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ ) | ( (lv_name_48_0= 'make-it-final' ) ) | ( ( (lv_name_49_0= 'like-columns' ) ) (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_54_0= 'not-like-columns' ) ) (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ ) | ( (lv_name_59_0= 'generate-sequences' ) ) | ( (lv_name_60_0= 'generate-identities' ) ) | ( (lv_name_61_0= 'generate-idgenerators' ) ) | ( (lv_name_62_0= 'generate-default-idgenerators' ) ) | ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) ) | ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) ) | ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) ) | ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_81_0= 'generate-operators' ) ) | ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4971:1: ( ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ ) | ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ ) | ( (lv_name_48_0= 'make-it-final' ) ) | ( ( (lv_name_49_0= 'like-columns' ) ) (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_54_0= 'not-like-columns' ) ) (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ ) | ( (lv_name_59_0= 'generate-sequences' ) ) | ( (lv_name_60_0= 'generate-identities' ) ) | ( (lv_name_61_0= 'generate-idgenerators' ) ) | ( (lv_name_62_0= 'generate-default-idgenerators' ) ) | ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) ) | ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) ) | ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) ) | ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_81_0= 'generate-operators' ) ) | ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4971:1: ( ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? ) | ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? ) | ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ ) | ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ ) | ( (lv_name_48_0= 'make-it-final' ) ) | ( ( (lv_name_49_0= 'like-columns' ) ) (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_54_0= 'not-like-columns' ) ) (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ ) | ( (lv_name_59_0= 'generate-sequences' ) ) | ( (lv_name_60_0= 'generate-identities' ) ) | ( (lv_name_61_0= 'generate-idgenerators' ) ) | ( (lv_name_62_0= 'generate-default-idgenerators' ) ) | ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) ) | ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) ) | ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) ) | ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) ) | ( (lv_name_81_0= 'generate-operators' ) ) | ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) ) )
            int alt223=21;
            switch ( input.LA(1) ) {
            case 112:
                {
                alt223=1;
                }
                break;
            case 113:
                {
                alt223=2;
                }
                break;
            case 114:
                {
                alt223=3;
                }
                break;
            case 115:
                {
                alt223=4;
                }
                break;
            case 116:
                {
                alt223=5;
                }
                break;
            case 117:
                {
                alt223=6;
                }
                break;
            case 107:
                {
                alt223=7;
                }
                break;
            case 118:
                {
                alt223=8;
                }
                break;
            case 119:
                {
                alt223=9;
                }
                break;
            case 120:
                {
                alt223=10;
                }
                break;
            case 121:
                {
                alt223=11;
                }
                break;
            case 122:
                {
                alt223=12;
                }
                break;
            case 123:
                {
                alt223=13;
                }
                break;
            case 124:
                {
                alt223=14;
                }
                break;
            case 125:
                {
                alt223=15;
                }
                break;
            case 126:
                {
                alt223=16;
                }
                break;
            case 68:
                {
                alt223=17;
                }
                break;
            case 98:
                {
                alt223=18;
                }
                break;
            case 127:
                {
                alt223=19;
                }
                break;
            case 128:
                {
                alt223=20;
                }
                break;
            case 111:
                {
                alt223=21;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 223, 0, input);

                throw nvae;
            }

            switch (alt223) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4971:2: ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4971:2: ( ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4971:3: ( (lv_name_0_0= 'global-sequence' ) ) (this_WS_1= RULE_WS )+ ( (lv_sequence_2_0= RULE_IDENT ) ) ( (lv_type_3_0= RULE_IDENT ) )? ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )? ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4971:3: ( (lv_name_0_0= 'global-sequence' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4972:1: (lv_name_0_0= 'global-sequence' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4972:1: (lv_name_0_0= 'global-sequence' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4973:3: lv_name_0_0= 'global-sequence'
                    {
                    lv_name_0_0=(Token)match(input,112,FollowSets000.FOLLOW_112_in_ruleMetagenProperty9984); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getMetagenPropertyAccess().getNameGlobalSequenceKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "global-sequence");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4986:2: (this_WS_1= RULE_WS )+
                    int cnt169=0;
                    loop169:
                    do {
                        int alt169=2;
                        int LA169_0 = input.LA(1);

                        if ( (LA169_0==RULE_WS) ) {
                            alt169=1;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4986:3: this_WS_1= RULE_WS
                    	    {
                    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10009); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_1, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt169 >= 1 ) break loop169;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(169, input);
                                throw eee;
                        }
                        cnt169++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4990:3: ( (lv_sequence_2_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4991:1: (lv_sequence_2_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4991:1: (lv_sequence_2_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:4992:3: lv_sequence_2_0= RULE_IDENT
                    {
                    lv_sequence_2_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10027); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_sequence_2_0, grammarAccess.getMetagenPropertyAccess().getSequenceIDENTTerminalRuleCall_0_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"sequence",
                              		lv_sequence_2_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5008:2: ( (lv_type_3_0= RULE_IDENT ) )?
                    int alt170=2;
                    int LA170_0 = input.LA(1);

                    if ( (LA170_0==RULE_IDENT) ) {
                        alt170=1;
                    }
                    switch (alt170) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5009:1: (lv_type_3_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5009:1: (lv_type_3_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5010:3: lv_type_3_0= RULE_IDENT
                            {
                            lv_type_3_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10049); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_type_3_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_0_3_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"type",
                                      		lv_type_3_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5026:3: ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )?
                    int alt174=2;
                    alt174 = dfa174.predict(input);
                    switch (alt174) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5026:4: (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5026:4: (this_WS_4= RULE_WS )+
                            int cnt171=0;
                            loop171:
                            do {
                                int alt171=2;
                                int LA171_0 = input.LA(1);

                                if ( (LA171_0==RULE_WS) ) {
                                    alt171=1;
                                }


                                switch (alt171) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5026:5: this_WS_4= RULE_WS
                            	    {
                            	    this_WS_4=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10068); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_4, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_4_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt171 >= 1 ) break loop171;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(171, input);
                                        throw eee;
                                }
                                cnt171++;
                            } while (true);

                            this_PLUS_5=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleMetagenProperty10080); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PLUS_5, grammarAccess.getMetagenPropertyAccess().getPLUSTerminalRuleCall_0_4_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5034:1: ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+
                            int cnt173=0;
                            loop173:
                            do {
                                int alt173=2;
                                alt173 = dfa173.predict(input);
                                switch (alt173) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5034:2: (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5034:2: (this_WS_6= RULE_WS )+
                            	    int cnt172=0;
                            	    loop172:
                            	    do {
                            	        int alt172=2;
                            	        int LA172_0 = input.LA(1);

                            	        if ( (LA172_0==RULE_WS) ) {
                            	            alt172=1;
                            	        }


                            	        switch (alt172) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5034:3: this_WS_6= RULE_WS
                            	    	    {
                            	    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10092); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_6, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_4_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt172 >= 1 ) break loop172;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(172, input);
                            	                throw eee;
                            	        }
                            	        cnt172++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5038:3: ( (lv_dbTables_7_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5039:1: (lv_dbTables_7_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5039:1: (lv_dbTables_7_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5040:3: lv_dbTables_7_0= RULE_IDENT
                            	    {
                            	    lv_dbTables_7_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10110); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbTables_7_0, grammarAccess.getMetagenPropertyAccess().getDbTablesIDENTTerminalRuleCall_0_4_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbTables",
                            	              		lv_dbTables_7_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt173 >= 1 ) break loop173;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(173, input);
                                        throw eee;
                                }
                                cnt173++;
                            } while (true);


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5056:6: ( (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+ )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==RULE_WS) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5056:7: (this_WS_8= RULE_WS )+ this_MINUS_9= RULE_MINUS ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5056:7: (this_WS_8= RULE_WS )+
                            int cnt175=0;
                            loop175:
                            do {
                                int alt175=2;
                                int LA175_0 = input.LA(1);

                                if ( (LA175_0==RULE_WS) ) {
                                    alt175=1;
                                }


                                switch (alt175) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5056:8: this_WS_8= RULE_WS
                            	    {
                            	    this_WS_8=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10132); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_8, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_5_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt175 >= 1 ) break loop175;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(175, input);
                                        throw eee;
                                }
                                cnt175++;
                            } while (true);

                            this_MINUS_9=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleMetagenProperty10144); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MINUS_9, grammarAccess.getMetagenPropertyAccess().getMINUSTerminalRuleCall_0_5_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5064:1: ( (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) ) )+
                            int cnt177=0;
                            loop177:
                            do {
                                int alt177=2;
                                int LA177_0 = input.LA(1);

                                if ( (LA177_0==RULE_WS) ) {
                                    alt177=1;
                                }


                                switch (alt177) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5064:2: (this_WS_10= RULE_WS )+ ( (lv_dbNotTables_11_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5064:2: (this_WS_10= RULE_WS )+
                            	    int cnt176=0;
                            	    loop176:
                            	    do {
                            	        int alt176=2;
                            	        int LA176_0 = input.LA(1);

                            	        if ( (LA176_0==RULE_WS) ) {
                            	            alt176=1;
                            	        }


                            	        switch (alt176) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5064:3: this_WS_10= RULE_WS
                            	    	    {
                            	    	    this_WS_10=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10156); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_10, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_0_5_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt176 >= 1 ) break loop176;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(176, input);
                            	                throw eee;
                            	        }
                            	        cnt176++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5068:3: ( (lv_dbNotTables_11_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5069:1: (lv_dbNotTables_11_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5069:1: (lv_dbNotTables_11_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5070:3: lv_dbNotTables_11_0= RULE_IDENT
                            	    {
                            	    lv_dbNotTables_11_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10174); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbNotTables_11_0, grammarAccess.getMetagenPropertyAccess().getDbNotTablesIDENTTerminalRuleCall_0_5_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbNotTables",
                            	              		lv_dbNotTables_11_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt177 >= 1 ) break loop177;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(177, input);
                                        throw eee;
                                }
                                cnt177++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5087:6: ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5087:6: ( ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5087:7: ( (lv_name_12_0= 'table-sequence' ) ) (this_WS_13= RULE_WS )+ ( (lv_dbTable_14_0= RULE_IDENT ) ) (this_WS_15= RULE_WS )+ ( (lv_sequence_16_0= RULE_IDENT ) ) ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5087:7: ( (lv_name_12_0= 'table-sequence' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5088:1: (lv_name_12_0= 'table-sequence' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5088:1: (lv_name_12_0= 'table-sequence' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5089:3: lv_name_12_0= 'table-sequence'
                    {
                    lv_name_12_0=(Token)match(input,113,FollowSets000.FOLLOW_113_in_ruleMetagenProperty10209); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_12_0, grammarAccess.getMetagenPropertyAccess().getNameTableSequenceKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_12_0, "table-sequence");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5102:2: (this_WS_13= RULE_WS )+
                    int cnt179=0;
                    loop179:
                    do {
                        int alt179=2;
                        int LA179_0 = input.LA(1);

                        if ( (LA179_0==RULE_WS) ) {
                            alt179=1;
                        }


                        switch (alt179) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5102:3: this_WS_13= RULE_WS
                    	    {
                    	    this_WS_13=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10234); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_13, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_1_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt179 >= 1 ) break loop179;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(179, input);
                                throw eee;
                        }
                        cnt179++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5106:3: ( (lv_dbTable_14_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5107:1: (lv_dbTable_14_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5107:1: (lv_dbTable_14_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5108:3: lv_dbTable_14_0= RULE_IDENT
                    {
                    lv_dbTable_14_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10252); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_14_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_1_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_14_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5124:2: (this_WS_15= RULE_WS )+
                    int cnt180=0;
                    loop180:
                    do {
                        int alt180=2;
                        int LA180_0 = input.LA(1);

                        if ( (LA180_0==RULE_WS) ) {
                            alt180=1;
                        }


                        switch (alt180) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5124:3: this_WS_15= RULE_WS
                    	    {
                    	    this_WS_15=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10269); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_15, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_1_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt180 >= 1 ) break loop180;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(180, input);
                                throw eee;
                        }
                        cnt180++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5128:3: ( (lv_sequence_16_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5129:1: (lv_sequence_16_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5129:1: (lv_sequence_16_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5130:3: lv_sequence_16_0= RULE_IDENT
                    {
                    lv_sequence_16_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10287); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_sequence_16_0, grammarAccess.getMetagenPropertyAccess().getSequenceIDENTTerminalRuleCall_1_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"sequence",
                              		lv_sequence_16_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5146:2: ( (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) ) )?
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==RULE_WS) ) {
                        alt182=1;
                    }
                    switch (alt182) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5146:3: (this_WS_17= RULE_WS )+ ( (lv_type_18_0= RULE_IDENT ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5146:3: (this_WS_17= RULE_WS )+
                            int cnt181=0;
                            loop181:
                            do {
                                int alt181=2;
                                int LA181_0 = input.LA(1);

                                if ( (LA181_0==RULE_WS) ) {
                                    alt181=1;
                                }


                                switch (alt181) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5146:4: this_WS_17= RULE_WS
                            	    {
                            	    this_WS_17=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10305); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_17, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_1_5_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt181 >= 1 ) break loop181;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(181, input);
                                        throw eee;
                                }
                                cnt181++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5150:3: ( (lv_type_18_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5151:1: (lv_type_18_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5151:1: (lv_type_18_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5152:3: lv_type_18_0= RULE_IDENT
                            {
                            lv_type_18_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10323); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_type_18_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_1_5_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"type",
                                      		lv_type_18_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5169:6: ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5169:6: ( ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5169:7: ( (lv_name_19_0= 'global-identity' ) ) ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )? ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )? ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5169:7: ( (lv_name_19_0= 'global-identity' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5170:1: (lv_name_19_0= 'global-identity' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5170:1: (lv_name_19_0= 'global-identity' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5171:3: lv_name_19_0= 'global-identity'
                    {
                    lv_name_19_0=(Token)match(input,114,FollowSets000.FOLLOW_114_in_ruleMetagenProperty10356); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_19_0, grammarAccess.getMetagenPropertyAccess().getNameGlobalIdentityKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_19_0, "global-identity");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5184:2: ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )?
                    int alt185=2;
                    alt185 = dfa185.predict(input);
                    switch (alt185) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5184:3: (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )?
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5184:3: (this_WS_20= RULE_WS )+
                            int cnt183=0;
                            loop183:
                            do {
                                int alt183=2;
                                int LA183_0 = input.LA(1);

                                if ( (LA183_0==RULE_WS) ) {
                                    alt183=1;
                                }


                                switch (alt183) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5184:4: this_WS_20= RULE_WS
                            	    {
                            	    this_WS_20=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10382); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_20, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_1_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt183 >= 1 ) break loop183;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(183, input);
                                        throw eee;
                                }
                                cnt183++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5188:3: ( (lv_identity_21_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5189:1: (lv_identity_21_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5189:1: (lv_identity_21_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5190:3: lv_identity_21_0= RULE_IDENT
                            {
                            lv_identity_21_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10400); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_identity_21_0, grammarAccess.getMetagenPropertyAccess().getIdentityIDENTTerminalRuleCall_2_1_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"identity",
                                      		lv_identity_21_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5206:2: ( (lv_type_22_0= RULE_IDENT ) )?
                            int alt184=2;
                            int LA184_0 = input.LA(1);

                            if ( (LA184_0==RULE_IDENT) ) {
                                alt184=1;
                            }
                            switch (alt184) {
                                case 1 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5207:1: (lv_type_22_0= RULE_IDENT )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5207:1: (lv_type_22_0= RULE_IDENT )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5208:3: lv_type_22_0= RULE_IDENT
                                    {
                                    lv_type_22_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10422); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      			newLeafNode(lv_type_22_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_2_1_2_0()); 
                                      		
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                                      	        }
                                             		setWithLastConsumed(
                                             			current, 
                                             			"type",
                                              		lv_type_22_0, 
                                              		"IDENT");
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5224:5: ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )?
                    int alt189=2;
                    alt189 = dfa189.predict(input);
                    switch (alt189) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5224:6: (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5224:6: (this_WS_23= RULE_WS )+
                            int cnt186=0;
                            loop186:
                            do {
                                int alt186=2;
                                int LA186_0 = input.LA(1);

                                if ( (LA186_0==RULE_WS) ) {
                                    alt186=1;
                                }


                                switch (alt186) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5224:7: this_WS_23= RULE_WS
                            	    {
                            	    this_WS_23=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10443); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_23, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_2_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt186 >= 1 ) break loop186;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(186, input);
                                        throw eee;
                                }
                                cnt186++;
                            } while (true);

                            this_PLUS_24=(Token)match(input,RULE_PLUS,FollowSets000.FOLLOW_RULE_PLUS_in_ruleMetagenProperty10455); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PLUS_24, grammarAccess.getMetagenPropertyAccess().getPLUSTerminalRuleCall_2_2_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5232:1: ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+
                            int cnt188=0;
                            loop188:
                            do {
                                int alt188=2;
                                alt188 = dfa188.predict(input);
                                switch (alt188) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5232:2: (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5232:2: (this_WS_25= RULE_WS )+
                            	    int cnt187=0;
                            	    loop187:
                            	    do {
                            	        int alt187=2;
                            	        int LA187_0 = input.LA(1);

                            	        if ( (LA187_0==RULE_WS) ) {
                            	            alt187=1;
                            	        }


                            	        switch (alt187) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5232:3: this_WS_25= RULE_WS
                            	    	    {
                            	    	    this_WS_25=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10467); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_25, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_2_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt187 >= 1 ) break loop187;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(187, input);
                            	                throw eee;
                            	        }
                            	        cnt187++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5236:3: ( (lv_dbTables_26_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5237:1: (lv_dbTables_26_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5237:1: (lv_dbTables_26_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5238:3: lv_dbTables_26_0= RULE_IDENT
                            	    {
                            	    lv_dbTables_26_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10485); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbTables_26_0, grammarAccess.getMetagenPropertyAccess().getDbTablesIDENTTerminalRuleCall_2_2_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbTables",
                            	              		lv_dbTables_26_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt188 >= 1 ) break loop188;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(188, input);
                                        throw eee;
                                }
                                cnt188++;
                            } while (true);


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5254:6: ( (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+ )?
                    int alt193=2;
                    int LA193_0 = input.LA(1);

                    if ( (LA193_0==RULE_WS) ) {
                        alt193=1;
                    }
                    switch (alt193) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5254:7: (this_WS_27= RULE_WS )+ this_MINUS_28= RULE_MINUS ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5254:7: (this_WS_27= RULE_WS )+
                            int cnt190=0;
                            loop190:
                            do {
                                int alt190=2;
                                int LA190_0 = input.LA(1);

                                if ( (LA190_0==RULE_WS) ) {
                                    alt190=1;
                                }


                                switch (alt190) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5254:8: this_WS_27= RULE_WS
                            	    {
                            	    this_WS_27=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10507); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_27, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_3_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt190 >= 1 ) break loop190;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(190, input);
                                        throw eee;
                                }
                                cnt190++;
                            } while (true);

                            this_MINUS_28=(Token)match(input,RULE_MINUS,FollowSets000.FOLLOW_RULE_MINUS_in_ruleMetagenProperty10519); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MINUS_28, grammarAccess.getMetagenPropertyAccess().getMINUSTerminalRuleCall_2_3_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5262:1: ( (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) ) )+
                            int cnt192=0;
                            loop192:
                            do {
                                int alt192=2;
                                int LA192_0 = input.LA(1);

                                if ( (LA192_0==RULE_WS) ) {
                                    alt192=1;
                                }


                                switch (alt192) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5262:2: (this_WS_29= RULE_WS )+ ( (lv_dbNotTables_30_0= RULE_IDENT ) )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5262:2: (this_WS_29= RULE_WS )+
                            	    int cnt191=0;
                            	    loop191:
                            	    do {
                            	        int alt191=2;
                            	        int LA191_0 = input.LA(1);

                            	        if ( (LA191_0==RULE_WS) ) {
                            	            alt191=1;
                            	        }


                            	        switch (alt191) {
                            	    	case 1 :
                            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5262:3: this_WS_29= RULE_WS
                            	    	    {
                            	    	    this_WS_29=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10531); if (state.failed) return current;
                            	    	    if ( state.backtracking==0 ) {
                            	    	       
                            	    	          newLeafNode(this_WS_29, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_2_3_2_0()); 
                            	    	          
                            	    	    }

                            	    	    }
                            	    	    break;

                            	    	default :
                            	    	    if ( cnt191 >= 1 ) break loop191;
                            	    	    if (state.backtracking>0) {state.failed=true; return current;}
                            	                EarlyExitException eee =
                            	                    new EarlyExitException(191, input);
                            	                throw eee;
                            	        }
                            	        cnt191++;
                            	    } while (true);

                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5266:3: ( (lv_dbNotTables_30_0= RULE_IDENT ) )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5267:1: (lv_dbNotTables_30_0= RULE_IDENT )
                            	    {
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5267:1: (lv_dbNotTables_30_0= RULE_IDENT )
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5268:3: lv_dbNotTables_30_0= RULE_IDENT
                            	    {
                            	    lv_dbNotTables_30_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10549); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      			newLeafNode(lv_dbNotTables_30_0, grammarAccess.getMetagenPropertyAccess().getDbNotTablesIDENTTerminalRuleCall_2_3_2_1_0()); 
                            	      		
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                            	      	        }
                            	             		addWithLastConsumed(
                            	             			current, 
                            	             			"dbNotTables",
                            	              		lv_dbNotTables_30_0, 
                            	              		"IDENT");
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt192 >= 1 ) break loop192;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(192, input);
                                        throw eee;
                                }
                                cnt192++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5285:6: ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5285:6: ( ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5285:7: ( (lv_name_31_0= 'table-identity' ) ) (this_WS_32= RULE_WS )+ ( (lv_dbTable_33_0= RULE_IDENT ) ) (this_WS_34= RULE_WS )+ ( (lv_identity_35_0= RULE_IDENT ) ) ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5285:7: ( (lv_name_31_0= 'table-identity' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5286:1: (lv_name_31_0= 'table-identity' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5286:1: (lv_name_31_0= 'table-identity' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5287:3: lv_name_31_0= 'table-identity'
                    {
                    lv_name_31_0=(Token)match(input,115,FollowSets000.FOLLOW_115_in_ruleMetagenProperty10584); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_31_0, grammarAccess.getMetagenPropertyAccess().getNameTableIdentityKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_31_0, "table-identity");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5300:2: (this_WS_32= RULE_WS )+
                    int cnt194=0;
                    loop194:
                    do {
                        int alt194=2;
                        int LA194_0 = input.LA(1);

                        if ( (LA194_0==RULE_WS) ) {
                            alt194=1;
                        }


                        switch (alt194) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5300:3: this_WS_32= RULE_WS
                    	    {
                    	    this_WS_32=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10609); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_32, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_3_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt194 >= 1 ) break loop194;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(194, input);
                                throw eee;
                        }
                        cnt194++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5304:3: ( (lv_dbTable_33_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5305:1: (lv_dbTable_33_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5305:1: (lv_dbTable_33_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5306:3: lv_dbTable_33_0= RULE_IDENT
                    {
                    lv_dbTable_33_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10627); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_33_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_3_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_33_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5322:2: (this_WS_34= RULE_WS )+
                    int cnt195=0;
                    loop195:
                    do {
                        int alt195=2;
                        int LA195_0 = input.LA(1);

                        if ( (LA195_0==RULE_WS) ) {
                            alt195=1;
                        }


                        switch (alt195) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5322:3: this_WS_34= RULE_WS
                    	    {
                    	    this_WS_34=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10644); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_34, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_3_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt195 >= 1 ) break loop195;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(195, input);
                                throw eee;
                        }
                        cnt195++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5326:3: ( (lv_identity_35_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5327:1: (lv_identity_35_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5327:1: (lv_identity_35_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5328:3: lv_identity_35_0= RULE_IDENT
                    {
                    lv_identity_35_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10662); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_identity_35_0, grammarAccess.getMetagenPropertyAccess().getIdentityIDENTTerminalRuleCall_3_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"identity",
                              		lv_identity_35_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5344:2: ( (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) ) )?
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==RULE_WS) ) {
                        alt197=1;
                    }
                    switch (alt197) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5344:3: (this_WS_36= RULE_WS )+ ( (lv_type_37_0= RULE_IDENT ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5344:3: (this_WS_36= RULE_WS )+
                            int cnt196=0;
                            loop196:
                            do {
                                int alt196=2;
                                int LA196_0 = input.LA(1);

                                if ( (LA196_0==RULE_WS) ) {
                                    alt196=1;
                                }


                                switch (alt196) {
                            	case 1 :
                            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5344:4: this_WS_36= RULE_WS
                            	    {
                            	    this_WS_36=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10680); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {
                            	       
                            	          newLeafNode(this_WS_36, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_3_5_0()); 
                            	          
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt196 >= 1 ) break loop196;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(196, input);
                                        throw eee;
                                }
                                cnt196++;
                            } while (true);

                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5348:3: ( (lv_type_37_0= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5349:1: (lv_type_37_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5349:1: (lv_type_37_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5350:3: lv_type_37_0= RULE_IDENT
                            {
                            lv_type_37_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10698); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_type_37_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_3_5_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"type",
                                      		lv_type_37_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5367:6: ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5367:6: ( ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5367:7: ( (lv_name_38_0= 'column-meta-type' ) ) (this_WS_39= RULE_WS )+ ( (lv_dbTable_40_0= RULE_IDENT ) ) ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5367:7: ( (lv_name_38_0= 'column-meta-type' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5368:1: (lv_name_38_0= 'column-meta-type' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5368:1: (lv_name_38_0= 'column-meta-type' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5369:3: lv_name_38_0= 'column-meta-type'
                    {
                    lv_name_38_0=(Token)match(input,116,FollowSets000.FOLLOW_116_in_ruleMetagenProperty10731); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_38_0, grammarAccess.getMetagenPropertyAccess().getNameColumnMetaTypeKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_38_0, "column-meta-type");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5382:2: (this_WS_39= RULE_WS )+
                    int cnt198=0;
                    loop198:
                    do {
                        int alt198=2;
                        int LA198_0 = input.LA(1);

                        if ( (LA198_0==RULE_WS) ) {
                            alt198=1;
                        }


                        switch (alt198) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5382:3: this_WS_39= RULE_WS
                    	    {
                    	    this_WS_39=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10756); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_39, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt198 >= 1 ) break loop198;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(198, input);
                                throw eee;
                        }
                        cnt198++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5386:3: ( (lv_dbTable_40_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5387:1: (lv_dbTable_40_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5387:1: (lv_dbTable_40_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5388:3: lv_dbTable_40_0= RULE_IDENT
                    {
                    lv_dbTable_40_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10774); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_40_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_4_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_40_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5404:2: ( (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) ) )+
                    int cnt200=0;
                    loop200:
                    do {
                        int alt200=2;
                        int LA200_0 = input.LA(1);

                        if ( (LA200_0==RULE_WS) ) {
                            alt200=1;
                        }


                        switch (alt200) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5404:3: (this_WS_41= RULE_WS )+ ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5404:3: (this_WS_41= RULE_WS )+
                    	    int cnt199=0;
                    	    loop199:
                    	    do {
                    	        int alt199=2;
                    	        int LA199_0 = input.LA(1);

                    	        if ( (LA199_0==RULE_WS) ) {
                    	            alt199=1;
                    	        }


                    	        switch (alt199) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5404:4: this_WS_41= RULE_WS
                    	    	    {
                    	    	    this_WS_41=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10792); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_41, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_4_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt199 >= 1 ) break loop199;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(199, input);
                    	                throw eee;
                    	        }
                    	        cnt199++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5408:3: ( (lv_metaTypes_42_0= ruleMetaTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5409:1: (lv_metaTypes_42_0= ruleMetaTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5409:1: (lv_metaTypes_42_0= ruleMetaTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5410:3: lv_metaTypes_42_0= ruleMetaTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetagenPropertyAccess().getMetaTypesMetaTypeAssignementParserRuleCall_4_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleMetaTypeAssignement_in_ruleMetagenProperty10814);
                    	    lv_metaTypes_42_0=ruleMetaTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"metaTypes",
                    	              		lv_metaTypes_42_0, 
                    	              		"MetaTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt200 >= 1 ) break loop200;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(200, input);
                                throw eee;
                        }
                        cnt200++;
                    } while (true);


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5427:6: ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5427:6: ( ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5427:7: ( (lv_name_43_0= 'statement-meta-type' ) ) (this_WS_44= RULE_WS )+ ( (lv_dbStatement_45_0= RULE_IDENT ) ) ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5427:7: ( (lv_name_43_0= 'statement-meta-type' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5428:1: (lv_name_43_0= 'statement-meta-type' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5428:1: (lv_name_43_0= 'statement-meta-type' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5429:3: lv_name_43_0= 'statement-meta-type'
                    {
                    lv_name_43_0=(Token)match(input,117,FollowSets000.FOLLOW_117_in_ruleMetagenProperty10842); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_43_0, grammarAccess.getMetagenPropertyAccess().getNameStatementMetaTypeKeyword_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_43_0, "statement-meta-type");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5442:2: (this_WS_44= RULE_WS )+
                    int cnt201=0;
                    loop201:
                    do {
                        int alt201=2;
                        int LA201_0 = input.LA(1);

                        if ( (LA201_0==RULE_WS) ) {
                            alt201=1;
                        }


                        switch (alt201) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5442:3: this_WS_44= RULE_WS
                    	    {
                    	    this_WS_44=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10867); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_44, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_5_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt201 >= 1 ) break loop201;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(201, input);
                                throw eee;
                        }
                        cnt201++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5446:3: ( (lv_dbStatement_45_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5447:1: (lv_dbStatement_45_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5447:1: (lv_dbStatement_45_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5448:3: lv_dbStatement_45_0= RULE_IDENT
                    {
                    lv_dbStatement_45_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty10885); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbStatement_45_0, grammarAccess.getMetagenPropertyAccess().getDbStatementIDENTTerminalRuleCall_5_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbStatement",
                              		lv_dbStatement_45_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5464:2: ( (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) ) )+
                    int cnt203=0;
                    loop203:
                    do {
                        int alt203=2;
                        int LA203_0 = input.LA(1);

                        if ( (LA203_0==RULE_WS) ) {
                            alt203=1;
                        }


                        switch (alt203) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5464:3: (this_WS_46= RULE_WS )+ ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5464:3: (this_WS_46= RULE_WS )+
                    	    int cnt202=0;
                    	    loop202:
                    	    do {
                    	        int alt202=2;
                    	        int LA202_0 = input.LA(1);

                    	        if ( (LA202_0==RULE_WS) ) {
                    	            alt202=1;
                    	        }


                    	        switch (alt202) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5464:4: this_WS_46= RULE_WS
                    	    	    {
                    	    	    this_WS_46=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty10903); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_46, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_5_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt202 >= 1 ) break loop202;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(202, input);
                    	                throw eee;
                    	        }
                    	        cnt202++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5468:3: ( (lv_metaTypes_47_0= ruleMetaTypeAssignement ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5469:1: (lv_metaTypes_47_0= ruleMetaTypeAssignement )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5469:1: (lv_metaTypes_47_0= ruleMetaTypeAssignement )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5470:3: lv_metaTypes_47_0= ruleMetaTypeAssignement
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetagenPropertyAccess().getMetaTypesMetaTypeAssignementParserRuleCall_5_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_ruleMetaTypeAssignement_in_ruleMetagenProperty10925);
                    	    lv_metaTypes_47_0=ruleMetaTypeAssignement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"metaTypes",
                    	              		lv_metaTypes_47_0, 
                    	              		"MetaTypeAssignement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt203 >= 1 ) break loop203;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(203, input);
                                throw eee;
                        }
                        cnt203++;
                    } while (true);


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5487:6: ( (lv_name_48_0= 'make-it-final' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5487:6: ( (lv_name_48_0= 'make-it-final' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5488:1: (lv_name_48_0= 'make-it-final' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5488:1: (lv_name_48_0= 'make-it-final' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5489:3: lv_name_48_0= 'make-it-final'
                    {
                    lv_name_48_0=(Token)match(input,107,FollowSets000.FOLLOW_107_in_ruleMetagenProperty10952); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_48_0, grammarAccess.getMetagenPropertyAccess().getNameMakeItFinalKeyword_6_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_48_0, "make-it-final");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5503:6: ( ( (lv_name_49_0= 'like-columns' ) ) (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5503:6: ( ( (lv_name_49_0= 'like-columns' ) ) (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5503:7: ( (lv_name_49_0= 'like-columns' ) ) (this_WS_50= RULE_WS )+ ( (lv_dbTable_51_0= RULE_IDENT ) ) ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5503:7: ( (lv_name_49_0= 'like-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5504:1: (lv_name_49_0= 'like-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5504:1: (lv_name_49_0= 'like-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5505:3: lv_name_49_0= 'like-columns'
                    {
                    lv_name_49_0=(Token)match(input,118,FollowSets000.FOLLOW_118_in_ruleMetagenProperty10990); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_49_0, grammarAccess.getMetagenPropertyAccess().getNameLikeColumnsKeyword_7_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_49_0, "like-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5518:2: (this_WS_50= RULE_WS )+
                    int cnt204=0;
                    loop204:
                    do {
                        int alt204=2;
                        int LA204_0 = input.LA(1);

                        if ( (LA204_0==RULE_WS) ) {
                            alt204=1;
                        }


                        switch (alt204) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5518:3: this_WS_50= RULE_WS
                    	    {
                    	    this_WS_50=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11015); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_50, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_7_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt204 >= 1 ) break loop204;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(204, input);
                                throw eee;
                        }
                        cnt204++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5522:3: ( (lv_dbTable_51_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5523:1: (lv_dbTable_51_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5523:1: (lv_dbTable_51_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5524:3: lv_dbTable_51_0= RULE_IDENT
                    {
                    lv_dbTable_51_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11033); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_51_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_7_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_51_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5540:2: ( (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) ) )+
                    int cnt206=0;
                    loop206:
                    do {
                        int alt206=2;
                        int LA206_0 = input.LA(1);

                        if ( (LA206_0==RULE_WS) ) {
                            alt206=1;
                        }


                        switch (alt206) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5540:3: (this_WS_52= RULE_WS )+ ( (lv_dbColumns_53_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5540:3: (this_WS_52= RULE_WS )+
                    	    int cnt205=0;
                    	    loop205:
                    	    do {
                    	        int alt205=2;
                    	        int LA205_0 = input.LA(1);

                    	        if ( (LA205_0==RULE_WS) ) {
                    	            alt205=1;
                    	        }


                    	        switch (alt205) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5540:4: this_WS_52= RULE_WS
                    	    	    {
                    	    	    this_WS_52=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11051); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_52, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_7_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt205 >= 1 ) break loop205;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(205, input);
                    	                throw eee;
                    	        }
                    	        cnt205++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5544:3: ( (lv_dbColumns_53_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5545:1: (lv_dbColumns_53_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5545:1: (lv_dbColumns_53_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5546:3: lv_dbColumns_53_0= RULE_IDENT
                    	    {
                    	    lv_dbColumns_53_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11069); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbColumns_53_0, grammarAccess.getMetagenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_7_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbColumns",
                    	              		lv_dbColumns_53_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt206 >= 1 ) break loop206;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(206, input);
                                throw eee;
                        }
                        cnt206++;
                    } while (true);


                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5563:6: ( ( (lv_name_54_0= 'not-like-columns' ) ) (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5563:6: ( ( (lv_name_54_0= 'not-like-columns' ) ) (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5563:7: ( (lv_name_54_0= 'not-like-columns' ) ) (this_WS_55= RULE_WS )+ ( (lv_dbTable_56_0= RULE_IDENT ) ) ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5563:7: ( (lv_name_54_0= 'not-like-columns' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5564:1: (lv_name_54_0= 'not-like-columns' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5564:1: (lv_name_54_0= 'not-like-columns' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5565:3: lv_name_54_0= 'not-like-columns'
                    {
                    lv_name_54_0=(Token)match(input,119,FollowSets000.FOLLOW_119_in_ruleMetagenProperty11102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_54_0, grammarAccess.getMetagenPropertyAccess().getNameNotLikeColumnsKeyword_8_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_54_0, "not-like-columns");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5578:2: (this_WS_55= RULE_WS )+
                    int cnt207=0;
                    loop207:
                    do {
                        int alt207=2;
                        int LA207_0 = input.LA(1);

                        if ( (LA207_0==RULE_WS) ) {
                            alt207=1;
                        }


                        switch (alt207) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5578:3: this_WS_55= RULE_WS
                    	    {
                    	    this_WS_55=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11127); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_55, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_8_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt207 >= 1 ) break loop207;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(207, input);
                                throw eee;
                        }
                        cnt207++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5582:3: ( (lv_dbTable_56_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5583:1: (lv_dbTable_56_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5583:1: (lv_dbTable_56_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5584:3: lv_dbTable_56_0= RULE_IDENT
                    {
                    lv_dbTable_56_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_56_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_8_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_56_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5600:2: ( (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) ) )+
                    int cnt209=0;
                    loop209:
                    do {
                        int alt209=2;
                        int LA209_0 = input.LA(1);

                        if ( (LA209_0==RULE_WS) ) {
                            alt209=1;
                        }


                        switch (alt209) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5600:3: (this_WS_57= RULE_WS )+ ( (lv_dbColumns_58_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5600:3: (this_WS_57= RULE_WS )+
                    	    int cnt208=0;
                    	    loop208:
                    	    do {
                    	        int alt208=2;
                    	        int LA208_0 = input.LA(1);

                    	        if ( (LA208_0==RULE_WS) ) {
                    	            alt208=1;
                    	        }


                    	        switch (alt208) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5600:4: this_WS_57= RULE_WS
                    	    	    {
                    	    	    this_WS_57=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11163); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_57, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_8_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt208 >= 1 ) break loop208;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(208, input);
                    	                throw eee;
                    	        }
                    	        cnt208++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5604:3: ( (lv_dbColumns_58_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5605:1: (lv_dbColumns_58_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5605:1: (lv_dbColumns_58_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5606:3: lv_dbColumns_58_0= RULE_IDENT
                    	    {
                    	    lv_dbColumns_58_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11181); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbColumns_58_0, grammarAccess.getMetagenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_8_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbColumns",
                    	              		lv_dbColumns_58_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt209 >= 1 ) break loop209;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(209, input);
                                throw eee;
                        }
                        cnt209++;
                    } while (true);


                    }


                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5623:6: ( (lv_name_59_0= 'generate-sequences' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5623:6: ( (lv_name_59_0= 'generate-sequences' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5624:1: (lv_name_59_0= 'generate-sequences' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5624:1: (lv_name_59_0= 'generate-sequences' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5625:3: lv_name_59_0= 'generate-sequences'
                    {
                    lv_name_59_0=(Token)match(input,120,FollowSets000.FOLLOW_120_in_ruleMetagenProperty11213); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_59_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateSequencesKeyword_9_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_59_0, "generate-sequences");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5639:6: ( (lv_name_60_0= 'generate-identities' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5639:6: ( (lv_name_60_0= 'generate-identities' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5640:1: (lv_name_60_0= 'generate-identities' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5640:1: (lv_name_60_0= 'generate-identities' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5641:3: lv_name_60_0= 'generate-identities'
                    {
                    lv_name_60_0=(Token)match(input,121,FollowSets000.FOLLOW_121_in_ruleMetagenProperty11250); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_60_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateIdentitiesKeyword_10_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_60_0, "generate-identities");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5655:6: ( (lv_name_61_0= 'generate-idgenerators' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5655:6: ( (lv_name_61_0= 'generate-idgenerators' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5656:1: (lv_name_61_0= 'generate-idgenerators' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5656:1: (lv_name_61_0= 'generate-idgenerators' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5657:3: lv_name_61_0= 'generate-idgenerators'
                    {
                    lv_name_61_0=(Token)match(input,122,FollowSets000.FOLLOW_122_in_ruleMetagenProperty11287); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_61_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateIdgeneratorsKeyword_11_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_61_0, "generate-idgenerators");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5671:6: ( (lv_name_62_0= 'generate-default-idgenerators' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5671:6: ( (lv_name_62_0= 'generate-default-idgenerators' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5672:1: (lv_name_62_0= 'generate-default-idgenerators' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5672:1: (lv_name_62_0= 'generate-default-idgenerators' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5673:3: lv_name_62_0= 'generate-default-idgenerators'
                    {
                    lv_name_62_0=(Token)match(input,123,FollowSets000.FOLLOW_123_in_ruleMetagenProperty11324); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_62_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateDefaultIdgeneratorsKeyword_12_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_62_0, "generate-default-idgenerators");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5687:6: ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5687:6: ( ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5687:7: ( (lv_name_63_0= 'function-result' ) ) (this_WS_64= RULE_WS )+ ( (lv_dbFunction_65_0= RULE_IDENT ) ) (this_WS_66= RULE_WS )+ ( (lv_type_67_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5687:7: ( (lv_name_63_0= 'function-result' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5688:1: (lv_name_63_0= 'function-result' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5688:1: (lv_name_63_0= 'function-result' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5689:3: lv_name_63_0= 'function-result'
                    {
                    lv_name_63_0=(Token)match(input,124,FollowSets000.FOLLOW_124_in_ruleMetagenProperty11362); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_63_0, grammarAccess.getMetagenPropertyAccess().getNameFunctionResultKeyword_13_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_63_0, "function-result");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5702:2: (this_WS_64= RULE_WS )+
                    int cnt210=0;
                    loop210:
                    do {
                        int alt210=2;
                        int LA210_0 = input.LA(1);

                        if ( (LA210_0==RULE_WS) ) {
                            alt210=1;
                        }


                        switch (alt210) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5702:3: this_WS_64= RULE_WS
                    	    {
                    	    this_WS_64=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11387); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_64, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_13_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt210 >= 1 ) break loop210;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(210, input);
                                throw eee;
                        }
                        cnt210++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5706:3: ( (lv_dbFunction_65_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5707:1: (lv_dbFunction_65_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5707:1: (lv_dbFunction_65_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5708:3: lv_dbFunction_65_0= RULE_IDENT
                    {
                    lv_dbFunction_65_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11405); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_65_0, grammarAccess.getMetagenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_13_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_65_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5724:2: (this_WS_66= RULE_WS )+
                    int cnt211=0;
                    loop211:
                    do {
                        int alt211=2;
                        int LA211_0 = input.LA(1);

                        if ( (LA211_0==RULE_WS) ) {
                            alt211=1;
                        }


                        switch (alt211) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5724:3: this_WS_66= RULE_WS
                    	    {
                    	    this_WS_66=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11422); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_66, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_13_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt211 >= 1 ) break loop211;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(211, input);
                                throw eee;
                        }
                        cnt211++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5728:3: ( (lv_type_67_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5729:1: (lv_type_67_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5729:1: (lv_type_67_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5730:3: lv_type_67_0= RULE_IDENT
                    {
                    lv_type_67_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11440); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_67_0, grammarAccess.getMetagenPropertyAccess().getTypeIDENTTerminalRuleCall_13_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_67_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5747:6: ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5747:6: ( ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5747:7: ( (lv_name_68_0= 'function-result-set' ) ) (this_WS_69= RULE_WS )+ ( (lv_dbFunction_70_0= RULE_IDENT ) ) (this_WS_71= RULE_WS )+ ( (lv_dbTable_72_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5747:7: ( (lv_name_68_0= 'function-result-set' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5748:1: (lv_name_68_0= 'function-result-set' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5748:1: (lv_name_68_0= 'function-result-set' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5749:3: lv_name_68_0= 'function-result-set'
                    {
                    lv_name_68_0=(Token)match(input,125,FollowSets000.FOLLOW_125_in_ruleMetagenProperty11471); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_68_0, grammarAccess.getMetagenPropertyAccess().getNameFunctionResultSetKeyword_14_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_68_0, "function-result-set");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5762:2: (this_WS_69= RULE_WS )+
                    int cnt212=0;
                    loop212:
                    do {
                        int alt212=2;
                        int LA212_0 = input.LA(1);

                        if ( (LA212_0==RULE_WS) ) {
                            alt212=1;
                        }


                        switch (alt212) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5762:3: this_WS_69= RULE_WS
                    	    {
                    	    this_WS_69=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11496); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_69, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_14_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt212 >= 1 ) break loop212;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(212, input);
                                throw eee;
                        }
                        cnt212++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5766:3: ( (lv_dbFunction_70_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5767:1: (lv_dbFunction_70_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5767:1: (lv_dbFunction_70_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5768:3: lv_dbFunction_70_0= RULE_IDENT
                    {
                    lv_dbFunction_70_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11514); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_70_0, grammarAccess.getMetagenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_14_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_70_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5784:2: (this_WS_71= RULE_WS )+
                    int cnt213=0;
                    loop213:
                    do {
                        int alt213=2;
                        int LA213_0 = input.LA(1);

                        if ( (LA213_0==RULE_WS) ) {
                            alt213=1;
                        }


                        switch (alt213) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5784:3: this_WS_71= RULE_WS
                    	    {
                    	    this_WS_71=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11531); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_71, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_14_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt213 >= 1 ) break loop213;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(213, input);
                                throw eee;
                        }
                        cnt213++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5788:3: ( (lv_dbTable_72_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5789:1: (lv_dbTable_72_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5789:1: (lv_dbTable_72_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5790:3: lv_dbTable_72_0= RULE_IDENT
                    {
                    lv_dbTable_72_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11549); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_72_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_14_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_72_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5807:6: ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5807:6: ( ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5807:7: ( (lv_name_73_0= 'procedure-result-set' ) ) (this_WS_74= RULE_WS )+ ( (lv_dbProcedure_75_0= RULE_IDENT ) ) (this_WS_76= RULE_WS )+ ( (lv_dbTable_77_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5807:7: ( (lv_name_73_0= 'procedure-result-set' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5808:1: (lv_name_73_0= 'procedure-result-set' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5808:1: (lv_name_73_0= 'procedure-result-set' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5809:3: lv_name_73_0= 'procedure-result-set'
                    {
                    lv_name_73_0=(Token)match(input,126,FollowSets000.FOLLOW_126_in_ruleMetagenProperty11580); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_73_0, grammarAccess.getMetagenPropertyAccess().getNameProcedureResultSetKeyword_15_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_73_0, "procedure-result-set");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5822:2: (this_WS_74= RULE_WS )+
                    int cnt214=0;
                    loop214:
                    do {
                        int alt214=2;
                        int LA214_0 = input.LA(1);

                        if ( (LA214_0==RULE_WS) ) {
                            alt214=1;
                        }


                        switch (alt214) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5822:3: this_WS_74= RULE_WS
                    	    {
                    	    this_WS_74=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11605); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_74, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_15_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt214 >= 1 ) break loop214;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(214, input);
                                throw eee;
                        }
                        cnt214++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5826:3: ( (lv_dbProcedure_75_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5827:1: (lv_dbProcedure_75_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5827:1: (lv_dbProcedure_75_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5828:3: lv_dbProcedure_75_0= RULE_IDENT
                    {
                    lv_dbProcedure_75_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11623); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbProcedure_75_0, grammarAccess.getMetagenPropertyAccess().getDbProcedureIDENTTerminalRuleCall_15_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbProcedure",
                              		lv_dbProcedure_75_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5844:2: (this_WS_76= RULE_WS )+
                    int cnt215=0;
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==RULE_WS) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5844:3: this_WS_76= RULE_WS
                    	    {
                    	    this_WS_76=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11640); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_76, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_15_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt215 >= 1 ) break loop215;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(215, input);
                                throw eee;
                        }
                        cnt215++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5848:3: ( (lv_dbTable_77_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5849:1: (lv_dbTable_77_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5849:1: (lv_dbTable_77_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5850:3: lv_dbTable_77_0= RULE_IDENT
                    {
                    lv_dbTable_77_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11658); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbTable_77_0, grammarAccess.getMetagenPropertyAccess().getDbTableIDENTTerminalRuleCall_15_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbTable",
                              		lv_dbTable_77_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5867:6: ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5867:6: ( ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5867:7: ( (lv_name_78_0= 'debug-level' ) ) (this_WS_79= RULE_WS )+ ( (lv_debug_80_0= ruleDebugLevelAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5867:7: ( (lv_name_78_0= 'debug-level' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5868:1: (lv_name_78_0= 'debug-level' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5868:1: (lv_name_78_0= 'debug-level' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5869:3: lv_name_78_0= 'debug-level'
                    {
                    lv_name_78_0=(Token)match(input,68,FollowSets000.FOLLOW_68_in_ruleMetagenProperty11689); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_78_0, grammarAccess.getMetagenPropertyAccess().getNameDebugLevelKeyword_16_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_78_0, "debug-level");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5882:2: (this_WS_79= RULE_WS )+
                    int cnt216=0;
                    loop216:
                    do {
                        int alt216=2;
                        int LA216_0 = input.LA(1);

                        if ( (LA216_0==RULE_WS) ) {
                            alt216=1;
                        }


                        switch (alt216) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5882:3: this_WS_79= RULE_WS
                    	    {
                    	    this_WS_79=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11714); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_79, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_16_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt216 >= 1 ) break loop216;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(216, input);
                                throw eee;
                        }
                        cnt216++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5886:3: ( (lv_debug_80_0= ruleDebugLevelAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5887:1: (lv_debug_80_0= ruleDebugLevelAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5887:1: (lv_debug_80_0= ruleDebugLevelAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5888:3: lv_debug_80_0= ruleDebugLevelAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetagenPropertyAccess().getDebugDebugLevelAssignementParserRuleCall_16_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_ruleDebugLevelAssignement_in_ruleMetagenProperty11736);
                    lv_debug_80_0=ruleDebugLevelAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"debug",
                              		lv_debug_80_0, 
                              		"DebugLevelAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5905:6: ( (lv_name_81_0= 'generate-operators' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5905:6: ( (lv_name_81_0= 'generate-operators' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5906:1: (lv_name_81_0= 'generate-operators' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5906:1: (lv_name_81_0= 'generate-operators' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5907:3: lv_name_81_0= 'generate-operators'
                    {
                    lv_name_81_0=(Token)match(input,98,FollowSets000.FOLLOW_98_in_ruleMetagenProperty11761); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_81_0, grammarAccess.getMetagenPropertyAccess().getNameGenerateOperatorsKeyword_17_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_81_0, "generate-operators");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5921:6: ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5921:6: ( ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5921:7: ( (lv_name_82_0= 'optimize-insert' ) ) ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5921:7: ( (lv_name_82_0= 'optimize-insert' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5922:1: (lv_name_82_0= 'optimize-insert' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5922:1: (lv_name_82_0= 'optimize-insert' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5923:3: lv_name_82_0= 'optimize-insert'
                    {
                    lv_name_82_0=(Token)match(input,127,FollowSets000.FOLLOW_127_in_ruleMetagenProperty11799); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_82_0, grammarAccess.getMetagenPropertyAccess().getNameOptimizeInsertKeyword_18_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_82_0, "optimize-insert");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5936:2: ( (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) ) )*
                    loop218:
                    do {
                        int alt218=2;
                        int LA218_0 = input.LA(1);

                        if ( (LA218_0==RULE_WS) ) {
                            alt218=1;
                        }


                        switch (alt218) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5936:3: (this_WS_83= RULE_WS )+ ( (lv_dbTables_84_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5936:3: (this_WS_83= RULE_WS )+
                    	    int cnt217=0;
                    	    loop217:
                    	    do {
                    	        int alt217=2;
                    	        int LA217_0 = input.LA(1);

                    	        if ( (LA217_0==RULE_WS) ) {
                    	            alt217=1;
                    	        }


                    	        switch (alt217) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5936:4: this_WS_83= RULE_WS
                    	    	    {
                    	    	    this_WS_83=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_RULE_WS_in_ruleMetagenProperty11825); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_83, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_18_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt217 >= 1 ) break loop217;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(217, input);
                    	                throw eee;
                    	        }
                    	        cnt217++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5940:3: ( (lv_dbTables_84_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5941:1: (lv_dbTables_84_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5941:1: (lv_dbTables_84_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5942:3: lv_dbTables_84_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_84_0=(Token)match(input,RULE_IDENT,FollowSets000.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11843); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_84_0, grammarAccess.getMetagenPropertyAccess().getDbTablesIDENTTerminalRuleCall_18_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_84_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop218;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5959:6: ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5959:6: ( ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5959:7: ( (lv_name_85_0= 'optional-features' ) ) (this_WS_86= RULE_WS )+ ( (lv_dbStatement_87_0= RULE_IDENT ) ) ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5959:7: ( (lv_name_85_0= 'optional-features' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5960:1: (lv_name_85_0= 'optional-features' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5960:1: (lv_name_85_0= 'optional-features' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5961:3: lv_name_85_0= 'optional-features'
                    {
                    lv_name_85_0=(Token)match(input,128,FollowSets000.FOLLOW_128_in_ruleMetagenProperty11876); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_85_0, grammarAccess.getMetagenPropertyAccess().getNameOptionalFeaturesKeyword_19_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_85_0, "optional-features");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5974:2: (this_WS_86= RULE_WS )+
                    int cnt219=0;
                    loop219:
                    do {
                        int alt219=2;
                        int LA219_0 = input.LA(1);

                        if ( (LA219_0==RULE_WS) ) {
                            alt219=1;
                        }


                        switch (alt219) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5974:3: this_WS_86= RULE_WS
                    	    {
                    	    this_WS_86=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetagenProperty11901); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_86, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_19_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt219 >= 1 ) break loop219;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(219, input);
                                throw eee;
                        }
                        cnt219++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5978:3: ( (lv_dbStatement_87_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5979:1: (lv_dbStatement_87_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5979:1: (lv_dbStatement_87_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5980:3: lv_dbStatement_87_0= RULE_IDENT
                    {
                    lv_dbStatement_87_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11919); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbStatement_87_0, grammarAccess.getMetagenPropertyAccess().getDbStatementIDENTTerminalRuleCall_19_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbStatement",
                              		lv_dbStatement_87_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5996:2: ( (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) ) )+
                    int cnt221=0;
                    loop221:
                    do {
                        int alt221=2;
                        int LA221_0 = input.LA(1);

                        if ( (LA221_0==RULE_WS) ) {
                            alt221=1;
                        }


                        switch (alt221) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5996:3: (this_WS_88= RULE_WS )+ ( (lv_optionalFeatures_89_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5996:3: (this_WS_88= RULE_WS )+
                    	    int cnt220=0;
                    	    loop220:
                    	    do {
                    	        int alt220=2;
                    	        int LA220_0 = input.LA(1);

                    	        if ( (LA220_0==RULE_WS) ) {
                    	            alt220=1;
                    	        }


                    	        switch (alt220) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:5996:4: this_WS_88= RULE_WS
                    	    	    {
                    	    	    this_WS_88=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetagenProperty11937); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_88, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_19_3_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt220 >= 1 ) break loop220;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(220, input);
                    	                throw eee;
                    	        }
                    	        cnt220++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6000:3: ( (lv_optionalFeatures_89_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6001:1: (lv_optionalFeatures_89_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6001:1: (lv_optionalFeatures_89_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6002:3: lv_optionalFeatures_89_0= RULE_IDENT
                    	    {
                    	    lv_optionalFeatures_89_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetagenProperty11955); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_optionalFeatures_89_0, grammarAccess.getMetagenPropertyAccess().getOptionalFeaturesIDENTTerminalRuleCall_19_3_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"optionalFeatures",
                    	              		lv_optionalFeatures_89_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt221 >= 1 ) break loop221;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(221, input);
                                throw eee;
                        }
                        cnt221++;
                    } while (true);


                    }


                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6019:6: ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6019:6: ( ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6019:7: ( (lv_name_90_0= 'active-filter' ) ) (this_WS_91= RULE_WS )+ ( (lv_activeFilter_92_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6019:7: ( (lv_name_90_0= 'active-filter' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6020:1: (lv_name_90_0= 'active-filter' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6020:1: (lv_name_90_0= 'active-filter' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6021:3: lv_name_90_0= 'active-filter'
                    {
                    lv_name_90_0=(Token)match(input,111,FollowSets001.FOLLOW_111_in_ruleMetagenProperty11988); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_90_0, grammarAccess.getMetagenPropertyAccess().getNameActiveFilterKeyword_20_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_90_0, "active-filter");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6034:2: (this_WS_91= RULE_WS )+
                    int cnt222=0;
                    loop222:
                    do {
                        int alt222=2;
                        int LA222_0 = input.LA(1);

                        if ( (LA222_0==RULE_WS) ) {
                            alt222=1;
                        }


                        switch (alt222) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6034:3: this_WS_91= RULE_WS
                    	    {
                    	    this_WS_91=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetagenProperty12013); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_91, grammarAccess.getMetagenPropertyAccess().getWSTerminalRuleCall_20_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt222 >= 1 ) break loop222;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(222, input);
                                throw eee;
                        }
                        cnt222++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6038:3: ( (lv_activeFilter_92_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6039:1: (lv_activeFilter_92_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6039:1: (lv_activeFilter_92_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6040:3: lv_activeFilter_92_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetagenPropertyAccess().getActiveFilterPropertyValueParserRuleCall_20_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_rulePropertyValue_in_ruleMetagenProperty12035);
                    lv_activeFilter_92_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetagenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"activeFilter",
                              		lv_activeFilter_92_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetagenProperty"


    // $ANTLR start "entryRuleDaogenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6064:1: entryRuleDaogenProperty returns [EObject current=null] : iv_ruleDaogenProperty= ruleDaogenProperty EOF ;
    public final EObject entryRuleDaogenProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDaogenProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6065:2: (iv_ruleDaogenProperty= ruleDaogenProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6066:2: iv_ruleDaogenProperty= ruleDaogenProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDaogenPropertyRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleDaogenProperty_in_entryRuleDaogenProperty12072);
            iv_ruleDaogenProperty=ruleDaogenProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDaogenProperty; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleDaogenProperty12082); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDaogenProperty"


    // $ANTLR start "ruleDaogenProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6073:1: ruleDaogenProperty returns [EObject current=null] : ( ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_6_0= 'implementation-package' ) ) (this_WS_7= RULE_WS )+ ( (lv_implPackage_8_0= RULE_IDENT ) ) ) | ( ( (lv_name_9_0= 'implements-interfaces' ) ) (this_WS_10= RULE_WS )+ ( (lv_toImplements_11_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_12_0= 'extends-class' ) ) (this_WS_13= RULE_WS )+ ( (lv_toExtends_14_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_15_0= 'implements-interfaces-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_18_0= 'extends-class-generics' ) ) (this_WS_19= RULE_WS )+ ( (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_21_0= 'make-it-final' ) ) | ( ( (lv_name_22_0= 'function-result' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbFunction_24_0= RULE_IDENT ) ) (this_WS_25= RULE_WS )+ ( (lv_resultType_26_0= rulePojoType ) ) ) | ( ( (lv_name_27_0= 'debug-level' ) ) (this_WS_28= RULE_WS )+ ( (lv_debug_29_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_30_0= 'active-filter' ) ) (this_WS_31= RULE_WS )+ ( (lv_activeFilter_32_0= rulePropertyValue ) ) ) ) ;
    public final EObject ruleDaogenProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_WS_1=null;
        Token lv_dbTables_2_0=null;
        Token lv_name_3_0=null;
        Token this_WS_4=null;
        Token lv_dbTables_5_0=null;
        Token lv_name_6_0=null;
        Token this_WS_7=null;
        Token lv_implPackage_8_0=null;
        Token lv_name_9_0=null;
        Token this_WS_10=null;
        Token lv_name_12_0=null;
        Token this_WS_13=null;
        Token lv_name_15_0=null;
        Token this_WS_16=null;
        Token lv_name_18_0=null;
        Token this_WS_19=null;
        Token lv_name_21_0=null;
        Token lv_name_22_0=null;
        Token this_WS_23=null;
        Token lv_dbFunction_24_0=null;
        Token this_WS_25=null;
        Token lv_name_27_0=null;
        Token this_WS_28=null;
        Token lv_name_30_0=null;
        Token this_WS_31=null;
        EObject lv_toImplements_11_0 = null;

        EObject lv_toExtends_14_0 = null;

        EObject lv_toImplementsGenerics_17_0 = null;

        EObject lv_toExtendsGenerics_20_0 = null;

        EObject lv_resultType_26_0 = null;

        EObject lv_debug_29_0 = null;

        AntlrDatatypeRuleToken lv_activeFilter_32_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6076:28: ( ( ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_6_0= 'implementation-package' ) ) (this_WS_7= RULE_WS )+ ( (lv_implPackage_8_0= RULE_IDENT ) ) ) | ( ( (lv_name_9_0= 'implements-interfaces' ) ) (this_WS_10= RULE_WS )+ ( (lv_toImplements_11_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_12_0= 'extends-class' ) ) (this_WS_13= RULE_WS )+ ( (lv_toExtends_14_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_15_0= 'implements-interfaces-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_18_0= 'extends-class-generics' ) ) (this_WS_19= RULE_WS )+ ( (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_21_0= 'make-it-final' ) ) | ( ( (lv_name_22_0= 'function-result' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbFunction_24_0= RULE_IDENT ) ) (this_WS_25= RULE_WS )+ ( (lv_resultType_26_0= rulePojoType ) ) ) | ( ( (lv_name_27_0= 'debug-level' ) ) (this_WS_28= RULE_WS )+ ( (lv_debug_29_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_30_0= 'active-filter' ) ) (this_WS_31= RULE_WS )+ ( (lv_activeFilter_32_0= rulePropertyValue ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6077:1: ( ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_6_0= 'implementation-package' ) ) (this_WS_7= RULE_WS )+ ( (lv_implPackage_8_0= RULE_IDENT ) ) ) | ( ( (lv_name_9_0= 'implements-interfaces' ) ) (this_WS_10= RULE_WS )+ ( (lv_toImplements_11_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_12_0= 'extends-class' ) ) (this_WS_13= RULE_WS )+ ( (lv_toExtends_14_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_15_0= 'implements-interfaces-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_18_0= 'extends-class-generics' ) ) (this_WS_19= RULE_WS )+ ( (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_21_0= 'make-it-final' ) ) | ( ( (lv_name_22_0= 'function-result' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbFunction_24_0= RULE_IDENT ) ) (this_WS_25= RULE_WS )+ ( (lv_resultType_26_0= rulePojoType ) ) ) | ( ( (lv_name_27_0= 'debug-level' ) ) (this_WS_28= RULE_WS )+ ( (lv_debug_29_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_30_0= 'active-filter' ) ) (this_WS_31= RULE_WS )+ ( (lv_activeFilter_32_0= rulePropertyValue ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6077:1: ( ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ ) | ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* ) | ( ( (lv_name_6_0= 'implementation-package' ) ) (this_WS_7= RULE_WS )+ ( (lv_implPackage_8_0= RULE_IDENT ) ) ) | ( ( (lv_name_9_0= 'implements-interfaces' ) ) (this_WS_10= RULE_WS )+ ( (lv_toImplements_11_0= ruleImplementsAssignement ) ) ) | ( ( (lv_name_12_0= 'extends-class' ) ) (this_WS_13= RULE_WS )+ ( (lv_toExtends_14_0= ruleExtendsAssignement ) ) ) | ( ( (lv_name_15_0= 'implements-interfaces-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics ) ) ) | ( ( (lv_name_18_0= 'extends-class-generics' ) ) (this_WS_19= RULE_WS )+ ( (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics ) ) ) | ( (lv_name_21_0= 'make-it-final' ) ) | ( ( (lv_name_22_0= 'function-result' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbFunction_24_0= RULE_IDENT ) ) (this_WS_25= RULE_WS )+ ( (lv_resultType_26_0= rulePojoType ) ) ) | ( ( (lv_name_27_0= 'debug-level' ) ) (this_WS_28= RULE_WS )+ ( (lv_debug_29_0= ruleDebugLevelAssignement ) ) ) | ( ( (lv_name_30_0= 'active-filter' ) ) (this_WS_31= RULE_WS )+ ( (lv_activeFilter_32_0= rulePropertyValue ) ) ) )
            int alt237=11;
            switch ( input.LA(1) ) {
            case 80:
                {
                alt237=1;
                }
                break;
            case 81:
                {
                alt237=2;
                }
                break;
            case 106:
                {
                alt237=3;
                }
                break;
            case 99:
                {
                alt237=4;
                }
                break;
            case 100:
                {
                alt237=5;
                }
                break;
            case 101:
                {
                alt237=6;
                }
                break;
            case 102:
                {
                alt237=7;
                }
                break;
            case 107:
                {
                alt237=8;
                }
                break;
            case 124:
                {
                alt237=9;
                }
                break;
            case 68:
                {
                alt237=10;
                }
                break;
            case 111:
                {
                alt237=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 0, input);

                throw nvae;
            }

            switch (alt237) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6077:2: ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6077:2: ( ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+ )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6077:3: ( (lv_name_0_0= 'ignore-tables' ) ) ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6077:3: ( (lv_name_0_0= 'ignore-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6078:1: (lv_name_0_0= 'ignore-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6078:1: (lv_name_0_0= 'ignore-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6079:3: lv_name_0_0= 'ignore-tables'
                    {
                    lv_name_0_0=(Token)match(input,80,FollowSets001.FOLLOW_80_in_ruleDaogenProperty12126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_0_0, grammarAccess.getDaogenPropertyAccess().getNameIgnoreTablesKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_0_0, "ignore-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6092:2: ( (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) ) )+
                    int cnt225=0;
                    loop225:
                    do {
                        int alt225=2;
                        int LA225_0 = input.LA(1);

                        if ( (LA225_0==RULE_WS) ) {
                            alt225=1;
                        }


                        switch (alt225) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6092:3: (this_WS_1= RULE_WS )+ ( (lv_dbTables_2_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6092:3: (this_WS_1= RULE_WS )+
                    	    int cnt224=0;
                    	    loop224:
                    	    do {
                    	        int alt224=2;
                    	        int LA224_0 = input.LA(1);

                    	        if ( (LA224_0==RULE_WS) ) {
                    	            alt224=1;
                    	        }


                    	        switch (alt224) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6092:4: this_WS_1= RULE_WS
                    	    	    {
                    	    	    this_WS_1=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12152); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_1, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_0_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt224 >= 1 ) break loop224;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(224, input);
                    	                throw eee;
                    	        }
                    	        cnt224++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6096:3: ( (lv_dbTables_2_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6097:1: (lv_dbTables_2_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6097:1: (lv_dbTables_2_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6098:3: lv_dbTables_2_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_2_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleDaogenProperty12170); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_2_0, grammarAccess.getDaogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_0_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_2_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt225 >= 1 ) break loop225;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(225, input);
                                throw eee;
                        }
                        cnt225++;
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6115:6: ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6115:6: ( ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6115:7: ( (lv_name_3_0= 'only-tables' ) ) ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6115:7: ( (lv_name_3_0= 'only-tables' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6116:1: (lv_name_3_0= 'only-tables' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6116:1: (lv_name_3_0= 'only-tables' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6117:3: lv_name_3_0= 'only-tables'
                    {
                    lv_name_3_0=(Token)match(input,81,FollowSets001.FOLLOW_81_in_ruleDaogenProperty12203); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_3_0, grammarAccess.getDaogenPropertyAccess().getNameOnlyTablesKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_3_0, "only-tables");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6130:2: ( (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) ) )*
                    loop227:
                    do {
                        int alt227=2;
                        int LA227_0 = input.LA(1);

                        if ( (LA227_0==RULE_WS) ) {
                            alt227=1;
                        }


                        switch (alt227) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6130:3: (this_WS_4= RULE_WS )+ ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6130:3: (this_WS_4= RULE_WS )+
                    	    int cnt226=0;
                    	    loop226:
                    	    do {
                    	        int alt226=2;
                    	        int LA226_0 = input.LA(1);

                    	        if ( (LA226_0==RULE_WS) ) {
                    	            alt226=1;
                    	        }


                    	        switch (alt226) {
                    	    	case 1 :
                    	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6130:4: this_WS_4= RULE_WS
                    	    	    {
                    	    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12229); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	          newLeafNode(this_WS_4, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_1_1_0()); 
                    	    	          
                    	    	    }

                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt226 >= 1 ) break loop226;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(226, input);
                    	                throw eee;
                    	        }
                    	        cnt226++;
                    	    } while (true);

                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6134:3: ( (lv_dbTables_5_0= RULE_IDENT ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6135:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6135:1: (lv_dbTables_5_0= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6136:3: lv_dbTables_5_0= RULE_IDENT
                    	    {
                    	    lv_dbTables_5_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleDaogenProperty12247); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_dbTables_5_0, grammarAccess.getDaogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_1_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"dbTables",
                    	              		lv_dbTables_5_0, 
                    	              		"IDENT");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop227;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6153:6: ( ( (lv_name_6_0= 'implementation-package' ) ) (this_WS_7= RULE_WS )+ ( (lv_implPackage_8_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6153:6: ( ( (lv_name_6_0= 'implementation-package' ) ) (this_WS_7= RULE_WS )+ ( (lv_implPackage_8_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6153:7: ( (lv_name_6_0= 'implementation-package' ) ) (this_WS_7= RULE_WS )+ ( (lv_implPackage_8_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6153:7: ( (lv_name_6_0= 'implementation-package' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6154:1: (lv_name_6_0= 'implementation-package' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6154:1: (lv_name_6_0= 'implementation-package' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6155:3: lv_name_6_0= 'implementation-package'
                    {
                    lv_name_6_0=(Token)match(input,106,FollowSets001.FOLLOW_106_in_ruleDaogenProperty12280); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_6_0, grammarAccess.getDaogenPropertyAccess().getNameImplementationPackageKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_6_0, "implementation-package");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6168:2: (this_WS_7= RULE_WS )+
                    int cnt228=0;
                    loop228:
                    do {
                        int alt228=2;
                        int LA228_0 = input.LA(1);

                        if ( (LA228_0==RULE_WS) ) {
                            alt228=1;
                        }


                        switch (alt228) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6168:3: this_WS_7= RULE_WS
                    	    {
                    	    this_WS_7=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12305); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_7, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_2_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt228 >= 1 ) break loop228;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(228, input);
                                throw eee;
                        }
                        cnt228++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6172:3: ( (lv_implPackage_8_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6173:1: (lv_implPackage_8_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6173:1: (lv_implPackage_8_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6174:3: lv_implPackage_8_0= RULE_IDENT
                    {
                    lv_implPackage_8_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleDaogenProperty12323); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_implPackage_8_0, grammarAccess.getDaogenPropertyAccess().getImplPackageIDENTTerminalRuleCall_2_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"implPackage",
                              		lv_implPackage_8_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6191:6: ( ( (lv_name_9_0= 'implements-interfaces' ) ) (this_WS_10= RULE_WS )+ ( (lv_toImplements_11_0= ruleImplementsAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6191:6: ( ( (lv_name_9_0= 'implements-interfaces' ) ) (this_WS_10= RULE_WS )+ ( (lv_toImplements_11_0= ruleImplementsAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6191:7: ( (lv_name_9_0= 'implements-interfaces' ) ) (this_WS_10= RULE_WS )+ ( (lv_toImplements_11_0= ruleImplementsAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6191:7: ( (lv_name_9_0= 'implements-interfaces' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6192:1: (lv_name_9_0= 'implements-interfaces' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6192:1: (lv_name_9_0= 'implements-interfaces' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6193:3: lv_name_9_0= 'implements-interfaces'
                    {
                    lv_name_9_0=(Token)match(input,99,FollowSets001.FOLLOW_99_in_ruleDaogenProperty12354); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_9_0, grammarAccess.getDaogenPropertyAccess().getNameImplementsInterfacesKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_9_0, "implements-interfaces");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6206:2: (this_WS_10= RULE_WS )+
                    int cnt229=0;
                    loop229:
                    do {
                        int alt229=2;
                        int LA229_0 = input.LA(1);

                        if ( (LA229_0==RULE_WS) ) {
                            alt229=1;
                        }


                        switch (alt229) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6206:3: this_WS_10= RULE_WS
                    	    {
                    	    this_WS_10=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12379); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_10, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_3_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt229 >= 1 ) break loop229;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(229, input);
                                throw eee;
                        }
                        cnt229++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6210:3: ( (lv_toImplements_11_0= ruleImplementsAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6211:1: (lv_toImplements_11_0= ruleImplementsAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6211:1: (lv_toImplements_11_0= ruleImplementsAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6212:3: lv_toImplements_11_0= ruleImplementsAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getToImplementsImplementsAssignementParserRuleCall_3_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleImplementsAssignement_in_ruleDaogenProperty12401);
                    lv_toImplements_11_0=ruleImplementsAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toImplements",
                              		lv_toImplements_11_0, 
                              		"ImplementsAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6229:6: ( ( (lv_name_12_0= 'extends-class' ) ) (this_WS_13= RULE_WS )+ ( (lv_toExtends_14_0= ruleExtendsAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6229:6: ( ( (lv_name_12_0= 'extends-class' ) ) (this_WS_13= RULE_WS )+ ( (lv_toExtends_14_0= ruleExtendsAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6229:7: ( (lv_name_12_0= 'extends-class' ) ) (this_WS_13= RULE_WS )+ ( (lv_toExtends_14_0= ruleExtendsAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6229:7: ( (lv_name_12_0= 'extends-class' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6230:1: (lv_name_12_0= 'extends-class' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6230:1: (lv_name_12_0= 'extends-class' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6231:3: lv_name_12_0= 'extends-class'
                    {
                    lv_name_12_0=(Token)match(input,100,FollowSets001.FOLLOW_100_in_ruleDaogenProperty12427); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_12_0, grammarAccess.getDaogenPropertyAccess().getNameExtendsClassKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_12_0, "extends-class");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6244:2: (this_WS_13= RULE_WS )+
                    int cnt230=0;
                    loop230:
                    do {
                        int alt230=2;
                        int LA230_0 = input.LA(1);

                        if ( (LA230_0==RULE_WS) ) {
                            alt230=1;
                        }


                        switch (alt230) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6244:3: this_WS_13= RULE_WS
                    	    {
                    	    this_WS_13=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12452); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_13, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt230 >= 1 ) break loop230;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(230, input);
                                throw eee;
                        }
                        cnt230++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6248:3: ( (lv_toExtends_14_0= ruleExtendsAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6249:1: (lv_toExtends_14_0= ruleExtendsAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6249:1: (lv_toExtends_14_0= ruleExtendsAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6250:3: lv_toExtends_14_0= ruleExtendsAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getToExtendsExtendsAssignementParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleExtendsAssignement_in_ruleDaogenProperty12474);
                    lv_toExtends_14_0=ruleExtendsAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toExtends",
                              		lv_toExtends_14_0, 
                              		"ExtendsAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6267:6: ( ( (lv_name_15_0= 'implements-interfaces-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6267:6: ( ( (lv_name_15_0= 'implements-interfaces-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6267:7: ( (lv_name_15_0= 'implements-interfaces-generics' ) ) (this_WS_16= RULE_WS )+ ( (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6267:7: ( (lv_name_15_0= 'implements-interfaces-generics' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6268:1: (lv_name_15_0= 'implements-interfaces-generics' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6268:1: (lv_name_15_0= 'implements-interfaces-generics' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6269:3: lv_name_15_0= 'implements-interfaces-generics'
                    {
                    lv_name_15_0=(Token)match(input,101,FollowSets001.FOLLOW_101_in_ruleDaogenProperty12500); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_15_0, grammarAccess.getDaogenPropertyAccess().getNameImplementsInterfacesGenericsKeyword_5_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_15_0, "implements-interfaces-generics");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6282:2: (this_WS_16= RULE_WS )+
                    int cnt231=0;
                    loop231:
                    do {
                        int alt231=2;
                        int LA231_0 = input.LA(1);

                        if ( (LA231_0==RULE_WS) ) {
                            alt231=1;
                        }


                        switch (alt231) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6282:3: this_WS_16= RULE_WS
                    	    {
                    	    this_WS_16=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12525); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_16, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_5_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt231 >= 1 ) break loop231;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(231, input);
                                throw eee;
                        }
                        cnt231++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6286:3: ( (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6287:1: (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6287:1: (lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6288:3: lv_toImplementsGenerics_17_0= ruleImplementsAssignementGenerics
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getToImplementsGenericsImplementsAssignementGenericsParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleImplementsAssignementGenerics_in_ruleDaogenProperty12547);
                    lv_toImplementsGenerics_17_0=ruleImplementsAssignementGenerics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toImplementsGenerics",
                              		lv_toImplementsGenerics_17_0, 
                              		"ImplementsAssignementGenerics");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6305:6: ( ( (lv_name_18_0= 'extends-class-generics' ) ) (this_WS_19= RULE_WS )+ ( (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6305:6: ( ( (lv_name_18_0= 'extends-class-generics' ) ) (this_WS_19= RULE_WS )+ ( (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6305:7: ( (lv_name_18_0= 'extends-class-generics' ) ) (this_WS_19= RULE_WS )+ ( (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6305:7: ( (lv_name_18_0= 'extends-class-generics' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6306:1: (lv_name_18_0= 'extends-class-generics' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6306:1: (lv_name_18_0= 'extends-class-generics' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6307:3: lv_name_18_0= 'extends-class-generics'
                    {
                    lv_name_18_0=(Token)match(input,102,FollowSets001.FOLLOW_102_in_ruleDaogenProperty12573); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_18_0, grammarAccess.getDaogenPropertyAccess().getNameExtendsClassGenericsKeyword_6_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_18_0, "extends-class-generics");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6320:2: (this_WS_19= RULE_WS )+
                    int cnt232=0;
                    loop232:
                    do {
                        int alt232=2;
                        int LA232_0 = input.LA(1);

                        if ( (LA232_0==RULE_WS) ) {
                            alt232=1;
                        }


                        switch (alt232) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6320:3: this_WS_19= RULE_WS
                    	    {
                    	    this_WS_19=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12598); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_19, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_6_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt232 >= 1 ) break loop232;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(232, input);
                                throw eee;
                        }
                        cnt232++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6324:3: ( (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6325:1: (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6325:1: (lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6326:3: lv_toExtendsGenerics_20_0= ruleExtendsAssignementGenerics
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getToExtendsGenericsExtendsAssignementGenericsParserRuleCall_6_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleExtendsAssignementGenerics_in_ruleDaogenProperty12620);
                    lv_toExtendsGenerics_20_0=ruleExtendsAssignementGenerics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"toExtendsGenerics",
                              		lv_toExtendsGenerics_20_0, 
                              		"ExtendsAssignementGenerics");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6343:6: ( (lv_name_21_0= 'make-it-final' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6343:6: ( (lv_name_21_0= 'make-it-final' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6344:1: (lv_name_21_0= 'make-it-final' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6344:1: (lv_name_21_0= 'make-it-final' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6345:3: lv_name_21_0= 'make-it-final'
                    {
                    lv_name_21_0=(Token)match(input,107,FollowSets001.FOLLOW_107_in_ruleDaogenProperty12645); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_21_0, grammarAccess.getDaogenPropertyAccess().getNameMakeItFinalKeyword_7_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_21_0, "make-it-final");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6359:6: ( ( (lv_name_22_0= 'function-result' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbFunction_24_0= RULE_IDENT ) ) (this_WS_25= RULE_WS )+ ( (lv_resultType_26_0= rulePojoType ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6359:6: ( ( (lv_name_22_0= 'function-result' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbFunction_24_0= RULE_IDENT ) ) (this_WS_25= RULE_WS )+ ( (lv_resultType_26_0= rulePojoType ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6359:7: ( (lv_name_22_0= 'function-result' ) ) (this_WS_23= RULE_WS )+ ( (lv_dbFunction_24_0= RULE_IDENT ) ) (this_WS_25= RULE_WS )+ ( (lv_resultType_26_0= rulePojoType ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6359:7: ( (lv_name_22_0= 'function-result' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6360:1: (lv_name_22_0= 'function-result' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6360:1: (lv_name_22_0= 'function-result' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6361:3: lv_name_22_0= 'function-result'
                    {
                    lv_name_22_0=(Token)match(input,124,FollowSets001.FOLLOW_124_in_ruleDaogenProperty12683); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_22_0, grammarAccess.getDaogenPropertyAccess().getNameFunctionResultKeyword_8_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_22_0, "function-result");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6374:2: (this_WS_23= RULE_WS )+
                    int cnt233=0;
                    loop233:
                    do {
                        int alt233=2;
                        int LA233_0 = input.LA(1);

                        if ( (LA233_0==RULE_WS) ) {
                            alt233=1;
                        }


                        switch (alt233) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6374:3: this_WS_23= RULE_WS
                    	    {
                    	    this_WS_23=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12708); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_23, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_8_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt233 >= 1 ) break loop233;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(233, input);
                                throw eee;
                        }
                        cnt233++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6378:3: ( (lv_dbFunction_24_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6379:1: (lv_dbFunction_24_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6379:1: (lv_dbFunction_24_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6380:3: lv_dbFunction_24_0= RULE_IDENT
                    {
                    lv_dbFunction_24_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleDaogenProperty12726); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_dbFunction_24_0, grammarAccess.getDaogenPropertyAccess().getDbFunctionIDENTTerminalRuleCall_8_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"dbFunction",
                              		lv_dbFunction_24_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6396:2: (this_WS_25= RULE_WS )+
                    int cnt234=0;
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==RULE_WS) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6396:3: this_WS_25= RULE_WS
                    	    {
                    	    this_WS_25=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12743); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_25, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_8_3()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt234 >= 1 ) break loop234;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(234, input);
                                throw eee;
                        }
                        cnt234++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6400:3: ( (lv_resultType_26_0= rulePojoType ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6401:1: (lv_resultType_26_0= rulePojoType )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6401:1: (lv_resultType_26_0= rulePojoType )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6402:3: lv_resultType_26_0= rulePojoType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getResultTypePojoTypeParserRuleCall_8_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_rulePojoType_in_ruleDaogenProperty12765);
                    lv_resultType_26_0=rulePojoType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"resultType",
                              		lv_resultType_26_0, 
                              		"PojoType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6419:6: ( ( (lv_name_27_0= 'debug-level' ) ) (this_WS_28= RULE_WS )+ ( (lv_debug_29_0= ruleDebugLevelAssignement ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6419:6: ( ( (lv_name_27_0= 'debug-level' ) ) (this_WS_28= RULE_WS )+ ( (lv_debug_29_0= ruleDebugLevelAssignement ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6419:7: ( (lv_name_27_0= 'debug-level' ) ) (this_WS_28= RULE_WS )+ ( (lv_debug_29_0= ruleDebugLevelAssignement ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6419:7: ( (lv_name_27_0= 'debug-level' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6420:1: (lv_name_27_0= 'debug-level' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6420:1: (lv_name_27_0= 'debug-level' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6421:3: lv_name_27_0= 'debug-level'
                    {
                    lv_name_27_0=(Token)match(input,68,FollowSets001.FOLLOW_68_in_ruleDaogenProperty12791); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_27_0, grammarAccess.getDaogenPropertyAccess().getNameDebugLevelKeyword_9_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_27_0, "debug-level");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6434:2: (this_WS_28= RULE_WS )+
                    int cnt235=0;
                    loop235:
                    do {
                        int alt235=2;
                        int LA235_0 = input.LA(1);

                        if ( (LA235_0==RULE_WS) ) {
                            alt235=1;
                        }


                        switch (alt235) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6434:3: this_WS_28= RULE_WS
                    	    {
                    	    this_WS_28=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12816); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_28, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_9_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt235 >= 1 ) break loop235;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(235, input);
                                throw eee;
                        }
                        cnt235++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6438:3: ( (lv_debug_29_0= ruleDebugLevelAssignement ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6439:1: (lv_debug_29_0= ruleDebugLevelAssignement )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6439:1: (lv_debug_29_0= ruleDebugLevelAssignement )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6440:3: lv_debug_29_0= ruleDebugLevelAssignement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getDebugDebugLevelAssignementParserRuleCall_9_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleDebugLevelAssignement_in_ruleDaogenProperty12838);
                    lv_debug_29_0=ruleDebugLevelAssignement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"debug",
                              		lv_debug_29_0, 
                              		"DebugLevelAssignement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6457:6: ( ( (lv_name_30_0= 'active-filter' ) ) (this_WS_31= RULE_WS )+ ( (lv_activeFilter_32_0= rulePropertyValue ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6457:6: ( ( (lv_name_30_0= 'active-filter' ) ) (this_WS_31= RULE_WS )+ ( (lv_activeFilter_32_0= rulePropertyValue ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6457:7: ( (lv_name_30_0= 'active-filter' ) ) (this_WS_31= RULE_WS )+ ( (lv_activeFilter_32_0= rulePropertyValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6457:7: ( (lv_name_30_0= 'active-filter' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6458:1: (lv_name_30_0= 'active-filter' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6458:1: (lv_name_30_0= 'active-filter' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6459:3: lv_name_30_0= 'active-filter'
                    {
                    lv_name_30_0=(Token)match(input,111,FollowSets001.FOLLOW_111_in_ruleDaogenProperty12864); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_name_30_0, grammarAccess.getDaogenPropertyAccess().getNameActiveFilterKeyword_10_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "name", lv_name_30_0, "active-filter");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6472:2: (this_WS_31= RULE_WS )+
                    int cnt236=0;
                    loop236:
                    do {
                        int alt236=2;
                        int LA236_0 = input.LA(1);

                        if ( (LA236_0==RULE_WS) ) {
                            alt236=1;
                        }


                        switch (alt236) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6472:3: this_WS_31= RULE_WS
                    	    {
                    	    this_WS_31=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleDaogenProperty12889); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_31, grammarAccess.getDaogenPropertyAccess().getWSTerminalRuleCall_10_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt236 >= 1 ) break loop236;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(236, input);
                                throw eee;
                        }
                        cnt236++;
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6476:3: ( (lv_activeFilter_32_0= rulePropertyValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6477:1: (lv_activeFilter_32_0= rulePropertyValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6477:1: (lv_activeFilter_32_0= rulePropertyValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6478:3: lv_activeFilter_32_0= rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDaogenPropertyAccess().getActiveFilterPropertyValueParserRuleCall_10_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_rulePropertyValue_in_ruleDaogenProperty12911);
                    lv_activeFilter_32_0=rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDaogenPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"activeFilter",
                              		lv_activeFilter_32_0, 
                              		"PropertyValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDaogenProperty"


    // $ANTLR start "entryRulePropertyValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6502:1: entryRulePropertyValue returns [String current=null] : iv_rulePropertyValue= rulePropertyValue EOF ;
    public final String entryRulePropertyValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6503:2: (iv_rulePropertyValue= rulePropertyValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6504:2: iv_rulePropertyValue= rulePropertyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyValueRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_rulePropertyValue_in_entryRulePropertyValue12949);
            iv_rulePropertyValue=rulePropertyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyValue.getText(); 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRulePropertyValue12960); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyValue"


    // $ANTLR start "rulePropertyValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6511:1: rulePropertyValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* ) | this_STRING_VALUE_65= RULE_STRING_VALUE ) ;
    public final AntlrDatatypeRuleToken rulePropertyValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_COLON_4=null;
        Token this_STRING_5=null;
        Token this_COMMA_6=null;
        Token this_MINUS_7=null;
        Token this_PLUS_8=null;
        Token this_LPAREN_9=null;
        Token this_RPAREN_10=null;
        Token this_LBRACE_11=null;
        Token this_RBRACE_12=null;
        Token this_QUESTI_13=null;
        Token this_NOT_14=null;
        Token this_BAND_15=null;
        Token this_BOR_16=null;
        Token this_HASH_17=null;
        Token this_AT_18=null;
        Token this_CARET_19=null;
        Token this_EQUALS_20=null;
        Token this_LESS_THAN_21=null;
        Token this_MORE_THAN_22=null;
        Token this_PERCENT_23=null;
        Token this_DOT_24=null;
        Token this_AND_25=null;
        Token this_OR_26=null;
        Token this_ESC_CHAR_27=null;
        Token this_ON_OFF_28=null;
        Token this_STATEMENT_TYPE_29=null;
        Token this_MAPPING_TYPE_30=null;
        Token this_OPTION_TYPE_31=null;
        Token this_REST_32=null;
        Token this_IDENT_DOT_33=null;
        Token this_IDENT_34=null;
        Token this_NUMBER_35=null;
        Token this_WS_36=null;
        Token this_COLON_37=null;
        Token this_STRING_38=null;
        Token this_COMMA_39=null;
        Token this_MINUS_40=null;
        Token this_PLUS_41=null;
        Token this_LPAREN_42=null;
        Token this_RPAREN_43=null;
        Token this_LBRACE_44=null;
        Token this_RBRACE_45=null;
        Token this_QUESTI_46=null;
        Token this_NOT_47=null;
        Token this_BAND_48=null;
        Token this_BOR_49=null;
        Token this_HASH_50=null;
        Token this_AT_51=null;
        Token this_CARET_52=null;
        Token this_EQUALS_53=null;
        Token this_LESS_THAN_54=null;
        Token this_MORE_THAN_55=null;
        Token this_PERCENT_56=null;
        Token this_DOT_57=null;
        Token this_AND_58=null;
        Token this_OR_59=null;
        Token this_ESC_CHAR_60=null;
        Token this_ON_OFF_61=null;
        Token this_STATEMENT_TYPE_62=null;
        Token this_MAPPING_TYPE_63=null;
        Token this_OPTION_TYPE_64=null;
        Token this_STRING_VALUE_65=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6514:28: ( ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* ) | this_STRING_VALUE_65= RULE_STRING_VALUE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6515:1: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* ) | this_STRING_VALUE_65= RULE_STRING_VALUE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6515:1: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* ) | this_STRING_VALUE_65= RULE_STRING_VALUE )
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( ((LA241_0>=RULE_IDENT && LA241_0<=RULE_MINUS)||(LA241_0>=RULE_COLON && LA241_0<=RULE_OPTION_TYPE)) ) {
                alt241=1;
            }
            else if ( (LA241_0==RULE_STRING_VALUE) ) {
                alt241=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;
            }
            switch (alt241) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6515:2: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6515:2: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6515:3: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6515:3: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_COLON_4= RULE_COLON | this_STRING_5= RULE_STRING | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_RBRACE_12= RULE_RBRACE | this_QUESTI_13= RULE_QUESTI | this_NOT_14= RULE_NOT | this_BAND_15= RULE_BAND | this_BOR_16= RULE_BOR | this_HASH_17= RULE_HASH | this_AT_18= RULE_AT | this_CARET_19= RULE_CARET | this_EQUALS_20= RULE_EQUALS | this_LESS_THAN_21= RULE_LESS_THAN | this_MORE_THAN_22= RULE_MORE_THAN | this_PERCENT_23= RULE_PERCENT | this_DOT_24= RULE_DOT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )
                    int alt238=32;
                    switch ( input.LA(1) ) {
                    case RULE_REST:
                        {
                        alt238=1;
                        }
                        break;
                    case RULE_IDENT_DOT:
                        {
                        alt238=2;
                        }
                        break;
                    case RULE_IDENT:
                        {
                        alt238=3;
                        }
                        break;
                    case RULE_NUMBER:
                        {
                        alt238=4;
                        }
                        break;
                    case RULE_COLON:
                        {
                        alt238=5;
                        }
                        break;
                    case RULE_STRING:
                        {
                        alt238=6;
                        }
                        break;
                    case RULE_COMMA:
                        {
                        alt238=7;
                        }
                        break;
                    case RULE_MINUS:
                        {
                        alt238=8;
                        }
                        break;
                    case RULE_PLUS:
                        {
                        alt238=9;
                        }
                        break;
                    case RULE_LPAREN:
                        {
                        alt238=10;
                        }
                        break;
                    case RULE_RPAREN:
                        {
                        alt238=11;
                        }
                        break;
                    case RULE_LBRACE:
                        {
                        alt238=12;
                        }
                        break;
                    case RULE_RBRACE:
                        {
                        alt238=13;
                        }
                        break;
                    case RULE_QUESTI:
                        {
                        alt238=14;
                        }
                        break;
                    case RULE_NOT:
                        {
                        alt238=15;
                        }
                        break;
                    case RULE_BAND:
                        {
                        alt238=16;
                        }
                        break;
                    case RULE_BOR:
                        {
                        alt238=17;
                        }
                        break;
                    case RULE_HASH:
                        {
                        alt238=18;
                        }
                        break;
                    case RULE_AT:
                        {
                        alt238=19;
                        }
                        break;
                    case RULE_CARET:
                        {
                        alt238=20;
                        }
                        break;
                    case RULE_EQUALS:
                        {
                        alt238=21;
                        }
                        break;
                    case RULE_LESS_THAN:
                        {
                        alt238=22;
                        }
                        break;
                    case RULE_MORE_THAN:
                        {
                        alt238=23;
                        }
                        break;
                    case RULE_PERCENT:
                        {
                        alt238=24;
                        }
                        break;
                    case RULE_DOT:
                        {
                        alt238=25;
                        }
                        break;
                    case RULE_AND:
                        {
                        alt238=26;
                        }
                        break;
                    case RULE_OR:
                        {
                        alt238=27;
                        }
                        break;
                    case RULE_ESC_CHAR:
                        {
                        alt238=28;
                        }
                        break;
                    case RULE_ON_OFF:
                        {
                        alt238=29;
                        }
                        break;
                    case RULE_STATEMENT_TYPE:
                        {
                        alt238=30;
                        }
                        break;
                    case RULE_MAPPING_TYPE:
                        {
                        alt238=31;
                        }
                        break;
                    case RULE_OPTION_TYPE:
                        {
                        alt238=32;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 238, 0, input);

                        throw nvae;
                    }

                    switch (alt238) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6515:8: this_REST_0= RULE_REST
                            {
                            this_REST_0=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_rulePropertyValue13002); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_REST_0);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_REST_0, grammarAccess.getPropertyValueAccess().getRESTTerminalRuleCall_0_0_0()); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6523:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                            {
                            this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_rulePropertyValue13028); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_IDENT_DOT_1);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_IDENT_DOT_1, grammarAccess.getPropertyValueAccess().getIDENT_DOTTerminalRuleCall_0_0_1()); 
                                  
                            }

                            }
                            break;
                        case 3 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6531:10: this_IDENT_2= RULE_IDENT
                            {
                            this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_rulePropertyValue13054); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_IDENT_2);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_IDENT_2, grammarAccess.getPropertyValueAccess().getIDENTTerminalRuleCall_0_0_2()); 
                                  
                            }

                            }
                            break;
                        case 4 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6539:10: this_NUMBER_3= RULE_NUMBER
                            {
                            this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_rulePropertyValue13080); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_NUMBER_3);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_NUMBER_3, grammarAccess.getPropertyValueAccess().getNUMBERTerminalRuleCall_0_0_3()); 
                                  
                            }

                            }
                            break;
                        case 5 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6547:10: this_COLON_4= RULE_COLON
                            {
                            this_COLON_4=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_rulePropertyValue13106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_COLON_4);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_4, grammarAccess.getPropertyValueAccess().getCOLONTerminalRuleCall_0_0_4()); 
                                  
                            }

                            }
                            break;
                        case 6 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6555:10: this_STRING_5= RULE_STRING
                            {
                            this_STRING_5=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_rulePropertyValue13132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_STRING_5);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_STRING_5, grammarAccess.getPropertyValueAccess().getSTRINGTerminalRuleCall_0_0_5()); 
                                  
                            }

                            }
                            break;
                        case 7 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6563:10: this_COMMA_6= RULE_COMMA
                            {
                            this_COMMA_6=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_rulePropertyValue13158); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_COMMA_6);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COMMA_6, grammarAccess.getPropertyValueAccess().getCOMMATerminalRuleCall_0_0_6()); 
                                  
                            }

                            }
                            break;
                        case 8 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6571:10: this_MINUS_7= RULE_MINUS
                            {
                            this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_rulePropertyValue13184); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_MINUS_7);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MINUS_7, grammarAccess.getPropertyValueAccess().getMINUSTerminalRuleCall_0_0_7()); 
                                  
                            }

                            }
                            break;
                        case 9 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6579:10: this_PLUS_8= RULE_PLUS
                            {
                            this_PLUS_8=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_rulePropertyValue13210); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_PLUS_8);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PLUS_8, grammarAccess.getPropertyValueAccess().getPLUSTerminalRuleCall_0_0_8()); 
                                  
                            }

                            }
                            break;
                        case 10 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6587:10: this_LPAREN_9= RULE_LPAREN
                            {
                            this_LPAREN_9=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_rulePropertyValue13236); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_LPAREN_9);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LPAREN_9, grammarAccess.getPropertyValueAccess().getLPARENTerminalRuleCall_0_0_9()); 
                                  
                            }

                            }
                            break;
                        case 11 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6595:10: this_RPAREN_10= RULE_RPAREN
                            {
                            this_RPAREN_10=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_rulePropertyValue13262); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_RPAREN_10);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_RPAREN_10, grammarAccess.getPropertyValueAccess().getRPARENTerminalRuleCall_0_0_10()); 
                                  
                            }

                            }
                            break;
                        case 12 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6603:10: this_LBRACE_11= RULE_LBRACE
                            {
                            this_LBRACE_11=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_rulePropertyValue13288); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_LBRACE_11);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LBRACE_11, grammarAccess.getPropertyValueAccess().getLBRACETerminalRuleCall_0_0_11()); 
                                  
                            }

                            }
                            break;
                        case 13 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6611:10: this_RBRACE_12= RULE_RBRACE
                            {
                            this_RBRACE_12=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_rulePropertyValue13314); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_RBRACE_12);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_RBRACE_12, grammarAccess.getPropertyValueAccess().getRBRACETerminalRuleCall_0_0_12()); 
                                  
                            }

                            }
                            break;
                        case 14 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6619:10: this_QUESTI_13= RULE_QUESTI
                            {
                            this_QUESTI_13=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_rulePropertyValue13340); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_QUESTI_13);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_QUESTI_13, grammarAccess.getPropertyValueAccess().getQUESTITerminalRuleCall_0_0_13()); 
                                  
                            }

                            }
                            break;
                        case 15 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6627:10: this_NOT_14= RULE_NOT
                            {
                            this_NOT_14=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_rulePropertyValue13366); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_NOT_14);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_NOT_14, grammarAccess.getPropertyValueAccess().getNOTTerminalRuleCall_0_0_14()); 
                                  
                            }

                            }
                            break;
                        case 16 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6635:10: this_BAND_15= RULE_BAND
                            {
                            this_BAND_15=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_rulePropertyValue13392); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_BAND_15);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_BAND_15, grammarAccess.getPropertyValueAccess().getBANDTerminalRuleCall_0_0_15()); 
                                  
                            }

                            }
                            break;
                        case 17 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6643:10: this_BOR_16= RULE_BOR
                            {
                            this_BOR_16=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_rulePropertyValue13418); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_BOR_16);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_BOR_16, grammarAccess.getPropertyValueAccess().getBORTerminalRuleCall_0_0_16()); 
                                  
                            }

                            }
                            break;
                        case 18 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6651:10: this_HASH_17= RULE_HASH
                            {
                            this_HASH_17=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_rulePropertyValue13444); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_HASH_17);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_HASH_17, grammarAccess.getPropertyValueAccess().getHASHTerminalRuleCall_0_0_17()); 
                                  
                            }

                            }
                            break;
                        case 19 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6659:10: this_AT_18= RULE_AT
                            {
                            this_AT_18=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_rulePropertyValue13470); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_AT_18);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_AT_18, grammarAccess.getPropertyValueAccess().getATTerminalRuleCall_0_0_18()); 
                                  
                            }

                            }
                            break;
                        case 20 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6667:10: this_CARET_19= RULE_CARET
                            {
                            this_CARET_19=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_rulePropertyValue13496); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_CARET_19);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_CARET_19, grammarAccess.getPropertyValueAccess().getCARETTerminalRuleCall_0_0_19()); 
                                  
                            }

                            }
                            break;
                        case 21 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6675:10: this_EQUALS_20= RULE_EQUALS
                            {
                            this_EQUALS_20=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_rulePropertyValue13522); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_EQUALS_20);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_EQUALS_20, grammarAccess.getPropertyValueAccess().getEQUALSTerminalRuleCall_0_0_20()); 
                                  
                            }

                            }
                            break;
                        case 22 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6683:10: this_LESS_THAN_21= RULE_LESS_THAN
                            {
                            this_LESS_THAN_21=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_rulePropertyValue13548); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_LESS_THAN_21);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LESS_THAN_21, grammarAccess.getPropertyValueAccess().getLESS_THANTerminalRuleCall_0_0_21()); 
                                  
                            }

                            }
                            break;
                        case 23 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6691:10: this_MORE_THAN_22= RULE_MORE_THAN
                            {
                            this_MORE_THAN_22=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_rulePropertyValue13574); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_MORE_THAN_22);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MORE_THAN_22, grammarAccess.getPropertyValueAccess().getMORE_THANTerminalRuleCall_0_0_22()); 
                                  
                            }

                            }
                            break;
                        case 24 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6699:10: this_PERCENT_23= RULE_PERCENT
                            {
                            this_PERCENT_23=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_rulePropertyValue13600); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_PERCENT_23);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PERCENT_23, grammarAccess.getPropertyValueAccess().getPERCENTTerminalRuleCall_0_0_23()); 
                                  
                            }

                            }
                            break;
                        case 25 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6707:10: this_DOT_24= RULE_DOT
                            {
                            this_DOT_24=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_rulePropertyValue13626); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_DOT_24);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_DOT_24, grammarAccess.getPropertyValueAccess().getDOTTerminalRuleCall_0_0_24()); 
                                  
                            }

                            }
                            break;
                        case 26 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6715:10: this_AND_25= RULE_AND
                            {
                            this_AND_25=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_rulePropertyValue13652); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_AND_25);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_AND_25, grammarAccess.getPropertyValueAccess().getANDTerminalRuleCall_0_0_25()); 
                                  
                            }

                            }
                            break;
                        case 27 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6723:10: this_OR_26= RULE_OR
                            {
                            this_OR_26=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_rulePropertyValue13678); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_OR_26);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_OR_26, grammarAccess.getPropertyValueAccess().getORTerminalRuleCall_0_0_26()); 
                                  
                            }

                            }
                            break;
                        case 28 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6731:10: this_ESC_CHAR_27= RULE_ESC_CHAR
                            {
                            this_ESC_CHAR_27=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_rulePropertyValue13704); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_ESC_CHAR_27);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_ESC_CHAR_27, grammarAccess.getPropertyValueAccess().getESC_CHARTerminalRuleCall_0_0_27()); 
                                  
                            }

                            }
                            break;
                        case 29 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6739:10: this_ON_OFF_28= RULE_ON_OFF
                            {
                            this_ON_OFF_28=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_rulePropertyValue13730); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_ON_OFF_28);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_ON_OFF_28, grammarAccess.getPropertyValueAccess().getON_OFFTerminalRuleCall_0_0_28()); 
                                  
                            }

                            }
                            break;
                        case 30 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6747:10: this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE
                            {
                            this_STATEMENT_TYPE_29=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_rulePropertyValue13756); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_STATEMENT_TYPE_29);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_STATEMENT_TYPE_29, grammarAccess.getPropertyValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_0_29()); 
                                  
                            }

                            }
                            break;
                        case 31 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6755:10: this_MAPPING_TYPE_30= RULE_MAPPING_TYPE
                            {
                            this_MAPPING_TYPE_30=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_rulePropertyValue13782); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_MAPPING_TYPE_30);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MAPPING_TYPE_30, grammarAccess.getPropertyValueAccess().getMAPPING_TYPETerminalRuleCall_0_0_30()); 
                                  
                            }

                            }
                            break;
                        case 32 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6763:10: this_OPTION_TYPE_31= RULE_OPTION_TYPE
                            {
                            this_OPTION_TYPE_31=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_rulePropertyValue13808); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_OPTION_TYPE_31);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_OPTION_TYPE_31, grammarAccess.getPropertyValueAccess().getOPTION_TYPETerminalRuleCall_0_0_31()); 
                                  
                            }

                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6770:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )*
                    loop240:
                    do {
                        int alt240=2;
                        alt240 = dfa240.predict(input);
                        switch (alt240) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6770:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6802:27: (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE )
                    	    int alt239=33;
                    	    switch ( input.LA(1) ) {
                    	    case RULE_REST:
                    	        {
                    	        alt239=1;
                    	        }
                    	        break;
                    	    case RULE_IDENT_DOT:
                    	        {
                    	        alt239=2;
                    	        }
                    	        break;
                    	    case RULE_IDENT:
                    	        {
                    	        alt239=3;
                    	        }
                    	        break;
                    	    case RULE_NUMBER:
                    	        {
                    	        alt239=4;
                    	        }
                    	        break;
                    	    case RULE_WS:
                    	        {
                    	        alt239=5;
                    	        }
                    	        break;
                    	    case RULE_COLON:
                    	        {
                    	        alt239=6;
                    	        }
                    	        break;
                    	    case RULE_STRING:
                    	        {
                    	        alt239=7;
                    	        }
                    	        break;
                    	    case RULE_COMMA:
                    	        {
                    	        alt239=8;
                    	        }
                    	        break;
                    	    case RULE_MINUS:
                    	        {
                    	        alt239=9;
                    	        }
                    	        break;
                    	    case RULE_PLUS:
                    	        {
                    	        alt239=10;
                    	        }
                    	        break;
                    	    case RULE_LPAREN:
                    	        {
                    	        alt239=11;
                    	        }
                    	        break;
                    	    case RULE_RPAREN:
                    	        {
                    	        alt239=12;
                    	        }
                    	        break;
                    	    case RULE_LBRACE:
                    	        {
                    	        alt239=13;
                    	        }
                    	        break;
                    	    case RULE_RBRACE:
                    	        {
                    	        alt239=14;
                    	        }
                    	        break;
                    	    case RULE_QUESTI:
                    	        {
                    	        alt239=15;
                    	        }
                    	        break;
                    	    case RULE_NOT:
                    	        {
                    	        alt239=16;
                    	        }
                    	        break;
                    	    case RULE_BAND:
                    	        {
                    	        alt239=17;
                    	        }
                    	        break;
                    	    case RULE_BOR:
                    	        {
                    	        alt239=18;
                    	        }
                    	        break;
                    	    case RULE_HASH:
                    	        {
                    	        alt239=19;
                    	        }
                    	        break;
                    	    case RULE_AT:
                    	        {
                    	        alt239=20;
                    	        }
                    	        break;
                    	    case RULE_CARET:
                    	        {
                    	        alt239=21;
                    	        }
                    	        break;
                    	    case RULE_EQUALS:
                    	        {
                    	        alt239=22;
                    	        }
                    	        break;
                    	    case RULE_LESS_THAN:
                    	        {
                    	        alt239=23;
                    	        }
                    	        break;
                    	    case RULE_MORE_THAN:
                    	        {
                    	        alt239=24;
                    	        }
                    	        break;
                    	    case RULE_PERCENT:
                    	        {
                    	        alt239=25;
                    	        }
                    	        break;
                    	    case RULE_DOT:
                    	        {
                    	        alt239=26;
                    	        }
                    	        break;
                    	    case RULE_AND:
                    	        {
                    	        alt239=27;
                    	        }
                    	        break;
                    	    case RULE_OR:
                    	        {
                    	        alt239=28;
                    	        }
                    	        break;
                    	    case RULE_ESC_CHAR:
                    	        {
                    	        alt239=29;
                    	        }
                    	        break;
                    	    case RULE_ON_OFF:
                    	        {
                    	        alt239=30;
                    	        }
                    	        break;
                    	    case RULE_STATEMENT_TYPE:
                    	        {
                    	        alt239=31;
                    	        }
                    	        break;
                    	    case RULE_MAPPING_TYPE:
                    	        {
                    	        alt239=32;
                    	        }
                    	        break;
                    	    case RULE_OPTION_TYPE:
                    	        {
                    	        alt239=33;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 239, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt239) {
                    	        case 1 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6802:32: this_REST_32= RULE_REST
                    	            {
                    	            this_REST_32=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_rulePropertyValue14094); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_REST_32);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_REST_32, grammarAccess.getPropertyValueAccess().getRESTTerminalRuleCall_0_1_0_0()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6810:10: this_IDENT_DOT_33= RULE_IDENT_DOT
                    	            {
                    	            this_IDENT_DOT_33=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_rulePropertyValue14120); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_IDENT_DOT_33);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_IDENT_DOT_33, grammarAccess.getPropertyValueAccess().getIDENT_DOTTerminalRuleCall_0_1_0_1()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6818:10: this_IDENT_34= RULE_IDENT
                    	            {
                    	            this_IDENT_34=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_rulePropertyValue14146); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_IDENT_34);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_IDENT_34, grammarAccess.getPropertyValueAccess().getIDENTTerminalRuleCall_0_1_0_2()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6826:10: this_NUMBER_35= RULE_NUMBER
                    	            {
                    	            this_NUMBER_35=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_rulePropertyValue14172); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_NUMBER_35);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_NUMBER_35, grammarAccess.getPropertyValueAccess().getNUMBERTerminalRuleCall_0_1_0_3()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6834:10: this_WS_36= RULE_WS
                    	            {
                    	            this_WS_36=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_rulePropertyValue14198); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_WS_36);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_WS_36, grammarAccess.getPropertyValueAccess().getWSTerminalRuleCall_0_1_0_4()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6842:10: this_COLON_37= RULE_COLON
                    	            {
                    	            this_COLON_37=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_rulePropertyValue14224); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_COLON_37);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_COLON_37, grammarAccess.getPropertyValueAccess().getCOLONTerminalRuleCall_0_1_0_5()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 7 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6850:10: this_STRING_38= RULE_STRING
                    	            {
                    	            this_STRING_38=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_rulePropertyValue14250); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_STRING_38);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_STRING_38, grammarAccess.getPropertyValueAccess().getSTRINGTerminalRuleCall_0_1_0_6()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 8 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6858:10: this_COMMA_39= RULE_COMMA
                    	            {
                    	            this_COMMA_39=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_rulePropertyValue14276); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_COMMA_39);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_COMMA_39, grammarAccess.getPropertyValueAccess().getCOMMATerminalRuleCall_0_1_0_7()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 9 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6866:10: this_MINUS_40= RULE_MINUS
                    	            {
                    	            this_MINUS_40=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_rulePropertyValue14302); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_MINUS_40);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_MINUS_40, grammarAccess.getPropertyValueAccess().getMINUSTerminalRuleCall_0_1_0_8()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 10 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6874:10: this_PLUS_41= RULE_PLUS
                    	            {
                    	            this_PLUS_41=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_rulePropertyValue14328); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_PLUS_41);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_PLUS_41, grammarAccess.getPropertyValueAccess().getPLUSTerminalRuleCall_0_1_0_9()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 11 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6882:10: this_LPAREN_42= RULE_LPAREN
                    	            {
                    	            this_LPAREN_42=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_rulePropertyValue14354); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_LPAREN_42);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_LPAREN_42, grammarAccess.getPropertyValueAccess().getLPARENTerminalRuleCall_0_1_0_10()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 12 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6890:10: this_RPAREN_43= RULE_RPAREN
                    	            {
                    	            this_RPAREN_43=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_rulePropertyValue14380); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_RPAREN_43);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_RPAREN_43, grammarAccess.getPropertyValueAccess().getRPARENTerminalRuleCall_0_1_0_11()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 13 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6898:10: this_LBRACE_44= RULE_LBRACE
                    	            {
                    	            this_LBRACE_44=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_rulePropertyValue14406); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_LBRACE_44);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_LBRACE_44, grammarAccess.getPropertyValueAccess().getLBRACETerminalRuleCall_0_1_0_12()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 14 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6906:10: this_RBRACE_45= RULE_RBRACE
                    	            {
                    	            this_RBRACE_45=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_rulePropertyValue14432); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_RBRACE_45);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_RBRACE_45, grammarAccess.getPropertyValueAccess().getRBRACETerminalRuleCall_0_1_0_13()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 15 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6914:10: this_QUESTI_46= RULE_QUESTI
                    	            {
                    	            this_QUESTI_46=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_rulePropertyValue14458); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_QUESTI_46);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_QUESTI_46, grammarAccess.getPropertyValueAccess().getQUESTITerminalRuleCall_0_1_0_14()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 16 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6922:10: this_NOT_47= RULE_NOT
                    	            {
                    	            this_NOT_47=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_rulePropertyValue14484); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_NOT_47);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_NOT_47, grammarAccess.getPropertyValueAccess().getNOTTerminalRuleCall_0_1_0_15()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 17 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6930:10: this_BAND_48= RULE_BAND
                    	            {
                    	            this_BAND_48=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_rulePropertyValue14510); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_BAND_48);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_BAND_48, grammarAccess.getPropertyValueAccess().getBANDTerminalRuleCall_0_1_0_16()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 18 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6938:10: this_BOR_49= RULE_BOR
                    	            {
                    	            this_BOR_49=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_rulePropertyValue14536); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_BOR_49);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_BOR_49, grammarAccess.getPropertyValueAccess().getBORTerminalRuleCall_0_1_0_17()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 19 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6946:10: this_HASH_50= RULE_HASH
                    	            {
                    	            this_HASH_50=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_rulePropertyValue14562); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_HASH_50);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_HASH_50, grammarAccess.getPropertyValueAccess().getHASHTerminalRuleCall_0_1_0_18()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 20 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6954:10: this_AT_51= RULE_AT
                    	            {
                    	            this_AT_51=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_rulePropertyValue14588); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_AT_51);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_AT_51, grammarAccess.getPropertyValueAccess().getATTerminalRuleCall_0_1_0_19()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 21 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6962:10: this_CARET_52= RULE_CARET
                    	            {
                    	            this_CARET_52=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_rulePropertyValue14614); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_CARET_52);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_CARET_52, grammarAccess.getPropertyValueAccess().getCARETTerminalRuleCall_0_1_0_20()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 22 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6970:10: this_EQUALS_53= RULE_EQUALS
                    	            {
                    	            this_EQUALS_53=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_rulePropertyValue14640); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_EQUALS_53);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_EQUALS_53, grammarAccess.getPropertyValueAccess().getEQUALSTerminalRuleCall_0_1_0_21()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 23 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6978:10: this_LESS_THAN_54= RULE_LESS_THAN
                    	            {
                    	            this_LESS_THAN_54=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_rulePropertyValue14666); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_LESS_THAN_54);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_LESS_THAN_54, grammarAccess.getPropertyValueAccess().getLESS_THANTerminalRuleCall_0_1_0_22()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 24 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6986:10: this_MORE_THAN_55= RULE_MORE_THAN
                    	            {
                    	            this_MORE_THAN_55=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_rulePropertyValue14692); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_MORE_THAN_55);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_MORE_THAN_55, grammarAccess.getPropertyValueAccess().getMORE_THANTerminalRuleCall_0_1_0_23()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 25 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6994:10: this_PERCENT_56= RULE_PERCENT
                    	            {
                    	            this_PERCENT_56=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_rulePropertyValue14718); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_PERCENT_56);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_PERCENT_56, grammarAccess.getPropertyValueAccess().getPERCENTTerminalRuleCall_0_1_0_24()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 26 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7002:10: this_DOT_57= RULE_DOT
                    	            {
                    	            this_DOT_57=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_rulePropertyValue14744); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_DOT_57);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_DOT_57, grammarAccess.getPropertyValueAccess().getDOTTerminalRuleCall_0_1_0_25()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 27 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7010:10: this_AND_58= RULE_AND
                    	            {
                    	            this_AND_58=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_rulePropertyValue14770); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_AND_58);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_AND_58, grammarAccess.getPropertyValueAccess().getANDTerminalRuleCall_0_1_0_26()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 28 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7018:10: this_OR_59= RULE_OR
                    	            {
                    	            this_OR_59=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_rulePropertyValue14796); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_OR_59);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_OR_59, grammarAccess.getPropertyValueAccess().getORTerminalRuleCall_0_1_0_27()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 29 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7026:10: this_ESC_CHAR_60= RULE_ESC_CHAR
                    	            {
                    	            this_ESC_CHAR_60=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_rulePropertyValue14822); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_ESC_CHAR_60);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_ESC_CHAR_60, grammarAccess.getPropertyValueAccess().getESC_CHARTerminalRuleCall_0_1_0_28()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 30 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7034:10: this_ON_OFF_61= RULE_ON_OFF
                    	            {
                    	            this_ON_OFF_61=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_rulePropertyValue14848); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_ON_OFF_61);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_ON_OFF_61, grammarAccess.getPropertyValueAccess().getON_OFFTerminalRuleCall_0_1_0_29()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 31 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7042:10: this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE
                    	            {
                    	            this_STATEMENT_TYPE_62=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_rulePropertyValue14874); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_STATEMENT_TYPE_62);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_STATEMENT_TYPE_62, grammarAccess.getPropertyValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_1_0_30()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 32 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7050:10: this_MAPPING_TYPE_63= RULE_MAPPING_TYPE
                    	            {
                    	            this_MAPPING_TYPE_63=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_rulePropertyValue14900); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_MAPPING_TYPE_63);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_MAPPING_TYPE_63, grammarAccess.getPropertyValueAccess().getMAPPING_TYPETerminalRuleCall_0_1_0_31()); 
                    	                  
                    	            }

                    	            }
                    	            break;
                    	        case 33 :
                    	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7058:10: this_OPTION_TYPE_64= RULE_OPTION_TYPE
                    	            {
                    	            this_OPTION_TYPE_64=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_rulePropertyValue14926); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              		current.merge(this_OPTION_TYPE_64);
                    	                  
                    	            }
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_OPTION_TYPE_64, grammarAccess.getPropertyValueAccess().getOPTION_TYPETerminalRuleCall_0_1_0_32()); 
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop240;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7066:10: this_STRING_VALUE_65= RULE_STRING_VALUE
                    {
                    this_STRING_VALUE_65=(Token)match(input,RULE_STRING_VALUE,FollowSets001.FOLLOW_RULE_STRING_VALUE_in_rulePropertyValue14956); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRING_VALUE_65);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_VALUE_65, grammarAccess.getPropertyValueAccess().getSTRING_VALUETerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyValue"


    // $ANTLR start "entryRulePojoDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7081:1: entryRulePojoDefinition returns [EObject current=null] : iv_rulePojoDefinition= rulePojoDefinition EOF ;
    public final EObject entryRulePojoDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoDefinition = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7085:2: (iv_rulePojoDefinition= rulePojoDefinition EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7086:2: iv_rulePojoDefinition= rulePojoDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoDefinitionRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_rulePojoDefinition_in_entryRulePojoDefinition15007);
            iv_rulePojoDefinition=rulePojoDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoDefinition; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRulePojoDefinition15017); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoDefinition"


    // $ANTLR start "rulePojoDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7096:1: rulePojoDefinition returns [EObject current=null] : (otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON ) ;
    public final EObject rulePojoDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_class_2_1=null;
        Token lv_class_2_2=null;
        Token this_COLON_3=null;
        Token this_SEMICOLON_5=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7100:28: ( (otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7101:1: (otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7101:1: (otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7101:3: otherlv_0= 'pojo' ( (lv_name_1_0= RULE_IDENT ) ) ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) ) this_SEMICOLON_5= RULE_SEMICOLON
            {
            otherlv_0=(Token)match(input,129,FollowSets001.FOLLOW_129_in_rulePojoDefinition15058); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPojoDefinitionAccess().getPojoKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7105:1: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7106:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7106:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7107:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_rulePojoDefinition15075); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getPojoDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7123:2: ( ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) ) | (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) ) )
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==RULE_IDENT||LA243_0==RULE_IDENT_DOT) ) {
                alt243=1;
            }
            else if ( (LA243_0==RULE_COLON) ) {
                alt243=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;
            }
            switch (alt243) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7123:3: ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7123:3: ( ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7124:1: ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7124:1: ( (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7125:1: (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7125:1: (lv_class_2_1= RULE_IDENT | lv_class_2_2= RULE_IDENT_DOT )
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==RULE_IDENT) ) {
                        alt242=1;
                    }
                    else if ( (LA242_0==RULE_IDENT_DOT) ) {
                        alt242=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 242, 0, input);

                        throw nvae;
                    }
                    switch (alt242) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7126:3: lv_class_2_1= RULE_IDENT
                            {
                            lv_class_2_1=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_rulePojoDefinition15100); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_class_2_1, grammarAccess.getPojoDefinitionAccess().getClassIDENTTerminalRuleCall_2_0_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoDefinitionRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"class",
                                      		lv_class_2_1, 
                                      		"IDENT");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7141:8: lv_class_2_2= RULE_IDENT_DOT
                            {
                            lv_class_2_2=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_rulePojoDefinition15120); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_class_2_2, grammarAccess.getPojoDefinitionAccess().getClassIDENT_DOTTerminalRuleCall_2_0_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoDefinitionRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"class",
                                      		lv_class_2_2, 
                                      		"IDENT_DOT");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7160:6: (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7160:6: (this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7160:7: this_COLON_3= RULE_COLON ( ( ruleQualifiedName ) )
                    {
                    this_COLON_3=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_rulePojoDefinition15146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_3, grammarAccess.getPojoDefinitionAccess().getCOLONTerminalRuleCall_2_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7164:1: ( ( ruleQualifiedName ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7165:1: ( ruleQualifiedName )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7165:1: ( ruleQualifiedName )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7166:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoDefinitionRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojoDefinitionAccess().getClassxJvmTypeCrossReference_2_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleQualifiedName_in_rulePojoDefinition15168);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            this_SEMICOLON_5=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_rulePojoDefinition15181); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_5, grammarAccess.getPojoDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoDefinition"


    // $ANTLR start "entryRuleTableDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7194:1: entryRuleTableDefinition returns [EObject current=null] : iv_ruleTableDefinition= ruleTableDefinition EOF ;
    public final EObject entryRuleTableDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableDefinition = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7198:2: (iv_ruleTableDefinition= ruleTableDefinition EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7199:2: iv_ruleTableDefinition= ruleTableDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableDefinitionRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleTableDefinition_in_entryRuleTableDefinition15226);
            iv_ruleTableDefinition=ruleTableDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableDefinition; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleTableDefinition15236); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleTableDefinition"


    // $ANTLR start "ruleTableDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7209:1: ruleTableDefinition returns [EObject current=null] : (otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) ;
    public final EObject ruleTableDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_table_2_0=null;
        Token this_SEMICOLON_3=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7213:28: ( (otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7214:1: (otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7214:1: (otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7214:3: otherlv_0= 'table' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON
            {
            otherlv_0=(Token)match(input,130,FollowSets001.FOLLOW_130_in_ruleTableDefinition15277); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTableDefinitionAccess().getTableKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7218:1: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7219:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7219:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7220:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleTableDefinition15294); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getTableDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTableDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7236:2: ( (lv_table_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7237:1: (lv_table_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7237:1: (lv_table_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7238:3: lv_table_2_0= RULE_IDENT
            {
            lv_table_2_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleTableDefinition15316); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_table_2_0, grammarAccess.getTableDefinitionAccess().getTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTableDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"table",
                      		lv_table_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_SEMICOLON_3=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleTableDefinition15332); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_3, grammarAccess.getTableDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleTableDefinition"


    // $ANTLR start "entryRuleProcedureDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7269:1: entryRuleProcedureDefinition returns [EObject current=null] : iv_ruleProcedureDefinition= ruleProcedureDefinition EOF ;
    public final EObject entryRuleProcedureDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcedureDefinition = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7273:2: (iv_ruleProcedureDefinition= ruleProcedureDefinition EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7274:2: iv_ruleProcedureDefinition= ruleProcedureDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcedureDefinitionRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleProcedureDefinition_in_entryRuleProcedureDefinition15377);
            iv_ruleProcedureDefinition=ruleProcedureDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcedureDefinition; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleProcedureDefinition15387); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleProcedureDefinition"


    // $ANTLR start "ruleProcedureDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7284:1: ruleProcedureDefinition returns [EObject current=null] : (otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) ;
    public final EObject ruleProcedureDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_table_2_0=null;
        Token this_SEMICOLON_3=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7288:28: ( (otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7289:1: (otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7289:1: (otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7289:3: otherlv_0= 'procedure' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON
            {
            otherlv_0=(Token)match(input,131,FollowSets001.FOLLOW_131_in_ruleProcedureDefinition15428); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getProcedureDefinitionAccess().getProcedureKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7293:1: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7294:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7294:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7295:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleProcedureDefinition15445); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getProcedureDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getProcedureDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7311:2: ( (lv_table_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7312:1: (lv_table_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7312:1: (lv_table_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7313:3: lv_table_2_0= RULE_IDENT
            {
            lv_table_2_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleProcedureDefinition15467); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_table_2_0, grammarAccess.getProcedureDefinitionAccess().getTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getProcedureDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"table",
                      		lv_table_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_SEMICOLON_3=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleProcedureDefinition15483); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_3, grammarAccess.getProcedureDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleProcedureDefinition"


    // $ANTLR start "entryRuleFunctionDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7344:1: entryRuleFunctionDefinition returns [EObject current=null] : iv_ruleFunctionDefinition= ruleFunctionDefinition EOF ;
    public final EObject entryRuleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDefinition = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7348:2: (iv_ruleFunctionDefinition= ruleFunctionDefinition EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7349:2: iv_ruleFunctionDefinition= ruleFunctionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDefinitionRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleFunctionDefinition_in_entryRuleFunctionDefinition15528);
            iv_ruleFunctionDefinition=ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDefinition; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleFunctionDefinition15538); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDefinition"


    // $ANTLR start "ruleFunctionDefinition"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7359:1: ruleFunctionDefinition returns [EObject current=null] : (otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) ;
    public final EObject ruleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_table_2_0=null;
        Token this_SEMICOLON_3=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7363:28: ( (otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7364:1: (otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7364:1: (otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7364:3: otherlv_0= 'function' ( (lv_name_1_0= RULE_IDENT ) ) ( (lv_table_2_0= RULE_IDENT ) ) this_SEMICOLON_3= RULE_SEMICOLON
            {
            otherlv_0=(Token)match(input,132,FollowSets001.FOLLOW_132_in_ruleFunctionDefinition15579); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7368:1: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7369:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7369:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7370:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleFunctionDefinition15596); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getFunctionDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFunctionDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7386:2: ( (lv_table_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7387:1: (lv_table_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7387:1: (lv_table_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7388:3: lv_table_2_0= RULE_IDENT
            {
            lv_table_2_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleFunctionDefinition15618); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_table_2_0, grammarAccess.getFunctionDefinitionAccess().getTableIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFunctionDefinitionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"table",
                      		lv_table_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_SEMICOLON_3=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleFunctionDefinition15634); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_3, grammarAccess.getFunctionDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleFunctionDefinition"


    // $ANTLR start "entryRuleMetaStatement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7419:1: entryRuleMetaStatement returns [EObject current=null] : iv_ruleMetaStatement= ruleMetaStatement EOF ;
    public final EObject entryRuleMetaStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetaStatement = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7420:2: (iv_ruleMetaStatement= ruleMetaStatement EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7421:2: iv_ruleMetaStatement= ruleMetaStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaStatementRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleMetaStatement_in_entryRuleMetaStatement15673);
            iv_ruleMetaStatement=ruleMetaStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaStatement; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleMetaStatement15683); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaStatement"


    // $ANTLR start "ruleMetaStatement"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7428:1: ruleMetaStatement returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON ) ;
    public final EObject ruleMetaStatement() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_LPAREN_1=null;
        Token lv_type_2_0=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        Token this_EQUALS_6=null;
        Token this_SEMICOLON_8=null;
        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        EObject lv_statement_7_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7431:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7432:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7432:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7432:2: ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_STATEMENT_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_statement_7_0= ruleSql ) ) this_SEMICOLON_8= RULE_SEMICOLON
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7432:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7433:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7433:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7434:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetaStatement15725); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getMetaStatementAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMetaStatementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleMetaStatement15741); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LPAREN_1, grammarAccess.getMetaStatementAccess().getLPARENTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7454:1: ( (lv_type_2_0= RULE_STATEMENT_TYPE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7455:1: (lv_type_2_0= RULE_STATEMENT_TYPE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7455:1: (lv_type_2_0= RULE_STATEMENT_TYPE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7456:3: lv_type_2_0= RULE_STATEMENT_TYPE
            {
            lv_type_2_0=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleMetaStatement15757); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_type_2_0, grammarAccess.getMetaStatementAccess().getTypeSTATEMENT_TYPETerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMetaStatementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"STATEMENT_TYPE");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7472:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) ) )*
            loop244:
            do {
                int alt244=2;
                int LA244_0 = input.LA(1);

                if ( (LA244_0==RULE_COMMA) ) {
                    alt244=1;
                }


                switch (alt244) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7472:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleStatementModifier ) )
            	    {
            	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleMetaStatement15774); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_3, grammarAccess.getMetaStatementAccess().getCOMMATerminalRuleCall_3_0()); 
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7476:1: ( (lv_modifiers_4_0= ruleStatementModifier ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7477:1: (lv_modifiers_4_0= ruleStatementModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7477:1: (lv_modifiers_4_0= ruleStatementModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7478:3: lv_modifiers_4_0= ruleStatementModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMetaStatementAccess().getModifiersStatementModifierParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleStatementModifier_in_ruleMetaStatement15794);
            	    lv_modifiers_4_0=ruleStatementModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMetaStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers",
            	              		lv_modifiers_4_0, 
            	              		"StatementModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop244;
                }
            } while (true);

            this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleMetaStatement15807); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RPAREN_5, grammarAccess.getMetaStatementAccess().getRPARENTerminalRuleCall_4()); 
                  
            }
            this_EQUALS_6=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleMetaStatement15817); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EQUALS_6, grammarAccess.getMetaStatementAccess().getEQUALSTerminalRuleCall_5()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7502:1: ( (lv_statement_7_0= ruleSql ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7503:1: (lv_statement_7_0= ruleSql )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7503:1: (lv_statement_7_0= ruleSql )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7504:3: lv_statement_7_0= ruleSql
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMetaStatementAccess().getStatementSqlParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets001.FOLLOW_ruleSql_in_ruleMetaStatement15837);
            lv_statement_7_0=ruleSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMetaStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_7_0, 
                      		"Sql");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_SEMICOLON_8=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleMetaStatement15848); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_8, grammarAccess.getMetaStatementAccess().getSEMICOLONTerminalRuleCall_7()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaStatement"


    // $ANTLR start "entryRuleSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7532:1: entryRuleSql returns [EObject current=null] : iv_ruleSql= ruleSql EOF ;
    public final EObject entryRuleSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7533:2: (iv_ruleSql= ruleSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7534:2: iv_ruleSql= ruleSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleSql_in_entryRuleSql15883);
            iv_ruleSql=ruleSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleSql15893); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSql"


    // $ANTLR start "ruleSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7541:1: ruleSql returns [EObject current=null] : ( (lv_sqls_0_0= ruleSqlFragment ) )+ ;
    public final EObject ruleSql() throws RecognitionException {
        EObject current = null;

        EObject lv_sqls_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7544:28: ( ( (lv_sqls_0_0= ruleSqlFragment ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7545:1: ( (lv_sqls_0_0= ruleSqlFragment ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7545:1: ( (lv_sqls_0_0= ruleSqlFragment ) )+
            int cnt245=0;
            loop245:
            do {
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( ((LA245_0>=RULE_WS && LA245_0<=RULE_MINUS)||(LA245_0>=RULE_COLON && LA245_0<=RULE_OPTION_TYPE)) ) {
                    alt245=1;
                }


                switch (alt245) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7546:1: (lv_sqls_0_0= ruleSqlFragment )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7546:1: (lv_sqls_0_0= ruleSqlFragment )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7547:3: lv_sqls_0_0= ruleSqlFragment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSqlAccess().getSqlsSqlFragmentParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleSqlFragment_in_ruleSql15938);
            	    lv_sqls_0_0=ruleSqlFragment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSqlRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"sqls",
            	              		lv_sqls_0_0, 
            	              		"SqlFragment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt245 >= 1 ) break loop245;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(245, input);
                        throw eee;
                }
                cnt245++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSql"


    // $ANTLR start "entryRuleSqlFragment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7571:1: entryRuleSqlFragment returns [EObject current=null] : iv_ruleSqlFragment= ruleSqlFragment EOF ;
    public final EObject entryRuleSqlFragment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSqlFragment = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7572:2: (iv_ruleSqlFragment= ruleSqlFragment EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7573:2: iv_ruleSqlFragment= ruleSqlFragment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSqlFragmentRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleSqlFragment_in_entryRuleSqlFragment15974);
            iv_ruleSqlFragment=ruleSqlFragment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSqlFragment; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleSqlFragment15984); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSqlFragment"


    // $ANTLR start "ruleSqlFragment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7580:1: ruleSqlFragment returns [EObject current=null] : ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) ) ;
    public final EObject ruleSqlFragment() throws RecognitionException {
        EObject current = null;

        Token this_AT_1=null;
        Token this_STRING_3=null;
        Token this_COLON_5=null;
        Token this_STRING_7=null;
        Token this_STRING_8=null;
        Token this_COLON_10=null;
        Token this_COLON_11=null;
        Token this_LBRACE_13=null;
        Token this_RBRACE_15=null;
        Token this_PERCENT_16=null;
        Token this_PERCENT_17=null;
        AntlrDatatypeRuleToken lv_value_0_0 = null;

        EObject lv_col_2_0 = null;

        EObject lv_cnst_4_0 = null;

        EObject lv_ident_6_0 = null;

        EObject lv_cnstOper_9_0 = null;

        EObject lv_identOper_12_0 = null;

        EObject lv_meta_14_0 = null;

        EObject lv_dbtab_18_0 = null;

        EObject lv_dbcol_19_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7583:28: ( ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7584:1: ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7584:1: ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) )
            int alt247=8;
            alt247 = dfa247.predict(input);
            switch (alt247) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7584:2: ( (lv_value_0_0= ruleSqlValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7584:2: ( (lv_value_0_0= ruleSqlValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7585:1: (lv_value_0_0= ruleSqlValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7585:1: (lv_value_0_0= ruleSqlValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7586:3: lv_value_0_0= ruleSqlValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getValueSqlValueParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleSqlValue_in_ruleSqlFragment16030);
                    lv_value_0_0=ruleSqlValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_0_0, 
                              		"SqlValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7603:6: (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7603:6: (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7603:7: this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) )
                    {
                    this_AT_1=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_ruleSqlFragment16048); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AT_1, grammarAccess.getSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7607:1: ( (lv_col_2_0= ruleColumn ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7608:1: (lv_col_2_0= ruleColumn )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7608:1: (lv_col_2_0= ruleColumn )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7609:3: lv_col_2_0= ruleColumn
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleColumn_in_ruleSqlFragment16068);
                    lv_col_2_0=ruleColumn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"col",
                              		lv_col_2_0, 
                              		"Column");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7626:6: (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7626:6: (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7626:7: this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) )
                    {
                    this_STRING_3=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleSqlFragment16087); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_3, grammarAccess.getSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7630:1: ( (lv_cnst_4_0= ruleConstant ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7631:1: (lv_cnst_4_0= ruleConstant )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7631:1: (lv_cnst_4_0= ruleConstant )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7632:3: lv_cnst_4_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstant_in_ruleSqlFragment16107);
                    lv_cnst_4_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"cnst",
                              		lv_cnst_4_0, 
                              		"Constant");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7649:6: (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7649:6: (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7649:7: this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) )
                    {
                    this_COLON_5=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleSqlFragment16126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_5, grammarAccess.getSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7653:1: ( (lv_ident_6_0= ruleIdentifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7654:1: (lv_ident_6_0= ruleIdentifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7654:1: (lv_ident_6_0= ruleIdentifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7655:3: lv_ident_6_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_ruleSqlFragment16146);
                    lv_ident_6_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"ident",
                              		lv_ident_6_0, 
                              		"Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7672:6: (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7672:6: (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7672:7: this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) )
                    {
                    this_STRING_7=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleSqlFragment16165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_7, grammarAccess.getSqlFragmentAccess().getSTRINGTerminalRuleCall_4_0()); 
                          
                    }
                    this_STRING_8=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleSqlFragment16175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_8, grammarAccess.getSqlFragmentAccess().getSTRINGTerminalRuleCall_4_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7680:1: ( (lv_cnstOper_9_0= ruleConstantOperator ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7681:1: (lv_cnstOper_9_0= ruleConstantOperator )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7681:1: (lv_cnstOper_9_0= ruleConstantOperator )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7682:3: lv_cnstOper_9_0= ruleConstantOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getCnstOperConstantOperatorParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstantOperator_in_ruleSqlFragment16195);
                    lv_cnstOper_9_0=ruleConstantOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"cnstOper",
                              		lv_cnstOper_9_0, 
                              		"ConstantOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7699:6: (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7699:6: (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7699:7: this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) )
                    {
                    this_COLON_10=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleSqlFragment16214); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_10, grammarAccess.getSqlFragmentAccess().getCOLONTerminalRuleCall_5_0()); 
                          
                    }
                    this_COLON_11=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleSqlFragment16224); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_11, grammarAccess.getSqlFragmentAccess().getCOLONTerminalRuleCall_5_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7707:1: ( (lv_identOper_12_0= ruleIdentifierOperator ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7708:1: (lv_identOper_12_0= ruleIdentifierOperator )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7708:1: (lv_identOper_12_0= ruleIdentifierOperator )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7709:3: lv_identOper_12_0= ruleIdentifierOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getIdentOperIdentifierOperatorParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifierOperator_in_ruleSqlFragment16244);
                    lv_identOper_12_0=ruleIdentifierOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identOper",
                              		lv_identOper_12_0, 
                              		"IdentifierOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7726:6: (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7726:6: (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7726:7: this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE
                    {
                    this_LBRACE_13=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_ruleSqlFragment16263); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LBRACE_13, grammarAccess.getSqlFragmentAccess().getLBRACETerminalRuleCall_6_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7730:1: ( (lv_meta_14_0= ruleMetaSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7731:1: (lv_meta_14_0= ruleMetaSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7731:1: (lv_meta_14_0= ruleMetaSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7732:3: lv_meta_14_0= ruleMetaSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getMetaMetaSqlParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleMetaSql_in_ruleSqlFragment16283);
                    lv_meta_14_0=ruleMetaSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"meta",
                              		lv_meta_14_0, 
                              		"MetaSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RBRACE_15=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_ruleSqlFragment16294); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RBRACE_15, grammarAccess.getSqlFragmentAccess().getRBRACETerminalRuleCall_6_2()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7753:6: (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7753:6: (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7753:7: this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) )
                    {
                    this_PERCENT_16=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleSqlFragment16312); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PERCENT_16, grammarAccess.getSqlFragmentAccess().getPERCENTTerminalRuleCall_7_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7757:1: ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) )
                    int alt246=2;
                    int LA246_0 = input.LA(1);

                    if ( (LA246_0==RULE_PERCENT) ) {
                        alt246=1;
                    }
                    else if ( (LA246_0==RULE_IDENT||LA246_0==RULE_IDENT_DOT) ) {
                        alt246=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 246, 0, input);

                        throw nvae;
                    }
                    switch (alt246) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7757:2: (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7757:2: (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7757:3: this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) )
                            {
                            this_PERCENT_17=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleSqlFragment16324); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PERCENT_17, grammarAccess.getSqlFragmentAccess().getPERCENTTerminalRuleCall_7_1_0_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7761:1: ( (lv_dbtab_18_0= ruleDatabaseTable ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7762:1: (lv_dbtab_18_0= ruleDatabaseTable )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7762:1: (lv_dbtab_18_0= ruleDatabaseTable )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7763:3: lv_dbtab_18_0= ruleDatabaseTable
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getDbtabDatabaseTableParserRuleCall_7_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets001.FOLLOW_ruleDatabaseTable_in_ruleSqlFragment16344);
                            lv_dbtab_18_0=ruleDatabaseTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbtab",
                                      		lv_dbtab_18_0, 
                                      		"DatabaseTable");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7780:6: ( (lv_dbcol_19_0= ruleDatabaseColumn ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7780:6: ( (lv_dbcol_19_0= ruleDatabaseColumn ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7781:1: (lv_dbcol_19_0= ruleDatabaseColumn )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7781:1: (lv_dbcol_19_0= ruleDatabaseColumn )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7782:3: lv_dbcol_19_0= ruleDatabaseColumn
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getDbcolDatabaseColumnParserRuleCall_7_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets001.FOLLOW_ruleDatabaseColumn_in_ruleSqlFragment16372);
                            lv_dbcol_19_0=ruleDatabaseColumn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbcol",
                                      		lv_dbcol_19_0, 
                                      		"DatabaseColumn");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSqlFragment"


    // $ANTLR start "entryRuleSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7806:1: entryRuleSqlValue returns [String current=null] : iv_ruleSqlValue= ruleSqlValue EOF ;
    public final String entryRuleSqlValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSqlValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7807:2: (iv_ruleSqlValue= ruleSqlValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7808:2: iv_ruleSqlValue= ruleSqlValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSqlValueRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleSqlValue_in_entryRuleSqlValue16411);
            iv_ruleSqlValue=ruleSqlValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSqlValue.getText(); 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleSqlValue16422); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSqlValue"


    // $ANTLR start "ruleSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7815:1: ruleSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )* ) ;
    public final AntlrDatatypeRuleToken ruleSqlValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_WS_4=null;
        Token this_COMMA_5=null;
        Token this_MINUS_6=null;
        Token this_PLUS_7=null;
        Token this_LPAREN_8=null;
        Token this_RPAREN_9=null;
        Token this_RBRACE_10=null;
        Token this_QUESTI_11=null;
        Token this_NOT_12=null;
        Token this_BAND_13=null;
        Token this_BOR_14=null;
        Token this_HASH_15=null;
        Token this_CARET_16=null;
        Token this_EQUALS_17=null;
        Token this_LESS_THAN_18=null;
        Token this_MORE_THAN_19=null;
        Token this_DOT_20=null;
        Token this_AND_21=null;
        Token this_OR_22=null;
        Token this_ESC_CHAR_23=null;
        Token this_ON_OFF_24=null;
        Token this_STATEMENT_TYPE_25=null;
        Token this_MAPPING_TYPE_26=null;
        Token this_OPTION_TYPE_27=null;
        Token this_REST_28=null;
        Token this_IDENT_DOT_29=null;
        Token this_IDENT_30=null;
        Token this_NUMBER_31=null;
        Token this_WS_32=null;
        Token this_COMMA_33=null;
        Token this_MINUS_34=null;
        Token this_PLUS_35=null;
        Token this_LPAREN_36=null;
        Token this_RPAREN_37=null;
        Token this_RBRACE_38=null;
        Token this_QUESTI_39=null;
        Token this_NOT_40=null;
        Token this_BAND_41=null;
        Token this_BOR_42=null;
        Token this_HASH_43=null;
        Token this_CARET_44=null;
        Token this_EQUALS_45=null;
        Token this_LESS_THAN_46=null;
        Token this_MORE_THAN_47=null;
        Token this_DOT_48=null;
        Token this_AND_49=null;
        Token this_OR_50=null;
        Token this_ESC_CHAR_51=null;
        Token this_ON_OFF_52=null;
        Token this_STATEMENT_TYPE_53=null;
        Token this_MAPPING_TYPE_54=null;
        Token this_OPTION_TYPE_55=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7818:28: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7819:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7819:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7819:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7819:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COMMA_5= RULE_COMMA | this_MINUS_6= RULE_MINUS | this_PLUS_7= RULE_PLUS | this_LPAREN_8= RULE_LPAREN | this_RPAREN_9= RULE_RPAREN | this_RBRACE_10= RULE_RBRACE | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_BOR_14= RULE_BOR | this_HASH_15= RULE_HASH | this_CARET_16= RULE_CARET | this_EQUALS_17= RULE_EQUALS | this_LESS_THAN_18= RULE_LESS_THAN | this_MORE_THAN_19= RULE_MORE_THAN | this_DOT_20= RULE_DOT | this_AND_21= RULE_AND | this_OR_22= RULE_OR | this_ESC_CHAR_23= RULE_ESC_CHAR | this_ON_OFF_24= RULE_ON_OFF | this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_26= RULE_MAPPING_TYPE | this_OPTION_TYPE_27= RULE_OPTION_TYPE )
            int alt248=28;
            switch ( input.LA(1) ) {
            case RULE_REST:
                {
                alt248=1;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt248=2;
                }
                break;
            case RULE_IDENT:
                {
                alt248=3;
                }
                break;
            case RULE_NUMBER:
                {
                alt248=4;
                }
                break;
            case RULE_WS:
                {
                alt248=5;
                }
                break;
            case RULE_COMMA:
                {
                alt248=6;
                }
                break;
            case RULE_MINUS:
                {
                alt248=7;
                }
                break;
            case RULE_PLUS:
                {
                alt248=8;
                }
                break;
            case RULE_LPAREN:
                {
                alt248=9;
                }
                break;
            case RULE_RPAREN:
                {
                alt248=10;
                }
                break;
            case RULE_RBRACE:
                {
                alt248=11;
                }
                break;
            case RULE_QUESTI:
                {
                alt248=12;
                }
                break;
            case RULE_NOT:
                {
                alt248=13;
                }
                break;
            case RULE_BAND:
                {
                alt248=14;
                }
                break;
            case RULE_BOR:
                {
                alt248=15;
                }
                break;
            case RULE_HASH:
                {
                alt248=16;
                }
                break;
            case RULE_CARET:
                {
                alt248=17;
                }
                break;
            case RULE_EQUALS:
                {
                alt248=18;
                }
                break;
            case RULE_LESS_THAN:
                {
                alt248=19;
                }
                break;
            case RULE_MORE_THAN:
                {
                alt248=20;
                }
                break;
            case RULE_DOT:
                {
                alt248=21;
                }
                break;
            case RULE_AND:
                {
                alt248=22;
                }
                break;
            case RULE_OR:
                {
                alt248=23;
                }
                break;
            case RULE_ESC_CHAR:
                {
                alt248=24;
                }
                break;
            case RULE_ON_OFF:
                {
                alt248=25;
                }
                break;
            case RULE_STATEMENT_TYPE:
                {
                alt248=26;
                }
                break;
            case RULE_MAPPING_TYPE:
                {
                alt248=27;
                }
                break;
            case RULE_OPTION_TYPE:
                {
                alt248=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 248, 0, input);

                throw nvae;
            }

            switch (alt248) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7819:7: this_REST_0= RULE_REST
                    {
                    this_REST_0=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleSqlValue16463); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_REST_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_REST_0, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7827:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                    {
                    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleSqlValue16489); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_DOT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_DOT_1, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7835:10: this_IDENT_2= RULE_IDENT
                    {
                    this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleSqlValue16515); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_2, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7843:10: this_NUMBER_3= RULE_NUMBER
                    {
                    this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleSqlValue16541); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_3, grammarAccess.getSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7851:10: this_WS_4= RULE_WS
                    {
                    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleSqlValue16567); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_WS_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_4, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_0_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7859:10: this_COMMA_5= RULE_COMMA
                    {
                    this_COMMA_5=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleSqlValue16593); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_COMMA_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_5, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_0_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7867:10: this_MINUS_6= RULE_MINUS
                    {
                    this_MINUS_6=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleSqlValue16619); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MINUS_6);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_6, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_0_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7875:10: this_PLUS_7= RULE_PLUS
                    {
                    this_PLUS_7=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleSqlValue16645); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PLUS_7);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_7, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_0_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7883:10: this_LPAREN_8= RULE_LPAREN
                    {
                    this_LPAREN_8=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleSqlValue16671); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LPAREN_8);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_8, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_0_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7891:10: this_RPAREN_9= RULE_RPAREN
                    {
                    this_RPAREN_9=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleSqlValue16697); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_RPAREN_9);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_9, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_0_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7899:10: this_RBRACE_10= RULE_RBRACE
                    {
                    this_RBRACE_10=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_ruleSqlValue16723); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_RBRACE_10);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RBRACE_10, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_0_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7907:10: this_QUESTI_11= RULE_QUESTI
                    {
                    this_QUESTI_11=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleSqlValue16749); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QUESTI_11);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_QUESTI_11, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7915:10: this_NOT_12= RULE_NOT
                    {
                    this_NOT_12=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleSqlValue16775); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NOT_12);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NOT_12, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7923:10: this_BAND_13= RULE_BAND
                    {
                    this_BAND_13=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleSqlValue16801); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BAND_13);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BAND_13, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7931:10: this_BOR_14= RULE_BOR
                    {
                    this_BOR_14=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleSqlValue16827); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOR_14);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOR_14, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_0_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7939:10: this_HASH_15= RULE_HASH
                    {
                    this_HASH_15=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleSqlValue16853); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HASH_15);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HASH_15, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_0_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7947:10: this_CARET_16= RULE_CARET
                    {
                    this_CARET_16=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleSqlValue16879); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CARET_16);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_CARET_16, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_0_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7955:10: this_EQUALS_17= RULE_EQUALS
                    {
                    this_EQUALS_17=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleSqlValue16905); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EQUALS_17);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_EQUALS_17, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_0_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7963:10: this_LESS_THAN_18= RULE_LESS_THAN
                    {
                    this_LESS_THAN_18=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleSqlValue16931); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LESS_THAN_18);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LESS_THAN_18, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_0_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7971:10: this_MORE_THAN_19= RULE_MORE_THAN
                    {
                    this_MORE_THAN_19=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleSqlValue16957); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MORE_THAN_19);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MORE_THAN_19, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_0_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7979:10: this_DOT_20= RULE_DOT
                    {
                    this_DOT_20=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleSqlValue16983); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DOT_20);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DOT_20, grammarAccess.getSqlValueAccess().getDOTTerminalRuleCall_0_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7987:10: this_AND_21= RULE_AND
                    {
                    this_AND_21=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleSqlValue17009); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AND_21);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AND_21, grammarAccess.getSqlValueAccess().getANDTerminalRuleCall_0_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:7995:10: this_OR_22= RULE_OR
                    {
                    this_OR_22=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleSqlValue17035); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OR_22);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OR_22, grammarAccess.getSqlValueAccess().getORTerminalRuleCall_0_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8003:10: this_ESC_CHAR_23= RULE_ESC_CHAR
                    {
                    this_ESC_CHAR_23=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleSqlValue17061); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESC_CHAR_23);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ESC_CHAR_23, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_0_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8011:10: this_ON_OFF_24= RULE_ON_OFF
                    {
                    this_ON_OFF_24=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleSqlValue17087); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ON_OFF_24);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ON_OFF_24, grammarAccess.getSqlValueAccess().getON_OFFTerminalRuleCall_0_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8019:10: this_STATEMENT_TYPE_25= RULE_STATEMENT_TYPE
                    {
                    this_STATEMENT_TYPE_25=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleSqlValue17113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STATEMENT_TYPE_25);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STATEMENT_TYPE_25, grammarAccess.getSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8027:10: this_MAPPING_TYPE_26= RULE_MAPPING_TYPE
                    {
                    this_MAPPING_TYPE_26=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleSqlValue17139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MAPPING_TYPE_26);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MAPPING_TYPE_26, grammarAccess.getSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_26()); 
                          
                    }

                    }
                    break;
                case 28 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8035:10: this_OPTION_TYPE_27= RULE_OPTION_TYPE
                    {
                    this_OPTION_TYPE_27=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleSqlValue17165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OPTION_TYPE_27);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OPTION_TYPE_27, grammarAccess.getSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_27()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8042:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )*
            loop250:
            do {
                int alt250=2;
                alt250 = dfa250.predict(input);
                switch (alt250) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8042:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8069:27: (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE )
            	    int alt249=28;
            	    switch ( input.LA(1) ) {
            	    case RULE_REST:
            	        {
            	        alt249=1;
            	        }
            	        break;
            	    case RULE_IDENT_DOT:
            	        {
            	        alt249=2;
            	        }
            	        break;
            	    case RULE_IDENT:
            	        {
            	        alt249=3;
            	        }
            	        break;
            	    case RULE_NUMBER:
            	        {
            	        alt249=4;
            	        }
            	        break;
            	    case RULE_WS:
            	        {
            	        alt249=5;
            	        }
            	        break;
            	    case RULE_COMMA:
            	        {
            	        alt249=6;
            	        }
            	        break;
            	    case RULE_MINUS:
            	        {
            	        alt249=7;
            	        }
            	        break;
            	    case RULE_PLUS:
            	        {
            	        alt249=8;
            	        }
            	        break;
            	    case RULE_LPAREN:
            	        {
            	        alt249=9;
            	        }
            	        break;
            	    case RULE_RPAREN:
            	        {
            	        alt249=10;
            	        }
            	        break;
            	    case RULE_RBRACE:
            	        {
            	        alt249=11;
            	        }
            	        break;
            	    case RULE_QUESTI:
            	        {
            	        alt249=12;
            	        }
            	        break;
            	    case RULE_NOT:
            	        {
            	        alt249=13;
            	        }
            	        break;
            	    case RULE_BAND:
            	        {
            	        alt249=14;
            	        }
            	        break;
            	    case RULE_BOR:
            	        {
            	        alt249=15;
            	        }
            	        break;
            	    case RULE_HASH:
            	        {
            	        alt249=16;
            	        }
            	        break;
            	    case RULE_CARET:
            	        {
            	        alt249=17;
            	        }
            	        break;
            	    case RULE_EQUALS:
            	        {
            	        alt249=18;
            	        }
            	        break;
            	    case RULE_LESS_THAN:
            	        {
            	        alt249=19;
            	        }
            	        break;
            	    case RULE_MORE_THAN:
            	        {
            	        alt249=20;
            	        }
            	        break;
            	    case RULE_DOT:
            	        {
            	        alt249=21;
            	        }
            	        break;
            	    case RULE_AND:
            	        {
            	        alt249=22;
            	        }
            	        break;
            	    case RULE_OR:
            	        {
            	        alt249=23;
            	        }
            	        break;
            	    case RULE_ESC_CHAR:
            	        {
            	        alt249=24;
            	        }
            	        break;
            	    case RULE_ON_OFF:
            	        {
            	        alt249=25;
            	        }
            	        break;
            	    case RULE_STATEMENT_TYPE:
            	        {
            	        alt249=26;
            	        }
            	        break;
            	    case RULE_MAPPING_TYPE:
            	        {
            	        alt249=27;
            	        }
            	        break;
            	    case RULE_OPTION_TYPE:
            	        {
            	        alt249=28;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 249, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt249) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8069:32: this_REST_28= RULE_REST
            	            {
            	            this_REST_28=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleSqlValue17411); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_REST_28);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_REST_28, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8077:10: this_IDENT_DOT_29= RULE_IDENT_DOT
            	            {
            	            this_IDENT_DOT_29=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleSqlValue17437); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_DOT_29);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_DOT_29, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8085:10: this_IDENT_30= RULE_IDENT
            	            {
            	            this_IDENT_30=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleSqlValue17463); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_30);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_30, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8093:10: this_NUMBER_31= RULE_NUMBER
            	            {
            	            this_NUMBER_31=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleSqlValue17489); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NUMBER_31);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NUMBER_31, grammarAccess.getSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8101:10: this_WS_32= RULE_WS
            	            {
            	            this_WS_32=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleSqlValue17515); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_WS_32);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_WS_32, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8109:10: this_COMMA_33= RULE_COMMA
            	            {
            	            this_COMMA_33=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleSqlValue17541); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_COMMA_33);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_COMMA_33, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_1_0_5()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8117:10: this_MINUS_34= RULE_MINUS
            	            {
            	            this_MINUS_34=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleSqlValue17567); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MINUS_34);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MINUS_34, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_1_0_6()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8125:10: this_PLUS_35= RULE_PLUS
            	            {
            	            this_PLUS_35=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleSqlValue17593); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_PLUS_35);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_PLUS_35, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_1_0_7()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8133:10: this_LPAREN_36= RULE_LPAREN
            	            {
            	            this_LPAREN_36=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleSqlValue17619); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LPAREN_36);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LPAREN_36, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_1_0_8()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8141:10: this_RPAREN_37= RULE_RPAREN
            	            {
            	            this_RPAREN_37=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleSqlValue17645); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_RPAREN_37);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_RPAREN_37, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_1_0_9()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8149:10: this_RBRACE_38= RULE_RBRACE
            	            {
            	            this_RBRACE_38=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_ruleSqlValue17671); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_RBRACE_38);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_RBRACE_38, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_1_0_10()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 12 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8157:10: this_QUESTI_39= RULE_QUESTI
            	            {
            	            this_QUESTI_39=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleSqlValue17697); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_QUESTI_39);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_QUESTI_39, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 13 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8165:10: this_NOT_40= RULE_NOT
            	            {
            	            this_NOT_40=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleSqlValue17723); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NOT_40);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NOT_40, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 14 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8173:10: this_BAND_41= RULE_BAND
            	            {
            	            this_BAND_41=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleSqlValue17749); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BAND_41);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BAND_41, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 15 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8181:10: this_BOR_42= RULE_BOR
            	            {
            	            this_BOR_42=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleSqlValue17775); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BOR_42);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BOR_42, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_1_0_14()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 16 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8189:10: this_HASH_43= RULE_HASH
            	            {
            	            this_HASH_43=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleSqlValue17801); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_HASH_43);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_HASH_43, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_1_0_15()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 17 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8197:10: this_CARET_44= RULE_CARET
            	            {
            	            this_CARET_44=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleSqlValue17827); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_CARET_44);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_CARET_44, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_1_0_16()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 18 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8205:10: this_EQUALS_45= RULE_EQUALS
            	            {
            	            this_EQUALS_45=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleSqlValue17853); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_EQUALS_45);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_EQUALS_45, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_1_0_17()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 19 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8213:10: this_LESS_THAN_46= RULE_LESS_THAN
            	            {
            	            this_LESS_THAN_46=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleSqlValue17879); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LESS_THAN_46);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LESS_THAN_46, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_18()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 20 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8221:10: this_MORE_THAN_47= RULE_MORE_THAN
            	            {
            	            this_MORE_THAN_47=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleSqlValue17905); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MORE_THAN_47);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MORE_THAN_47, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_19()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 21 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8229:10: this_DOT_48= RULE_DOT
            	            {
            	            this_DOT_48=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleSqlValue17931); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_DOT_48);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_DOT_48, grammarAccess.getSqlValueAccess().getDOTTerminalRuleCall_1_0_20()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 22 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8237:10: this_AND_49= RULE_AND
            	            {
            	            this_AND_49=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleSqlValue17957); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_AND_49);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AND_49, grammarAccess.getSqlValueAccess().getANDTerminalRuleCall_1_0_21()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 23 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8245:10: this_OR_50= RULE_OR
            	            {
            	            this_OR_50=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleSqlValue17983); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OR_50);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OR_50, grammarAccess.getSqlValueAccess().getORTerminalRuleCall_1_0_22()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 24 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8253:10: this_ESC_CHAR_51= RULE_ESC_CHAR
            	            {
            	            this_ESC_CHAR_51=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleSqlValue18009); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ESC_CHAR_51);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ESC_CHAR_51, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_23()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 25 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8261:10: this_ON_OFF_52= RULE_ON_OFF
            	            {
            	            this_ON_OFF_52=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleSqlValue18035); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ON_OFF_52);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ON_OFF_52, grammarAccess.getSqlValueAccess().getON_OFFTerminalRuleCall_1_0_24()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 26 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8269:10: this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE
            	            {
            	            this_STATEMENT_TYPE_53=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleSqlValue18061); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_STATEMENT_TYPE_53);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_STATEMENT_TYPE_53, grammarAccess.getSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_1_0_25()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 27 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8277:10: this_MAPPING_TYPE_54= RULE_MAPPING_TYPE
            	            {
            	            this_MAPPING_TYPE_54=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleSqlValue18087); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MAPPING_TYPE_54);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MAPPING_TYPE_54, grammarAccess.getSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_26()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 28 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8285:10: this_OPTION_TYPE_55= RULE_OPTION_TYPE
            	            {
            	            this_OPTION_TYPE_55=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleSqlValue18113); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OPTION_TYPE_55);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OPTION_TYPE_55, grammarAccess.getSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_27()); 
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSqlValue"


    // $ANTLR start "entryRuleMetaSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8300:1: entryRuleMetaSql returns [EObject current=null] : iv_ruleMetaSql= ruleMetaSql EOF ;
    public final EObject entryRuleMetaSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetaSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8301:2: (iv_ruleMetaSql= ruleMetaSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8302:2: iv_ruleMetaSql= ruleMetaSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetaSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleMetaSql_in_entryRuleMetaSql18161);
            iv_ruleMetaSql=ruleMetaSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetaSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleMetaSql18171); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetaSql"


    // $ANTLR start "ruleMetaSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8309:1: ruleMetaSql returns [EObject current=null] : ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) | ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) ) | ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) ) ) ;
    public final EObject ruleMetaSql() throws RecognitionException {
        EObject current = null;

        Token this_WS_0=null;
        Token this_BOR_2=null;
        Token lv_type_4_0=null;
        Token this_BOR_6=null;
        Token this_BOR_8=null;
        Token lv_type_10_0=null;
        Token this_BOR_12=null;
        Token lv_type_14_0=null;
        Token this_BOR_16=null;
        Token lv_type_18_0=null;
        Token this_WS_19=null;
        Token lv_ftype_20_0=null;
        Token lv_type_22_0=null;
        Token this_NUMBER_23=null;
        EObject lv_ifs_1_0 = null;

        EObject lv_ifs_3_0 = null;

        EObject lv_cond_5_0 = null;

        EObject lv_ifs_7_0 = null;

        EObject lv_ifs_9_0 = null;

        EObject lv_ifs_11_0 = null;

        EObject lv_ifs_13_0 = null;

        EObject lv_ifs_15_0 = null;

        EObject lv_ifs_17_0 = null;

        EObject lv_ifs_21_0 = null;

        EObject lv_ord_24_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8312:28: ( ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) | ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) ) | ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8313:1: ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) | ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) ) | ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8313:1: ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) | ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) ) | ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) ) )
            int alt256=6;
            switch ( input.LA(1) ) {
            case RULE_WS:
                {
                alt256=1;
                }
                break;
            case RULE_QUESTI:
                {
                alt256=2;
                }
                break;
            case RULE_BAND:
                {
                alt256=3;
                }
                break;
            case RULE_BOR:
                {
                alt256=4;
                }
                break;
            case RULE_EQUALS:
                {
                alt256=5;
                }
                break;
            case RULE_HASH:
                {
                alt256=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 256, 0, input);

                throw nvae;
            }

            switch (alt256) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8313:2: (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8313:2: (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8313:3: this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )*
                    {
                    this_WS_0=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetaSql18208); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_0, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8317:1: ( (lv_ifs_1_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8318:1: (lv_ifs_1_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8318:1: (lv_ifs_1_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8319:3: lv_ifs_1_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18228);
                    lv_ifs_1_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_1_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8335:2: (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )*
                    loop251:
                    do {
                        int alt251=2;
                        int LA251_0 = input.LA(1);

                        if ( (LA251_0==RULE_BOR) ) {
                            alt251=1;
                        }


                        switch (alt251) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8335:3: this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_2=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18240); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_2, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8339:1: ( (lv_ifs_3_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8340:1: (lv_ifs_3_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8340:1: (lv_ifs_3_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8341:3: lv_ifs_3_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18260);
                    	    lv_ifs_3_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_3_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop251;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8358:6: ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8358:6: ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8358:7: ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8358:7: ( (lv_type_4_0= RULE_QUESTI ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8359:1: (lv_type_4_0= RULE_QUESTI )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8359:1: (lv_type_4_0= RULE_QUESTI )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8360:3: lv_type_4_0= RULE_QUESTI
                    {
                    lv_type_4_0=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleMetaSql18287); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_4_0, grammarAccess.getMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_4_0, 
                              		"QUESTI");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8376:2: ( (lv_cond_5_0= ruleIfSqlCond ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8377:1: (lv_cond_5_0= ruleIfSqlCond )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8377:1: (lv_cond_5_0= ruleIfSqlCond )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8378:3: lv_cond_5_0= ruleIfSqlCond
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSqlCond_in_ruleMetaSql18313);
                    lv_cond_5_0=ruleIfSqlCond();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		set(
                             			current, 
                             			"cond",
                              		lv_cond_5_0, 
                              		"IfSqlCond");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_BOR_6=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18324); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOR_6, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8398:1: ( (lv_ifs_7_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8399:1: (lv_ifs_7_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8399:1: (lv_ifs_7_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8400:3: lv_ifs_7_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18344);
                    lv_ifs_7_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_7_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8416:2: (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )*
                    loop252:
                    do {
                        int alt252=2;
                        int LA252_0 = input.LA(1);

                        if ( (LA252_0==RULE_BOR) ) {
                            alt252=1;
                        }


                        switch (alt252) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8416:3: this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_8=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18356); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_8, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8420:1: ( (lv_ifs_9_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8421:1: (lv_ifs_9_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8421:1: (lv_ifs_9_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8422:3: lv_ifs_9_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18376);
                    	    lv_ifs_9_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_9_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop252;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8439:6: ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8439:6: ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8439:7: ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8439:7: ( (lv_type_10_0= RULE_BAND ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8440:1: (lv_type_10_0= RULE_BAND )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8440:1: (lv_type_10_0= RULE_BAND )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8441:3: lv_type_10_0= RULE_BAND
                    {
                    lv_type_10_0=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleMetaSql18403); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_10_0, grammarAccess.getMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_10_0, 
                              		"BAND");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8457:2: ( (lv_ifs_11_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8458:1: (lv_ifs_11_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8458:1: (lv_ifs_11_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8459:3: lv_ifs_11_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18429);
                    lv_ifs_11_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_11_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8475:2: (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )*
                    loop253:
                    do {
                        int alt253=2;
                        int LA253_0 = input.LA(1);

                        if ( (LA253_0==RULE_BOR) ) {
                            alt253=1;
                        }


                        switch (alt253) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8475:3: this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_12=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18441); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_12, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8479:1: ( (lv_ifs_13_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8480:1: (lv_ifs_13_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8480:1: (lv_ifs_13_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8481:3: lv_ifs_13_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18461);
                    	    lv_ifs_13_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_13_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop253;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8498:6: ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8498:6: ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8498:7: ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8498:7: ( (lv_type_14_0= RULE_BOR ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8499:1: (lv_type_14_0= RULE_BOR )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8499:1: (lv_type_14_0= RULE_BOR )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8500:3: lv_type_14_0= RULE_BOR
                    {
                    lv_type_14_0=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18488); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_14_0, grammarAccess.getMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_14_0, 
                              		"BOR");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8516:2: ( (lv_ifs_15_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8517:1: (lv_ifs_15_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8517:1: (lv_ifs_15_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8518:3: lv_ifs_15_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18514);
                    lv_ifs_15_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_15_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8534:2: (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )*
                    loop254:
                    do {
                        int alt254=2;
                        int LA254_0 = input.LA(1);

                        if ( (LA254_0==RULE_BOR) ) {
                            alt254=1;
                        }


                        switch (alt254) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8534:3: this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_16=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleMetaSql18526); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_16, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8538:1: ( (lv_ifs_17_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8539:1: (lv_ifs_17_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8539:1: (lv_ifs_17_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8540:3: lv_ifs_17_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18546);
                    	    lv_ifs_17_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_17_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop254;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8557:6: ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8557:6: ( ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8557:7: ( (lv_type_18_0= RULE_EQUALS ) ) (this_WS_19= RULE_WS )* ( (lv_ftype_20_0= RULE_IDENT ) ) ( (lv_ifs_21_0= ruleIfSql ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8557:7: ( (lv_type_18_0= RULE_EQUALS ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8558:1: (lv_type_18_0= RULE_EQUALS )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8558:1: (lv_type_18_0= RULE_EQUALS )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8559:3: lv_type_18_0= RULE_EQUALS
                    {
                    lv_type_18_0=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleMetaSql18573); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_18_0, grammarAccess.getMetaSqlAccess().getTypeEQUALSTerminalRuleCall_4_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_18_0, 
                              		"EQUALS");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8575:2: (this_WS_19= RULE_WS )*
                    loop255:
                    do {
                        int alt255=2;
                        int LA255_0 = input.LA(1);

                        if ( (LA255_0==RULE_WS) ) {
                            alt255=1;
                        }


                        switch (alt255) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8575:3: this_WS_19= RULE_WS
                    	    {
                    	    this_WS_19=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleMetaSql18590); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_WS_19, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_4_1()); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop255;
                        }
                    } while (true);

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8579:3: ( (lv_ftype_20_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8580:1: (lv_ftype_20_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8580:1: (lv_ftype_20_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8581:3: lv_ftype_20_0= RULE_IDENT
                    {
                    lv_ftype_20_0=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleMetaSql18608); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_ftype_20_0, grammarAccess.getMetaSqlAccess().getFtypeIDENTTerminalRuleCall_4_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"ftype",
                              		lv_ftype_20_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8597:2: ( (lv_ifs_21_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8598:1: (lv_ifs_21_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8598:1: (lv_ifs_21_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8599:3: lv_ifs_21_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_4_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleMetaSql18634);
                    lv_ifs_21_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_21_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8616:6: ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8616:6: ( ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8616:7: ( (lv_type_22_0= RULE_HASH ) ) this_NUMBER_23= RULE_NUMBER ( (lv_ord_24_0= ruleOrdSql ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8616:7: ( (lv_type_22_0= RULE_HASH ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8617:1: (lv_type_22_0= RULE_HASH )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8617:1: (lv_type_22_0= RULE_HASH )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8618:3: lv_type_22_0= RULE_HASH
                    {
                    lv_type_22_0=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleMetaSql18659); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_22_0, grammarAccess.getMetaSqlAccess().getTypeHASHTerminalRuleCall_5_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_22_0, 
                              		"HASH");
                      	    
                    }

                    }


                    }

                    this_NUMBER_23=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleMetaSql18675); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_23, grammarAccess.getMetaSqlAccess().getNUMBERTerminalRuleCall_5_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8638:1: ( (lv_ord_24_0= ruleOrdSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8639:1: (lv_ord_24_0= ruleOrdSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8639:1: (lv_ord_24_0= ruleOrdSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8640:3: lv_ord_24_0= ruleOrdSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMetaSqlAccess().getOrdOrdSqlParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleOrdSql_in_ruleMetaSql18695);
                    lv_ord_24_0=ruleOrdSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMetaSqlRule());
                      	        }
                             		set(
                             			current, 
                             			"ord",
                              		lv_ord_24_0, 
                              		"OrdSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetaSql"


    // $ANTLR start "entryRuleIfSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8664:1: entryRuleIfSql returns [EObject current=null] : iv_ruleIfSql= ruleIfSql EOF ;
    public final EObject entryRuleIfSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8665:2: (iv_ruleIfSql= ruleIfSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8666:2: iv_ruleIfSql= ruleIfSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_entryRuleIfSql18732);
            iv_ruleIfSql=ruleIfSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSql18742); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSql"


    // $ANTLR start "ruleIfSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8673:1: ruleIfSql returns [EObject current=null] : ( (lv_sqls_0_0= ruleIfSqlFragment ) )+ ;
    public final EObject ruleIfSql() throws RecognitionException {
        EObject current = null;

        EObject lv_sqls_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8676:28: ( ( (lv_sqls_0_0= ruleIfSqlFragment ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8677:1: ( (lv_sqls_0_0= ruleIfSqlFragment ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8677:1: ( (lv_sqls_0_0= ruleIfSqlFragment ) )+
            int cnt257=0;
            loop257:
            do {
                int alt257=2;
                int LA257_0 = input.LA(1);

                if ( ((LA257_0>=RULE_WS && LA257_0<=RULE_LBRACE)||(LA257_0>=RULE_QUESTI && LA257_0<=RULE_BAND)||(LA257_0>=RULE_HASH && LA257_0<=RULE_OPTION_TYPE)) ) {
                    alt257=1;
                }


                switch (alt257) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8678:1: (lv_sqls_0_0= ruleIfSqlFragment )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8678:1: (lv_sqls_0_0= ruleIfSqlFragment )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8679:3: lv_sqls_0_0= ruleIfSqlFragment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIfSqlAccess().getSqlsIfSqlFragmentParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleIfSqlFragment_in_ruleIfSql18787);
            	    lv_sqls_0_0=ruleIfSqlFragment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfSqlRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"sqls",
            	              		lv_sqls_0_0, 
            	              		"IfSqlFragment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt257 >= 1 ) break loop257;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(257, input);
                        throw eee;
                }
                cnt257++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSql"


    // $ANTLR start "entryRuleIfSqlFragment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8703:1: entryRuleIfSqlFragment returns [EObject current=null] : iv_ruleIfSqlFragment= ruleIfSqlFragment EOF ;
    public final EObject entryRuleIfSqlFragment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfSqlFragment = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8704:2: (iv_ruleIfSqlFragment= ruleIfSqlFragment EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8705:2: iv_ruleIfSqlFragment= ruleIfSqlFragment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlFragmentRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlFragment_in_entryRuleIfSqlFragment18823);
            iv_ruleIfSqlFragment=ruleIfSqlFragment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSqlFragment; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSqlFragment18833); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSqlFragment"


    // $ANTLR start "ruleIfSqlFragment"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8712:1: ruleIfSqlFragment returns [EObject current=null] : ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) ) ;
    public final EObject ruleIfSqlFragment() throws RecognitionException {
        EObject current = null;

        Token this_AT_1=null;
        Token this_STRING_3=null;
        Token this_COLON_5=null;
        Token this_STRING_7=null;
        Token this_STRING_8=null;
        Token this_COLON_10=null;
        Token this_COLON_11=null;
        Token this_PERCENT_13=null;
        Token this_PERCENT_14=null;
        Token this_LBRACE_17=null;
        Token this_RBRACE_19=null;
        AntlrDatatypeRuleToken lv_value_0_0 = null;

        EObject lv_col_2_0 = null;

        EObject lv_cnst_4_0 = null;

        EObject lv_ident_6_0 = null;

        EObject lv_cnstOper_9_0 = null;

        EObject lv_identOper_12_0 = null;

        EObject lv_dbtab_15_0 = null;

        EObject lv_dbcol_16_0 = null;

        EObject lv_meta_18_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8715:28: ( ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8716:1: ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8716:1: ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) )
            int alt259=8;
            alt259 = dfa259.predict(input);
            switch (alt259) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8716:2: ( (lv_value_0_0= ruleIfSqlValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8716:2: ( (lv_value_0_0= ruleIfSqlValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8717:1: (lv_value_0_0= ruleIfSqlValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8717:1: (lv_value_0_0= ruleIfSqlValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8718:3: lv_value_0_0= ruleIfSqlValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getValueIfSqlValueParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSqlValue_in_ruleIfSqlFragment18879);
                    lv_value_0_0=ruleIfSqlValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_0_0, 
                              		"IfSqlValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8735:6: (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8735:6: (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8735:7: this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) )
                    {
                    this_AT_1=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_ruleIfSqlFragment18897); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AT_1, grammarAccess.getIfSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8739:1: ( (lv_col_2_0= ruleColumn ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8740:1: (lv_col_2_0= ruleColumn )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8740:1: (lv_col_2_0= ruleColumn )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8741:3: lv_col_2_0= ruleColumn
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleColumn_in_ruleIfSqlFragment18917);
                    lv_col_2_0=ruleColumn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"col",
                              		lv_col_2_0, 
                              		"Column");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8758:6: (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8758:6: (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8758:7: this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) )
                    {
                    this_STRING_3=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleIfSqlFragment18936); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_3, grammarAccess.getIfSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8762:1: ( (lv_cnst_4_0= ruleConstant ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8763:1: (lv_cnst_4_0= ruleConstant )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8763:1: (lv_cnst_4_0= ruleConstant )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8764:3: lv_cnst_4_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstant_in_ruleIfSqlFragment18956);
                    lv_cnst_4_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"cnst",
                              		lv_cnst_4_0, 
                              		"Constant");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8781:6: (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8781:6: (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8781:7: this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) )
                    {
                    this_COLON_5=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleIfSqlFragment18975); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_5, grammarAccess.getIfSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8785:1: ( (lv_ident_6_0= ruleIdentifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8786:1: (lv_ident_6_0= ruleIdentifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8786:1: (lv_ident_6_0= ruleIdentifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8787:3: lv_ident_6_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_ruleIfSqlFragment18995);
                    lv_ident_6_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"ident",
                              		lv_ident_6_0, 
                              		"Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8804:6: (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8804:6: (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8804:7: this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) )
                    {
                    this_STRING_7=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleIfSqlFragment19014); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_7, grammarAccess.getIfSqlFragmentAccess().getSTRINGTerminalRuleCall_4_0()); 
                          
                    }
                    this_STRING_8=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleIfSqlFragment19024); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_8, grammarAccess.getIfSqlFragmentAccess().getSTRINGTerminalRuleCall_4_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8812:1: ( (lv_cnstOper_9_0= ruleConstantOperator ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8813:1: (lv_cnstOper_9_0= ruleConstantOperator )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8813:1: (lv_cnstOper_9_0= ruleConstantOperator )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8814:3: lv_cnstOper_9_0= ruleConstantOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getCnstOperConstantOperatorParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstantOperator_in_ruleIfSqlFragment19044);
                    lv_cnstOper_9_0=ruleConstantOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"cnstOper",
                              		lv_cnstOper_9_0, 
                              		"ConstantOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8831:6: (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8831:6: (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8831:7: this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) )
                    {
                    this_COLON_10=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleIfSqlFragment19063); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_10, grammarAccess.getIfSqlFragmentAccess().getCOLONTerminalRuleCall_5_0()); 
                          
                    }
                    this_COLON_11=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleIfSqlFragment19073); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_11, grammarAccess.getIfSqlFragmentAccess().getCOLONTerminalRuleCall_5_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8839:1: ( (lv_identOper_12_0= ruleIdentifierOperator ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8840:1: (lv_identOper_12_0= ruleIdentifierOperator )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8840:1: (lv_identOper_12_0= ruleIdentifierOperator )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8841:3: lv_identOper_12_0= ruleIdentifierOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getIdentOperIdentifierOperatorParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifierOperator_in_ruleIfSqlFragment19093);
                    lv_identOper_12_0=ruleIdentifierOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identOper",
                              		lv_identOper_12_0, 
                              		"IdentifierOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8858:6: (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8858:6: (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8858:7: this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) )
                    {
                    this_PERCENT_13=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleIfSqlFragment19112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PERCENT_13, grammarAccess.getIfSqlFragmentAccess().getPERCENTTerminalRuleCall_6_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8862:1: ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) )
                    int alt258=2;
                    int LA258_0 = input.LA(1);

                    if ( (LA258_0==RULE_PERCENT) ) {
                        alt258=1;
                    }
                    else if ( (LA258_0==RULE_IDENT||LA258_0==RULE_IDENT_DOT) ) {
                        alt258=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 258, 0, input);

                        throw nvae;
                    }
                    switch (alt258) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8862:2: (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8862:2: (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8862:3: this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) )
                            {
                            this_PERCENT_14=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleIfSqlFragment19124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_PERCENT_14, grammarAccess.getIfSqlFragmentAccess().getPERCENTTerminalRuleCall_6_1_0_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8866:1: ( (lv_dbtab_15_0= ruleDatabaseTable ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8867:1: (lv_dbtab_15_0= ruleDatabaseTable )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8867:1: (lv_dbtab_15_0= ruleDatabaseTable )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8868:3: lv_dbtab_15_0= ruleDatabaseTable
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getDbtabDatabaseTableParserRuleCall_6_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets001.FOLLOW_ruleDatabaseTable_in_ruleIfSqlFragment19144);
                            lv_dbtab_15_0=ruleDatabaseTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbtab",
                                      		lv_dbtab_15_0, 
                                      		"DatabaseTable");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8885:6: ( (lv_dbcol_16_0= ruleDatabaseColumn ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8885:6: ( (lv_dbcol_16_0= ruleDatabaseColumn ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8886:1: (lv_dbcol_16_0= ruleDatabaseColumn )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8886:1: (lv_dbcol_16_0= ruleDatabaseColumn )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8887:3: lv_dbcol_16_0= ruleDatabaseColumn
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getDbcolDatabaseColumnParserRuleCall_6_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets001.FOLLOW_ruleDatabaseColumn_in_ruleIfSqlFragment19172);
                            lv_dbcol_16_0=ruleDatabaseColumn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dbcol",
                                      		lv_dbcol_16_0, 
                                      		"DatabaseColumn");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8904:6: (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8904:6: (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8904:7: this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE
                    {
                    this_LBRACE_17=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_ruleIfSqlFragment19192); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LBRACE_17, grammarAccess.getIfSqlFragmentAccess().getLBRACETerminalRuleCall_7_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8908:1: ( (lv_meta_18_0= ruleIfMetaSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8909:1: (lv_meta_18_0= ruleIfMetaSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8909:1: (lv_meta_18_0= ruleIfMetaSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8910:3: lv_meta_18_0= ruleIfMetaSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getMetaIfMetaSqlParserRuleCall_7_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfMetaSql_in_ruleIfSqlFragment19212);
                    lv_meta_18_0=ruleIfMetaSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"meta",
                              		lv_meta_18_0, 
                              		"IfMetaSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RBRACE_19=(Token)match(input,RULE_RBRACE,FollowSets001.FOLLOW_RULE_RBRACE_in_ruleIfSqlFragment19223); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RBRACE_19, grammarAccess.getIfSqlFragmentAccess().getRBRACETerminalRuleCall_7_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSqlFragment"


    // $ANTLR start "entryRuleIfSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8938:1: entryRuleIfSqlValue returns [String current=null] : iv_ruleIfSqlValue= ruleIfSqlValue EOF ;
    public final String entryRuleIfSqlValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIfSqlValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8939:2: (iv_ruleIfSqlValue= ruleIfSqlValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8940:2: iv_ruleIfSqlValue= ruleIfSqlValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlValueRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlValue_in_entryRuleIfSqlValue19260);
            iv_ruleIfSqlValue=ruleIfSqlValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSqlValue.getText(); 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSqlValue19271); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSqlValue"


    // $ANTLR start "ruleIfSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8947:1: ruleIfSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )* ) ;
    public final AntlrDatatypeRuleToken ruleIfSqlValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_WS_4=null;
        Token this_SEMICOLON_5=null;
        Token this_COMMA_6=null;
        Token this_MINUS_7=null;
        Token this_PLUS_8=null;
        Token this_LPAREN_9=null;
        Token this_RPAREN_10=null;
        Token this_QUESTI_11=null;
        Token this_NOT_12=null;
        Token this_BAND_13=null;
        Token this_HASH_14=null;
        Token this_CARET_15=null;
        Token this_EQUALS_16=null;
        Token this_LESS_THAN_17=null;
        Token this_MORE_THAN_18=null;
        Token this_DOT_19=null;
        Token this_AND_20=null;
        Token this_OR_21=null;
        Token this_ESC_CHAR_22=null;
        Token this_ON_OFF_23=null;
        Token this_STATEMENT_TYPE_24=null;
        Token this_MAPPING_TYPE_25=null;
        Token this_OPTION_TYPE_26=null;
        Token this_REST_27=null;
        Token this_IDENT_DOT_28=null;
        Token this_IDENT_29=null;
        Token this_NUMBER_30=null;
        Token this_WS_31=null;
        Token this_SEMICOLON_32=null;
        Token this_COMMA_33=null;
        Token this_MINUS_34=null;
        Token this_PLUS_35=null;
        Token this_LPAREN_36=null;
        Token this_RPAREN_37=null;
        Token this_QUESTI_38=null;
        Token this_NOT_39=null;
        Token this_BAND_40=null;
        Token this_HASH_41=null;
        Token this_CARET_42=null;
        Token this_EQUALS_43=null;
        Token this_LESS_THAN_44=null;
        Token this_MORE_THAN_45=null;
        Token this_DOT_46=null;
        Token this_AND_47=null;
        Token this_OR_48=null;
        Token this_ESC_CHAR_49=null;
        Token this_ON_OFF_50=null;
        Token this_STATEMENT_TYPE_51=null;
        Token this_MAPPING_TYPE_52=null;
        Token this_OPTION_TYPE_53=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8950:28: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8951:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8951:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8951:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8951:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_QUESTI_11= RULE_QUESTI | this_NOT_12= RULE_NOT | this_BAND_13= RULE_BAND | this_HASH_14= RULE_HASH | this_CARET_15= RULE_CARET | this_EQUALS_16= RULE_EQUALS | this_LESS_THAN_17= RULE_LESS_THAN | this_MORE_THAN_18= RULE_MORE_THAN | this_DOT_19= RULE_DOT | this_AND_20= RULE_AND | this_OR_21= RULE_OR | this_ESC_CHAR_22= RULE_ESC_CHAR | this_ON_OFF_23= RULE_ON_OFF | this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_25= RULE_MAPPING_TYPE | this_OPTION_TYPE_26= RULE_OPTION_TYPE )
            int alt260=27;
            switch ( input.LA(1) ) {
            case RULE_REST:
                {
                alt260=1;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt260=2;
                }
                break;
            case RULE_IDENT:
                {
                alt260=3;
                }
                break;
            case RULE_NUMBER:
                {
                alt260=4;
                }
                break;
            case RULE_WS:
                {
                alt260=5;
                }
                break;
            case RULE_SEMICOLON:
                {
                alt260=6;
                }
                break;
            case RULE_COMMA:
                {
                alt260=7;
                }
                break;
            case RULE_MINUS:
                {
                alt260=8;
                }
                break;
            case RULE_PLUS:
                {
                alt260=9;
                }
                break;
            case RULE_LPAREN:
                {
                alt260=10;
                }
                break;
            case RULE_RPAREN:
                {
                alt260=11;
                }
                break;
            case RULE_QUESTI:
                {
                alt260=12;
                }
                break;
            case RULE_NOT:
                {
                alt260=13;
                }
                break;
            case RULE_BAND:
                {
                alt260=14;
                }
                break;
            case RULE_HASH:
                {
                alt260=15;
                }
                break;
            case RULE_CARET:
                {
                alt260=16;
                }
                break;
            case RULE_EQUALS:
                {
                alt260=17;
                }
                break;
            case RULE_LESS_THAN:
                {
                alt260=18;
                }
                break;
            case RULE_MORE_THAN:
                {
                alt260=19;
                }
                break;
            case RULE_DOT:
                {
                alt260=20;
                }
                break;
            case RULE_AND:
                {
                alt260=21;
                }
                break;
            case RULE_OR:
                {
                alt260=22;
                }
                break;
            case RULE_ESC_CHAR:
                {
                alt260=23;
                }
                break;
            case RULE_ON_OFF:
                {
                alt260=24;
                }
                break;
            case RULE_STATEMENT_TYPE:
                {
                alt260=25;
                }
                break;
            case RULE_MAPPING_TYPE:
                {
                alt260=26;
                }
                break;
            case RULE_OPTION_TYPE:
                {
                alt260=27;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 260, 0, input);

                throw nvae;
            }

            switch (alt260) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8951:7: this_REST_0= RULE_REST
                    {
                    this_REST_0=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleIfSqlValue19312); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_REST_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_REST_0, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8959:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                    {
                    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleIfSqlValue19338); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_DOT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_DOT_1, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8967:10: this_IDENT_2= RULE_IDENT
                    {
                    this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleIfSqlValue19364); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_2, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8975:10: this_NUMBER_3= RULE_NUMBER
                    {
                    this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleIfSqlValue19390); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_3, grammarAccess.getIfSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8983:10: this_WS_4= RULE_WS
                    {
                    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlValue19416); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_WS_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_4, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_0_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8991:10: this_SEMICOLON_5= RULE_SEMICOLON
                    {
                    this_SEMICOLON_5=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleIfSqlValue19442); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SEMICOLON_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_SEMICOLON_5, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8999:10: this_COMMA_6= RULE_COMMA
                    {
                    this_COMMA_6=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleIfSqlValue19468); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_COMMA_6);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_6, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9007:10: this_MINUS_7= RULE_MINUS
                    {
                    this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleIfSqlValue19494); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MINUS_7);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_7, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9015:10: this_PLUS_8= RULE_PLUS
                    {
                    this_PLUS_8=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleIfSqlValue19520); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PLUS_8);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_8, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9023:10: this_LPAREN_9= RULE_LPAREN
                    {
                    this_LPAREN_9=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleIfSqlValue19546); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LPAREN_9);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_9, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9031:10: this_RPAREN_10= RULE_RPAREN
                    {
                    this_RPAREN_10=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleIfSqlValue19572); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_RPAREN_10);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_10, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9039:10: this_QUESTI_11= RULE_QUESTI
                    {
                    this_QUESTI_11=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleIfSqlValue19598); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QUESTI_11);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_QUESTI_11, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9047:10: this_NOT_12= RULE_NOT
                    {
                    this_NOT_12=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlValue19624); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NOT_12);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NOT_12, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9055:10: this_BAND_13= RULE_BAND
                    {
                    this_BAND_13=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleIfSqlValue19650); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BAND_13);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BAND_13, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9063:10: this_HASH_14= RULE_HASH
                    {
                    this_HASH_14=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleIfSqlValue19676); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HASH_14);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HASH_14, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_0_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9071:10: this_CARET_15= RULE_CARET
                    {
                    this_CARET_15=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleIfSqlValue19702); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CARET_15);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_CARET_15, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_0_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9079:10: this_EQUALS_16= RULE_EQUALS
                    {
                    this_EQUALS_16=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleIfSqlValue19728); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EQUALS_16);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_EQUALS_16, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_0_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9087:10: this_LESS_THAN_17= RULE_LESS_THAN
                    {
                    this_LESS_THAN_17=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleIfSqlValue19754); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LESS_THAN_17);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LESS_THAN_17, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_0_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9095:10: this_MORE_THAN_18= RULE_MORE_THAN
                    {
                    this_MORE_THAN_18=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleIfSqlValue19780); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MORE_THAN_18);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MORE_THAN_18, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_0_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9103:10: this_DOT_19= RULE_DOT
                    {
                    this_DOT_19=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleIfSqlValue19806); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DOT_19);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DOT_19, grammarAccess.getIfSqlValueAccess().getDOTTerminalRuleCall_0_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9111:10: this_AND_20= RULE_AND
                    {
                    this_AND_20=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleIfSqlValue19832); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AND_20);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AND_20, grammarAccess.getIfSqlValueAccess().getANDTerminalRuleCall_0_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9119:10: this_OR_21= RULE_OR
                    {
                    this_OR_21=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleIfSqlValue19858); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OR_21);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OR_21, grammarAccess.getIfSqlValueAccess().getORTerminalRuleCall_0_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9127:10: this_ESC_CHAR_22= RULE_ESC_CHAR
                    {
                    this_ESC_CHAR_22=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleIfSqlValue19884); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESC_CHAR_22);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ESC_CHAR_22, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_0_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9135:10: this_ON_OFF_23= RULE_ON_OFF
                    {
                    this_ON_OFF_23=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleIfSqlValue19910); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ON_OFF_23);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ON_OFF_23, grammarAccess.getIfSqlValueAccess().getON_OFFTerminalRuleCall_0_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9143:10: this_STATEMENT_TYPE_24= RULE_STATEMENT_TYPE
                    {
                    this_STATEMENT_TYPE_24=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleIfSqlValue19936); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STATEMENT_TYPE_24);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STATEMENT_TYPE_24, grammarAccess.getIfSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9151:10: this_MAPPING_TYPE_25= RULE_MAPPING_TYPE
                    {
                    this_MAPPING_TYPE_25=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleIfSqlValue19962); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MAPPING_TYPE_25);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MAPPING_TYPE_25, grammarAccess.getIfSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9159:10: this_OPTION_TYPE_26= RULE_OPTION_TYPE
                    {
                    this_OPTION_TYPE_26=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleIfSqlValue19988); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OPTION_TYPE_26);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OPTION_TYPE_26, grammarAccess.getIfSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_26()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9166:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )*
            loop262:
            do {
                int alt262=2;
                alt262 = dfa262.predict(input);
                switch (alt262) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9166:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9192:27: (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE )
            	    int alt261=27;
            	    switch ( input.LA(1) ) {
            	    case RULE_REST:
            	        {
            	        alt261=1;
            	        }
            	        break;
            	    case RULE_IDENT_DOT:
            	        {
            	        alt261=2;
            	        }
            	        break;
            	    case RULE_IDENT:
            	        {
            	        alt261=3;
            	        }
            	        break;
            	    case RULE_NUMBER:
            	        {
            	        alt261=4;
            	        }
            	        break;
            	    case RULE_WS:
            	        {
            	        alt261=5;
            	        }
            	        break;
            	    case RULE_SEMICOLON:
            	        {
            	        alt261=6;
            	        }
            	        break;
            	    case RULE_COMMA:
            	        {
            	        alt261=7;
            	        }
            	        break;
            	    case RULE_MINUS:
            	        {
            	        alt261=8;
            	        }
            	        break;
            	    case RULE_PLUS:
            	        {
            	        alt261=9;
            	        }
            	        break;
            	    case RULE_LPAREN:
            	        {
            	        alt261=10;
            	        }
            	        break;
            	    case RULE_RPAREN:
            	        {
            	        alt261=11;
            	        }
            	        break;
            	    case RULE_QUESTI:
            	        {
            	        alt261=12;
            	        }
            	        break;
            	    case RULE_NOT:
            	        {
            	        alt261=13;
            	        }
            	        break;
            	    case RULE_BAND:
            	        {
            	        alt261=14;
            	        }
            	        break;
            	    case RULE_HASH:
            	        {
            	        alt261=15;
            	        }
            	        break;
            	    case RULE_CARET:
            	        {
            	        alt261=16;
            	        }
            	        break;
            	    case RULE_EQUALS:
            	        {
            	        alt261=17;
            	        }
            	        break;
            	    case RULE_LESS_THAN:
            	        {
            	        alt261=18;
            	        }
            	        break;
            	    case RULE_MORE_THAN:
            	        {
            	        alt261=19;
            	        }
            	        break;
            	    case RULE_DOT:
            	        {
            	        alt261=20;
            	        }
            	        break;
            	    case RULE_AND:
            	        {
            	        alt261=21;
            	        }
            	        break;
            	    case RULE_OR:
            	        {
            	        alt261=22;
            	        }
            	        break;
            	    case RULE_ESC_CHAR:
            	        {
            	        alt261=23;
            	        }
            	        break;
            	    case RULE_ON_OFF:
            	        {
            	        alt261=24;
            	        }
            	        break;
            	    case RULE_STATEMENT_TYPE:
            	        {
            	        alt261=25;
            	        }
            	        break;
            	    case RULE_MAPPING_TYPE:
            	        {
            	        alt261=26;
            	        }
            	        break;
            	    case RULE_OPTION_TYPE:
            	        {
            	        alt261=27;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 261, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt261) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9192:32: this_REST_27= RULE_REST
            	            {
            	            this_REST_27=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleIfSqlValue20226); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_REST_27);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_REST_27, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9200:10: this_IDENT_DOT_28= RULE_IDENT_DOT
            	            {
            	            this_IDENT_DOT_28=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleIfSqlValue20252); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_DOT_28);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_DOT_28, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9208:10: this_IDENT_29= RULE_IDENT
            	            {
            	            this_IDENT_29=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleIfSqlValue20278); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_29);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_29, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9216:10: this_NUMBER_30= RULE_NUMBER
            	            {
            	            this_NUMBER_30=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleIfSqlValue20304); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NUMBER_30);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NUMBER_30, grammarAccess.getIfSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9224:10: this_WS_31= RULE_WS
            	            {
            	            this_WS_31=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlValue20330); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_WS_31);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_WS_31, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9232:10: this_SEMICOLON_32= RULE_SEMICOLON
            	            {
            	            this_SEMICOLON_32=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleIfSqlValue20356); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_SEMICOLON_32);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_SEMICOLON_32, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9240:10: this_COMMA_33= RULE_COMMA
            	            {
            	            this_COMMA_33=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleIfSqlValue20382); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_COMMA_33);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_COMMA_33, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9248:10: this_MINUS_34= RULE_MINUS
            	            {
            	            this_MINUS_34=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleIfSqlValue20408); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MINUS_34);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MINUS_34, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9256:10: this_PLUS_35= RULE_PLUS
            	            {
            	            this_PLUS_35=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleIfSqlValue20434); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_PLUS_35);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_PLUS_35, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9264:10: this_LPAREN_36= RULE_LPAREN
            	            {
            	            this_LPAREN_36=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleIfSqlValue20460); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LPAREN_36);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LPAREN_36, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9272:10: this_RPAREN_37= RULE_RPAREN
            	            {
            	            this_RPAREN_37=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleIfSqlValue20486); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_RPAREN_37);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_RPAREN_37, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 12 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9280:10: this_QUESTI_38= RULE_QUESTI
            	            {
            	            this_QUESTI_38=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleIfSqlValue20512); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_QUESTI_38);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_QUESTI_38, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 13 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9288:10: this_NOT_39= RULE_NOT
            	            {
            	            this_NOT_39=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlValue20538); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NOT_39);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NOT_39, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 14 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9296:10: this_BAND_40= RULE_BAND
            	            {
            	            this_BAND_40=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleIfSqlValue20564); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BAND_40);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BAND_40, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 15 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9304:10: this_HASH_41= RULE_HASH
            	            {
            	            this_HASH_41=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleIfSqlValue20590); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_HASH_41);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_HASH_41, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_1_0_14()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 16 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9312:10: this_CARET_42= RULE_CARET
            	            {
            	            this_CARET_42=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleIfSqlValue20616); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_CARET_42);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_CARET_42, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_1_0_15()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 17 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9320:10: this_EQUALS_43= RULE_EQUALS
            	            {
            	            this_EQUALS_43=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleIfSqlValue20642); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_EQUALS_43);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_EQUALS_43, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_1_0_16()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 18 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9328:10: this_LESS_THAN_44= RULE_LESS_THAN
            	            {
            	            this_LESS_THAN_44=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleIfSqlValue20668); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LESS_THAN_44);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LESS_THAN_44, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_17()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 19 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9336:10: this_MORE_THAN_45= RULE_MORE_THAN
            	            {
            	            this_MORE_THAN_45=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleIfSqlValue20694); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MORE_THAN_45);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MORE_THAN_45, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_18()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 20 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9344:10: this_DOT_46= RULE_DOT
            	            {
            	            this_DOT_46=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleIfSqlValue20720); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_DOT_46);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_DOT_46, grammarAccess.getIfSqlValueAccess().getDOTTerminalRuleCall_1_0_19()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 21 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9352:10: this_AND_47= RULE_AND
            	            {
            	            this_AND_47=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleIfSqlValue20746); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_AND_47);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AND_47, grammarAccess.getIfSqlValueAccess().getANDTerminalRuleCall_1_0_20()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 22 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9360:10: this_OR_48= RULE_OR
            	            {
            	            this_OR_48=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleIfSqlValue20772); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OR_48);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OR_48, grammarAccess.getIfSqlValueAccess().getORTerminalRuleCall_1_0_21()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 23 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9368:10: this_ESC_CHAR_49= RULE_ESC_CHAR
            	            {
            	            this_ESC_CHAR_49=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleIfSqlValue20798); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ESC_CHAR_49);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ESC_CHAR_49, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_22()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 24 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9376:10: this_ON_OFF_50= RULE_ON_OFF
            	            {
            	            this_ON_OFF_50=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleIfSqlValue20824); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ON_OFF_50);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ON_OFF_50, grammarAccess.getIfSqlValueAccess().getON_OFFTerminalRuleCall_1_0_23()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 25 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9384:10: this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE
            	            {
            	            this_STATEMENT_TYPE_51=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleIfSqlValue20850); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_STATEMENT_TYPE_51);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_STATEMENT_TYPE_51, grammarAccess.getIfSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_1_0_24()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 26 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9392:10: this_MAPPING_TYPE_52= RULE_MAPPING_TYPE
            	            {
            	            this_MAPPING_TYPE_52=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleIfSqlValue20876); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MAPPING_TYPE_52);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MAPPING_TYPE_52, grammarAccess.getIfSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_25()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 27 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9400:10: this_OPTION_TYPE_53= RULE_OPTION_TYPE
            	            {
            	            this_OPTION_TYPE_53=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleIfSqlValue20902); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OPTION_TYPE_53);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OPTION_TYPE_53, grammarAccess.getIfSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_26()); 
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop262;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSqlValue"


    // $ANTLR start "entryRuleIfMetaSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9415:1: entryRuleIfMetaSql returns [EObject current=null] : iv_ruleIfMetaSql= ruleIfMetaSql EOF ;
    public final EObject entryRuleIfMetaSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfMetaSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9416:2: (iv_ruleIfMetaSql= ruleIfMetaSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9417:2: iv_ruleIfMetaSql= ruleIfMetaSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfMetaSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfMetaSql_in_entryRuleIfMetaSql20950);
            iv_ruleIfMetaSql=ruleIfMetaSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfMetaSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfMetaSql20960); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfMetaSql"


    // $ANTLR start "ruleIfMetaSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9424:1: ruleIfMetaSql returns [EObject current=null] : ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) ) ;
    public final EObject ruleIfMetaSql() throws RecognitionException {
        EObject current = null;

        Token this_WS_0=null;
        Token this_BOR_2=null;
        Token lv_type_4_0=null;
        Token this_BOR_6=null;
        Token this_BOR_8=null;
        Token lv_type_10_0=null;
        Token this_BOR_12=null;
        Token lv_type_14_0=null;
        Token this_BOR_16=null;
        EObject lv_ifs_1_0 = null;

        EObject lv_ifs_3_0 = null;

        EObject lv_cond_5_0 = null;

        EObject lv_ifs_7_0 = null;

        EObject lv_ifs_9_0 = null;

        EObject lv_ifs_11_0 = null;

        EObject lv_ifs_13_0 = null;

        EObject lv_ifs_15_0 = null;

        EObject lv_ifs_17_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9427:28: ( ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9428:1: ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9428:1: ( (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* ) | ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* ) | ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* ) | ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* ) )
            int alt267=4;
            switch ( input.LA(1) ) {
            case RULE_WS:
                {
                alt267=1;
                }
                break;
            case RULE_QUESTI:
                {
                alt267=2;
                }
                break;
            case RULE_BAND:
                {
                alt267=3;
                }
                break;
            case RULE_BOR:
                {
                alt267=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;
            }

            switch (alt267) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9428:2: (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9428:2: (this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9428:3: this_WS_0= RULE_WS ( (lv_ifs_1_0= ruleIfSql ) ) (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )*
                    {
                    this_WS_0=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfMetaSql20997); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_0, grammarAccess.getIfMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9432:1: ( (lv_ifs_1_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9433:1: (lv_ifs_1_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9433:1: (lv_ifs_1_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9434:3: lv_ifs_1_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21017);
                    lv_ifs_1_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_1_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9450:2: (this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) ) )*
                    loop263:
                    do {
                        int alt263=2;
                        int LA263_0 = input.LA(1);

                        if ( (LA263_0==RULE_BOR) ) {
                            alt263=1;
                        }


                        switch (alt263) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9450:3: this_BOR_2= RULE_BOR ( (lv_ifs_3_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_2=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21029); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_2, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9454:1: ( (lv_ifs_3_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9455:1: (lv_ifs_3_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9455:1: (lv_ifs_3_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9456:3: lv_ifs_3_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21049);
                    	    lv_ifs_3_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_3_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop263;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9473:6: ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9473:6: ( ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9473:7: ( (lv_type_4_0= RULE_QUESTI ) ) ( (lv_cond_5_0= ruleIfSqlCond ) ) this_BOR_6= RULE_BOR ( (lv_ifs_7_0= ruleIfSql ) ) (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9473:7: ( (lv_type_4_0= RULE_QUESTI ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9474:1: (lv_type_4_0= RULE_QUESTI )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9474:1: (lv_type_4_0= RULE_QUESTI )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9475:3: lv_type_4_0= RULE_QUESTI
                    {
                    lv_type_4_0=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleIfMetaSql21076); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_4_0, grammarAccess.getIfMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_4_0, 
                              		"QUESTI");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9491:2: ( (lv_cond_5_0= ruleIfSqlCond ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9492:1: (lv_cond_5_0= ruleIfSqlCond )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9492:1: (lv_cond_5_0= ruleIfSqlCond )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9493:3: lv_cond_5_0= ruleIfSqlCond
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSqlCond_in_ruleIfMetaSql21102);
                    lv_cond_5_0=ruleIfSqlCond();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		set(
                             			current, 
                             			"cond",
                              		lv_cond_5_0, 
                              		"IfSqlCond");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_BOR_6=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOR_6, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9513:1: ( (lv_ifs_7_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9514:1: (lv_ifs_7_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9514:1: (lv_ifs_7_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9515:3: lv_ifs_7_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21133);
                    lv_ifs_7_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_7_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9531:2: (this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) ) )*
                    loop264:
                    do {
                        int alt264=2;
                        int LA264_0 = input.LA(1);

                        if ( (LA264_0==RULE_BOR) ) {
                            alt264=1;
                        }


                        switch (alt264) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9531:3: this_BOR_8= RULE_BOR ( (lv_ifs_9_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_8=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21145); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_8, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9535:1: ( (lv_ifs_9_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9536:1: (lv_ifs_9_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9536:1: (lv_ifs_9_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9537:3: lv_ifs_9_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21165);
                    	    lv_ifs_9_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_9_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop264;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9554:6: ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9554:6: ( ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9554:7: ( (lv_type_10_0= RULE_BAND ) ) ( (lv_ifs_11_0= ruleIfSql ) ) (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9554:7: ( (lv_type_10_0= RULE_BAND ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9555:1: (lv_type_10_0= RULE_BAND )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9555:1: (lv_type_10_0= RULE_BAND )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9556:3: lv_type_10_0= RULE_BAND
                    {
                    lv_type_10_0=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleIfMetaSql21192); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_10_0, grammarAccess.getIfMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_10_0, 
                              		"BAND");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9572:2: ( (lv_ifs_11_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9573:1: (lv_ifs_11_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9573:1: (lv_ifs_11_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9574:3: lv_ifs_11_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21218);
                    lv_ifs_11_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_11_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9590:2: (this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) ) )*
                    loop265:
                    do {
                        int alt265=2;
                        int LA265_0 = input.LA(1);

                        if ( (LA265_0==RULE_BOR) ) {
                            alt265=1;
                        }


                        switch (alt265) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9590:3: this_BOR_12= RULE_BOR ( (lv_ifs_13_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_12=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21230); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_12, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9594:1: ( (lv_ifs_13_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9595:1: (lv_ifs_13_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9595:1: (lv_ifs_13_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9596:3: lv_ifs_13_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21250);
                    	    lv_ifs_13_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_13_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop265;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9613:6: ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9613:6: ( ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )* )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9613:7: ( (lv_type_14_0= RULE_BOR ) ) ( (lv_ifs_15_0= ruleIfSql ) ) (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )*
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9613:7: ( (lv_type_14_0= RULE_BOR ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9614:1: (lv_type_14_0= RULE_BOR )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9614:1: (lv_type_14_0= RULE_BOR )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9615:3: lv_type_14_0= RULE_BOR
                    {
                    lv_type_14_0=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21277); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_type_14_0, grammarAccess.getIfMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"type",
                              		lv_type_14_0, 
                              		"BOR");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9631:2: ( (lv_ifs_15_0= ruleIfSql ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9632:1: (lv_ifs_15_0= ruleIfSql )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9632:1: (lv_ifs_15_0= ruleIfSql )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9633:3: lv_ifs_15_0= ruleIfSql
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21303);
                    lv_ifs_15_0=ruleIfSql();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                      	        }
                             		add(
                             			current, 
                             			"ifs",
                              		lv_ifs_15_0, 
                              		"IfSql");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9649:2: (this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) ) )*
                    loop266:
                    do {
                        int alt266=2;
                        int LA266_0 = input.LA(1);

                        if ( (LA266_0==RULE_BOR) ) {
                            alt266=1;
                        }


                        switch (alt266) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9649:3: this_BOR_16= RULE_BOR ( (lv_ifs_17_0= ruleIfSql ) )
                    	    {
                    	    this_BOR_16=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleIfMetaSql21315); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_BOR_16, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9653:1: ( (lv_ifs_17_0= ruleIfSql ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9654:1: (lv_ifs_17_0= ruleIfSql )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9654:1: (lv_ifs_17_0= ruleIfSql )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9655:3: lv_ifs_17_0= ruleIfSql
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleIfSql_in_ruleIfMetaSql21335);
                    	    lv_ifs_17_0=ruleIfSql();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifs",
                    	              		lv_ifs_17_0, 
                    	              		"IfSql");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop266;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfMetaSql"


    // $ANTLR start "entryRuleIfSqlCond"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9679:1: entryRuleIfSqlCond returns [EObject current=null] : iv_ruleIfSqlCond= ruleIfSqlCond EOF ;
    public final EObject entryRuleIfSqlCond() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfSqlCond = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9680:2: (iv_ruleIfSqlCond= ruleIfSqlCond EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9681:2: iv_ruleIfSqlCond= ruleIfSqlCond EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlCondRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlCond_in_entryRuleIfSqlCond21374);
            iv_ruleIfSqlCond=ruleIfSqlCond();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSqlCond; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSqlCond21384); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSqlCond"


    // $ANTLR start "ruleIfSqlCond"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9688:1: ruleIfSqlCond returns [EObject current=null] : ( (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )* ) ;
    public final EObject ruleIfSqlCond() throws RecognitionException {
        EObject current = null;

        Token this_WS_0=null;
        Token this_WS_2=null;
        Token lv_oper_3_1=null;
        Token lv_oper_3_2=null;
        Token this_WS_4=null;
        Token this_WS_6=null;
        EObject lv_bool1_1_0 = null;

        EObject lv_bool2_5_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9691:28: ( ( (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9692:1: ( (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9692:1: ( (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9692:2: (this_WS_0= RULE_WS )* ( (lv_bool1_1_0= ruleIfSqlBool ) ) (this_WS_2= RULE_WS )* ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9692:2: (this_WS_0= RULE_WS )*
            loop268:
            do {
                int alt268=2;
                int LA268_0 = input.LA(1);

                if ( (LA268_0==RULE_WS) ) {
                    alt268=1;
                }


                switch (alt268) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9692:3: this_WS_0= RULE_WS
            	    {
            	    this_WS_0=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlCond21421); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_0, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_0()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop268;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9696:3: ( (lv_bool1_1_0= ruleIfSqlBool ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9697:1: (lv_bool1_1_0= ruleIfSqlBool )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9697:1: (lv_bool1_1_0= ruleIfSqlBool )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9698:3: lv_bool1_1_0= ruleIfSqlBool
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool1IfSqlBoolParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlBool_in_ruleIfSqlCond21443);
            lv_bool1_1_0=ruleIfSqlBool();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
              	        }
                     		set(
                     			current, 
                     			"bool1",
                      		lv_bool1_1_0, 
                      		"IfSqlBool");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9714:2: (this_WS_2= RULE_WS )*
            loop269:
            do {
                int alt269=2;
                int LA269_0 = input.LA(1);

                if ( (LA269_0==RULE_WS) ) {
                    alt269=1;
                }


                switch (alt269) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9714:3: this_WS_2= RULE_WS
            	    {
            	    this_WS_2=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlCond21455); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_2, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_2()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop269;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9718:3: ( ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )* )*
            loop273:
            do {
                int alt273=2;
                int LA273_0 = input.LA(1);

                if ( ((LA273_0>=RULE_AND && LA273_0<=RULE_OR)) ) {
                    alt273=1;
                }


                switch (alt273) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9718:4: ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) ) (this_WS_4= RULE_WS )* ( (lv_bool2_5_0= ruleIfSqlBool ) ) (this_WS_6= RULE_WS )*
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9718:4: ( ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9719:1: ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9719:1: ( (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9720:1: (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9720:1: (lv_oper_3_1= RULE_AND | lv_oper_3_2= RULE_OR )
            	    int alt270=2;
            	    int LA270_0 = input.LA(1);

            	    if ( (LA270_0==RULE_AND) ) {
            	        alt270=1;
            	    }
            	    else if ( (LA270_0==RULE_OR) ) {
            	        alt270=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 270, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt270) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9721:3: lv_oper_3_1= RULE_AND
            	            {
            	            lv_oper_3_1=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleIfSqlCond21476); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_oper_3_1, grammarAccess.getIfSqlCondAccess().getOperANDTerminalRuleCall_3_0_0_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getIfSqlCondRule());
            	              	        }
            	                     		addWithLastConsumed(
            	                     			current, 
            	                     			"oper",
            	                      		lv_oper_3_1, 
            	                      		"AND");
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9736:8: lv_oper_3_2= RULE_OR
            	            {
            	            lv_oper_3_2=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleIfSqlCond21496); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_oper_3_2, grammarAccess.getIfSqlCondAccess().getOperORTerminalRuleCall_3_0_0_1()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getIfSqlCondRule());
            	              	        }
            	                     		addWithLastConsumed(
            	                     			current, 
            	                     			"oper",
            	                      		lv_oper_3_2, 
            	                      		"OR");
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9754:2: (this_WS_4= RULE_WS )*
            	    loop271:
            	    do {
            	        int alt271=2;
            	        int LA271_0 = input.LA(1);

            	        if ( (LA271_0==RULE_WS) ) {
            	            alt271=1;
            	        }


            	        switch (alt271) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9754:3: this_WS_4= RULE_WS
            	    	    {
            	    	    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlCond21516); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_4, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_1()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop271;
            	        }
            	    } while (true);

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9758:3: ( (lv_bool2_5_0= ruleIfSqlBool ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9759:1: (lv_bool2_5_0= ruleIfSqlBool )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9759:1: (lv_bool2_5_0= ruleIfSqlBool )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9760:3: lv_bool2_5_0= ruleIfSqlBool
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool2IfSqlBoolParserRuleCall_3_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleIfSqlBool_in_ruleIfSqlCond21538);
            	    lv_bool2_5_0=ruleIfSqlBool();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"bool2",
            	              		lv_bool2_5_0, 
            	              		"IfSqlBool");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9776:2: (this_WS_6= RULE_WS )*
            	    loop272:
            	    do {
            	        int alt272=2;
            	        int LA272_0 = input.LA(1);

            	        if ( (LA272_0==RULE_WS) ) {
            	            alt272=1;
            	        }


            	        switch (alt272) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9776:3: this_WS_6= RULE_WS
            	    	    {
            	    	    this_WS_6=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleIfSqlCond21550); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_6, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_3()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop272;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop273;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSqlCond"


    // $ANTLR start "entryRuleIfSqlBool"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9788:1: entryRuleIfSqlBool returns [EObject current=null] : iv_ruleIfSqlBool= ruleIfSqlBool EOF ;
    public final EObject entryRuleIfSqlBool() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfSqlBool = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9789:2: (iv_ruleIfSqlBool= ruleIfSqlBool EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9790:2: iv_ruleIfSqlBool= ruleIfSqlBool EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfSqlBoolRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIfSqlBool_in_entryRuleIfSqlBool21589);
            iv_ruleIfSqlBool=ruleIfSqlBool();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfSqlBool; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIfSqlBool21599); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfSqlBool"


    // $ANTLR start "ruleIfSqlBool"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9797:1: ruleIfSqlBool returns [EObject current=null] : ( ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) ) | ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN ) ) ;
    public final EObject ruleIfSqlBool() throws RecognitionException {
        EObject current = null;

        Token lv_not_0_0=null;
        Token this_STRING_1=null;
        Token lv_not_3_0=null;
        Token this_COLON_4=null;
        Token lv_not_6_0=null;
        Token this_LPAREN_7=null;
        Token this_RPAREN_9=null;
        EObject lv_cnst_2_0 = null;

        EObject lv_ident_5_0 = null;

        EObject lv_cond_8_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9800:28: ( ( ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) ) | ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9801:1: ( ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) ) | ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9801:1: ( ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) ) | ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN ) )
            int alt277=3;
            switch ( input.LA(1) ) {
            case RULE_NOT:
                {
                switch ( input.LA(2) ) {
                case RULE_COLON:
                    {
                    alt277=2;
                    }
                    break;
                case RULE_STRING:
                    {
                    alt277=1;
                    }
                    break;
                case RULE_LPAREN:
                    {
                    alt277=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 277, 1, input);

                    throw nvae;
                }

                }
                break;
            case RULE_STRING:
                {
                alt277=1;
                }
                break;
            case RULE_COLON:
                {
                alt277=2;
                }
                break;
            case RULE_LPAREN:
                {
                alt277=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 277, 0, input);

                throw nvae;
            }

            switch (alt277) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9801:2: ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9801:2: ( ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9801:3: ( (lv_not_0_0= RULE_NOT ) )? this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9801:3: ( (lv_not_0_0= RULE_NOT ) )?
                    int alt274=2;
                    int LA274_0 = input.LA(1);

                    if ( (LA274_0==RULE_NOT) ) {
                        alt274=1;
                    }
                    switch (alt274) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9802:1: (lv_not_0_0= RULE_NOT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9802:1: (lv_not_0_0= RULE_NOT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9803:3: lv_not_0_0= RULE_NOT
                            {
                            lv_not_0_0=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlBool21642); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_not_0_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_0_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIfSqlBoolRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"not",
                                      		true, 
                                      		"NOT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    this_STRING_1=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleIfSqlBool21659); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_1, grammarAccess.getIfSqlBoolAccess().getSTRINGTerminalRuleCall_0_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9823:1: ( (lv_cnst_2_0= ruleConstant ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9824:1: (lv_cnst_2_0= ruleConstant )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9824:1: (lv_cnst_2_0= ruleConstant )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9825:3: lv_cnst_2_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCnstConstantParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstant_in_ruleIfSqlBool21679);
                    lv_cnst_2_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
                      	        }
                             		set(
                             			current, 
                             			"cnst",
                              		lv_cnst_2_0, 
                              		"Constant");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9842:6: ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9842:6: ( ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9842:7: ( (lv_not_3_0= RULE_NOT ) )? this_COLON_4= RULE_COLON ( (lv_ident_5_0= ruleIdentifier ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9842:7: ( (lv_not_3_0= RULE_NOT ) )?
                    int alt275=2;
                    int LA275_0 = input.LA(1);

                    if ( (LA275_0==RULE_NOT) ) {
                        alt275=1;
                    }
                    switch (alt275) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9843:1: (lv_not_3_0= RULE_NOT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9843:1: (lv_not_3_0= RULE_NOT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9844:3: lv_not_3_0= RULE_NOT
                            {
                            lv_not_3_0=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlBool21704); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_not_3_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_1_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIfSqlBoolRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"not",
                                      		true, 
                                      		"NOT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    this_COLON_4=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleIfSqlBool21721); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_4, grammarAccess.getIfSqlBoolAccess().getCOLONTerminalRuleCall_1_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9864:1: ( (lv_ident_5_0= ruleIdentifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9865:1: (lv_ident_5_0= ruleIdentifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9865:1: (lv_ident_5_0= ruleIdentifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9866:3: lv_ident_5_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getIdentIdentifierParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_ruleIfSqlBool21741);
                    lv_ident_5_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
                      	        }
                             		set(
                             			current, 
                             			"ident",
                              		lv_ident_5_0, 
                              		"Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9883:6: ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9883:6: ( ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9883:7: ( (lv_not_6_0= RULE_NOT ) )? this_LPAREN_7= RULE_LPAREN ( (lv_cond_8_0= ruleIfSqlCond ) ) this_RPAREN_9= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9883:7: ( (lv_not_6_0= RULE_NOT ) )?
                    int alt276=2;
                    int LA276_0 = input.LA(1);

                    if ( (LA276_0==RULE_NOT) ) {
                        alt276=1;
                    }
                    switch (alt276) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9884:1: (lv_not_6_0= RULE_NOT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9884:1: (lv_not_6_0= RULE_NOT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9885:3: lv_not_6_0= RULE_NOT
                            {
                            lv_not_6_0=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleIfSqlBool21766); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_not_6_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_2_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIfSqlBoolRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"not",
                                      		true, 
                                      		"NOT");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    this_LPAREN_7=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleIfSqlBool21783); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_7, grammarAccess.getIfSqlBoolAccess().getLPARENTerminalRuleCall_2_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9905:1: ( (lv_cond_8_0= ruleIfSqlCond ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9906:1: (lv_cond_8_0= ruleIfSqlCond )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9906:1: (lv_cond_8_0= ruleIfSqlCond )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9907:3: lv_cond_8_0= ruleIfSqlCond
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCondIfSqlCondParserRuleCall_2_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIfSqlCond_in_ruleIfSqlBool21803);
                    lv_cond_8_0=ruleIfSqlCond();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
                      	        }
                             		set(
                             			current, 
                             			"cond",
                              		lv_cond_8_0, 
                              		"IfSqlCond");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_RPAREN_9=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleIfSqlBool21814); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_9, grammarAccess.getIfSqlBoolAccess().getRPARENTerminalRuleCall_2_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfSqlBool"


    // $ANTLR start "entryRuleOrdSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9935:1: entryRuleOrdSql returns [EObject current=null] : iv_ruleOrdSql= ruleOrdSql EOF ;
    public final EObject entryRuleOrdSql() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrdSql = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9936:2: (iv_ruleOrdSql= ruleOrdSql EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9937:2: iv_ruleOrdSql= ruleOrdSql EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdSqlRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleOrdSql_in_entryRuleOrdSql21850);
            iv_ruleOrdSql=ruleOrdSql();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdSql; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleOrdSql21860); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdSql"


    // $ANTLR start "ruleOrdSql"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9944:1: ruleOrdSql returns [EObject current=null] : ( (lv_sqls_0_0= ruleOrdSql2 ) )+ ;
    public final EObject ruleOrdSql() throws RecognitionException {
        EObject current = null;

        EObject lv_sqls_0_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9947:28: ( ( (lv_sqls_0_0= ruleOrdSql2 ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9948:1: ( (lv_sqls_0_0= ruleOrdSql2 ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9948:1: ( (lv_sqls_0_0= ruleOrdSql2 ) )+
            int cnt278=0;
            loop278:
            do {
                int alt278=2;
                int LA278_0 = input.LA(1);

                if ( ((LA278_0>=RULE_WS && LA278_0<=RULE_LBRACE)||(LA278_0>=RULE_QUESTI && LA278_0<=RULE_OPTION_TYPE)) ) {
                    alt278=1;
                }


                switch (alt278) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9949:1: (lv_sqls_0_0= ruleOrdSql2 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9949:1: (lv_sqls_0_0= ruleOrdSql2 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9950:3: lv_sqls_0_0= ruleOrdSql2
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOrdSqlAccess().getSqlsOrdSql2ParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleOrdSql2_in_ruleOrdSql21905);
            	    lv_sqls_0_0=ruleOrdSql2();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOrdSqlRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"sqls",
            	              		lv_sqls_0_0, 
            	              		"OrdSql2");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt278 >= 1 ) break loop278;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(278, input);
                        throw eee;
                }
                cnt278++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdSql"


    // $ANTLR start "entryRuleOrdSql2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9974:1: entryRuleOrdSql2 returns [EObject current=null] : iv_ruleOrdSql2= ruleOrdSql2 EOF ;
    public final EObject entryRuleOrdSql2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrdSql2 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9975:2: (iv_ruleOrdSql2= ruleOrdSql2 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9976:2: iv_ruleOrdSql2= ruleOrdSql2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdSql2Rule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleOrdSql2_in_entryRuleOrdSql221941);
            iv_ruleOrdSql2=ruleOrdSql2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdSql2; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleOrdSql221951); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdSql2"


    // $ANTLR start "ruleOrdSql2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9983:1: ruleOrdSql2 returns [EObject current=null] : ( ( (lv_value_0_0= ruleOrdSqlValue ) ) | (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) ) | (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) ) ) ;
    public final EObject ruleOrdSql2() throws RecognitionException {
        EObject current = null;

        Token this_STRING_1=null;
        Token this_COLON_3=null;
        Token this_PERCENT_5=null;
        AntlrDatatypeRuleToken lv_value_0_0 = null;

        EObject lv_cnst_2_0 = null;

        EObject lv_ident_4_0 = null;

        EObject lv_dbcol_6_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9986:28: ( ( ( (lv_value_0_0= ruleOrdSqlValue ) ) | (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) ) | (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9987:1: ( ( (lv_value_0_0= ruleOrdSqlValue ) ) | (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) ) | (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9987:1: ( ( (lv_value_0_0= ruleOrdSqlValue ) ) | (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) ) | (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) ) | (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) ) )
            int alt279=4;
            switch ( input.LA(1) ) {
            case RULE_WS:
            case RULE_IDENT:
            case RULE_LPAREN:
            case RULE_NUMBER:
            case RULE_RPAREN:
            case RULE_PLUS:
            case RULE_MINUS:
            case RULE_SEMICOLON:
            case RULE_REST:
            case RULE_IDENT_DOT:
            case RULE_COMMA:
            case RULE_LBRACE:
            case RULE_QUESTI:
            case RULE_NOT:
            case RULE_BAND:
            case RULE_BOR:
            case RULE_HASH:
            case RULE_AT:
            case RULE_CARET:
            case RULE_EQUALS:
            case RULE_LESS_THAN:
            case RULE_MORE_THAN:
            case RULE_DOT:
            case RULE_AND:
            case RULE_OR:
            case RULE_ESC_CHAR:
            case RULE_ON_OFF:
            case RULE_STATEMENT_TYPE:
            case RULE_MAPPING_TYPE:
            case RULE_OPTION_TYPE:
                {
                alt279=1;
                }
                break;
            case RULE_STRING:
                {
                alt279=2;
                }
                break;
            case RULE_COLON:
                {
                alt279=3;
                }
                break;
            case RULE_PERCENT:
                {
                alt279=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 279, 0, input);

                throw nvae;
            }

            switch (alt279) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9987:2: ( (lv_value_0_0= ruleOrdSqlValue ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9987:2: ( (lv_value_0_0= ruleOrdSqlValue ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9988:1: (lv_value_0_0= ruleOrdSqlValue )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9988:1: (lv_value_0_0= ruleOrdSqlValue )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9989:3: lv_value_0_0= ruleOrdSqlValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOrdSql2Access().getValueOrdSqlValueParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleOrdSqlValue_in_ruleOrdSql221997);
                    lv_value_0_0=ruleOrdSqlValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_0_0, 
                              		"OrdSqlValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10006:6: (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10006:6: (this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10006:7: this_STRING_1= RULE_STRING ( (lv_cnst_2_0= ruleConstant ) )
                    {
                    this_STRING_1=(Token)match(input,RULE_STRING,FollowSets001.FOLLOW_RULE_STRING_in_ruleOrdSql222015); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_1, grammarAccess.getOrdSql2Access().getSTRINGTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10010:1: ( (lv_cnst_2_0= ruleConstant ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10011:1: (lv_cnst_2_0= ruleConstant )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10011:1: (lv_cnst_2_0= ruleConstant )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10012:3: lv_cnst_2_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOrdSql2Access().getCnstConstantParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleConstant_in_ruleOrdSql222035);
                    lv_cnst_2_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
                      	        }
                             		set(
                             			current, 
                             			"cnst",
                              		lv_cnst_2_0, 
                              		"Constant");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10029:6: (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10029:6: (this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10029:7: this_COLON_3= RULE_COLON ( (lv_ident_4_0= ruleIdentifier ) )
                    {
                    this_COLON_3=(Token)match(input,RULE_COLON,FollowSets001.FOLLOW_RULE_COLON_in_ruleOrdSql222054); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_3, grammarAccess.getOrdSql2Access().getCOLONTerminalRuleCall_2_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10033:1: ( (lv_ident_4_0= ruleIdentifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10034:1: (lv_ident_4_0= ruleIdentifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10034:1: (lv_ident_4_0= ruleIdentifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10035:3: lv_ident_4_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOrdSql2Access().getIdentIdentifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_ruleOrdSql222074);
                    lv_ident_4_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
                      	        }
                             		set(
                             			current, 
                             			"ident",
                              		lv_ident_4_0, 
                              		"Identifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10052:6: (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10052:6: (this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10052:7: this_PERCENT_5= RULE_PERCENT ( (lv_dbcol_6_0= ruleDatabaseColumn ) )
                    {
                    this_PERCENT_5=(Token)match(input,RULE_PERCENT,FollowSets001.FOLLOW_RULE_PERCENT_in_ruleOrdSql222093); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PERCENT_5, grammarAccess.getOrdSql2Access().getPERCENTTerminalRuleCall_3_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10056:1: ( (lv_dbcol_6_0= ruleDatabaseColumn ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10057:1: (lv_dbcol_6_0= ruleDatabaseColumn )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10057:1: (lv_dbcol_6_0= ruleDatabaseColumn )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10058:3: lv_dbcol_6_0= ruleDatabaseColumn
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOrdSql2Access().getDbcolDatabaseColumnParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleDatabaseColumn_in_ruleOrdSql222113);
                    lv_dbcol_6_0=ruleDatabaseColumn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
                      	        }
                             		set(
                             			current, 
                             			"dbcol",
                              		lv_dbcol_6_0, 
                              		"DatabaseColumn");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdSql2"


    // $ANTLR start "entryRuleOrdSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10082:1: entryRuleOrdSqlValue returns [String current=null] : iv_ruleOrdSqlValue= ruleOrdSqlValue EOF ;
    public final String entryRuleOrdSqlValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrdSqlValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10083:2: (iv_ruleOrdSqlValue= ruleOrdSqlValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10084:2: iv_ruleOrdSqlValue= ruleOrdSqlValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdSqlValueRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleOrdSqlValue_in_entryRuleOrdSqlValue22151);
            iv_ruleOrdSqlValue=ruleOrdSqlValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdSqlValue.getText(); 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleOrdSqlValue22162); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdSqlValue"


    // $ANTLR start "ruleOrdSqlValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10091:1: ruleOrdSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )* ) ;
    public final AntlrDatatypeRuleToken ruleOrdSqlValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_WS_4=null;
        Token this_SEMICOLON_5=null;
        Token this_COMMA_6=null;
        Token this_MINUS_7=null;
        Token this_PLUS_8=null;
        Token this_LPAREN_9=null;
        Token this_RPAREN_10=null;
        Token this_LBRACE_11=null;
        Token this_QUESTI_12=null;
        Token this_NOT_13=null;
        Token this_BAND_14=null;
        Token this_BOR_15=null;
        Token this_HASH_16=null;
        Token this_AT_17=null;
        Token this_CARET_18=null;
        Token this_EQUALS_19=null;
        Token this_LESS_THAN_20=null;
        Token this_MORE_THAN_21=null;
        Token this_DOT_22=null;
        Token this_AND_23=null;
        Token this_OR_24=null;
        Token this_ESC_CHAR_25=null;
        Token this_ON_OFF_26=null;
        Token this_STATEMENT_TYPE_27=null;
        Token this_MAPPING_TYPE_28=null;
        Token this_OPTION_TYPE_29=null;
        Token this_REST_30=null;
        Token this_IDENT_DOT_31=null;
        Token this_IDENT_32=null;
        Token this_NUMBER_33=null;
        Token this_WS_34=null;
        Token this_SEMICOLON_35=null;
        Token this_COMMA_36=null;
        Token this_MINUS_37=null;
        Token this_PLUS_38=null;
        Token this_LPAREN_39=null;
        Token this_RPAREN_40=null;
        Token this_LBRACE_41=null;
        Token this_QUESTI_42=null;
        Token this_NOT_43=null;
        Token this_BAND_44=null;
        Token this_BOR_45=null;
        Token this_HASH_46=null;
        Token this_AT_47=null;
        Token this_CARET_48=null;
        Token this_EQUALS_49=null;
        Token this_LESS_THAN_50=null;
        Token this_MORE_THAN_51=null;
        Token this_DOT_52=null;
        Token this_AND_53=null;
        Token this_OR_54=null;
        Token this_ESC_CHAR_55=null;
        Token this_ON_OFF_56=null;
        Token this_STATEMENT_TYPE_57=null;
        Token this_MAPPING_TYPE_58=null;
        Token this_OPTION_TYPE_59=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10094:28: ( ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10095:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10095:1: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10095:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE ) ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10095:2: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_SEMICOLON_5= RULE_SEMICOLON | this_COMMA_6= RULE_COMMA | this_MINUS_7= RULE_MINUS | this_PLUS_8= RULE_PLUS | this_LPAREN_9= RULE_LPAREN | this_RPAREN_10= RULE_RPAREN | this_LBRACE_11= RULE_LBRACE | this_QUESTI_12= RULE_QUESTI | this_NOT_13= RULE_NOT | this_BAND_14= RULE_BAND | this_BOR_15= RULE_BOR | this_HASH_16= RULE_HASH | this_AT_17= RULE_AT | this_CARET_18= RULE_CARET | this_EQUALS_19= RULE_EQUALS | this_LESS_THAN_20= RULE_LESS_THAN | this_MORE_THAN_21= RULE_MORE_THAN | this_DOT_22= RULE_DOT | this_AND_23= RULE_AND | this_OR_24= RULE_OR | this_ESC_CHAR_25= RULE_ESC_CHAR | this_ON_OFF_26= RULE_ON_OFF | this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_28= RULE_MAPPING_TYPE | this_OPTION_TYPE_29= RULE_OPTION_TYPE )
            int alt280=30;
            switch ( input.LA(1) ) {
            case RULE_REST:
                {
                alt280=1;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt280=2;
                }
                break;
            case RULE_IDENT:
                {
                alt280=3;
                }
                break;
            case RULE_NUMBER:
                {
                alt280=4;
                }
                break;
            case RULE_WS:
                {
                alt280=5;
                }
                break;
            case RULE_SEMICOLON:
                {
                alt280=6;
                }
                break;
            case RULE_COMMA:
                {
                alt280=7;
                }
                break;
            case RULE_MINUS:
                {
                alt280=8;
                }
                break;
            case RULE_PLUS:
                {
                alt280=9;
                }
                break;
            case RULE_LPAREN:
                {
                alt280=10;
                }
                break;
            case RULE_RPAREN:
                {
                alt280=11;
                }
                break;
            case RULE_LBRACE:
                {
                alt280=12;
                }
                break;
            case RULE_QUESTI:
                {
                alt280=13;
                }
                break;
            case RULE_NOT:
                {
                alt280=14;
                }
                break;
            case RULE_BAND:
                {
                alt280=15;
                }
                break;
            case RULE_BOR:
                {
                alt280=16;
                }
                break;
            case RULE_HASH:
                {
                alt280=17;
                }
                break;
            case RULE_AT:
                {
                alt280=18;
                }
                break;
            case RULE_CARET:
                {
                alt280=19;
                }
                break;
            case RULE_EQUALS:
                {
                alt280=20;
                }
                break;
            case RULE_LESS_THAN:
                {
                alt280=21;
                }
                break;
            case RULE_MORE_THAN:
                {
                alt280=22;
                }
                break;
            case RULE_DOT:
                {
                alt280=23;
                }
                break;
            case RULE_AND:
                {
                alt280=24;
                }
                break;
            case RULE_OR:
                {
                alt280=25;
                }
                break;
            case RULE_ESC_CHAR:
                {
                alt280=26;
                }
                break;
            case RULE_ON_OFF:
                {
                alt280=27;
                }
                break;
            case RULE_STATEMENT_TYPE:
                {
                alt280=28;
                }
                break;
            case RULE_MAPPING_TYPE:
                {
                alt280=29;
                }
                break;
            case RULE_OPTION_TYPE:
                {
                alt280=30;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 280, 0, input);

                throw nvae;
            }

            switch (alt280) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10095:7: this_REST_0= RULE_REST
                    {
                    this_REST_0=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleOrdSqlValue22203); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_REST_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_REST_0, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10103:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                    {
                    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleOrdSqlValue22229); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_DOT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_DOT_1, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10111:10: this_IDENT_2= RULE_IDENT
                    {
                    this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleOrdSqlValue22255); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_2, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10119:10: this_NUMBER_3= RULE_NUMBER
                    {
                    this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleOrdSqlValue22281); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_3, grammarAccess.getOrdSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10127:10: this_WS_4= RULE_WS
                    {
                    this_WS_4=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleOrdSqlValue22307); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_WS_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_WS_4, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_0_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10135:10: this_SEMICOLON_5= RULE_SEMICOLON
                    {
                    this_SEMICOLON_5=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleOrdSqlValue22333); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SEMICOLON_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_SEMICOLON_5, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10143:10: this_COMMA_6= RULE_COMMA
                    {
                    this_COMMA_6=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleOrdSqlValue22359); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_COMMA_6);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_6, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10151:10: this_MINUS_7= RULE_MINUS
                    {
                    this_MINUS_7=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleOrdSqlValue22385); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MINUS_7);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MINUS_7, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10159:10: this_PLUS_8= RULE_PLUS
                    {
                    this_PLUS_8=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleOrdSqlValue22411); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PLUS_8);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_PLUS_8, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10167:10: this_LPAREN_9= RULE_LPAREN
                    {
                    this_LPAREN_9=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleOrdSqlValue22437); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LPAREN_9);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_9, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10175:10: this_RPAREN_10= RULE_RPAREN
                    {
                    this_RPAREN_10=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleOrdSqlValue22463); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_RPAREN_10);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_10, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10183:10: this_LBRACE_11= RULE_LBRACE
                    {
                    this_LBRACE_11=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_ruleOrdSqlValue22489); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LBRACE_11);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LBRACE_11, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_0_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10191:10: this_QUESTI_12= RULE_QUESTI
                    {
                    this_QUESTI_12=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleOrdSqlValue22515); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QUESTI_12);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_QUESTI_12, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_0_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10199:10: this_NOT_13= RULE_NOT
                    {
                    this_NOT_13=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleOrdSqlValue22541); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NOT_13);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NOT_13, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_0_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10207:10: this_BAND_14= RULE_BAND
                    {
                    this_BAND_14=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleOrdSqlValue22567); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BAND_14);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BAND_14, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_0_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10215:10: this_BOR_15= RULE_BOR
                    {
                    this_BOR_15=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleOrdSqlValue22593); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOR_15);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOR_15, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_0_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10223:10: this_HASH_16= RULE_HASH
                    {
                    this_HASH_16=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleOrdSqlValue22619); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HASH_16);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HASH_16, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_0_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10231:10: this_AT_17= RULE_AT
                    {
                    this_AT_17=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_ruleOrdSqlValue22645); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AT_17);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AT_17, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_0_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10239:10: this_CARET_18= RULE_CARET
                    {
                    this_CARET_18=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleOrdSqlValue22671); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CARET_18);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_CARET_18, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_0_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10247:10: this_EQUALS_19= RULE_EQUALS
                    {
                    this_EQUALS_19=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleOrdSqlValue22697); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EQUALS_19);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_EQUALS_19, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_0_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10255:10: this_LESS_THAN_20= RULE_LESS_THAN
                    {
                    this_LESS_THAN_20=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleOrdSqlValue22723); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_LESS_THAN_20);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LESS_THAN_20, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_0_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10263:10: this_MORE_THAN_21= RULE_MORE_THAN
                    {
                    this_MORE_THAN_21=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleOrdSqlValue22749); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MORE_THAN_21);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MORE_THAN_21, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_0_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10271:10: this_DOT_22= RULE_DOT
                    {
                    this_DOT_22=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleOrdSqlValue22775); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DOT_22);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DOT_22, grammarAccess.getOrdSqlValueAccess().getDOTTerminalRuleCall_0_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10279:10: this_AND_23= RULE_AND
                    {
                    this_AND_23=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleOrdSqlValue22801); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AND_23);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AND_23, grammarAccess.getOrdSqlValueAccess().getANDTerminalRuleCall_0_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10287:10: this_OR_24= RULE_OR
                    {
                    this_OR_24=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleOrdSqlValue22827); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OR_24);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OR_24, grammarAccess.getOrdSqlValueAccess().getORTerminalRuleCall_0_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10295:10: this_ESC_CHAR_25= RULE_ESC_CHAR
                    {
                    this_ESC_CHAR_25=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleOrdSqlValue22853); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESC_CHAR_25);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ESC_CHAR_25, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_0_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10303:10: this_ON_OFF_26= RULE_ON_OFF
                    {
                    this_ON_OFF_26=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleOrdSqlValue22879); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ON_OFF_26);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ON_OFF_26, grammarAccess.getOrdSqlValueAccess().getON_OFFTerminalRuleCall_0_26()); 
                          
                    }

                    }
                    break;
                case 28 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10311:10: this_STATEMENT_TYPE_27= RULE_STATEMENT_TYPE
                    {
                    this_STATEMENT_TYPE_27=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleOrdSqlValue22905); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STATEMENT_TYPE_27);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STATEMENT_TYPE_27, grammarAccess.getOrdSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_0_27()); 
                          
                    }

                    }
                    break;
                case 29 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10319:10: this_MAPPING_TYPE_28= RULE_MAPPING_TYPE
                    {
                    this_MAPPING_TYPE_28=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleOrdSqlValue22931); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_MAPPING_TYPE_28);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_MAPPING_TYPE_28, grammarAccess.getOrdSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_28()); 
                          
                    }

                    }
                    break;
                case 30 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10327:10: this_OPTION_TYPE_29= RULE_OPTION_TYPE
                    {
                    this_OPTION_TYPE_29=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleOrdSqlValue22957); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OPTION_TYPE_29);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OPTION_TYPE_29, grammarAccess.getOrdSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_29()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10334:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )*
            loop282:
            do {
                int alt282=2;
                alt282 = dfa282.predict(input);
                switch (alt282) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10334:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10363:27: (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE )
            	    int alt281=30;
            	    switch ( input.LA(1) ) {
            	    case RULE_REST:
            	        {
            	        alt281=1;
            	        }
            	        break;
            	    case RULE_IDENT_DOT:
            	        {
            	        alt281=2;
            	        }
            	        break;
            	    case RULE_IDENT:
            	        {
            	        alt281=3;
            	        }
            	        break;
            	    case RULE_NUMBER:
            	        {
            	        alt281=4;
            	        }
            	        break;
            	    case RULE_WS:
            	        {
            	        alt281=5;
            	        }
            	        break;
            	    case RULE_SEMICOLON:
            	        {
            	        alt281=6;
            	        }
            	        break;
            	    case RULE_COMMA:
            	        {
            	        alt281=7;
            	        }
            	        break;
            	    case RULE_MINUS:
            	        {
            	        alt281=8;
            	        }
            	        break;
            	    case RULE_PLUS:
            	        {
            	        alt281=9;
            	        }
            	        break;
            	    case RULE_LPAREN:
            	        {
            	        alt281=10;
            	        }
            	        break;
            	    case RULE_RPAREN:
            	        {
            	        alt281=11;
            	        }
            	        break;
            	    case RULE_LBRACE:
            	        {
            	        alt281=12;
            	        }
            	        break;
            	    case RULE_QUESTI:
            	        {
            	        alt281=13;
            	        }
            	        break;
            	    case RULE_NOT:
            	        {
            	        alt281=14;
            	        }
            	        break;
            	    case RULE_BAND:
            	        {
            	        alt281=15;
            	        }
            	        break;
            	    case RULE_BOR:
            	        {
            	        alt281=16;
            	        }
            	        break;
            	    case RULE_HASH:
            	        {
            	        alt281=17;
            	        }
            	        break;
            	    case RULE_AT:
            	        {
            	        alt281=18;
            	        }
            	        break;
            	    case RULE_CARET:
            	        {
            	        alt281=19;
            	        }
            	        break;
            	    case RULE_EQUALS:
            	        {
            	        alt281=20;
            	        }
            	        break;
            	    case RULE_LESS_THAN:
            	        {
            	        alt281=21;
            	        }
            	        break;
            	    case RULE_MORE_THAN:
            	        {
            	        alt281=22;
            	        }
            	        break;
            	    case RULE_DOT:
            	        {
            	        alt281=23;
            	        }
            	        break;
            	    case RULE_AND:
            	        {
            	        alt281=24;
            	        }
            	        break;
            	    case RULE_OR:
            	        {
            	        alt281=25;
            	        }
            	        break;
            	    case RULE_ESC_CHAR:
            	        {
            	        alt281=26;
            	        }
            	        break;
            	    case RULE_ON_OFF:
            	        {
            	        alt281=27;
            	        }
            	        break;
            	    case RULE_STATEMENT_TYPE:
            	        {
            	        alt281=28;
            	        }
            	        break;
            	    case RULE_MAPPING_TYPE:
            	        {
            	        alt281=29;
            	        }
            	        break;
            	    case RULE_OPTION_TYPE:
            	        {
            	        alt281=30;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 281, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt281) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10363:32: this_REST_30= RULE_REST
            	            {
            	            this_REST_30=(Token)match(input,RULE_REST,FollowSets001.FOLLOW_RULE_REST_in_ruleOrdSqlValue23219); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_REST_30);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_REST_30, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10371:10: this_IDENT_DOT_31= RULE_IDENT_DOT
            	            {
            	            this_IDENT_DOT_31=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleOrdSqlValue23245); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_DOT_31);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_DOT_31, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10379:10: this_IDENT_32= RULE_IDENT
            	            {
            	            this_IDENT_32=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleOrdSqlValue23271); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_IDENT_32);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_IDENT_32, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10387:10: this_NUMBER_33= RULE_NUMBER
            	            {
            	            this_NUMBER_33=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleOrdSqlValue23297); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NUMBER_33);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NUMBER_33, grammarAccess.getOrdSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10395:10: this_WS_34= RULE_WS
            	            {
            	            this_WS_34=(Token)match(input,RULE_WS,FollowSets001.FOLLOW_RULE_WS_in_ruleOrdSqlValue23323); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_WS_34);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_WS_34, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10403:10: this_SEMICOLON_35= RULE_SEMICOLON
            	            {
            	            this_SEMICOLON_35=(Token)match(input,RULE_SEMICOLON,FollowSets001.FOLLOW_RULE_SEMICOLON_in_ruleOrdSqlValue23349); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_SEMICOLON_35);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_SEMICOLON_35, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10411:10: this_COMMA_36= RULE_COMMA
            	            {
            	            this_COMMA_36=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleOrdSqlValue23375); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_COMMA_36);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_COMMA_36, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10419:10: this_MINUS_37= RULE_MINUS
            	            {
            	            this_MINUS_37=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleOrdSqlValue23401); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MINUS_37);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MINUS_37, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10427:10: this_PLUS_38= RULE_PLUS
            	            {
            	            this_PLUS_38=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleOrdSqlValue23427); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_PLUS_38);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_PLUS_38, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10435:10: this_LPAREN_39= RULE_LPAREN
            	            {
            	            this_LPAREN_39=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleOrdSqlValue23453); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LPAREN_39);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LPAREN_39, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10443:10: this_RPAREN_40= RULE_RPAREN
            	            {
            	            this_RPAREN_40=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleOrdSqlValue23479); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_RPAREN_40);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_RPAREN_40, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 12 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10451:10: this_LBRACE_41= RULE_LBRACE
            	            {
            	            this_LBRACE_41=(Token)match(input,RULE_LBRACE,FollowSets001.FOLLOW_RULE_LBRACE_in_ruleOrdSqlValue23505); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LBRACE_41);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LBRACE_41, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_1_0_11()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 13 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10459:10: this_QUESTI_42= RULE_QUESTI
            	            {
            	            this_QUESTI_42=(Token)match(input,RULE_QUESTI,FollowSets001.FOLLOW_RULE_QUESTI_in_ruleOrdSqlValue23531); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_QUESTI_42);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_QUESTI_42, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_1_0_12()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 14 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10467:10: this_NOT_43= RULE_NOT
            	            {
            	            this_NOT_43=(Token)match(input,RULE_NOT,FollowSets001.FOLLOW_RULE_NOT_in_ruleOrdSqlValue23557); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_NOT_43);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_NOT_43, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_1_0_13()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 15 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10475:10: this_BAND_44= RULE_BAND
            	            {
            	            this_BAND_44=(Token)match(input,RULE_BAND,FollowSets001.FOLLOW_RULE_BAND_in_ruleOrdSqlValue23583); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BAND_44);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BAND_44, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_1_0_14()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 16 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10483:10: this_BOR_45= RULE_BOR
            	            {
            	            this_BOR_45=(Token)match(input,RULE_BOR,FollowSets001.FOLLOW_RULE_BOR_in_ruleOrdSqlValue23609); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_BOR_45);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_BOR_45, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_1_0_15()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 17 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10491:10: this_HASH_46= RULE_HASH
            	            {
            	            this_HASH_46=(Token)match(input,RULE_HASH,FollowSets001.FOLLOW_RULE_HASH_in_ruleOrdSqlValue23635); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_HASH_46);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_HASH_46, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_1_0_16()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 18 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10499:10: this_AT_47= RULE_AT
            	            {
            	            this_AT_47=(Token)match(input,RULE_AT,FollowSets001.FOLLOW_RULE_AT_in_ruleOrdSqlValue23661); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_AT_47);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AT_47, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_1_0_17()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 19 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10507:10: this_CARET_48= RULE_CARET
            	            {
            	            this_CARET_48=(Token)match(input,RULE_CARET,FollowSets001.FOLLOW_RULE_CARET_in_ruleOrdSqlValue23687); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_CARET_48);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_CARET_48, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_1_0_18()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 20 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10515:10: this_EQUALS_49= RULE_EQUALS
            	            {
            	            this_EQUALS_49=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleOrdSqlValue23713); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_EQUALS_49);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_EQUALS_49, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_1_0_19()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 21 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10523:10: this_LESS_THAN_50= RULE_LESS_THAN
            	            {
            	            this_LESS_THAN_50=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleOrdSqlValue23739); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_LESS_THAN_50);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_LESS_THAN_50, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_20()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 22 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10531:10: this_MORE_THAN_51= RULE_MORE_THAN
            	            {
            	            this_MORE_THAN_51=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleOrdSqlValue23765); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MORE_THAN_51);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MORE_THAN_51, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_21()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 23 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10539:10: this_DOT_52= RULE_DOT
            	            {
            	            this_DOT_52=(Token)match(input,RULE_DOT,FollowSets001.FOLLOW_RULE_DOT_in_ruleOrdSqlValue23791); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_DOT_52);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_DOT_52, grammarAccess.getOrdSqlValueAccess().getDOTTerminalRuleCall_1_0_22()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 24 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10547:10: this_AND_53= RULE_AND
            	            {
            	            this_AND_53=(Token)match(input,RULE_AND,FollowSets001.FOLLOW_RULE_AND_in_ruleOrdSqlValue23817); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_AND_53);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AND_53, grammarAccess.getOrdSqlValueAccess().getANDTerminalRuleCall_1_0_23()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 25 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10555:10: this_OR_54= RULE_OR
            	            {
            	            this_OR_54=(Token)match(input,RULE_OR,FollowSets001.FOLLOW_RULE_OR_in_ruleOrdSqlValue23843); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OR_54);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OR_54, grammarAccess.getOrdSqlValueAccess().getORTerminalRuleCall_1_0_24()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 26 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10563:10: this_ESC_CHAR_55= RULE_ESC_CHAR
            	            {
            	            this_ESC_CHAR_55=(Token)match(input,RULE_ESC_CHAR,FollowSets001.FOLLOW_RULE_ESC_CHAR_in_ruleOrdSqlValue23869); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ESC_CHAR_55);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ESC_CHAR_55, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_25()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 27 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10571:10: this_ON_OFF_56= RULE_ON_OFF
            	            {
            	            this_ON_OFF_56=(Token)match(input,RULE_ON_OFF,FollowSets001.FOLLOW_RULE_ON_OFF_in_ruleOrdSqlValue23895); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_ON_OFF_56);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_ON_OFF_56, grammarAccess.getOrdSqlValueAccess().getON_OFFTerminalRuleCall_1_0_26()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 28 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10579:10: this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE
            	            {
            	            this_STATEMENT_TYPE_57=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets001.FOLLOW_RULE_STATEMENT_TYPE_in_ruleOrdSqlValue23921); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_STATEMENT_TYPE_57);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_STATEMENT_TYPE_57, grammarAccess.getOrdSqlValueAccess().getSTATEMENT_TYPETerminalRuleCall_1_0_27()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 29 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10587:10: this_MAPPING_TYPE_58= RULE_MAPPING_TYPE
            	            {
            	            this_MAPPING_TYPE_58=(Token)match(input,RULE_MAPPING_TYPE,FollowSets001.FOLLOW_RULE_MAPPING_TYPE_in_ruleOrdSqlValue23947); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_MAPPING_TYPE_58);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_MAPPING_TYPE_58, grammarAccess.getOrdSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_28()); 
            	                  
            	            }

            	            }
            	            break;
            	        case 30 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10595:10: this_OPTION_TYPE_59= RULE_OPTION_TYPE
            	            {
            	            this_OPTION_TYPE_59=(Token)match(input,RULE_OPTION_TYPE,FollowSets001.FOLLOW_RULE_OPTION_TYPE_in_ruleOrdSqlValue23973); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		current.merge(this_OPTION_TYPE_59);
            	                  
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_OPTION_TYPE_59, grammarAccess.getOrdSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_29()); 
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop282;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdSqlValue"


    // $ANTLR start "entryRuleColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10610:1: entryRuleColumn returns [EObject current=null] : iv_ruleColumn= ruleColumn EOF ;
    public final EObject entryRuleColumn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColumn = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10611:2: (iv_ruleColumn= ruleColumn EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10612:2: iv_ruleColumn= ruleColumn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getColumnRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleColumn_in_entryRuleColumn24021);
            iv_ruleColumn=ruleColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleColumn; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleColumn24031); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColumn"


    // $ANTLR start "ruleColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10619:1: ruleColumn returns [EObject current=null] : ( ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )* ) ;
    public final EObject ruleColumn() throws RecognitionException {
        EObject current = null;

        EObject lv_columns_0_0 = null;

        EObject lv_columns_1_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10622:28: ( ( ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10623:1: ( ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10623:1: ( ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10623:2: ( (lv_columns_0_0= ruleExtendedColumn ) ) ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10623:2: ( (lv_columns_0_0= ruleExtendedColumn ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10624:1: (lv_columns_0_0= ruleExtendedColumn )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10624:1: (lv_columns_0_0= ruleExtendedColumn )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10625:3: lv_columns_0_0= ruleExtendedColumn
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getColumnAccess().getColumnsExtendedColumnParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets001.FOLLOW_ruleExtendedColumn_in_ruleColumn24077);
            lv_columns_0_0=ruleExtendedColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getColumnRule());
              	        }
                     		add(
                     			current, 
                     			"columns",
                      		lv_columns_0_0, 
                      		"ExtendedColumn");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10641:2: ( ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn ) )*
            loop283:
            do {
                int alt283=2;
                switch ( input.LA(1) ) {
                case RULE_IDENT_DOT:
                    {
                    int LA283_2 = input.LA(2);

                    if ( (synpred6_InternalProcessorDsl()) ) {
                        alt283=1;
                    }


                    }
                    break;
                case RULE_IDENT:
                    {
                    int LA283_3 = input.LA(2);

                    if ( (synpred6_InternalProcessorDsl()) ) {
                        alt283=1;
                    }


                    }
                    break;
                case RULE_NUMBER:
                    {
                    int LA283_4 = input.LA(2);

                    if ( (synpred6_InternalProcessorDsl()) ) {
                        alt283=1;
                    }


                    }
                    break;

                }

                switch (alt283) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10641:3: ( ( ruleExtendedColumn ) )=> (lv_columns_1_0= ruleExtendedColumn )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10646:1: (lv_columns_1_0= ruleExtendedColumn )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10647:3: lv_columns_1_0= ruleExtendedColumn
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getColumnAccess().getColumnsExtendedColumnParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets001.FOLLOW_ruleExtendedColumn_in_ruleColumn24108);
            	    lv_columns_1_0=ruleExtendedColumn();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getColumnRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"columns",
            	              		lv_columns_1_0, 
            	              		"ExtendedColumn");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop283;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColumn"


    // $ANTLR start "entryRuleExtendedColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10671:1: entryRuleExtendedColumn returns [EObject current=null] : iv_ruleExtendedColumn= ruleExtendedColumn EOF ;
    public final EObject entryRuleExtendedColumn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendedColumn = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10672:2: (iv_ruleExtendedColumn= ruleExtendedColumn EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10673:2: iv_ruleExtendedColumn= ruleExtendedColumn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedColumnRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleExtendedColumn_in_entryRuleExtendedColumn24145);
            iv_ruleExtendedColumn=ruleExtendedColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedColumn; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleExtendedColumn24155); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedColumn"


    // $ANTLR start "ruleExtendedColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10680:1: ruleExtendedColumn returns [EObject current=null] : ( ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? ) ;
    public final EObject ruleExtendedColumn() throws RecognitionException {
        EObject current = null;

        Token this_LPAREN_1=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        EObject lv_col_0_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_2_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10683:28: ( ( ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10684:1: ( ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10684:1: ( ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10684:2: ( (lv_col_0_0= ruleExtendedColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10684:2: ( (lv_col_0_0= ruleExtendedColumnName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10685:1: (lv_col_0_0= ruleExtendedColumnName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10685:1: (lv_col_0_0= ruleExtendedColumnName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10686:3: lv_col_0_0= ruleExtendedColumnName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendedColumnAccess().getColExtendedColumnNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets001.FOLLOW_ruleExtendedColumnName_in_ruleExtendedColumn24201);
            lv_col_0_0=ruleExtendedColumnName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExtendedColumnRule());
              	        }
                     		set(
                     			current, 
                     			"col",
                      		lv_col_0_0, 
                      		"ExtendedColumnName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10702:2: ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?
            int alt285=2;
            alt285 = dfa285.predict(input);
            switch (alt285) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10702:3: ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10702:3: ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10702:4: ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN
                    {
                    this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleExtendedColumn24219); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_1, grammarAccess.getExtendedColumnAccess().getLPARENTerminalRuleCall_1_0()); 
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10706:2: ( (lv_modifiers_2_0= ruleModifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10707:1: (lv_modifiers_2_0= ruleModifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10707:1: (lv_modifiers_2_0= ruleModifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10708:3: lv_modifiers_2_0= ruleModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExtendedColumnAccess().getModifiersModifierParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleExtendedColumn24240);
                    lv_modifiers_2_0=ruleModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExtendedColumnRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_2_0, 
                              		"Modifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10724:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )*
                    loop284:
                    do {
                        int alt284=2;
                        int LA284_0 = input.LA(1);

                        if ( (LA284_0==RULE_COMMA) ) {
                            alt284=1;
                        }


                        switch (alt284) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10724:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) )
                    	    {
                    	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleExtendedColumn24252); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_3, grammarAccess.getExtendedColumnAccess().getCOMMATerminalRuleCall_1_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10728:1: ( (lv_modifiers_4_0= ruleModifier ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10729:1: (lv_modifiers_4_0= ruleModifier )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10729:1: (lv_modifiers_4_0= ruleModifier )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10730:3: lv_modifiers_4_0= ruleModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExtendedColumnAccess().getModifiersModifierParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleExtendedColumn24272);
                    	    lv_modifiers_4_0=ruleModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExtendedColumnRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_4_0, 
                    	              		"Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop284;
                        }
                    } while (true);

                    this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleExtendedColumn24285); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_5, grammarAccess.getExtendedColumnAccess().getRPARENTerminalRuleCall_1_3()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedColumn"


    // $ANTLR start "entryRuleExtendedColumnName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10758:1: entryRuleExtendedColumnName returns [EObject current=null] : iv_ruleExtendedColumnName= ruleExtendedColumnName EOF ;
    public final EObject entryRuleExtendedColumnName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendedColumnName = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10759:2: (iv_ruleExtendedColumnName= ruleExtendedColumnName EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10760:2: iv_ruleExtendedColumnName= ruleExtendedColumnName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedColumnNameRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleExtendedColumnName_in_entryRuleExtendedColumnName24322);
            iv_ruleExtendedColumnName=ruleExtendedColumnName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedColumnName; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleExtendedColumnName24332); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedColumnName"


    // $ANTLR start "ruleExtendedColumnName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10767:1: ruleExtendedColumnName returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) ) ) ;
    public final EObject ruleExtendedColumnName() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token lv_name_0_3=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10770:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10771:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10771:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10772:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10772:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10773:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10773:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER | lv_name_0_3= RULE_IDENT_DOT )
            int alt286=3;
            switch ( input.LA(1) ) {
            case RULE_IDENT:
                {
                alt286=1;
                }
                break;
            case RULE_NUMBER:
                {
                alt286=2;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt286=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 286, 0, input);

                throw nvae;
            }

            switch (alt286) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10774:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleExtendedColumnName24375); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getExtendedColumnNameAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExtendedColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10789:8: lv_name_0_2= RULE_NUMBER
                    {
                    lv_name_0_2=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleExtendedColumnName24395); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getExtendedColumnNameAccess().getNameNUMBERTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExtendedColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10804:8: lv_name_0_3= RULE_IDENT_DOT
                    {
                    lv_name_0_3=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleExtendedColumnName24415); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_3, grammarAccess.getExtendedColumnNameAccess().getNameIDENT_DOTTerminalRuleCall_0_2()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExtendedColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_3, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedColumnName"


    // $ANTLR start "entryRuleConstant"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10830:1: entryRuleConstant returns [EObject current=null] : iv_ruleConstant= ruleConstant EOF ;
    public final EObject entryRuleConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstant = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10831:2: (iv_ruleConstant= ruleConstant EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10832:2: iv_ruleConstant= ruleConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleConstant_in_entryRuleConstant24458);
            iv_ruleConstant=ruleConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstant; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleConstant24468); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstant"


    // $ANTLR start "ruleConstant"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10839:1: ruleConstant returns [EObject current=null] : ( ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )? ) ;
    public final EObject ruleConstant() throws RecognitionException {
        EObject current = null;

        Token lv_case_0_1=null;
        Token lv_case_0_2=null;
        Token lv_name_1_1=null;
        Token lv_name_1_2=null;
        Token this_LPAREN_2=null;
        Token this_COMMA_4=null;
        Token this_RPAREN_6=null;
        AntlrDatatypeRuleToken lv_modifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_5_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10842:28: ( ( ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10843:1: ( ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10843:1: ( ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10843:2: ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )? ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10843:2: ( ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) ) )?
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( ((LA288_0>=RULE_PLUS && LA288_0<=RULE_MINUS)) ) {
                alt288=1;
            }
            switch (alt288) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10844:1: ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10844:1: ( (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10845:1: (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10845:1: (lv_case_0_1= RULE_PLUS | lv_case_0_2= RULE_MINUS )
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( (LA287_0==RULE_PLUS) ) {
                        alt287=1;
                    }
                    else if ( (LA287_0==RULE_MINUS) ) {
                        alt287=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 287, 0, input);

                        throw nvae;
                    }
                    switch (alt287) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10846:3: lv_case_0_1= RULE_PLUS
                            {
                            lv_case_0_1=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleConstant24512); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_case_0_1, grammarAccess.getConstantAccess().getCasePLUSTerminalRuleCall_0_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getConstantRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"case",
                                      		lv_case_0_1, 
                                      		"PLUS");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10861:8: lv_case_0_2= RULE_MINUS
                            {
                            lv_case_0_2=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleConstant24532); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_case_0_2, grammarAccess.getConstantAccess().getCaseMINUSTerminalRuleCall_0_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getConstantRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"case",
                                      		lv_case_0_2, 
                                      		"MINUS");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10879:3: ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10880:1: ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10880:1: ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10881:1: (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10881:1: (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT )
            int alt289=2;
            int LA289_0 = input.LA(1);

            if ( (LA289_0==RULE_IDENT) ) {
                alt289=1;
            }
            else if ( (LA289_0==RULE_IDENT_DOT) ) {
                alt289=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 289, 0, input);

                throw nvae;
            }
            switch (alt289) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10882:3: lv_name_1_1= RULE_IDENT
                    {
                    lv_name_1_1=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleConstant24560); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_1, grammarAccess.getConstantAccess().getNameIDENTTerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstantRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10897:8: lv_name_1_2= RULE_IDENT_DOT
                    {
                    lv_name_1_2=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleConstant24580); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_2, grammarAccess.getConstantAccess().getNameIDENT_DOTTerminalRuleCall_1_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstantRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10915:2: ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )?
            int alt291=2;
            alt291 = dfa291.predict(input);
            switch (alt291) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10915:3: ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10915:3: ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10915:4: ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN
                    {
                    this_LPAREN_2=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleConstant24606); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_2, grammarAccess.getConstantAccess().getLPARENTerminalRuleCall_2_0()); 
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10919:2: ( (lv_modifiers_3_0= ruleModifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10920:1: (lv_modifiers_3_0= ruleModifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10920:1: (lv_modifiers_3_0= ruleModifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10921:3: lv_modifiers_3_0= ruleModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConstantAccess().getModifiersModifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleConstant24627);
                    lv_modifiers_3_0=ruleModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConstantRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_3_0, 
                              		"Modifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10937:2: (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )*
                    loop290:
                    do {
                        int alt290=2;
                        int LA290_0 = input.LA(1);

                        if ( (LA290_0==RULE_COMMA) ) {
                            alt290=1;
                        }


                        switch (alt290) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10937:3: this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) )
                    	    {
                    	    this_COMMA_4=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleConstant24639); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_4, grammarAccess.getConstantAccess().getCOMMATerminalRuleCall_2_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10941:1: ( (lv_modifiers_5_0= ruleModifier ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10942:1: (lv_modifiers_5_0= ruleModifier )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10942:1: (lv_modifiers_5_0= ruleModifier )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10943:3: lv_modifiers_5_0= ruleModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getConstantAccess().getModifiersModifierParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleConstant24659);
                    	    lv_modifiers_5_0=ruleModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getConstantRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_5_0, 
                    	              		"Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop290;
                        }
                    } while (true);

                    this_RPAREN_6=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleConstant24672); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_6, grammarAccess.getConstantAccess().getRPARENTerminalRuleCall_2_3()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstant"


    // $ANTLR start "entryRuleIdentifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10971:1: entryRuleIdentifier returns [EObject current=null] : iv_ruleIdentifier= ruleIdentifier EOF ;
    public final EObject entryRuleIdentifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10972:2: (iv_ruleIdentifier= ruleIdentifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10973:2: iv_ruleIdentifier= ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleIdentifier_in_entryRuleIdentifier24709);
            iv_ruleIdentifier=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifier; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleIdentifier24719); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10980:1: ruleIdentifier returns [EObject current=null] : ( ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )? ) ;
    public final EObject ruleIdentifier() throws RecognitionException {
        EObject current = null;

        Token lv_mode_0_1=null;
        Token lv_mode_0_2=null;
        Token lv_mode_0_3=null;
        Token lv_case_1_1=null;
        Token lv_case_1_2=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        Token lv_name_2_3=null;
        Token this_LPAREN_3=null;
        Token this_COMMA_5=null;
        Token this_RPAREN_7=null;
        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_6_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10983:28: ( ( ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10984:1: ( ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10984:1: ( ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10984:2: ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )? ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )? ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10984:2: ( ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) ) )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( ((LA293_0>=RULE_EQUALS && LA293_0<=RULE_MORE_THAN)) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10985:1: ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10985:1: ( (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10986:1: (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10986:1: (lv_mode_0_1= RULE_EQUALS | lv_mode_0_2= RULE_LESS_THAN | lv_mode_0_3= RULE_MORE_THAN )
                    int alt292=3;
                    switch ( input.LA(1) ) {
                    case RULE_EQUALS:
                        {
                        alt292=1;
                        }
                        break;
                    case RULE_LESS_THAN:
                        {
                        alt292=2;
                        }
                        break;
                    case RULE_MORE_THAN:
                        {
                        alt292=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 292, 0, input);

                        throw nvae;
                    }

                    switch (alt292) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10987:3: lv_mode_0_1= RULE_EQUALS
                            {
                            lv_mode_0_1=(Token)match(input,RULE_EQUALS,FollowSets001.FOLLOW_RULE_EQUALS_in_ruleIdentifier24763); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_mode_0_1, grammarAccess.getIdentifierAccess().getModeEQUALSTerminalRuleCall_0_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"mode",
                                      		lv_mode_0_1, 
                                      		"EQUALS");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11002:8: lv_mode_0_2= RULE_LESS_THAN
                            {
                            lv_mode_0_2=(Token)match(input,RULE_LESS_THAN,FollowSets001.FOLLOW_RULE_LESS_THAN_in_ruleIdentifier24783); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_mode_0_2, grammarAccess.getIdentifierAccess().getModeLESS_THANTerminalRuleCall_0_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"mode",
                                      		lv_mode_0_2, 
                                      		"LESS_THAN");
                              	    
                            }

                            }
                            break;
                        case 3 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11017:8: lv_mode_0_3= RULE_MORE_THAN
                            {
                            lv_mode_0_3=(Token)match(input,RULE_MORE_THAN,FollowSets001.FOLLOW_RULE_MORE_THAN_in_ruleIdentifier24803); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_mode_0_3, grammarAccess.getIdentifierAccess().getModeMORE_THANTerminalRuleCall_0_0_2()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"mode",
                                      		lv_mode_0_3, 
                                      		"MORE_THAN");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11035:3: ( ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) ) )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( ((LA295_0>=RULE_PLUS && LA295_0<=RULE_MINUS)) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11036:1: ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11036:1: ( (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11037:1: (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11037:1: (lv_case_1_1= RULE_PLUS | lv_case_1_2= RULE_MINUS )
                    int alt294=2;
                    int LA294_0 = input.LA(1);

                    if ( (LA294_0==RULE_PLUS) ) {
                        alt294=1;
                    }
                    else if ( (LA294_0==RULE_MINUS) ) {
                        alt294=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 294, 0, input);

                        throw nvae;
                    }
                    switch (alt294) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11038:3: lv_case_1_1= RULE_PLUS
                            {
                            lv_case_1_1=(Token)match(input,RULE_PLUS,FollowSets001.FOLLOW_RULE_PLUS_in_ruleIdentifier24831); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_case_1_1, grammarAccess.getIdentifierAccess().getCasePLUSTerminalRuleCall_1_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"case",
                                      		lv_case_1_1, 
                                      		"PLUS");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11053:8: lv_case_1_2= RULE_MINUS
                            {
                            lv_case_1_2=(Token)match(input,RULE_MINUS,FollowSets001.FOLLOW_RULE_MINUS_in_ruleIdentifier24851); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_case_1_2, grammarAccess.getIdentifierAccess().getCaseMINUSTerminalRuleCall_1_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIdentifierRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"case",
                                      		lv_case_1_2, 
                                      		"MINUS");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11071:3: ( ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11072:1: ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11072:1: ( (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11073:1: (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11073:1: (lv_name_2_1= RULE_IDENT | lv_name_2_2= RULE_NUMBER | lv_name_2_3= RULE_IDENT_DOT )
            int alt296=3;
            switch ( input.LA(1) ) {
            case RULE_IDENT:
                {
                alt296=1;
                }
                break;
            case RULE_NUMBER:
                {
                alt296=2;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt296=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 296, 0, input);

                throw nvae;
            }

            switch (alt296) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11074:3: lv_name_2_1= RULE_IDENT
                    {
                    lv_name_2_1=(Token)match(input,RULE_IDENT,FollowSets001.FOLLOW_RULE_IDENT_in_ruleIdentifier24879); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_1, grammarAccess.getIdentifierAccess().getNameIDENTTerminalRuleCall_2_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11089:8: lv_name_2_2= RULE_NUMBER
                    {
                    lv_name_2_2=(Token)match(input,RULE_NUMBER,FollowSets001.FOLLOW_RULE_NUMBER_in_ruleIdentifier24899); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_2, grammarAccess.getIdentifierAccess().getNameNUMBERTerminalRuleCall_2_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_2, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11104:8: lv_name_2_3= RULE_IDENT_DOT
                    {
                    lv_name_2_3=(Token)match(input,RULE_IDENT_DOT,FollowSets001.FOLLOW_RULE_IDENT_DOT_in_ruleIdentifier24919); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_3, grammarAccess.getIdentifierAccess().getNameIDENT_DOTTerminalRuleCall_2_0_2()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_3, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11122:2: ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )?
            int alt298=2;
            alt298 = dfa298.predict(input);
            switch (alt298) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11122:3: ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11122:3: ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11122:4: ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN
                    {
                    this_LPAREN_3=(Token)match(input,RULE_LPAREN,FollowSets001.FOLLOW_RULE_LPAREN_in_ruleIdentifier24945); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_3, grammarAccess.getIdentifierAccess().getLPARENTerminalRuleCall_3_0()); 
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11126:2: ( (lv_modifiers_4_0= ruleModifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11127:1: (lv_modifiers_4_0= ruleModifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11127:1: (lv_modifiers_4_0= ruleModifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11128:3: lv_modifiers_4_0= ruleModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIdentifierAccess().getModifiersModifierParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleIdentifier24966);
                    lv_modifiers_4_0=ruleModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIdentifierRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_4_0, 
                              		"Modifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11144:2: (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )*
                    loop297:
                    do {
                        int alt297=2;
                        int LA297_0 = input.LA(1);

                        if ( (LA297_0==RULE_COMMA) ) {
                            alt297=1;
                        }


                        switch (alt297) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11144:3: this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) )
                    	    {
                    	    this_COMMA_5=(Token)match(input,RULE_COMMA,FollowSets001.FOLLOW_RULE_COMMA_in_ruleIdentifier24978); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_5, grammarAccess.getIdentifierAccess().getCOMMATerminalRuleCall_3_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11148:1: ( (lv_modifiers_6_0= ruleModifier ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11149:1: (lv_modifiers_6_0= ruleModifier )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11149:1: (lv_modifiers_6_0= ruleModifier )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11150:3: lv_modifiers_6_0= ruleModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIdentifierAccess().getModifiersModifierParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets001.FOLLOW_ruleModifier_in_ruleIdentifier24998);
                    	    lv_modifiers_6_0=ruleModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIdentifierRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_6_0, 
                    	              		"Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop297;
                        }
                    } while (true);

                    this_RPAREN_7=(Token)match(input,RULE_RPAREN,FollowSets001.FOLLOW_RULE_RPAREN_in_ruleIdentifier25011); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_7, grammarAccess.getIdentifierAccess().getRPARENTerminalRuleCall_3_3()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleConstantOperator"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11178:1: entryRuleConstantOperator returns [EObject current=null] : iv_ruleConstantOperator= ruleConstantOperator EOF ;
    public final EObject entryRuleConstantOperator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstantOperator = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11179:2: (iv_ruleConstantOperator= ruleConstantOperator EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11180:2: iv_ruleConstantOperator= ruleConstantOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantOperatorRule()); 
            }
            pushFollow(FollowSets001.FOLLOW_ruleConstantOperator_in_entryRuleConstantOperator25048);
            iv_ruleConstantOperator=ruleConstantOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantOperator; 
            }
            match(input,EOF,FollowSets001.FOLLOW_EOF_in_entryRuleConstantOperator25058); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantOperator"


    // $ANTLR start "ruleConstantOperator"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11187:1: ruleConstantOperator returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) ) ;
    public final EObject ruleConstantOperator() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11190:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11191:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11191:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11192:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11192:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11193:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11193:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS )
            int alt299=2;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==RULE_IDENT) ) {
                alt299=1;
            }
            else if ( (LA299_0==RULE_EQUALS) ) {
                alt299=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 299, 0, input);

                throw nvae;
            }
            switch (alt299) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11194:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleConstantOperator25101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getConstantOperatorAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstantOperatorRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11209:8: lv_name_0_2= RULE_EQUALS
                    {
                    lv_name_0_2=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleConstantOperator25121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getConstantOperatorAccess().getNameEQUALSTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstantOperatorRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"EQUALS");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstantOperator"


    // $ANTLR start "entryRuleIdentifierOperator"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11235:1: entryRuleIdentifierOperator returns [EObject current=null] : iv_ruleIdentifierOperator= ruleIdentifierOperator EOF ;
    public final EObject entryRuleIdentifierOperator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifierOperator = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11236:2: (iv_ruleIdentifierOperator= ruleIdentifierOperator EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11237:2: iv_ruleIdentifierOperator= ruleIdentifierOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierOperatorRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleIdentifierOperator_in_entryRuleIdentifierOperator25164);
            iv_ruleIdentifierOperator=ruleIdentifierOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierOperator; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleIdentifierOperator25174); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifierOperator"


    // $ANTLR start "ruleIdentifierOperator"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11244:1: ruleIdentifierOperator returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) ) ;
    public final EObject ruleIdentifierOperator() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11247:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11248:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11248:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11249:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11249:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11250:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11250:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_EQUALS )
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==RULE_IDENT) ) {
                alt300=1;
            }
            else if ( (LA300_0==RULE_EQUALS) ) {
                alt300=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 300, 0, input);

                throw nvae;
            }
            switch (alt300) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11251:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleIdentifierOperator25217); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getIdentifierOperatorAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierOperatorRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11266:8: lv_name_0_2= RULE_EQUALS
                    {
                    lv_name_0_2=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleIdentifierOperator25237); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getIdentifierOperatorAccess().getNameEQUALSTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getIdentifierOperatorRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"EQUALS");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifierOperator"


    // $ANTLR start "entryRuleDatabaseColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11292:1: entryRuleDatabaseColumn returns [EObject current=null] : iv_ruleDatabaseColumn= ruleDatabaseColumn EOF ;
    public final EObject entryRuleDatabaseColumn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseColumn = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11293:2: (iv_ruleDatabaseColumn= ruleDatabaseColumn EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11294:2: iv_ruleDatabaseColumn= ruleDatabaseColumn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseColumnRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleDatabaseColumn_in_entryRuleDatabaseColumn25280);
            iv_ruleDatabaseColumn=ruleDatabaseColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseColumn; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleDatabaseColumn25290); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseColumn"


    // $ANTLR start "ruleDatabaseColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11301:1: ruleDatabaseColumn returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) ) ;
    public final EObject ruleDatabaseColumn() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11304:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11305:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11305:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11306:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11306:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11307:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11307:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT )
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==RULE_IDENT) ) {
                alt301=1;
            }
            else if ( (LA301_0==RULE_IDENT_DOT) ) {
                alt301=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 301, 0, input);

                throw nvae;
            }
            switch (alt301) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11308:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleDatabaseColumn25333); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getDatabaseColumnAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabaseColumnRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11323:8: lv_name_0_2= RULE_IDENT_DOT
                    {
                    lv_name_0_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleDatabaseColumn25353); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getDatabaseColumnAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabaseColumnRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseColumn"


    // $ANTLR start "entryRuleDatabaseTable"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11349:1: entryRuleDatabaseTable returns [EObject current=null] : iv_ruleDatabaseTable= ruleDatabaseTable EOF ;
    public final EObject entryRuleDatabaseTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabaseTable = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11350:2: (iv_ruleDatabaseTable= ruleDatabaseTable EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11351:2: iv_ruleDatabaseTable= ruleDatabaseTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseTableRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleDatabaseTable_in_entryRuleDatabaseTable25396);
            iv_ruleDatabaseTable=ruleDatabaseTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabaseTable; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleDatabaseTable25406); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabaseTable"


    // $ANTLR start "ruleDatabaseTable"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11358:1: ruleDatabaseTable returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) ) ;
    public final EObject ruleDatabaseTable() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11361:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11362:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11362:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11363:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11363:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11364:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11364:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT )
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==RULE_IDENT) ) {
                alt302=1;
            }
            else if ( (LA302_0==RULE_IDENT_DOT) ) {
                alt302=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 302, 0, input);

                throw nvae;
            }
            switch (alt302) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11365:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleDatabaseTable25449); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getDatabaseTableAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabaseTableRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11380:8: lv_name_0_2= RULE_IDENT_DOT
                    {
                    lv_name_0_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleDatabaseTable25469); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getDatabaseTableAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDatabaseTableRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseTable"


    // $ANTLR start "entryRuleMappingRule"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11406:1: entryRuleMappingRule returns [EObject current=null] : iv_ruleMappingRule= ruleMappingRule EOF ;
    public final EObject entryRuleMappingRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingRule = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11407:2: (iv_ruleMappingRule= ruleMappingRule EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11408:2: iv_ruleMappingRule= ruleMappingRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingRuleRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingRule_in_entryRuleMappingRule25512);
            iv_ruleMappingRule=ruleMappingRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingRule; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingRule25522); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingRule"


    // $ANTLR start "ruleMappingRule"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11415:1: ruleMappingRule returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON ) ;
    public final EObject ruleMappingRule() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_LPAREN_1=null;
        Token lv_type_2_0=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        Token this_EQUALS_6=null;
        Token this_SEMICOLON_8=null;
        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        EObject lv_mapping_7_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11418:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11419:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11419:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11419:2: ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_MAPPING_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_mapping_7_0= ruleMapping ) ) this_SEMICOLON_8= RULE_SEMICOLON
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11419:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11420:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11420:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11421:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingRule25564); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getMappingRuleAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMappingRuleRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleMappingRule25580); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LPAREN_1, grammarAccess.getMappingRuleAccess().getLPARENTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11441:1: ( (lv_type_2_0= RULE_MAPPING_TYPE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11442:1: (lv_type_2_0= RULE_MAPPING_TYPE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11442:1: (lv_type_2_0= RULE_MAPPING_TYPE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11443:3: lv_type_2_0= RULE_MAPPING_TYPE
            {
            lv_type_2_0=(Token)match(input,RULE_MAPPING_TYPE,FollowSets002.FOLLOW_RULE_MAPPING_TYPE_in_ruleMappingRule25596); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_type_2_0, grammarAccess.getMappingRuleAccess().getTypeMAPPING_TYPETerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMappingRuleRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"MAPPING_TYPE");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11459:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) ) )*
            loop303:
            do {
                int alt303=2;
                int LA303_0 = input.LA(1);

                if ( (LA303_0==RULE_COMMA) ) {
                    alt303=1;
                }


                switch (alt303) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11459:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingRuleModifier ) )
            	    {
            	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleMappingRule25613); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_3, grammarAccess.getMappingRuleAccess().getCOMMATerminalRuleCall_3_0()); 
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11463:1: ( (lv_modifiers_4_0= ruleMappingRuleModifier ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11464:1: (lv_modifiers_4_0= ruleMappingRuleModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11464:1: (lv_modifiers_4_0= ruleMappingRuleModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11465:3: lv_modifiers_4_0= ruleMappingRuleModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMappingRuleAccess().getModifiersMappingRuleModifierParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleMappingRuleModifier_in_ruleMappingRule25633);
            	    lv_modifiers_4_0=ruleMappingRuleModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingRuleRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers",
            	              		lv_modifiers_4_0, 
            	              		"MappingRuleModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop303;
                }
            } while (true);

            this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleMappingRule25646); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RPAREN_5, grammarAccess.getMappingRuleAccess().getRPARENTerminalRuleCall_4()); 
                  
            }
            this_EQUALS_6=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleMappingRule25656); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EQUALS_6, grammarAccess.getMappingRuleAccess().getEQUALSTerminalRuleCall_5()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11489:1: ( (lv_mapping_7_0= ruleMapping ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11490:1: (lv_mapping_7_0= ruleMapping )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11490:1: (lv_mapping_7_0= ruleMapping )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11491:3: lv_mapping_7_0= ruleMapping
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMappingRuleAccess().getMappingMappingParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleMapping_in_ruleMappingRule25676);
            lv_mapping_7_0=ruleMapping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingRuleRule());
              	        }
                     		set(
                     			current, 
                     			"mapping",
                      		lv_mapping_7_0, 
                      		"Mapping");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_SEMICOLON_8=(Token)match(input,RULE_SEMICOLON,FollowSets002.FOLLOW_RULE_SEMICOLON_in_ruleMappingRule25687); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_8, grammarAccess.getMappingRuleAccess().getSEMICOLONTerminalRuleCall_7()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingRule"


    // $ANTLR start "entryRuleMapping"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11519:1: entryRuleMapping returns [EObject current=null] : iv_ruleMapping= ruleMapping EOF ;
    public final EObject entryRuleMapping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapping = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11520:2: (iv_ruleMapping= ruleMapping EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11521:2: iv_ruleMapping= ruleMapping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMapping_in_entryRuleMapping25722);
            iv_ruleMapping=ruleMapping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapping; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMapping25732); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapping"


    // $ANTLR start "ruleMapping"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11528:1: ruleMapping returns [EObject current=null] : ( (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )* ) ;
    public final EObject ruleMapping() throws RecognitionException {
        EObject current = null;

        Token this_WS_0=null;
        Token this_WS_2=null;
        Token this_WS_4=null;
        EObject lv_mappingItems_1_0 = null;

        EObject lv_mappingItems_3_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11531:28: ( ( (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11532:1: ( (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11532:1: ( (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11532:2: (this_WS_0= RULE_WS )* ( (lv_mappingItems_1_0= ruleMappingItem ) ) ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )* (this_WS_4= RULE_WS )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11532:2: (this_WS_0= RULE_WS )*
            loop304:
            do {
                int alt304=2;
                int LA304_0 = input.LA(1);

                if ( (LA304_0==RULE_WS) ) {
                    alt304=1;
                }


                switch (alt304) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11532:3: this_WS_0= RULE_WS
            	    {
            	    this_WS_0=(Token)match(input,RULE_WS,FollowSets002.FOLLOW_RULE_WS_in_ruleMapping25769); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_0, grammarAccess.getMappingAccess().getWSTerminalRuleCall_0()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop304;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11536:3: ( (lv_mappingItems_1_0= ruleMappingItem ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11537:1: (lv_mappingItems_1_0= ruleMappingItem )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11537:1: (lv_mappingItems_1_0= ruleMappingItem )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11538:3: lv_mappingItems_1_0= ruleMappingItem
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingItem_in_ruleMapping25791);
            lv_mappingItems_1_0=ruleMappingItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingRule());
              	        }
                     		add(
                     			current, 
                     			"mappingItems",
                      		lv_mappingItems_1_0, 
                      		"MappingItem");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11554:2: ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )*
            loop306:
            do {
                int alt306=2;
                alt306 = dfa306.predict(input);
                switch (alt306) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11554:3: (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11554:3: (this_WS_2= RULE_WS )+
            	    int cnt305=0;
            	    loop305:
            	    do {
            	        int alt305=2;
            	        int LA305_0 = input.LA(1);

            	        if ( (LA305_0==RULE_WS) ) {
            	            alt305=1;
            	        }


            	        switch (alt305) {
            	    	case 1 :
            	    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11554:4: this_WS_2= RULE_WS
            	    	    {
            	    	    this_WS_2=(Token)match(input,RULE_WS,FollowSets002.FOLLOW_RULE_WS_in_ruleMapping25804); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	          newLeafNode(this_WS_2, grammarAccess.getMappingAccess().getWSTerminalRuleCall_2_0()); 
            	    	          
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt305 >= 1 ) break loop305;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(305, input);
            	                throw eee;
            	        }
            	        cnt305++;
            	    } while (true);

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11558:3: ( (lv_mappingItems_3_0= ruleMappingItem ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11559:1: (lv_mappingItems_3_0= ruleMappingItem )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11559:1: (lv_mappingItems_3_0= ruleMappingItem )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11560:3: lv_mappingItems_3_0= ruleMappingItem
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleMappingItem_in_ruleMapping25826);
            	    lv_mappingItems_3_0=ruleMappingItem();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"mappingItems",
            	              		lv_mappingItems_3_0, 
            	              		"MappingItem");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop306;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11576:4: (this_WS_4= RULE_WS )*
            loop307:
            do {
                int alt307=2;
                int LA307_0 = input.LA(1);

                if ( (LA307_0==RULE_WS) ) {
                    alt307=1;
                }


                switch (alt307) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11576:5: this_WS_4= RULE_WS
            	    {
            	    this_WS_4=(Token)match(input,RULE_WS,FollowSets002.FOLLOW_RULE_WS_in_ruleMapping25840); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_4, grammarAccess.getMappingAccess().getWSTerminalRuleCall_3()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop307;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapping"


    // $ANTLR start "entryRuleMappingItem"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11588:1: entryRuleMappingItem returns [EObject current=null] : iv_ruleMappingItem= ruleMappingItem EOF ;
    public final EObject entryRuleMappingItem() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingItem = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11589:2: (iv_ruleMappingItem= ruleMappingItem EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11590:2: iv_ruleMappingItem= ruleMappingItem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingItemRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingItem_in_entryRuleMappingItem25877);
            iv_ruleMappingItem=ruleMappingItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingItem; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingItem25887); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingItem"


    // $ANTLR start "ruleMappingItem"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11597:1: ruleMappingItem returns [EObject current=null] : ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )? ) ;
    public final EObject ruleMappingItem() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token this_STRING_1=null;
        EObject lv_attr_2_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11600:28: ( ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11601:1: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11601:1: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11601:2: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) ) (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11601:2: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11602:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11602:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11603:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11603:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_NUMBER )
            int alt308=2;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==RULE_IDENT) ) {
                alt308=1;
            }
            else if ( (LA308_0==RULE_NUMBER) ) {
                alt308=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;
            }
            switch (alt308) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11604:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingItem25931); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getMappingItemAccess().getNameIDENTTerminalRuleCall_0_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingItemRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11619:8: lv_name_0_2= RULE_NUMBER
                    {
                    lv_name_0_2=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleMappingItem25951); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getMappingItemAccess().getNameNUMBERTerminalRuleCall_0_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingItemRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11637:2: (this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) ) )?
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==RULE_STRING) ) {
                alt309=1;
            }
            switch (alt309) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11637:3: this_STRING_1= RULE_STRING ( (lv_attr_2_0= ruleMappingColumn ) )
                    {
                    this_STRING_1=(Token)match(input,RULE_STRING,FollowSets002.FOLLOW_RULE_STRING_in_ruleMappingItem25971); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_1, grammarAccess.getMappingItemAccess().getSTRINGTerminalRuleCall_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11641:1: ( (lv_attr_2_0= ruleMappingColumn ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11642:1: (lv_attr_2_0= ruleMappingColumn )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11642:1: (lv_attr_2_0= ruleMappingColumn )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11643:3: lv_attr_2_0= ruleMappingColumn
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMappingItemAccess().getAttrMappingColumnParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleMappingColumn_in_ruleMappingItem25991);
                    lv_attr_2_0=ruleMappingColumn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMappingItemRule());
                      	        }
                             		set(
                             			current, 
                             			"attr",
                              		lv_attr_2_0, 
                              		"MappingColumn");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingItem"


    // $ANTLR start "entryRuleMappingColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11667:1: entryRuleMappingColumn returns [EObject current=null] : iv_ruleMappingColumn= ruleMappingColumn EOF ;
    public final EObject entryRuleMappingColumn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingColumn = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11668:2: (iv_ruleMappingColumn= ruleMappingColumn EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11669:2: iv_ruleMappingColumn= ruleMappingColumn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingColumnRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingColumn_in_entryRuleMappingColumn26029);
            iv_ruleMappingColumn=ruleMappingColumn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingColumn; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingColumn26039); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingColumn"


    // $ANTLR start "ruleMappingColumn"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11676:1: ruleMappingColumn returns [EObject current=null] : ( ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )* ) ;
    public final EObject ruleMappingColumn() throws RecognitionException {
        EObject current = null;

        EObject lv_items_0_0 = null;

        EObject lv_items_1_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11679:28: ( ( ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11680:1: ( ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11680:1: ( ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11680:2: ( (lv_items_0_0= ruleExtendedMappingItem ) ) ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11680:2: ( (lv_items_0_0= ruleExtendedMappingItem ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11681:1: (lv_items_0_0= ruleExtendedMappingItem )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11681:1: (lv_items_0_0= ruleExtendedMappingItem )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11682:3: lv_items_0_0= ruleExtendedMappingItem
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMappingColumnAccess().getItemsExtendedMappingItemParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleExtendedMappingItem_in_ruleMappingColumn26085);
            lv_items_0_0=ruleExtendedMappingItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingColumnRule());
              	        }
                     		add(
                     			current, 
                     			"items",
                      		lv_items_0_0, 
                      		"ExtendedMappingItem");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11698:2: ( ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem ) )*
            loop310:
            do {
                int alt310=2;
                int LA310_0 = input.LA(1);

                if ( (LA310_0==RULE_IDENT) && (synpred10_InternalProcessorDsl())) {
                    alt310=1;
                }
                else if ( (LA310_0==RULE_IDENT_DOT) && (synpred10_InternalProcessorDsl())) {
                    alt310=1;
                }
                else if ( (LA310_0==RULE_NUMBER) && (synpred10_InternalProcessorDsl())) {
                    alt310=1;
                }


                switch (alt310) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11698:3: ( ( ruleExtendedMappingItem ) )=> (lv_items_1_0= ruleExtendedMappingItem )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11703:1: (lv_items_1_0= ruleExtendedMappingItem )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11704:3: lv_items_1_0= ruleExtendedMappingItem
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMappingColumnAccess().getItemsExtendedMappingItemParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleExtendedMappingItem_in_ruleMappingColumn26116);
            	    lv_items_1_0=ruleExtendedMappingItem();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingColumnRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"items",
            	              		lv_items_1_0, 
            	              		"ExtendedMappingItem");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop310;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingColumn"


    // $ANTLR start "entryRuleExtendedMappingItem"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11728:1: entryRuleExtendedMappingItem returns [EObject current=null] : iv_ruleExtendedMappingItem= ruleExtendedMappingItem EOF ;
    public final EObject entryRuleExtendedMappingItem() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendedMappingItem = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11729:2: (iv_ruleExtendedMappingItem= ruleExtendedMappingItem EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11730:2: iv_ruleExtendedMappingItem= ruleExtendedMappingItem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedMappingItemRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleExtendedMappingItem_in_entryRuleExtendedMappingItem26153);
            iv_ruleExtendedMappingItem=ruleExtendedMappingItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedMappingItem; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleExtendedMappingItem26163); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedMappingItem"


    // $ANTLR start "ruleExtendedMappingItem"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11737:1: ruleExtendedMappingItem returns [EObject current=null] : ( ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? ) ;
    public final EObject ruleExtendedMappingItem() throws RecognitionException {
        EObject current = null;

        Token this_LPAREN_1=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        EObject lv_attr_0_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_2_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11740:28: ( ( ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11741:1: ( ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11741:1: ( ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11741:2: ( (lv_attr_0_0= ruleMappingColumnName ) ) ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11741:2: ( (lv_attr_0_0= ruleMappingColumnName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11742:1: (lv_attr_0_0= ruleMappingColumnName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11742:1: (lv_attr_0_0= ruleMappingColumnName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11743:3: lv_attr_0_0= ruleMappingColumnName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendedMappingItemAccess().getAttrMappingColumnNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingColumnName_in_ruleExtendedMappingItem26209);
            lv_attr_0_0=ruleMappingColumnName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExtendedMappingItemRule());
              	        }
                     		set(
                     			current, 
                     			"attr",
                      		lv_attr_0_0, 
                      		"MappingColumnName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11759:2: ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?
            int alt312=2;
            int LA312_0 = input.LA(1);

            if ( (LA312_0==RULE_LPAREN) && (synpred11_InternalProcessorDsl())) {
                alt312=1;
            }
            switch (alt312) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11759:3: ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleMappingItemModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )* this_RPAREN_5= RULE_RPAREN
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11759:3: ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11759:4: ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN
                    {
                    this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleExtendedMappingItem26227); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_LPAREN_1, grammarAccess.getExtendedMappingItemAccess().getLPARENTerminalRuleCall_1_0()); 
                          
                    }

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11763:2: ( (lv_modifiers_2_0= ruleMappingItemModifier ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11764:1: (lv_modifiers_2_0= ruleMappingItemModifier )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11764:1: (lv_modifiers_2_0= ruleMappingItemModifier )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11765:3: lv_modifiers_2_0= ruleMappingItemModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExtendedMappingItemAccess().getModifiersMappingItemModifierParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleMappingItemModifier_in_ruleExtendedMappingItem26248);
                    lv_modifiers_2_0=ruleMappingItemModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExtendedMappingItemRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_2_0, 
                              		"MappingItemModifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11781:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) ) )*
                    loop311:
                    do {
                        int alt311=2;
                        int LA311_0 = input.LA(1);

                        if ( (LA311_0==RULE_COMMA) ) {
                            alt311=1;
                        }


                        switch (alt311) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11781:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleMappingItemModifier ) )
                    	    {
                    	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleExtendedMappingItem26260); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	          newLeafNode(this_COMMA_3, grammarAccess.getExtendedMappingItemAccess().getCOMMATerminalRuleCall_1_2_0()); 
                    	          
                    	    }
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11785:1: ( (lv_modifiers_4_0= ruleMappingItemModifier ) )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11786:1: (lv_modifiers_4_0= ruleMappingItemModifier )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11786:1: (lv_modifiers_4_0= ruleMappingItemModifier )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11787:3: lv_modifiers_4_0= ruleMappingItemModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExtendedMappingItemAccess().getModifiersMappingItemModifierParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets002.FOLLOW_ruleMappingItemModifier_in_ruleExtendedMappingItem26280);
                    	    lv_modifiers_4_0=ruleMappingItemModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExtendedMappingItemRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_4_0, 
                    	              		"MappingItemModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop311;
                        }
                    } while (true);

                    this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleExtendedMappingItem26293); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_RPAREN_5, grammarAccess.getExtendedMappingItemAccess().getRPARENTerminalRuleCall_1_3()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedMappingItem"


    // $ANTLR start "entryRuleMappingColumnName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11815:1: entryRuleMappingColumnName returns [EObject current=null] : iv_ruleMappingColumnName= ruleMappingColumnName EOF ;
    public final EObject entryRuleMappingColumnName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingColumnName = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11816:2: (iv_ruleMappingColumnName= ruleMappingColumnName EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11817:2: iv_ruleMappingColumnName= ruleMappingColumnName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingColumnNameRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingColumnName_in_entryRuleMappingColumnName26330);
            iv_ruleMappingColumnName=ruleMappingColumnName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingColumnName; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingColumnName26340); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingColumnName"


    // $ANTLR start "ruleMappingColumnName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11824:1: ruleMappingColumnName returns [EObject current=null] : ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) ) ) ;
    public final EObject ruleMappingColumnName() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token lv_name_0_3=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11827:28: ( ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11828:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11828:1: ( ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11829:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11829:1: ( (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11830:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11830:1: (lv_name_0_1= RULE_IDENT | lv_name_0_2= RULE_IDENT_DOT | lv_name_0_3= RULE_NUMBER )
            int alt313=3;
            switch ( input.LA(1) ) {
            case RULE_IDENT:
                {
                alt313=1;
                }
                break;
            case RULE_IDENT_DOT:
                {
                alt313=2;
                }
                break;
            case RULE_NUMBER:
                {
                alt313=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 313, 0, input);

                throw nvae;
            }

            switch (alt313) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11831:3: lv_name_0_1= RULE_IDENT
                    {
                    lv_name_0_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingColumnName26383); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_1, grammarAccess.getMappingColumnNameAccess().getNameIDENTTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11846:8: lv_name_0_2= RULE_IDENT_DOT
                    {
                    lv_name_0_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleMappingColumnName26403); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getMappingColumnNameAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11861:8: lv_name_0_3= RULE_NUMBER
                    {
                    lv_name_0_3=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleMappingColumnName26423); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_3, grammarAccess.getMappingColumnNameAccess().getNameNUMBERTerminalRuleCall_0_2()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingColumnNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_0_3, 
                              		"NUMBER");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingColumnName"


    // $ANTLR start "entryRuleOptionalFeature"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11887:1: entryRuleOptionalFeature returns [EObject current=null] : iv_ruleOptionalFeature= ruleOptionalFeature EOF ;
    public final EObject entryRuleOptionalFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOptionalFeature = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11888:2: (iv_ruleOptionalFeature= ruleOptionalFeature EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11889:2: iv_ruleOptionalFeature= ruleOptionalFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOptionalFeatureRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleOptionalFeature_in_entryRuleOptionalFeature26466);
            iv_ruleOptionalFeature=ruleOptionalFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOptionalFeature; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleOptionalFeature26476); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOptionalFeature"


    // $ANTLR start "ruleOptionalFeature"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11896:1: ruleOptionalFeature returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON ) ;
    public final EObject ruleOptionalFeature() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_LPAREN_1=null;
        Token lv_type_2_0=null;
        Token this_COMMA_3=null;
        Token this_RPAREN_5=null;
        Token this_EQUALS_6=null;
        Token this_SEMICOLON_8=null;
        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_option_7_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11899:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11900:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11900:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11900:2: ( (lv_name_0_0= RULE_IDENT ) ) this_LPAREN_1= RULE_LPAREN ( (lv_type_2_0= RULE_OPTION_TYPE ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )* this_RPAREN_5= RULE_RPAREN this_EQUALS_6= RULE_EQUALS ( (lv_option_7_0= ruleFeatureValue ) ) this_SEMICOLON_8= RULE_SEMICOLON
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11900:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11901:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11901:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11902:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleOptionalFeature26518); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getOptionalFeatureAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getOptionalFeatureRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_LPAREN_1=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleOptionalFeature26534); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LPAREN_1, grammarAccess.getOptionalFeatureAccess().getLPARENTerminalRuleCall_1()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11922:1: ( (lv_type_2_0= RULE_OPTION_TYPE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11923:1: (lv_type_2_0= RULE_OPTION_TYPE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11923:1: (lv_type_2_0= RULE_OPTION_TYPE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11924:3: lv_type_2_0= RULE_OPTION_TYPE
            {
            lv_type_2_0=(Token)match(input,RULE_OPTION_TYPE,FollowSets002.FOLLOW_RULE_OPTION_TYPE_in_ruleOptionalFeature26550); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_type_2_0, grammarAccess.getOptionalFeatureAccess().getTypeOPTION_TYPETerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getOptionalFeatureRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"OPTION_TYPE");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11940:2: (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) ) )*
            loop314:
            do {
                int alt314=2;
                int LA314_0 = input.LA(1);

                if ( (LA314_0==RULE_COMMA) ) {
                    alt314=1;
                }


                switch (alt314) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11940:3: this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) )
            	    {
            	    this_COMMA_3=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleOptionalFeature26567); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_3, grammarAccess.getOptionalFeatureAccess().getCOMMATerminalRuleCall_3_0()); 
            	          
            	    }
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11944:1: ( (lv_modifiers_4_0= ruleOptionalFeatureModifier ) )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11945:1: (lv_modifiers_4_0= ruleOptionalFeatureModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11945:1: (lv_modifiers_4_0= ruleOptionalFeatureModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11946:3: lv_modifiers_4_0= ruleOptionalFeatureModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOptionalFeatureAccess().getModifiersOptionalFeatureModifierParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleOptionalFeatureModifier_in_ruleOptionalFeature26587);
            	    lv_modifiers_4_0=ruleOptionalFeatureModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOptionalFeatureRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers",
            	              		lv_modifiers_4_0, 
            	              		"OptionalFeatureModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop314;
                }
            } while (true);

            this_RPAREN_5=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleOptionalFeature26600); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RPAREN_5, grammarAccess.getOptionalFeatureAccess().getRPARENTerminalRuleCall_4()); 
                  
            }
            this_EQUALS_6=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleOptionalFeature26610); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_EQUALS_6, grammarAccess.getOptionalFeatureAccess().getEQUALSTerminalRuleCall_5()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11970:1: ( (lv_option_7_0= ruleFeatureValue ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11971:1: (lv_option_7_0= ruleFeatureValue )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11971:1: (lv_option_7_0= ruleFeatureValue )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11972:3: lv_option_7_0= ruleFeatureValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOptionalFeatureAccess().getOptionFeatureValueParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleFeatureValue_in_ruleOptionalFeature26630);
            lv_option_7_0=ruleFeatureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOptionalFeatureRule());
              	        }
                     		set(
                     			current, 
                     			"option",
                      		lv_option_7_0, 
                      		"FeatureValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_SEMICOLON_8=(Token)match(input,RULE_SEMICOLON,FollowSets002.FOLLOW_RULE_SEMICOLON_in_ruleOptionalFeature26641); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SEMICOLON_8, grammarAccess.getOptionalFeatureAccess().getSEMICOLONTerminalRuleCall_7()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOptionalFeature"


    // $ANTLR start "entryRuleStatementModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12000:1: entryRuleStatementModifier returns [String current=null] : iv_ruleStatementModifier= ruleStatementModifier EOF ;
    public final String entryRuleStatementModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleStatementModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12001:2: (iv_ruleStatementModifier= ruleStatementModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12002:2: iv_ruleStatementModifier= ruleStatementModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleStatementModifier_in_entryRuleStatementModifier26677);
            iv_ruleStatementModifier=ruleStatementModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatementModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleStatementModifier26688); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatementModifier"


    // $ANTLR start "ruleStatementModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12009:1: ruleStatementModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleStatementModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_NUMBER_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12012:28: ( (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12013:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12013:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            int alt315=2;
            int LA315_0 = input.LA(1);

            if ( (LA315_0==RULE_IDENT) ) {
                alt315=1;
            }
            else if ( (LA315_0==RULE_NUMBER) ) {
                alt315=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 315, 0, input);

                throw nvae;
            }
            switch (alt315) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12013:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleStatementModifier26728); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getStatementModifierAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12021:10: this_NUMBER_1= RULE_NUMBER
                    {
                    this_NUMBER_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleStatementModifier26754); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_1, grammarAccess.getStatementModifierAccess().getNUMBERTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatementModifier"


    // $ANTLR start "entryRuleMappingRuleModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12036:1: entryRuleMappingRuleModifier returns [String current=null] : iv_ruleMappingRuleModifier= ruleMappingRuleModifier EOF ;
    public final String entryRuleMappingRuleModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMappingRuleModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12037:2: (iv_ruleMappingRuleModifier= ruleMappingRuleModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12038:2: iv_ruleMappingRuleModifier= ruleMappingRuleModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingRuleModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingRuleModifier_in_entryRuleMappingRuleModifier26800);
            iv_ruleMappingRuleModifier=ruleMappingRuleModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingRuleModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingRuleModifier26811); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingRuleModifier"


    // $ANTLR start "ruleMappingRuleModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12045:1: ruleMappingRuleModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleMappingRuleModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_NUMBER_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12048:28: ( (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12049:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12049:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            int alt316=2;
            int LA316_0 = input.LA(1);

            if ( (LA316_0==RULE_IDENT) ) {
                alt316=1;
            }
            else if ( (LA316_0==RULE_NUMBER) ) {
                alt316=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 316, 0, input);

                throw nvae;
            }
            switch (alt316) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12049:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingRuleModifier26851); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getMappingRuleModifierAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12057:10: this_NUMBER_1= RULE_NUMBER
                    {
                    this_NUMBER_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleMappingRuleModifier26877); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_1, grammarAccess.getMappingRuleModifierAccess().getNUMBERTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingRuleModifier"


    // $ANTLR start "entryRuleMappingItemModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12072:1: entryRuleMappingItemModifier returns [String current=null] : iv_ruleMappingItemModifier= ruleMappingItemModifier EOF ;
    public final String entryRuleMappingItemModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMappingItemModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12073:2: (iv_ruleMappingItemModifier= ruleMappingItemModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12074:2: iv_ruleMappingItemModifier= ruleMappingItemModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingItemModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleMappingItemModifier_in_entryRuleMappingItemModifier26923);
            iv_ruleMappingItemModifier=ruleMappingItemModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingItemModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleMappingItemModifier26934); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingItemModifier"


    // $ANTLR start "ruleMappingItemModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12081:1: ruleMappingItemModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleMappingItemModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_NUMBER_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12084:28: ( (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12085:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12085:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==RULE_IDENT) ) {
                alt317=1;
            }
            else if ( (LA317_0==RULE_NUMBER) ) {
                alt317=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 317, 0, input);

                throw nvae;
            }
            switch (alt317) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12085:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleMappingItemModifier26974); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getMappingItemModifierAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12093:10: this_NUMBER_1= RULE_NUMBER
                    {
                    this_NUMBER_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleMappingItemModifier27000); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_1, grammarAccess.getMappingItemModifierAccess().getNUMBERTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingItemModifier"


    // $ANTLR start "entryRuleOptionalFeatureModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12108:1: entryRuleOptionalFeatureModifier returns [String current=null] : iv_ruleOptionalFeatureModifier= ruleOptionalFeatureModifier EOF ;
    public final String entryRuleOptionalFeatureModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOptionalFeatureModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12109:2: (iv_ruleOptionalFeatureModifier= ruleOptionalFeatureModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12110:2: iv_ruleOptionalFeatureModifier= ruleOptionalFeatureModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOptionalFeatureModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleOptionalFeatureModifier_in_entryRuleOptionalFeatureModifier27046);
            iv_ruleOptionalFeatureModifier=ruleOptionalFeatureModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOptionalFeatureModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleOptionalFeatureModifier27057); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOptionalFeatureModifier"


    // $ANTLR start "ruleOptionalFeatureModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12117:1: ruleOptionalFeatureModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleOptionalFeatureModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_NUMBER_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12120:28: ( (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12121:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12121:1: (this_IDENT_0= RULE_IDENT | this_NUMBER_1= RULE_NUMBER )
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==RULE_IDENT) ) {
                alt318=1;
            }
            else if ( (LA318_0==RULE_NUMBER) ) {
                alt318=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 318, 0, input);

                throw nvae;
            }
            switch (alt318) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12121:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleOptionalFeatureModifier27097); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getOptionalFeatureModifierAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12129:10: this_NUMBER_1= RULE_NUMBER
                    {
                    this_NUMBER_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleOptionalFeatureModifier27123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_1, grammarAccess.getOptionalFeatureModifierAccess().getNUMBERTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOptionalFeatureModifier"


    // $ANTLR start "entryRuleModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12144:1: entryRuleModifier returns [String current=null] : iv_ruleModifier= ruleModifier EOF ;
    public final String entryRuleModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12145:2: (iv_ruleModifier= ruleModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12146:2: iv_ruleModifier= ruleModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleModifier_in_entryRuleModifier27169);
            iv_ruleModifier=ruleModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModifier.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleModifier27180); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModifier"


    // $ANTLR start "ruleModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12153:1: ruleModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER ) ) ;
    public final AntlrDatatypeRuleToken ruleModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NOT_0=null;
        Token this_IDENT_1=null;
        Token this_NUMBER_2=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12156:28: ( ( (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12157:1: ( (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12157:1: ( (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12157:2: (this_NOT_0= RULE_NOT )? (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12157:2: (this_NOT_0= RULE_NOT )?
            int alt319=2;
            int LA319_0 = input.LA(1);

            if ( (LA319_0==RULE_NOT) ) {
                alt319=1;
            }
            switch (alt319) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12157:7: this_NOT_0= RULE_NOT
                    {
                    this_NOT_0=(Token)match(input,RULE_NOT,FollowSets002.FOLLOW_RULE_NOT_in_ruleModifier27221); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NOT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NOT_0, grammarAccess.getModifierAccess().getNOTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12164:3: (this_IDENT_1= RULE_IDENT | this_NUMBER_2= RULE_NUMBER )
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==RULE_IDENT) ) {
                alt320=1;
            }
            else if ( (LA320_0==RULE_NUMBER) ) {
                alt320=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 320, 0, input);

                throw nvae;
            }
            switch (alt320) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12164:8: this_IDENT_1= RULE_IDENT
                    {
                    this_IDENT_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleModifier27244); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_1, grammarAccess.getModifierAccess().getIDENTTerminalRuleCall_1_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12172:10: this_NUMBER_2= RULE_NUMBER
                    {
                    this_NUMBER_2=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleModifier27270); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NUMBER_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NUMBER_2, grammarAccess.getModifierAccess().getNUMBERTerminalRuleCall_1_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModifier"


    // $ANTLR start "entryRuleFeatureValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12187:1: entryRuleFeatureValue returns [String current=null] : iv_ruleFeatureValue= ruleFeatureValue EOF ;
    public final String entryRuleFeatureValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureValue = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12188:2: (iv_ruleFeatureValue= ruleFeatureValue EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12189:2: iv_ruleFeatureValue= ruleFeatureValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureValueRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleFeatureValue_in_entryRuleFeatureValue27317);
            iv_ruleFeatureValue=ruleFeatureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureValue.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleFeatureValue27328); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureValue"


    // $ANTLR start "ruleFeatureValue"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12196:1: ruleFeatureValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COLON_5= RULE_COLON | this_STRING_6= RULE_STRING | this_COMMA_7= RULE_COMMA | this_MINUS_8= RULE_MINUS | this_PLUS_9= RULE_PLUS | this_LPAREN_10= RULE_LPAREN | this_RPAREN_11= RULE_RPAREN | this_LBRACE_12= RULE_LBRACE | this_RBRACE_13= RULE_RBRACE | this_QUESTI_14= RULE_QUESTI | this_NOT_15= RULE_NOT | this_BAND_16= RULE_BAND | this_BOR_17= RULE_BOR | this_HASH_18= RULE_HASH | this_AT_19= RULE_AT | this_CARET_20= RULE_CARET | this_EQUALS_21= RULE_EQUALS | this_LESS_THAN_22= RULE_LESS_THAN | this_MORE_THAN_23= RULE_MORE_THAN | this_PERCENT_24= RULE_PERCENT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )+ ;
    public final AntlrDatatypeRuleToken ruleFeatureValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REST_0=null;
        Token this_IDENT_DOT_1=null;
        Token this_IDENT_2=null;
        Token this_NUMBER_3=null;
        Token this_WS_4=null;
        Token this_COLON_5=null;
        Token this_STRING_6=null;
        Token this_COMMA_7=null;
        Token this_MINUS_8=null;
        Token this_PLUS_9=null;
        Token this_LPAREN_10=null;
        Token this_RPAREN_11=null;
        Token this_LBRACE_12=null;
        Token this_RBRACE_13=null;
        Token this_QUESTI_14=null;
        Token this_NOT_15=null;
        Token this_BAND_16=null;
        Token this_BOR_17=null;
        Token this_HASH_18=null;
        Token this_AT_19=null;
        Token this_CARET_20=null;
        Token this_EQUALS_21=null;
        Token this_LESS_THAN_22=null;
        Token this_MORE_THAN_23=null;
        Token this_PERCENT_24=null;
        Token this_AND_25=null;
        Token this_OR_26=null;
        Token this_ESC_CHAR_27=null;
        Token this_ON_OFF_28=null;
        Token this_STATEMENT_TYPE_29=null;
        Token this_MAPPING_TYPE_30=null;
        Token this_OPTION_TYPE_31=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12199:28: ( (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COLON_5= RULE_COLON | this_STRING_6= RULE_STRING | this_COMMA_7= RULE_COMMA | this_MINUS_8= RULE_MINUS | this_PLUS_9= RULE_PLUS | this_LPAREN_10= RULE_LPAREN | this_RPAREN_11= RULE_RPAREN | this_LBRACE_12= RULE_LBRACE | this_RBRACE_13= RULE_RBRACE | this_QUESTI_14= RULE_QUESTI | this_NOT_15= RULE_NOT | this_BAND_16= RULE_BAND | this_BOR_17= RULE_BOR | this_HASH_18= RULE_HASH | this_AT_19= RULE_AT | this_CARET_20= RULE_CARET | this_EQUALS_21= RULE_EQUALS | this_LESS_THAN_22= RULE_LESS_THAN | this_MORE_THAN_23= RULE_MORE_THAN | this_PERCENT_24= RULE_PERCENT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12200:1: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COLON_5= RULE_COLON | this_STRING_6= RULE_STRING | this_COMMA_7= RULE_COMMA | this_MINUS_8= RULE_MINUS | this_PLUS_9= RULE_PLUS | this_LPAREN_10= RULE_LPAREN | this_RPAREN_11= RULE_RPAREN | this_LBRACE_12= RULE_LBRACE | this_RBRACE_13= RULE_RBRACE | this_QUESTI_14= RULE_QUESTI | this_NOT_15= RULE_NOT | this_BAND_16= RULE_BAND | this_BOR_17= RULE_BOR | this_HASH_18= RULE_HASH | this_AT_19= RULE_AT | this_CARET_20= RULE_CARET | this_EQUALS_21= RULE_EQUALS | this_LESS_THAN_22= RULE_LESS_THAN | this_MORE_THAN_23= RULE_MORE_THAN | this_PERCENT_24= RULE_PERCENT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12200:1: (this_REST_0= RULE_REST | this_IDENT_DOT_1= RULE_IDENT_DOT | this_IDENT_2= RULE_IDENT | this_NUMBER_3= RULE_NUMBER | this_WS_4= RULE_WS | this_COLON_5= RULE_COLON | this_STRING_6= RULE_STRING | this_COMMA_7= RULE_COMMA | this_MINUS_8= RULE_MINUS | this_PLUS_9= RULE_PLUS | this_LPAREN_10= RULE_LPAREN | this_RPAREN_11= RULE_RPAREN | this_LBRACE_12= RULE_LBRACE | this_RBRACE_13= RULE_RBRACE | this_QUESTI_14= RULE_QUESTI | this_NOT_15= RULE_NOT | this_BAND_16= RULE_BAND | this_BOR_17= RULE_BOR | this_HASH_18= RULE_HASH | this_AT_19= RULE_AT | this_CARET_20= RULE_CARET | this_EQUALS_21= RULE_EQUALS | this_LESS_THAN_22= RULE_LESS_THAN | this_MORE_THAN_23= RULE_MORE_THAN | this_PERCENT_24= RULE_PERCENT | this_AND_25= RULE_AND | this_OR_26= RULE_OR | this_ESC_CHAR_27= RULE_ESC_CHAR | this_ON_OFF_28= RULE_ON_OFF | this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_30= RULE_MAPPING_TYPE | this_OPTION_TYPE_31= RULE_OPTION_TYPE )+
            int cnt321=0;
            loop321:
            do {
                int alt321=33;
                switch ( input.LA(1) ) {
                case RULE_REST:
                    {
                    alt321=1;
                    }
                    break;
                case RULE_IDENT_DOT:
                    {
                    alt321=2;
                    }
                    break;
                case RULE_IDENT:
                    {
                    alt321=3;
                    }
                    break;
                case RULE_NUMBER:
                    {
                    alt321=4;
                    }
                    break;
                case RULE_WS:
                    {
                    alt321=5;
                    }
                    break;
                case RULE_COLON:
                    {
                    alt321=6;
                    }
                    break;
                case RULE_STRING:
                    {
                    alt321=7;
                    }
                    break;
                case RULE_COMMA:
                    {
                    alt321=8;
                    }
                    break;
                case RULE_MINUS:
                    {
                    alt321=9;
                    }
                    break;
                case RULE_PLUS:
                    {
                    alt321=10;
                    }
                    break;
                case RULE_LPAREN:
                    {
                    alt321=11;
                    }
                    break;
                case RULE_RPAREN:
                    {
                    alt321=12;
                    }
                    break;
                case RULE_LBRACE:
                    {
                    alt321=13;
                    }
                    break;
                case RULE_RBRACE:
                    {
                    alt321=14;
                    }
                    break;
                case RULE_QUESTI:
                    {
                    alt321=15;
                    }
                    break;
                case RULE_NOT:
                    {
                    alt321=16;
                    }
                    break;
                case RULE_BAND:
                    {
                    alt321=17;
                    }
                    break;
                case RULE_BOR:
                    {
                    alt321=18;
                    }
                    break;
                case RULE_HASH:
                    {
                    alt321=19;
                    }
                    break;
                case RULE_AT:
                    {
                    alt321=20;
                    }
                    break;
                case RULE_CARET:
                    {
                    alt321=21;
                    }
                    break;
                case RULE_EQUALS:
                    {
                    alt321=22;
                    }
                    break;
                case RULE_LESS_THAN:
                    {
                    alt321=23;
                    }
                    break;
                case RULE_MORE_THAN:
                    {
                    alt321=24;
                    }
                    break;
                case RULE_PERCENT:
                    {
                    alt321=25;
                    }
                    break;
                case RULE_AND:
                    {
                    alt321=26;
                    }
                    break;
                case RULE_OR:
                    {
                    alt321=27;
                    }
                    break;
                case RULE_ESC_CHAR:
                    {
                    alt321=28;
                    }
                    break;
                case RULE_ON_OFF:
                    {
                    alt321=29;
                    }
                    break;
                case RULE_STATEMENT_TYPE:
                    {
                    alt321=30;
                    }
                    break;
                case RULE_MAPPING_TYPE:
                    {
                    alt321=31;
                    }
                    break;
                case RULE_OPTION_TYPE:
                    {
                    alt321=32;
                    }
                    break;

                }

                switch (alt321) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12200:6: this_REST_0= RULE_REST
            	    {
            	    this_REST_0=(Token)match(input,RULE_REST,FollowSets002.FOLLOW_RULE_REST_in_ruleFeatureValue27368); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_REST_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_REST_0, grammarAccess.getFeatureValueAccess().getRESTTerminalRuleCall_0()); 
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12208:10: this_IDENT_DOT_1= RULE_IDENT_DOT
            	    {
            	    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleFeatureValue27394); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_IDENT_DOT_1);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_IDENT_DOT_1, grammarAccess.getFeatureValueAccess().getIDENT_DOTTerminalRuleCall_1()); 
            	          
            	    }

            	    }
            	    break;
            	case 3 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12216:10: this_IDENT_2= RULE_IDENT
            	    {
            	    this_IDENT_2=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleFeatureValue27420); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_IDENT_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_IDENT_2, grammarAccess.getFeatureValueAccess().getIDENTTerminalRuleCall_2()); 
            	          
            	    }

            	    }
            	    break;
            	case 4 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12224:10: this_NUMBER_3= RULE_NUMBER
            	    {
            	    this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleFeatureValue27446); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_NUMBER_3);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_NUMBER_3, grammarAccess.getFeatureValueAccess().getNUMBERTerminalRuleCall_3()); 
            	          
            	    }

            	    }
            	    break;
            	case 5 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12232:10: this_WS_4= RULE_WS
            	    {
            	    this_WS_4=(Token)match(input,RULE_WS,FollowSets002.FOLLOW_RULE_WS_in_ruleFeatureValue27472); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_WS_4);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_WS_4, grammarAccess.getFeatureValueAccess().getWSTerminalRuleCall_4()); 
            	          
            	    }

            	    }
            	    break;
            	case 6 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12240:10: this_COLON_5= RULE_COLON
            	    {
            	    this_COLON_5=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleFeatureValue27498); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_COLON_5);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COLON_5, grammarAccess.getFeatureValueAccess().getCOLONTerminalRuleCall_5()); 
            	          
            	    }

            	    }
            	    break;
            	case 7 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12248:10: this_STRING_6= RULE_STRING
            	    {
            	    this_STRING_6=(Token)match(input,RULE_STRING,FollowSets002.FOLLOW_RULE_STRING_in_ruleFeatureValue27524); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_STRING_6);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_STRING_6, grammarAccess.getFeatureValueAccess().getSTRINGTerminalRuleCall_6()); 
            	          
            	    }

            	    }
            	    break;
            	case 8 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12256:10: this_COMMA_7= RULE_COMMA
            	    {
            	    this_COMMA_7=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleFeatureValue27550); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_COMMA_7);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_COMMA_7, grammarAccess.getFeatureValueAccess().getCOMMATerminalRuleCall_7()); 
            	          
            	    }

            	    }
            	    break;
            	case 9 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12264:10: this_MINUS_8= RULE_MINUS
            	    {
            	    this_MINUS_8=(Token)match(input,RULE_MINUS,FollowSets002.FOLLOW_RULE_MINUS_in_ruleFeatureValue27576); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_MINUS_8);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_MINUS_8, grammarAccess.getFeatureValueAccess().getMINUSTerminalRuleCall_8()); 
            	          
            	    }

            	    }
            	    break;
            	case 10 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12272:10: this_PLUS_9= RULE_PLUS
            	    {
            	    this_PLUS_9=(Token)match(input,RULE_PLUS,FollowSets002.FOLLOW_RULE_PLUS_in_ruleFeatureValue27602); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_PLUS_9);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_PLUS_9, grammarAccess.getFeatureValueAccess().getPLUSTerminalRuleCall_9()); 
            	          
            	    }

            	    }
            	    break;
            	case 11 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12280:10: this_LPAREN_10= RULE_LPAREN
            	    {
            	    this_LPAREN_10=(Token)match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_ruleFeatureValue27628); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_LPAREN_10);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_LPAREN_10, grammarAccess.getFeatureValueAccess().getLPARENTerminalRuleCall_10()); 
            	          
            	    }

            	    }
            	    break;
            	case 12 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12288:10: this_RPAREN_11= RULE_RPAREN
            	    {
            	    this_RPAREN_11=(Token)match(input,RULE_RPAREN,FollowSets002.FOLLOW_RULE_RPAREN_in_ruleFeatureValue27654); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_RPAREN_11);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_RPAREN_11, grammarAccess.getFeatureValueAccess().getRPARENTerminalRuleCall_11()); 
            	          
            	    }

            	    }
            	    break;
            	case 13 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12296:10: this_LBRACE_12= RULE_LBRACE
            	    {
            	    this_LBRACE_12=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_ruleFeatureValue27680); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_LBRACE_12);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_LBRACE_12, grammarAccess.getFeatureValueAccess().getLBRACETerminalRuleCall_12()); 
            	          
            	    }

            	    }
            	    break;
            	case 14 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12304:10: this_RBRACE_13= RULE_RBRACE
            	    {
            	    this_RBRACE_13=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_ruleFeatureValue27706); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_RBRACE_13);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_RBRACE_13, grammarAccess.getFeatureValueAccess().getRBRACETerminalRuleCall_13()); 
            	          
            	    }

            	    }
            	    break;
            	case 15 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12312:10: this_QUESTI_14= RULE_QUESTI
            	    {
            	    this_QUESTI_14=(Token)match(input,RULE_QUESTI,FollowSets002.FOLLOW_RULE_QUESTI_in_ruleFeatureValue27732); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_QUESTI_14);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_QUESTI_14, grammarAccess.getFeatureValueAccess().getQUESTITerminalRuleCall_14()); 
            	          
            	    }

            	    }
            	    break;
            	case 16 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12320:10: this_NOT_15= RULE_NOT
            	    {
            	    this_NOT_15=(Token)match(input,RULE_NOT,FollowSets002.FOLLOW_RULE_NOT_in_ruleFeatureValue27758); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_NOT_15);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_NOT_15, grammarAccess.getFeatureValueAccess().getNOTTerminalRuleCall_15()); 
            	          
            	    }

            	    }
            	    break;
            	case 17 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12328:10: this_BAND_16= RULE_BAND
            	    {
            	    this_BAND_16=(Token)match(input,RULE_BAND,FollowSets002.FOLLOW_RULE_BAND_in_ruleFeatureValue27784); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_BAND_16);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_BAND_16, grammarAccess.getFeatureValueAccess().getBANDTerminalRuleCall_16()); 
            	          
            	    }

            	    }
            	    break;
            	case 18 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12336:10: this_BOR_17= RULE_BOR
            	    {
            	    this_BOR_17=(Token)match(input,RULE_BOR,FollowSets002.FOLLOW_RULE_BOR_in_ruleFeatureValue27810); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_BOR_17);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_BOR_17, grammarAccess.getFeatureValueAccess().getBORTerminalRuleCall_17()); 
            	          
            	    }

            	    }
            	    break;
            	case 19 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12344:10: this_HASH_18= RULE_HASH
            	    {
            	    this_HASH_18=(Token)match(input,RULE_HASH,FollowSets002.FOLLOW_RULE_HASH_in_ruleFeatureValue27836); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_HASH_18);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_HASH_18, grammarAccess.getFeatureValueAccess().getHASHTerminalRuleCall_18()); 
            	          
            	    }

            	    }
            	    break;
            	case 20 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12352:10: this_AT_19= RULE_AT
            	    {
            	    this_AT_19=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_ruleFeatureValue27862); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_AT_19);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_AT_19, grammarAccess.getFeatureValueAccess().getATTerminalRuleCall_19()); 
            	          
            	    }

            	    }
            	    break;
            	case 21 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12360:10: this_CARET_20= RULE_CARET
            	    {
            	    this_CARET_20=(Token)match(input,RULE_CARET,FollowSets002.FOLLOW_RULE_CARET_in_ruleFeatureValue27888); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_CARET_20);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_CARET_20, grammarAccess.getFeatureValueAccess().getCARETTerminalRuleCall_20()); 
            	          
            	    }

            	    }
            	    break;
            	case 22 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12368:10: this_EQUALS_21= RULE_EQUALS
            	    {
            	    this_EQUALS_21=(Token)match(input,RULE_EQUALS,FollowSets002.FOLLOW_RULE_EQUALS_in_ruleFeatureValue27914); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_EQUALS_21);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_EQUALS_21, grammarAccess.getFeatureValueAccess().getEQUALSTerminalRuleCall_21()); 
            	          
            	    }

            	    }
            	    break;
            	case 23 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12376:10: this_LESS_THAN_22= RULE_LESS_THAN
            	    {
            	    this_LESS_THAN_22=(Token)match(input,RULE_LESS_THAN,FollowSets002.FOLLOW_RULE_LESS_THAN_in_ruleFeatureValue27940); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_LESS_THAN_22);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_LESS_THAN_22, grammarAccess.getFeatureValueAccess().getLESS_THANTerminalRuleCall_22()); 
            	          
            	    }

            	    }
            	    break;
            	case 24 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12384:10: this_MORE_THAN_23= RULE_MORE_THAN
            	    {
            	    this_MORE_THAN_23=(Token)match(input,RULE_MORE_THAN,FollowSets002.FOLLOW_RULE_MORE_THAN_in_ruleFeatureValue27966); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_MORE_THAN_23);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_MORE_THAN_23, grammarAccess.getFeatureValueAccess().getMORE_THANTerminalRuleCall_23()); 
            	          
            	    }

            	    }
            	    break;
            	case 25 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12392:10: this_PERCENT_24= RULE_PERCENT
            	    {
            	    this_PERCENT_24=(Token)match(input,RULE_PERCENT,FollowSets002.FOLLOW_RULE_PERCENT_in_ruleFeatureValue27992); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_PERCENT_24);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_PERCENT_24, grammarAccess.getFeatureValueAccess().getPERCENTTerminalRuleCall_24()); 
            	          
            	    }

            	    }
            	    break;
            	case 26 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12400:10: this_AND_25= RULE_AND
            	    {
            	    this_AND_25=(Token)match(input,RULE_AND,FollowSets002.FOLLOW_RULE_AND_in_ruleFeatureValue28018); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_AND_25);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_AND_25, grammarAccess.getFeatureValueAccess().getANDTerminalRuleCall_25()); 
            	          
            	    }

            	    }
            	    break;
            	case 27 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12408:10: this_OR_26= RULE_OR
            	    {
            	    this_OR_26=(Token)match(input,RULE_OR,FollowSets002.FOLLOW_RULE_OR_in_ruleFeatureValue28044); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_OR_26);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_OR_26, grammarAccess.getFeatureValueAccess().getORTerminalRuleCall_26()); 
            	          
            	    }

            	    }
            	    break;
            	case 28 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12416:10: this_ESC_CHAR_27= RULE_ESC_CHAR
            	    {
            	    this_ESC_CHAR_27=(Token)match(input,RULE_ESC_CHAR,FollowSets002.FOLLOW_RULE_ESC_CHAR_in_ruleFeatureValue28070); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ESC_CHAR_27);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ESC_CHAR_27, grammarAccess.getFeatureValueAccess().getESC_CHARTerminalRuleCall_27()); 
            	          
            	    }

            	    }
            	    break;
            	case 29 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12424:10: this_ON_OFF_28= RULE_ON_OFF
            	    {
            	    this_ON_OFF_28=(Token)match(input,RULE_ON_OFF,FollowSets002.FOLLOW_RULE_ON_OFF_in_ruleFeatureValue28096); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ON_OFF_28);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ON_OFF_28, grammarAccess.getFeatureValueAccess().getON_OFFTerminalRuleCall_28()); 
            	          
            	    }

            	    }
            	    break;
            	case 30 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12432:10: this_STATEMENT_TYPE_29= RULE_STATEMENT_TYPE
            	    {
            	    this_STATEMENT_TYPE_29=(Token)match(input,RULE_STATEMENT_TYPE,FollowSets002.FOLLOW_RULE_STATEMENT_TYPE_in_ruleFeatureValue28122); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_STATEMENT_TYPE_29);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_STATEMENT_TYPE_29, grammarAccess.getFeatureValueAccess().getSTATEMENT_TYPETerminalRuleCall_29()); 
            	          
            	    }

            	    }
            	    break;
            	case 31 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12440:10: this_MAPPING_TYPE_30= RULE_MAPPING_TYPE
            	    {
            	    this_MAPPING_TYPE_30=(Token)match(input,RULE_MAPPING_TYPE,FollowSets002.FOLLOW_RULE_MAPPING_TYPE_in_ruleFeatureValue28148); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_MAPPING_TYPE_30);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_MAPPING_TYPE_30, grammarAccess.getFeatureValueAccess().getMAPPING_TYPETerminalRuleCall_30()); 
            	          
            	    }

            	    }
            	    break;
            	case 32 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12448:10: this_OPTION_TYPE_31= RULE_OPTION_TYPE
            	    {
            	    this_OPTION_TYPE_31=(Token)match(input,RULE_OPTION_TYPE,FollowSets002.FOLLOW_RULE_OPTION_TYPE_in_ruleFeatureValue28174); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_OPTION_TYPE_31);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_OPTION_TYPE_31, grammarAccess.getFeatureValueAccess().getOPTION_TYPETerminalRuleCall_31()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt321 >= 1 ) break loop321;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(321, input);
                        throw eee;
                }
                cnt321++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureValue"


    // $ANTLR start "entryRulePojoType"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12463:1: entryRulePojoType returns [EObject current=null] : iv_rulePojoType= rulePojoType EOF ;
    public final EObject entryRulePojoType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoType = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12464:2: (iv_rulePojoType= rulePojoType EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12465:2: iv_rulePojoType= rulePojoType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoTypeRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoType_in_entryRulePojoType28220);
            iv_rulePojoType=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoType; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoType28230); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoType"


    // $ANTLR start "rulePojoType"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12472:1: rulePojoType returns [EObject current=null] : ( ( ( ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) ) ) | ( (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ) ) ( (lv_array_10_0= '[]' ) )? ) ;
    public final EObject rulePojoType() throws RecognitionException {
        EObject current = null;

        Token lv_native_0_1=null;
        Token lv_native_0_2=null;
        Token lv_native_0_3=null;
        Token lv_native_0_4=null;
        Token lv_native_0_5=null;
        Token lv_native_0_6=null;
        Token lv_native_0_7=null;
        Token lv_native_0_8=null;
        Token lv_native_0_9=null;
        Token this_COLON_1=null;
        Token this_COLON_2=null;
        Token otherlv_3=null;
        Token this_LESS_THAN_5=null;
        Token this_COLON_6=null;
        Token otherlv_7=null;
        Token this_MORE_THAN_9=null;
        Token lv_array_10_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12475:28: ( ( ( ( ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) ) ) | ( (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ) ) ( (lv_array_10_0= '[]' ) )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12476:1: ( ( ( ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) ) ) | ( (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ) ) ( (lv_array_10_0= '[]' ) )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12476:1: ( ( ( ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) ) ) | ( (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ) ) ( (lv_array_10_0= '[]' ) )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12476:2: ( ( ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) ) ) | ( (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ) ) ( (lv_array_10_0= '[]' ) )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12476:2: ( ( ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) ) ) | ( (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? ) )
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( ((LA326_0>=133 && LA326_0<=141)) ) {
                alt326=1;
            }
            else if ( (LA326_0==RULE_COLON) ) {
                alt326=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 326, 0, input);

                throw nvae;
            }
            switch (alt326) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12476:3: ( ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12476:3: ( ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12477:1: ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12477:1: ( (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12478:1: (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12478:1: (lv_native_0_1= '_void' | lv_native_0_2= '_char' | lv_native_0_3= '_byte' | lv_native_0_4= '_short' | lv_native_0_5= '_int' | lv_native_0_6= '_long' | lv_native_0_7= '_float' | lv_native_0_8= '_double' | lv_native_0_9= '_boolean' )
                    int alt322=9;
                    switch ( input.LA(1) ) {
                    case 133:
                        {
                        alt322=1;
                        }
                        break;
                    case 134:
                        {
                        alt322=2;
                        }
                        break;
                    case 135:
                        {
                        alt322=3;
                        }
                        break;
                    case 136:
                        {
                        alt322=4;
                        }
                        break;
                    case 137:
                        {
                        alt322=5;
                        }
                        break;
                    case 138:
                        {
                        alt322=6;
                        }
                        break;
                    case 139:
                        {
                        alt322=7;
                        }
                        break;
                    case 140:
                        {
                        alt322=8;
                        }
                        break;
                    case 141:
                        {
                        alt322=9;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 322, 0, input);

                        throw nvae;
                    }

                    switch (alt322) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12479:3: lv_native_0_1= '_void'
                            {
                            lv_native_0_1=(Token)match(input,133,FollowSets002.FOLLOW_133_in_rulePojoType28276); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_0_1, grammarAccess.getPojoTypeAccess().getNative_voidKeyword_0_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_0_1, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12491:8: lv_native_0_2= '_char'
                            {
                            lv_native_0_2=(Token)match(input,134,FollowSets002.FOLLOW_134_in_rulePojoType28305); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_0_2, grammarAccess.getPojoTypeAccess().getNative_charKeyword_0_0_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_0_2, null);
                              	    
                            }

                            }
                            break;
                        case 3 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12503:8: lv_native_0_3= '_byte'
                            {
                            lv_native_0_3=(Token)match(input,135,FollowSets002.FOLLOW_135_in_rulePojoType28334); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_0_3, grammarAccess.getPojoTypeAccess().getNative_byteKeyword_0_0_0_2());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_0_3, null);
                              	    
                            }

                            }
                            break;
                        case 4 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12515:8: lv_native_0_4= '_short'
                            {
                            lv_native_0_4=(Token)match(input,136,FollowSets002.FOLLOW_136_in_rulePojoType28363); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_0_4, grammarAccess.getPojoTypeAccess().getNative_shortKeyword_0_0_0_3());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_0_4, null);
                              	    
                            }

                            }
                            break;
                        case 5 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12527:8: lv_native_0_5= '_int'
                            {
                            lv_native_0_5=(Token)match(input,137,FollowSets002.FOLLOW_137_in_rulePojoType28392); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_0_5, grammarAccess.getPojoTypeAccess().getNative_intKeyword_0_0_0_4());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_0_5, null);
                              	    
                            }

                            }
                            break;
                        case 6 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12539:8: lv_native_0_6= '_long'
                            {
                            lv_native_0_6=(Token)match(input,138,FollowSets002.FOLLOW_138_in_rulePojoType28421); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_0_6, grammarAccess.getPojoTypeAccess().getNative_longKeyword_0_0_0_5());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_0_6, null);
                              	    
                            }

                            }
                            break;
                        case 7 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12551:8: lv_native_0_7= '_float'
                            {
                            lv_native_0_7=(Token)match(input,139,FollowSets002.FOLLOW_139_in_rulePojoType28450); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_0_7, grammarAccess.getPojoTypeAccess().getNative_floatKeyword_0_0_0_6());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_0_7, null);
                              	    
                            }

                            }
                            break;
                        case 8 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12563:8: lv_native_0_8= '_double'
                            {
                            lv_native_0_8=(Token)match(input,140,FollowSets002.FOLLOW_140_in_rulePojoType28479); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_0_8, grammarAccess.getPojoTypeAccess().getNative_doubleKeyword_0_0_0_7());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_0_8, null);
                              	    
                            }

                            }
                            break;
                        case 9 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12575:8: lv_native_0_9= '_boolean'
                            {
                            lv_native_0_9=(Token)match(input,141,FollowSets002.FOLLOW_141_in_rulePojoType28508); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_0_9, grammarAccess.getPojoTypeAccess().getNative_booleanKeyword_0_0_0_8());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_0_9, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12591:6: ( (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12591:6: ( (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12591:7: (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12591:7: (this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12591:8: this_COLON_1= RULE_COLON ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) )
                    {
                    this_COLON_1=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoType28543); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_1, grammarAccess.getPojoTypeAccess().getCOLONTerminalRuleCall_0_1_0_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12595:1: ( (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) )
                    int alt323=2;
                    int LA323_0 = input.LA(1);

                    if ( (LA323_0==RULE_COLON) ) {
                        alt323=1;
                    }
                    else if ( (LA323_0==RULE_IDENT||LA323_0==RULE_IDENT_DOT) ) {
                        alt323=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 323, 0, input);

                        throw nvae;
                    }
                    switch (alt323) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12595:2: (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12595:2: (this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12595:3: this_COLON_2= RULE_COLON ( (otherlv_3= RULE_IDENT ) )
                            {
                            this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoType28555); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_2, grammarAccess.getPojoTypeAccess().getCOLONTerminalRuleCall_0_1_0_1_0_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12599:1: ( (otherlv_3= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12600:1: (otherlv_3= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12600:1: (otherlv_3= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12601:3: otherlv_3= RULE_IDENT
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                      
                            }
                            otherlv_3=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoType28574); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		newLeafNode(otherlv_3, grammarAccess.getPojoTypeAccess().getRefPojoEntityCrossReference_0_1_0_1_0_1_0()); 
                              	
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12613:6: ( ( ruleQualifiedName ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12613:6: ( ( ruleQualifiedName ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12614:1: ( ruleQualifiedName )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12614:1: ( ruleQualifiedName )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12615:3: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoTypeRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getPojoTypeAccess().getTypeJvmTypeCrossReference_0_1_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_rulePojoType28604);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12628:4: (this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN )?
                    int alt325=2;
                    int LA325_0 = input.LA(1);

                    if ( (LA325_0==RULE_LESS_THAN) ) {
                        alt325=1;
                    }
                    switch (alt325) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12628:5: this_LESS_THAN_5= RULE_LESS_THAN ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_9= RULE_MORE_THAN
                            {
                            this_LESS_THAN_5=(Token)match(input,RULE_LESS_THAN,FollowSets002.FOLLOW_RULE_LESS_THAN_in_rulePojoType28618); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LESS_THAN_5, grammarAccess.getPojoTypeAccess().getLESS_THANTerminalRuleCall_0_1_1_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12632:1: ( (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) )
                            int alt324=2;
                            int LA324_0 = input.LA(1);

                            if ( (LA324_0==RULE_COLON) ) {
                                alt324=1;
                            }
                            else if ( (LA324_0==RULE_IDENT||LA324_0==RULE_IDENT_DOT) ) {
                                alt324=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 324, 0, input);

                                throw nvae;
                            }
                            switch (alt324) {
                                case 1 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12632:2: (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12632:2: (this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) ) )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12632:3: this_COLON_6= RULE_COLON ( (otherlv_7= RULE_IDENT ) )
                                    {
                                    this_COLON_6=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoType28630); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_COLON_6, grammarAccess.getPojoTypeAccess().getCOLONTerminalRuleCall_0_1_1_1_0_0()); 
                                          
                                    }
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12636:1: ( (otherlv_7= RULE_IDENT ) )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12637:1: (otherlv_7= RULE_IDENT )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12637:1: (otherlv_7= RULE_IDENT )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12638:3: otherlv_7= RULE_IDENT
                                    {
                                    if ( state.backtracking==0 ) {

                                      			if (current==null) {
                                      	            current = createModelElement(grammarAccess.getPojoTypeRule());
                                      	        }
                                              
                                    }
                                    otherlv_7=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoType28649); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		newLeafNode(otherlv_7, grammarAccess.getPojoTypeAccess().getGrefPojoEntityCrossReference_0_1_1_1_0_1_0()); 
                                      	
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12650:6: ( ( ruleQualifiedName ) )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12650:6: ( ( ruleQualifiedName ) )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12651:1: ( ruleQualifiedName )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12651:1: ( ruleQualifiedName )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12652:3: ruleQualifiedName
                                    {
                                    if ( state.backtracking==0 ) {

                                      			if (current==null) {
                                      	            current = createModelElement(grammarAccess.getPojoTypeRule());
                                      	        }
                                              
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getPojoTypeAccess().getGtypeJvmTypeCrossReference_0_1_1_1_1_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_rulePojoType28679);
                                    ruleQualifiedName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {
                                       
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            this_MORE_THAN_9=(Token)match(input,RULE_MORE_THAN,FollowSets002.FOLLOW_RULE_MORE_THAN_in_rulePojoType28691); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MORE_THAN_9, grammarAccess.getPojoTypeAccess().getMORE_THANTerminalRuleCall_0_1_1_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12669:5: ( (lv_array_10_0= '[]' ) )?
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==142) ) {
                alt327=1;
            }
            switch (alt327) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12670:1: (lv_array_10_0= '[]' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12670:1: (lv_array_10_0= '[]' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12671:3: lv_array_10_0= '[]'
                    {
                    lv_array_10_0=(Token)match(input,142,FollowSets002.FOLLOW_142_in_rulePojoType28712); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_array_10_0, grammarAccess.getPojoTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoTypeRule());
                      	        }
                             		setWithLastConsumed(current, "array", true, "[]");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoType"


    // $ANTLR start "entryRulePackageDeclaration"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12692:1: entryRulePackageDeclaration returns [EObject current=null] : iv_rulePackageDeclaration= rulePackageDeclaration EOF ;
    public final EObject entryRulePackageDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageDeclaration = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12696:2: (iv_rulePackageDeclaration= rulePackageDeclaration EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12697:2: iv_rulePackageDeclaration= rulePackageDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageDeclarationRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePackageDeclaration_in_entryRulePackageDeclaration28768);
            iv_rulePackageDeclaration=rulePackageDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageDeclaration; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePackageDeclaration28778); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePackageDeclaration"


    // $ANTLR start "rulePackageDeclaration"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12707:1: rulePackageDeclaration returns [EObject current=null] : (otherlv_0= 'package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) (otherlv_2= 'suffix' ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) )? this_LBRACE_4= RULE_LBRACE ( (lv_elements_5_0= ruleAbstractPojoEntity ) )* this_RBRACE_6= RULE_RBRACE ) ;
    public final EObject rulePackageDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_1=null;
        Token lv_name_1_2=null;
        Token otherlv_2=null;
        Token lv_suffix_3_1=null;
        Token lv_suffix_3_2=null;
        Token this_LBRACE_4=null;
        Token this_RBRACE_6=null;
        EObject lv_elements_5_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12711:28: ( (otherlv_0= 'package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) (otherlv_2= 'suffix' ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) )? this_LBRACE_4= RULE_LBRACE ( (lv_elements_5_0= ruleAbstractPojoEntity ) )* this_RBRACE_6= RULE_RBRACE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12712:1: (otherlv_0= 'package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) (otherlv_2= 'suffix' ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) )? this_LBRACE_4= RULE_LBRACE ( (lv_elements_5_0= ruleAbstractPojoEntity ) )* this_RBRACE_6= RULE_RBRACE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12712:1: (otherlv_0= 'package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) (otherlv_2= 'suffix' ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) )? this_LBRACE_4= RULE_LBRACE ( (lv_elements_5_0= ruleAbstractPojoEntity ) )* this_RBRACE_6= RULE_RBRACE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12712:3: otherlv_0= 'package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) (otherlv_2= 'suffix' ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) )? this_LBRACE_4= RULE_LBRACE ( (lv_elements_5_0= ruleAbstractPojoEntity ) )* this_RBRACE_6= RULE_RBRACE
            {
            otherlv_0=(Token)match(input,143,FollowSets002.FOLLOW_143_in_rulePackageDeclaration28819); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12716:1: ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12717:1: ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12717:1: ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12718:1: (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12718:1: (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT )
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==RULE_IDENT) ) {
                alt328=1;
            }
            else if ( (LA328_0==RULE_IDENT_DOT) ) {
                alt328=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 328, 0, input);

                throw nvae;
            }
            switch (alt328) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12719:3: lv_name_1_1= RULE_IDENT
                    {
                    lv_name_1_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePackageDeclaration28838); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_1, grammarAccess.getPackageDeclarationAccess().getNameIDENTTerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPackageDeclarationRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12734:8: lv_name_1_2= RULE_IDENT_DOT
                    {
                    lv_name_1_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_rulePackageDeclaration28858); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_2, grammarAccess.getPackageDeclarationAccess().getNameIDENT_DOTTerminalRuleCall_1_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPackageDeclarationRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12752:2: (otherlv_2= 'suffix' ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) ) )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==144) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12752:4: otherlv_2= 'suffix' ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) )
                    {
                    otherlv_2=(Token)match(input,144,FollowSets002.FOLLOW_144_in_rulePackageDeclaration28879); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getSuffixKeyword_2_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12756:1: ( ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12757:1: ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12757:1: ( (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12758:1: (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12758:1: (lv_suffix_3_1= RULE_IDENT | lv_suffix_3_2= RULE_NUMBER )
                    int alt329=2;
                    int LA329_0 = input.LA(1);

                    if ( (LA329_0==RULE_IDENT) ) {
                        alt329=1;
                    }
                    else if ( (LA329_0==RULE_NUMBER) ) {
                        alt329=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 329, 0, input);

                        throw nvae;
                    }
                    switch (alt329) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12759:3: lv_suffix_3_1= RULE_IDENT
                            {
                            lv_suffix_3_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePackageDeclaration28898); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_suffix_3_1, grammarAccess.getPackageDeclarationAccess().getSuffixIDENTTerminalRuleCall_2_1_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPackageDeclarationRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"suffix",
                                      		lv_suffix_3_1, 
                                      		"IDENT");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12774:8: lv_suffix_3_2= RULE_NUMBER
                            {
                            lv_suffix_3_2=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePackageDeclaration28918); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_suffix_3_2, grammarAccess.getPackageDeclarationAccess().getSuffixNUMBERTerminalRuleCall_2_1_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPackageDeclarationRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"suffix",
                                      		lv_suffix_3_2, 
                                      		"NUMBER");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }

            this_LBRACE_4=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_rulePackageDeclaration28939); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LBRACE_4, grammarAccess.getPackageDeclarationAccess().getLBRACETerminalRuleCall_3()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12796:1: ( (lv_elements_5_0= ruleAbstractPojoEntity ) )*
            loop331:
            do {
                int alt331=2;
                int LA331_0 = input.LA(1);

                if ( (LA331_0==RULE_AT||LA331_0==106||LA331_0==129||LA331_0==143||(LA331_0>=145 && LA331_0<=146)||(LA331_0>=152 && LA331_0<=154)||(LA331_0>=164 && LA331_0<=165)) ) {
                    alt331=1;
                }


                switch (alt331) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12797:1: (lv_elements_5_0= ruleAbstractPojoEntity )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12797:1: (lv_elements_5_0= ruleAbstractPojoEntity )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12798:3: lv_elements_5_0= ruleAbstractPojoEntity
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getElementsAbstractPojoEntityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleAbstractPojoEntity_in_rulePackageDeclaration28959);
            	    lv_elements_5_0=ruleAbstractPojoEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_5_0, 
            	              		"AbstractPojoEntity");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop331;
                }
            } while (true);

            this_RBRACE_6=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_rulePackageDeclaration28971); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RBRACE_6, grammarAccess.getPackageDeclarationAccess().getRBRACETerminalRuleCall_5()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePackageDeclaration"


    // $ANTLR start "entryRuleAnnotation"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12829:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12830:2: (iv_ruleAnnotation= ruleAnnotation EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12831:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_entryRuleAnnotation29010);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleAnnotation29020); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12838:1: ruleAnnotation returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) (this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_features_4_0= ruleAnnotationProperty ) )+ )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token this_COLON_1=null;
        Token this_COLON_2=null;
        Token this_COLON_3=null;
        EObject lv_features_4_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12841:28: ( ( ( ( ruleQualifiedName ) ) (this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_features_4_0= ruleAnnotationProperty ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12842:1: ( ( ( ruleQualifiedName ) ) (this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_features_4_0= ruleAnnotationProperty ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12842:1: ( ( ( ruleQualifiedName ) ) (this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_features_4_0= ruleAnnotationProperty ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12842:2: ( ( ruleQualifiedName ) ) (this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_features_4_0= ruleAnnotationProperty ) )+ )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12842:2: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12843:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12843:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12844:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAnnotationRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotationAccess().getTypeJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleAnnotation29068);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12857:2: (this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_features_4_0= ruleAnnotationProperty ) )+ )?
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==RULE_COLON) ) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12857:3: this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_features_4_0= ruleAnnotationProperty ) )+
                    {
                    this_COLON_1=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleAnnotation29080); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_1, grammarAccess.getAnnotationAccess().getCOLONTerminalRuleCall_1_0()); 
                          
                    }
                    this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleAnnotation29090); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_2, grammarAccess.getAnnotationAccess().getCOLONTerminalRuleCall_1_1()); 
                          
                    }
                    this_COLON_3=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleAnnotation29100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_3, grammarAccess.getAnnotationAccess().getCOLONTerminalRuleCall_1_2()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12869:1: ( (lv_features_4_0= ruleAnnotationProperty ) )+
                    int cnt332=0;
                    loop332:
                    do {
                        int alt332=2;
                        alt332 = dfa332.predict(input);
                        switch (alt332) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12870:1: (lv_features_4_0= ruleAnnotationProperty )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12870:1: (lv_features_4_0= ruleAnnotationProperty )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12871:3: lv_features_4_0= ruleAnnotationProperty
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotationAccess().getFeaturesAnnotationPropertyParserRuleCall_1_3_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets002.FOLLOW_ruleAnnotationProperty_in_ruleAnnotation29120);
                    	    lv_features_4_0=ruleAnnotationProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"features",
                    	              		lv_features_4_0, 
                    	              		"AnnotationProperty");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt332 >= 1 ) break loop332;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(332, input);
                                throw eee;
                        }
                        cnt332++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleAnnotationProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12895:1: entryRuleAnnotationProperty returns [EObject current=null] : iv_ruleAnnotationProperty= ruleAnnotationProperty EOF ;
    public final EObject entryRuleAnnotationProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12896:2: (iv_ruleAnnotationProperty= ruleAnnotationProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12897:2: iv_ruleAnnotationProperty= ruleAnnotationProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationPropertyRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleAnnotationProperty_in_entryRuleAnnotationProperty29159);
            iv_ruleAnnotationProperty=ruleAnnotationProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationProperty; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleAnnotationProperty29169); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationProperty"


    // $ANTLR start "ruleAnnotationProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12904:1: ruleAnnotationProperty returns [EObject current=null] : ( (this_COMMA_0= RULE_COMMA )? ( (lv_name_1_0= RULE_IDENT ) ) (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) )? ( ( (lv_number_6_0= RULE_NUMBER ) ) | ( (lv_value_7_0= RULE_STRING_VALUE ) ) | ( (lv_constant_8_0= RULE_IDENT ) ) ) ) ;
    public final EObject ruleAnnotationProperty() throws RecognitionException {
        EObject current = null;

        Token this_COMMA_0=null;
        Token lv_name_1_0=null;
        Token this_COLON_2=null;
        Token this_COLON_3=null;
        Token otherlv_4=null;
        Token lv_number_6_0=null;
        Token lv_value_7_0=null;
        Token lv_constant_8_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12907:28: ( ( (this_COMMA_0= RULE_COMMA )? ( (lv_name_1_0= RULE_IDENT ) ) (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) )? ( ( (lv_number_6_0= RULE_NUMBER ) ) | ( (lv_value_7_0= RULE_STRING_VALUE ) ) | ( (lv_constant_8_0= RULE_IDENT ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12908:1: ( (this_COMMA_0= RULE_COMMA )? ( (lv_name_1_0= RULE_IDENT ) ) (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) )? ( ( (lv_number_6_0= RULE_NUMBER ) ) | ( (lv_value_7_0= RULE_STRING_VALUE ) ) | ( (lv_constant_8_0= RULE_IDENT ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12908:1: ( (this_COMMA_0= RULE_COMMA )? ( (lv_name_1_0= RULE_IDENT ) ) (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) )? ( ( (lv_number_6_0= RULE_NUMBER ) ) | ( (lv_value_7_0= RULE_STRING_VALUE ) ) | ( (lv_constant_8_0= RULE_IDENT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12908:2: (this_COMMA_0= RULE_COMMA )? ( (lv_name_1_0= RULE_IDENT ) ) (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) )? ( ( (lv_number_6_0= RULE_NUMBER ) ) | ( (lv_value_7_0= RULE_STRING_VALUE ) ) | ( (lv_constant_8_0= RULE_IDENT ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12908:2: (this_COMMA_0= RULE_COMMA )?
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( (LA334_0==RULE_COMMA) ) {
                alt334=1;
            }
            switch (alt334) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12908:3: this_COMMA_0= RULE_COMMA
                    {
                    this_COMMA_0=(Token)match(input,RULE_COMMA,FollowSets002.FOLLOW_RULE_COMMA_in_ruleAnnotationProperty29206); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COMMA_0, grammarAccess.getAnnotationPropertyAccess().getCOMMATerminalRuleCall_0()); 
                          
                    }

                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12912:3: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12913:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12913:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12914:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29224); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getAnnotationPropertyAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12930:2: (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) )?
            int alt336=2;
            int LA336_0 = input.LA(1);

            if ( (LA336_0==RULE_COLON) ) {
                alt336=1;
            }
            switch (alt336) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12930:3: this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) )
                    {
                    this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleAnnotationProperty29241); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_2, grammarAccess.getAnnotationPropertyAccess().getCOLONTerminalRuleCall_2_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12934:1: ( (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) )
                    int alt335=2;
                    int LA335_0 = input.LA(1);

                    if ( (LA335_0==RULE_COLON) ) {
                        alt335=1;
                    }
                    else if ( (LA335_0==RULE_IDENT||LA335_0==RULE_IDENT_DOT) ) {
                        alt335=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 335, 0, input);

                        throw nvae;
                    }
                    switch (alt335) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12934:2: (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12934:2: (this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12934:3: this_COLON_3= RULE_COLON ( (otherlv_4= RULE_IDENT ) )
                            {
                            this_COLON_3=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleAnnotationProperty29253); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_3, grammarAccess.getAnnotationPropertyAccess().getCOLONTerminalRuleCall_2_1_0_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12938:1: ( (otherlv_4= RULE_IDENT ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12939:1: (otherlv_4= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12939:1: (otherlv_4= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12940:3: otherlv_4= RULE_IDENT
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                              	        }
                                      
                            }
                            otherlv_4=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29272); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		newLeafNode(otherlv_4, grammarAccess.getAnnotationPropertyAccess().getRefPojoEntityCrossReference_2_1_0_1_0()); 
                              	
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12952:6: ( ( ruleQualifiedName ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12952:6: ( ( ruleQualifiedName ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12953:1: ( ruleQualifiedName )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12953:1: ( ruleQualifiedName )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12954:3: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationPropertyAccess().getTypeJvmTypeCrossReference_2_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleAnnotationProperty29302);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12967:5: ( ( (lv_number_6_0= RULE_NUMBER ) ) | ( (lv_value_7_0= RULE_STRING_VALUE ) ) | ( (lv_constant_8_0= RULE_IDENT ) ) )
            int alt337=3;
            switch ( input.LA(1) ) {
            case RULE_NUMBER:
                {
                alt337=1;
                }
                break;
            case RULE_STRING_VALUE:
                {
                alt337=2;
                }
                break;
            case RULE_IDENT:
                {
                alt337=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 337, 0, input);

                throw nvae;
            }

            switch (alt337) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12967:6: ( (lv_number_6_0= RULE_NUMBER ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12967:6: ( (lv_number_6_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12968:1: (lv_number_6_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12968:1: (lv_number_6_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12969:3: lv_number_6_0= RULE_NUMBER
                    {
                    lv_number_6_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleAnnotationProperty29323); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_number_6_0, grammarAccess.getAnnotationPropertyAccess().getNumberNUMBERTerminalRuleCall_3_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"number",
                              		lv_number_6_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12986:6: ( (lv_value_7_0= RULE_STRING_VALUE ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12986:6: ( (lv_value_7_0= RULE_STRING_VALUE ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12987:1: (lv_value_7_0= RULE_STRING_VALUE )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12987:1: (lv_value_7_0= RULE_STRING_VALUE )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:12988:3: lv_value_7_0= RULE_STRING_VALUE
                    {
                    lv_value_7_0=(Token)match(input,RULE_STRING_VALUE,FollowSets002.FOLLOW_RULE_STRING_VALUE_in_ruleAnnotationProperty29351); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_7_0, grammarAccess.getAnnotationPropertyAccess().getValueSTRING_VALUETerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_7_0, 
                              		"STRING_VALUE");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13005:6: ( (lv_constant_8_0= RULE_IDENT ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13005:6: ( (lv_constant_8_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13006:1: (lv_constant_8_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13006:1: (lv_constant_8_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13007:3: lv_constant_8_0= RULE_IDENT
                    {
                    lv_constant_8_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29379); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_constant_8_0, grammarAccess.getAnnotationPropertyAccess().getConstantIDENTTerminalRuleCall_3_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAnnotationPropertyRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"constant",
                              		lv_constant_8_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationProperty"


    // $ANTLR start "entryRuleEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13031:1: entryRuleEntity returns [EObject current=null] : iv_ruleEntity= ruleEntity EOF ;
    public final EObject entryRuleEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntity = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13032:2: (iv_ruleEntity= ruleEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13033:2: iv_ruleEntity= ruleEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEntity_in_entryRuleEntity29421);
            iv_ruleEntity=ruleEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEntity29431); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntity"


    // $ANTLR start "ruleEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13040:1: ruleEntity returns [EObject current=null] : (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity ) ;
    public final EObject ruleEntity() throws RecognitionException {
        EObject current = null;

        EObject this_PojoEntity_0 = null;

        EObject this_EnumEntity_1 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13043:28: ( (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13044:1: (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13044:1: (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity )
            int alt338=2;
            alt338 = dfa338.predict(input);
            switch (alt338) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13045:5: this_PojoEntity_0= rulePojoEntity
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEntityAccess().getPojoEntityParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_rulePojoEntity_in_ruleEntity29478);
                    this_PojoEntity_0=rulePojoEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PojoEntity_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13055:5: this_EnumEntity_1= ruleEnumEntity
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEntityAccess().getEnumEntityParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleEnumEntity_in_ruleEntity29505);
                    this_EnumEntity_1=ruleEnumEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnumEntity_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntity"


    // $ANTLR start "entryRuleAnnotatedEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13071:1: entryRuleAnnotatedEntity returns [EObject current=null] : iv_ruleAnnotatedEntity= ruleAnnotatedEntity EOF ;
    public final EObject entryRuleAnnotatedEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedEntity = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13072:2: (iv_ruleAnnotatedEntity= ruleAnnotatedEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13073:2: iv_ruleAnnotatedEntity= ruleAnnotatedEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleAnnotatedEntity_in_entryRuleAnnotatedEntity29540);
            iv_ruleAnnotatedEntity=ruleAnnotatedEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleAnnotatedEntity29550); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedEntity"


    // $ANTLR start "ruleAnnotatedEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13080:1: ruleAnnotatedEntity returns [EObject current=null] : ( ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) ) | ( (lv_annotations_7_0= ruleAnnotation ) ) ) )* ( (lv_entity_8_0= ruleEntity ) ) ) ;
    public final EObject ruleAnnotatedEntity() throws RecognitionException {
        EObject current = null;

        Token this_AT_0=null;
        Token this_AT_1=null;
        Token this_AT_2=null;
        Token this_AT_3=null;
        EObject lv_conflictAnnotations_4_0 = null;

        EObject lv_staticAnnotations_5_0 = null;

        EObject lv_constructorAnnotations_6_0 = null;

        EObject lv_annotations_7_0 = null;

        EObject lv_entity_8_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13083:28: ( ( ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) ) | ( (lv_annotations_7_0= ruleAnnotation ) ) ) )* ( (lv_entity_8_0= ruleEntity ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13084:1: ( ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) ) | ( (lv_annotations_7_0= ruleAnnotation ) ) ) )* ( (lv_entity_8_0= ruleEntity ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13084:1: ( ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) ) | ( (lv_annotations_7_0= ruleAnnotation ) ) ) )* ( (lv_entity_8_0= ruleEntity ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13084:2: ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) ) | ( (lv_annotations_7_0= ruleAnnotation ) ) ) )* ( (lv_entity_8_0= ruleEntity ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13084:2: ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) ) | ( (lv_annotations_7_0= ruleAnnotation ) ) ) )*
            loop342:
            do {
                int alt342=2;
                int LA342_0 = input.LA(1);

                if ( (LA342_0==RULE_AT) && (synpred12_InternalProcessorDsl())) {
                    alt342=1;
                }


                switch (alt342) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13084:3: ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) ) | ( (lv_annotations_7_0= ruleAnnotation ) ) )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13084:3: ( ( RULE_AT )=>this_AT_0= RULE_AT )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13084:4: ( RULE_AT )=>this_AT_0= RULE_AT
            	    {
            	    this_AT_0=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_ruleAnnotatedEntity29593); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_AT_0, grammarAccess.getAnnotatedEntityAccess().getATTerminalRuleCall_0_0()); 
            	          
            	    }

            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13088:2: ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) ) | ( (lv_annotations_7_0= ruleAnnotation ) ) )
            	    int alt341=2;
            	    int LA341_0 = input.LA(1);

            	    if ( (LA341_0==RULE_AT) && (synpred13_InternalProcessorDsl())) {
            	        alt341=1;
            	    }
            	    else if ( (LA341_0==RULE_IDENT||LA341_0==RULE_IDENT_DOT) ) {
            	        alt341=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 341, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt341) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13088:3: ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) )
            	            {
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13088:3: ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) ) )
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13088:4: ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) )
            	            {
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13088:4: ( ( RULE_AT )=>this_AT_1= RULE_AT )
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13088:5: ( RULE_AT )=>this_AT_1= RULE_AT
            	            {
            	            this_AT_1=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_ruleAnnotatedEntity29612); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AT_1, grammarAccess.getAnnotatedEntityAccess().getATTerminalRuleCall_0_1_0_0()); 
            	                  
            	            }

            	            }

            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13092:2: ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) ) | ( (lv_constructorAnnotations_6_0= ruleAnnotation ) ) )
            	            int alt340=2;
            	            int LA340_0 = input.LA(1);

            	            if ( (LA340_0==RULE_AT) && (synpred14_InternalProcessorDsl())) {
            	                alt340=1;
            	            }
            	            else if ( (LA340_0==RULE_IDENT||LA340_0==RULE_IDENT_DOT) ) {
            	                alt340=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 340, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt340) {
            	                case 1 :
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13092:3: ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) )
            	                    {
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13092:3: ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) ) )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13092:4: ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) )
            	                    {
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13092:4: ( ( RULE_AT )=>this_AT_2= RULE_AT )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13092:5: ( RULE_AT )=>this_AT_2= RULE_AT
            	                    {
            	                    this_AT_2=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_ruleAnnotatedEntity29631); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {
            	                       
            	                          newLeafNode(this_AT_2, grammarAccess.getAnnotatedEntityAccess().getATTerminalRuleCall_0_1_0_1_0_0()); 
            	                          
            	                    }

            	                    }

            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13096:2: ( ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) ) | ( (lv_staticAnnotations_5_0= ruleAnnotation ) ) )
            	                    int alt339=2;
            	                    int LA339_0 = input.LA(1);

            	                    if ( (LA339_0==RULE_AT) && (synpred15_InternalProcessorDsl())) {
            	                        alt339=1;
            	                    }
            	                    else if ( (LA339_0==RULE_IDENT||LA339_0==RULE_IDENT_DOT) ) {
            	                        alt339=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 339, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt339) {
            	                        case 1 :
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13096:3: ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) )
            	                            {
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13096:3: ( ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) ) )
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13096:4: ( ( RULE_AT )=>this_AT_3= RULE_AT ) ( (lv_conflictAnnotations_4_0= ruleAnnotation ) )
            	                            {
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13096:4: ( ( RULE_AT )=>this_AT_3= RULE_AT )
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13096:5: ( RULE_AT )=>this_AT_3= RULE_AT
            	                            {
            	                            this_AT_3=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_ruleAnnotatedEntity29650); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {
            	                               
            	                                  newLeafNode(this_AT_3, grammarAccess.getAnnotatedEntityAccess().getATTerminalRuleCall_0_1_0_1_0_1_0_0()); 
            	                                  
            	                            }

            	                            }

            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13100:2: ( (lv_conflictAnnotations_4_0= ruleAnnotation ) )
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13101:1: (lv_conflictAnnotations_4_0= ruleAnnotation )
            	                            {
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13101:1: (lv_conflictAnnotations_4_0= ruleAnnotation )
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13102:3: lv_conflictAnnotations_4_0= ruleAnnotation
            	                            {
            	                            if ( state.backtracking==0 ) {
            	                               
            	                              	        newCompositeNode(grammarAccess.getAnnotatedEntityAccess().getConflictAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_0_1_0()); 
            	                              	    
            	                            }
            	                            pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity29671);
            	                            lv_conflictAnnotations_4_0=ruleAnnotation();

            	                            state._fsp--;
            	                            if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              	        if (current==null) {
            	                              	            current = createModelElementForParent(grammarAccess.getAnnotatedEntityRule());
            	                              	        }
            	                                     		add(
            	                                     			current, 
            	                                     			"conflictAnnotations",
            	                                      		lv_conflictAnnotations_4_0, 
            	                                      		"Annotation");
            	                              	        afterParserOrEnumRuleCall();
            	                              	    
            	                            }

            	                            }


            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13119:6: ( (lv_staticAnnotations_5_0= ruleAnnotation ) )
            	                            {
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13119:6: ( (lv_staticAnnotations_5_0= ruleAnnotation ) )
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13120:1: (lv_staticAnnotations_5_0= ruleAnnotation )
            	                            {
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13120:1: (lv_staticAnnotations_5_0= ruleAnnotation )
            	                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13121:3: lv_staticAnnotations_5_0= ruleAnnotation
            	                            {
            	                            if ( state.backtracking==0 ) {
            	                               
            	                              	        newCompositeNode(grammarAccess.getAnnotatedEntityAccess().getStaticAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_1_0()); 
            	                              	    
            	                            }
            	                            pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity29699);
            	                            lv_staticAnnotations_5_0=ruleAnnotation();

            	                            state._fsp--;
            	                            if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              	        if (current==null) {
            	                              	            current = createModelElementForParent(grammarAccess.getAnnotatedEntityRule());
            	                              	        }
            	                                     		add(
            	                                     			current, 
            	                                     			"staticAnnotations",
            	                                      		lv_staticAnnotations_5_0, 
            	                                      		"Annotation");
            	                              	        afterParserOrEnumRuleCall();
            	                              	    
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13138:6: ( (lv_constructorAnnotations_6_0= ruleAnnotation ) )
            	                    {
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13138:6: ( (lv_constructorAnnotations_6_0= ruleAnnotation ) )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13139:1: (lv_constructorAnnotations_6_0= ruleAnnotation )
            	                    {
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13139:1: (lv_constructorAnnotations_6_0= ruleAnnotation )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13140:3: lv_constructorAnnotations_6_0= ruleAnnotation
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getAnnotatedEntityAccess().getConstructorAnnotationsAnnotationParserRuleCall_0_1_0_1_1_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity29728);
            	                    lv_constructorAnnotations_6_0=ruleAnnotation();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getAnnotatedEntityRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"constructorAnnotations",
            	                              		lv_constructorAnnotations_6_0, 
            	                              		"Annotation");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13157:6: ( (lv_annotations_7_0= ruleAnnotation ) )
            	            {
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13157:6: ( (lv_annotations_7_0= ruleAnnotation ) )
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13158:1: (lv_annotations_7_0= ruleAnnotation )
            	            {
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13158:1: (lv_annotations_7_0= ruleAnnotation )
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13159:3: lv_annotations_7_0= ruleAnnotation
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getAnnotatedEntityAccess().getAnnotationsAnnotationParserRuleCall_0_1_1_0()); 
            	              	    
            	            }
            	            pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity29757);
            	            lv_annotations_7_0=ruleAnnotation();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getAnnotatedEntityRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"annotations",
            	                      		lv_annotations_7_0, 
            	                      		"Annotation");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop342;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13175:5: ( (lv_entity_8_0= ruleEntity ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13176:1: (lv_entity_8_0= ruleEntity )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13176:1: (lv_entity_8_0= ruleEntity )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13177:3: lv_entity_8_0= ruleEntity
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedEntityAccess().getEntityEntityParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleEntity_in_ruleAnnotatedEntity29781);
            lv_entity_8_0=ruleEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedEntityRule());
              	        }
                     		set(
                     			current, 
                     			"entity",
                      		lv_entity_8_0, 
                      		"Entity");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedEntity"


    // $ANTLR start "entryRuleAbstractPojoEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13201:1: entryRuleAbstractPojoEntity returns [EObject current=null] : iv_ruleAbstractPojoEntity= ruleAbstractPojoEntity EOF ;
    public final EObject entryRuleAbstractPojoEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractPojoEntity = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13205:2: (iv_ruleAbstractPojoEntity= ruleAbstractPojoEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13206:2: iv_ruleAbstractPojoEntity= ruleAbstractPojoEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractPojoEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleAbstractPojoEntity_in_entryRuleAbstractPojoEntity29823);
            iv_ruleAbstractPojoEntity=ruleAbstractPojoEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractPojoEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleAbstractPojoEntity29833); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractPojoEntity"


    // $ANTLR start "ruleAbstractPojoEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13216:1: ruleAbstractPojoEntity returns [EObject current=null] : (this_PackageDeclaration_0= rulePackageDeclaration | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_ImplPackage_5= ruleImplPackage | this_PojoDao_6= rulePojoDao ) ;
    public final EObject ruleAbstractPojoEntity() throws RecognitionException {
        EObject current = null;

        EObject this_PackageDeclaration_0 = null;

        EObject this_AnnotatedEntity_1 = null;

        EObject this_Import_2 = null;

        EObject this_Implements_3 = null;

        EObject this_Extends_4 = null;

        EObject this_ImplPackage_5 = null;

        EObject this_PojoDao_6 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13220:28: ( (this_PackageDeclaration_0= rulePackageDeclaration | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_ImplPackage_5= ruleImplPackage | this_PojoDao_6= rulePojoDao ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13221:1: (this_PackageDeclaration_0= rulePackageDeclaration | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_ImplPackage_5= ruleImplPackage | this_PojoDao_6= rulePojoDao )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13221:1: (this_PackageDeclaration_0= rulePackageDeclaration | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_ImplPackage_5= ruleImplPackage | this_PojoDao_6= rulePojoDao )
            int alt343=7;
            alt343 = dfa343.predict(input);
            switch (alt343) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13222:5: this_PackageDeclaration_0= rulePackageDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getPackageDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_rulePackageDeclaration_in_ruleAbstractPojoEntity29884);
                    this_PackageDeclaration_0=rulePackageDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PackageDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13232:5: this_AnnotatedEntity_1= ruleAnnotatedEntity
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getAnnotatedEntityParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleAnnotatedEntity_in_ruleAbstractPojoEntity29911);
                    this_AnnotatedEntity_1=ruleAnnotatedEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AnnotatedEntity_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13242:5: this_Import_2= ruleImport
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getImportParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleImport_in_ruleAbstractPojoEntity29938);
                    this_Import_2=ruleImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Import_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13252:5: this_Implements_3= ruleImplements
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getImplementsParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleImplements_in_ruleAbstractPojoEntity29965);
                    this_Implements_3=ruleImplements();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Implements_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13262:5: this_Extends_4= ruleExtends
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getExtendsParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleExtends_in_ruleAbstractPojoEntity29992);
                    this_Extends_4=ruleExtends();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Extends_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13272:5: this_ImplPackage_5= ruleImplPackage
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getImplPackageParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_ruleImplPackage_in_ruleAbstractPojoEntity30019);
                    this_ImplPackage_5=ruleImplPackage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ImplPackage_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13282:5: this_PojoDao_6= rulePojoDao
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getPojoDaoParserRuleCall_6()); 
                          
                    }
                    pushFollow(FollowSets002.FOLLOW_rulePojoDao_in_ruleAbstractPojoEntity30046);
                    this_PojoDao_6=rulePojoDao();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PojoDao_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAbstractPojoEntity"


    // $ANTLR start "entryRuleImport"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13301:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13305:2: (iv_ruleImport= ruleImport EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13306:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleImport_in_entryRuleImport30091);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleImport30101); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13316:1: ruleImport returns [EObject current=null] : (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_importedNamespace_1_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13320:28: ( (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13321:1: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13321:1: (otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13321:3: otherlv_0= 'import' ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) )
            {
            otherlv_0=(Token)match(input,145,FollowSets002.FOLLOW_145_in_ruleImport30142); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13325:1: ( (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13326:1: (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13326:1: (lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13327:3: lv_importedNamespace_1_0= ruleQualifiedNameWithWildcard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedNameWithWildcard_in_ruleImport30163);
            lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImportRule());
              	        }
                     		set(
                     			current, 
                     			"importedNamespace",
                      		lv_importedNamespace_1_0, 
                      		"QualifiedNameWithWildcard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleImplements"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13354:1: entryRuleImplements returns [EObject current=null] : iv_ruleImplements= ruleImplements EOF ;
    public final EObject entryRuleImplements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplements = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13358:2: (iv_ruleImplements= ruleImplements EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13359:2: iv_ruleImplements= ruleImplements EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplementsRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleImplements_in_entryRuleImplements30209);
            iv_ruleImplements=ruleImplements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplements; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleImplements30219); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleImplements"


    // $ANTLR start "ruleImplements"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13369:1: ruleImplements returns [EObject current=null] : (otherlv_0= 'implements' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )? ) ;
    public final EObject ruleImplements() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_generics_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13373:28: ( (otherlv_0= 'implements' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13374:1: (otherlv_0= 'implements' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13374:1: (otherlv_0= 'implements' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13374:3: otherlv_0= 'implements' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )?
            {
            otherlv_0=(Token)match(input,146,FollowSets002.FOLLOW_146_in_ruleImplements30260); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImplementsAccess().getImplementsKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13378:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13379:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13379:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13380:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getImplementsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImplementsAccess().getImplementsJvmTypeCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleImplements30283);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13393:2: ( (lv_generics_2_0= '<<>>' ) )?
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==147) ) {
                alt344=1;
            }
            switch (alt344) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13394:1: (lv_generics_2_0= '<<>>' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13394:1: (lv_generics_2_0= '<<>>' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13395:3: lv_generics_2_0= '<<>>'
                    {
                    lv_generics_2_0=(Token)match(input,147,FollowSets002.FOLLOW_147_in_ruleImplements30301); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generics_2_0, grammarAccess.getImplementsAccess().getGenericsLessThanSignLessThanSignGreaterThanSignGreaterThanSignKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImplementsRule());
                      	        }
                             		setWithLastConsumed(current, "generics", true, "<<>>");
                      	    
                    }

                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13408:3: (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )?
            int alt346=2;
            int LA346_0 = input.LA(1);

            if ( (LA346_0==148) ) {
                alt346=1;
            }
            switch (alt346) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13408:5: otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )*
                    {
                    otherlv_3=(Token)match(input,148,FollowSets002.FOLLOW_148_in_ruleImplements30328); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getImplementsAccess().getOnlyPojosKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13412:1: ( (otherlv_4= RULE_IDENT ) )*
                    loop345:
                    do {
                        int alt345=2;
                        int LA345_0 = input.LA(1);

                        if ( (LA345_0==RULE_IDENT) ) {
                            alt345=1;
                        }


                        switch (alt345) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13413:1: (otherlv_4= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13413:1: (otherlv_4= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13414:3: otherlv_4= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_4=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleImplements30348); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_4, grammarAccess.getImplementsAccess().getOnlyPojosPojoEntityCrossReference_3_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop345;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13425:5: (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )?
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==149) ) {
                alt348=1;
            }
            switch (alt348) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13425:7: otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )*
                    {
                    otherlv_5=(Token)match(input,149,FollowSets002.FOLLOW_149_in_ruleImplements30364); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getImplementsAccess().getOnlyDaosKeyword_4_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13429:1: ( (otherlv_6= RULE_IDENT ) )*
                    loop347:
                    do {
                        int alt347=2;
                        int LA347_0 = input.LA(1);

                        if ( (LA347_0==RULE_IDENT) ) {
                            alt347=1;
                        }


                        switch (alt347) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13430:1: (otherlv_6= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13430:1: (otherlv_6= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13431:3: otherlv_6= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_6=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleImplements30384); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_6, grammarAccess.getImplementsAccess().getOnlyDaosPojoDaoCrossReference_4_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop347;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13442:5: (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )?
            int alt350=2;
            int LA350_0 = input.LA(1);

            if ( (LA350_0==150) ) {
                alt350=1;
            }
            switch (alt350) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13442:7: otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )*
                    {
                    otherlv_7=(Token)match(input,150,FollowSets002.FOLLOW_150_in_ruleImplements30400); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getImplementsAccess().getExceptPojosKeyword_5_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13446:1: ( (otherlv_8= RULE_IDENT ) )*
                    loop349:
                    do {
                        int alt349=2;
                        int LA349_0 = input.LA(1);

                        if ( (LA349_0==RULE_IDENT) ) {
                            alt349=1;
                        }


                        switch (alt349) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13447:1: (otherlv_8= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13447:1: (otherlv_8= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13448:3: otherlv_8= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_8=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleImplements30420); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_8, grammarAccess.getImplementsAccess().getExceptPojosPojoEntityCrossReference_5_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop349;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13459:5: (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )?
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( (LA352_0==151) ) {
                alt352=1;
            }
            switch (alt352) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13459:7: otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )*
                    {
                    otherlv_9=(Token)match(input,151,FollowSets002.FOLLOW_151_in_ruleImplements30436); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getImplementsAccess().getExceptDaosKeyword_6_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13463:1: ( (otherlv_10= RULE_IDENT ) )*
                    loop351:
                    do {
                        int alt351=2;
                        int LA351_0 = input.LA(1);

                        if ( (LA351_0==RULE_IDENT) ) {
                            alt351=1;
                        }


                        switch (alt351) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13464:1: (otherlv_10= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13464:1: (otherlv_10= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13465:3: otherlv_10= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImplementsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_10=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleImplements30456); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_10, grammarAccess.getImplementsAccess().getExceptDaosPojoDaoCrossReference_6_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop351;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleImplements"


    // $ANTLR start "entryRuleExtends"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13487:1: entryRuleExtends returns [EObject current=null] : iv_ruleExtends= ruleExtends EOF ;
    public final EObject entryRuleExtends() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtends = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13491:2: (iv_ruleExtends= ruleExtends EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13492:2: iv_ruleExtends= ruleExtends EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendsRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleExtends_in_entryRuleExtends30505);
            iv_ruleExtends=ruleExtends();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtends; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleExtends30515); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleExtends"


    // $ANTLR start "ruleExtends"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13502:1: ruleExtends returns [EObject current=null] : (otherlv_0= 'extends' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )? ) ;
    public final EObject ruleExtends() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_generics_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13506:28: ( (otherlv_0= 'extends' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13507:1: (otherlv_0= 'extends' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13507:1: (otherlv_0= 'extends' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13507:3: otherlv_0= 'extends' ( ( ruleQualifiedName ) ) ( (lv_generics_2_0= '<<>>' ) )? (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )? (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )? (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )? (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )?
            {
            otherlv_0=(Token)match(input,152,FollowSets002.FOLLOW_152_in_ruleExtends30556); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExtendsAccess().getExtendsKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13511:1: ( ( ruleQualifiedName ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13512:1: ( ruleQualifiedName )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13512:1: ( ruleQualifiedName )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13513:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExtendsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExtendsAccess().getExtendsJvmTypeCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleExtends30579);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13526:2: ( (lv_generics_2_0= '<<>>' ) )?
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==147) ) {
                alt353=1;
            }
            switch (alt353) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13527:1: (lv_generics_2_0= '<<>>' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13527:1: (lv_generics_2_0= '<<>>' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13528:3: lv_generics_2_0= '<<>>'
                    {
                    lv_generics_2_0=(Token)match(input,147,FollowSets002.FOLLOW_147_in_ruleExtends30597); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generics_2_0, grammarAccess.getExtendsAccess().getGenericsLessThanSignLessThanSignGreaterThanSignGreaterThanSignKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExtendsRule());
                      	        }
                             		setWithLastConsumed(current, "generics", true, "<<>>");
                      	    
                    }

                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13541:3: (otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )* )?
            int alt355=2;
            int LA355_0 = input.LA(1);

            if ( (LA355_0==148) ) {
                alt355=1;
            }
            switch (alt355) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13541:5: otherlv_3= 'onlyPojos' ( (otherlv_4= RULE_IDENT ) )*
                    {
                    otherlv_3=(Token)match(input,148,FollowSets002.FOLLOW_148_in_ruleExtends30624); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getExtendsAccess().getOnlyPojosKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13545:1: ( (otherlv_4= RULE_IDENT ) )*
                    loop354:
                    do {
                        int alt354=2;
                        int LA354_0 = input.LA(1);

                        if ( (LA354_0==RULE_IDENT) ) {
                            alt354=1;
                        }


                        switch (alt354) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13546:1: (otherlv_4= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13546:1: (otherlv_4= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13547:3: otherlv_4= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_4=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleExtends30644); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_4, grammarAccess.getExtendsAccess().getOnlyPojosPojoEntityCrossReference_3_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop354;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13558:5: (otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )* )?
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==149) ) {
                alt357=1;
            }
            switch (alt357) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13558:7: otherlv_5= 'onlyDaos' ( (otherlv_6= RULE_IDENT ) )*
                    {
                    otherlv_5=(Token)match(input,149,FollowSets002.FOLLOW_149_in_ruleExtends30660); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getExtendsAccess().getOnlyDaosKeyword_4_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13562:1: ( (otherlv_6= RULE_IDENT ) )*
                    loop356:
                    do {
                        int alt356=2;
                        int LA356_0 = input.LA(1);

                        if ( (LA356_0==RULE_IDENT) ) {
                            alt356=1;
                        }


                        switch (alt356) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13563:1: (otherlv_6= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13563:1: (otherlv_6= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13564:3: otherlv_6= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_6=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleExtends30680); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_6, grammarAccess.getExtendsAccess().getOnlyDaosPojoDaoCrossReference_4_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop356;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13575:5: (otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )* )?
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==150) ) {
                alt359=1;
            }
            switch (alt359) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13575:7: otherlv_7= 'exceptPojos' ( (otherlv_8= RULE_IDENT ) )*
                    {
                    otherlv_7=(Token)match(input,150,FollowSets002.FOLLOW_150_in_ruleExtends30696); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getExtendsAccess().getExceptPojosKeyword_5_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13579:1: ( (otherlv_8= RULE_IDENT ) )*
                    loop358:
                    do {
                        int alt358=2;
                        int LA358_0 = input.LA(1);

                        if ( (LA358_0==RULE_IDENT) ) {
                            alt358=1;
                        }


                        switch (alt358) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13580:1: (otherlv_8= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13580:1: (otherlv_8= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13581:3: otherlv_8= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_8=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleExtends30716); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_8, grammarAccess.getExtendsAccess().getExceptPojosPojoEntityCrossReference_5_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop358;
                        }
                    } while (true);


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13592:5: (otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )* )?
            int alt361=2;
            int LA361_0 = input.LA(1);

            if ( (LA361_0==151) ) {
                alt361=1;
            }
            switch (alt361) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13592:7: otherlv_9= 'exceptDaos' ( (otherlv_10= RULE_IDENT ) )*
                    {
                    otherlv_9=(Token)match(input,151,FollowSets002.FOLLOW_151_in_ruleExtends30732); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getExtendsAccess().getExceptDaosKeyword_6_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13596:1: ( (otherlv_10= RULE_IDENT ) )*
                    loop360:
                    do {
                        int alt360=2;
                        int LA360_0 = input.LA(1);

                        if ( (LA360_0==RULE_IDENT) ) {
                            alt360=1;
                        }


                        switch (alt360) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13597:1: (otherlv_10= RULE_IDENT )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13597:1: (otherlv_10= RULE_IDENT )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13598:3: otherlv_10= RULE_IDENT
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExtendsRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_10=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleExtends30752); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_10, grammarAccess.getExtendsAccess().getExceptDaosPojoDaoCrossReference_6_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop360;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleExtends"


    // $ANTLR start "entryRuleImplPackage"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13620:1: entryRuleImplPackage returns [EObject current=null] : iv_ruleImplPackage= ruleImplPackage EOF ;
    public final EObject entryRuleImplPackage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplPackage = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13624:2: (iv_ruleImplPackage= ruleImplPackage EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13625:2: iv_ruleImplPackage= ruleImplPackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplPackageRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleImplPackage_in_entryRuleImplPackage30801);
            iv_ruleImplPackage=ruleImplPackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplPackage; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleImplPackage30811); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleImplPackage"


    // $ANTLR start "ruleImplPackage"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13635:1: ruleImplPackage returns [EObject current=null] : (otherlv_0= 'implementation-package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ) ;
    public final EObject ruleImplPackage() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_1=null;
        Token lv_name_1_2=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13639:28: ( (otherlv_0= 'implementation-package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13640:1: (otherlv_0= 'implementation-package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13640:1: (otherlv_0= 'implementation-package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13640:3: otherlv_0= 'implementation-package' ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) )
            {
            otherlv_0=(Token)match(input,106,FollowSets002.FOLLOW_106_in_ruleImplPackage30852); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImplPackageAccess().getImplementationPackageKeyword_0());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13644:1: ( ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13645:1: ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13645:1: ( (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13646:1: (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13646:1: (lv_name_1_1= RULE_IDENT | lv_name_1_2= RULE_IDENT_DOT )
            int alt362=2;
            int LA362_0 = input.LA(1);

            if ( (LA362_0==RULE_IDENT) ) {
                alt362=1;
            }
            else if ( (LA362_0==RULE_IDENT_DOT) ) {
                alt362=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 362, 0, input);

                throw nvae;
            }
            switch (alt362) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13647:3: lv_name_1_1= RULE_IDENT
                    {
                    lv_name_1_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleImplPackage30871); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_1, grammarAccess.getImplPackageAccess().getNameIDENTTerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImplPackageRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_1, 
                              		"IDENT");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13662:8: lv_name_1_2= RULE_IDENT_DOT
                    {
                    lv_name_1_2=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleImplPackage30891); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_1_2, grammarAccess.getImplPackageAccess().getNameIDENT_DOTTerminalRuleCall_1_0_1()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImplPackageRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_1_2, 
                              		"IDENT_DOT");
                      	    
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleImplPackage"


    // $ANTLR start "entryRulePojoEntityModifier1"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13691:1: entryRulePojoEntityModifier1 returns [EObject current=null] : iv_rulePojoEntityModifier1= rulePojoEntityModifier1 EOF ;
    public final EObject entryRulePojoEntityModifier1() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoEntityModifier1 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13692:2: (iv_rulePojoEntityModifier1= rulePojoEntityModifier1 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13693:2: iv_rulePojoEntityModifier1= rulePojoEntityModifier1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoEntityModifier1Rule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier1_in_entryRulePojoEntityModifier130939);
            iv_rulePojoEntityModifier1=rulePojoEntityModifier1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoEntityModifier1; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoEntityModifier130949); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoEntityModifier1"


    // $ANTLR start "rulePojoEntityModifier1"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13700:1: rulePojoEntityModifier1 returns [EObject current=null] : ( ( (lv_final_0_0= 'final' ) ) | ( (lv_abstract_1_0= 'abstract' ) ) ) ;
    public final EObject rulePojoEntityModifier1() throws RecognitionException {
        EObject current = null;

        Token lv_final_0_0=null;
        Token lv_abstract_1_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13703:28: ( ( ( (lv_final_0_0= 'final' ) ) | ( (lv_abstract_1_0= 'abstract' ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13704:1: ( ( (lv_final_0_0= 'final' ) ) | ( (lv_abstract_1_0= 'abstract' ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13704:1: ( ( (lv_final_0_0= 'final' ) ) | ( (lv_abstract_1_0= 'abstract' ) ) )
            int alt363=2;
            int LA363_0 = input.LA(1);

            if ( (LA363_0==153) ) {
                alt363=1;
            }
            else if ( (LA363_0==154) ) {
                alt363=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 363, 0, input);

                throw nvae;
            }
            switch (alt363) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13704:2: ( (lv_final_0_0= 'final' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13704:2: ( (lv_final_0_0= 'final' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13705:1: (lv_final_0_0= 'final' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13705:1: (lv_final_0_0= 'final' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13706:3: lv_final_0_0= 'final'
                    {
                    lv_final_0_0=(Token)match(input,153,FollowSets002.FOLLOW_153_in_rulePojoEntityModifier130992); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_final_0_0, grammarAccess.getPojoEntityModifier1Access().getFinalFinalKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoEntityModifier1Rule());
                      	        }
                             		setWithLastConsumed(current, "final", true, "final");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13720:6: ( (lv_abstract_1_0= 'abstract' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13720:6: ( (lv_abstract_1_0= 'abstract' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13721:1: (lv_abstract_1_0= 'abstract' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13721:1: (lv_abstract_1_0= 'abstract' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13722:3: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,154,FollowSets002.FOLLOW_154_in_rulePojoEntityModifier131029); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_abstract_1_0, grammarAccess.getPojoEntityModifier1Access().getAbstractAbstractKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoEntityModifier1Rule());
                      	        }
                             		setWithLastConsumed(current, "abstract", true, "abstract");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoEntityModifier1"


    // $ANTLR start "entryRulePojoEntityModifier2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13743:1: entryRulePojoEntityModifier2 returns [EObject current=null] : iv_rulePojoEntityModifier2= rulePojoEntityModifier2 EOF ;
    public final EObject entryRulePojoEntityModifier2() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoEntityModifier2 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13744:2: (iv_rulePojoEntityModifier2= rulePojoEntityModifier2 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13745:2: iv_rulePojoEntityModifier2= rulePojoEntityModifier2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoEntityModifier2Rule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier2_in_entryRulePojoEntityModifier231078);
            iv_rulePojoEntityModifier2=rulePojoEntityModifier2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoEntityModifier2; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoEntityModifier231088); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoEntityModifier2"


    // $ANTLR start "rulePojoEntityModifier2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13752:1: rulePojoEntityModifier2 returns [EObject current=null] : ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'discriminator' ( ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) ) ) ) | ( ( (lv_operators_4_0= 'operators' ) ) ( (lv_operatorsSuffix_5_0= RULE_IDENT ) )? ) | (otherlv_6= 'serializable' ( (lv_sernum_7_0= RULE_NUMBER ) ) ) ) ;
    public final EObject rulePojoEntityModifier2() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_discriminator_3_1=null;
        Token lv_discriminator_3_2=null;
        Token lv_operators_4_0=null;
        Token lv_operatorsSuffix_5_0=null;
        Token otherlv_6=null;
        Token lv_sernum_7_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13755:28: ( ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'discriminator' ( ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) ) ) ) | ( ( (lv_operators_4_0= 'operators' ) ) ( (lv_operatorsSuffix_5_0= RULE_IDENT ) )? ) | (otherlv_6= 'serializable' ( (lv_sernum_7_0= RULE_NUMBER ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13756:1: ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'discriminator' ( ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) ) ) ) | ( ( (lv_operators_4_0= 'operators' ) ) ( (lv_operatorsSuffix_5_0= RULE_IDENT ) )? ) | (otherlv_6= 'serializable' ( (lv_sernum_7_0= RULE_NUMBER ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13756:1: ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'discriminator' ( ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) ) ) ) | ( ( (lv_operators_4_0= 'operators' ) ) ( (lv_operatorsSuffix_5_0= RULE_IDENT ) )? ) | (otherlv_6= 'serializable' ( (lv_sernum_7_0= RULE_NUMBER ) ) ) )
            int alt366=4;
            switch ( input.LA(1) ) {
            case 152:
                {
                alt366=1;
                }
                break;
            case 155:
                {
                alt366=2;
                }
                break;
            case 156:
                {
                alt366=3;
                }
                break;
            case 157:
                {
                alt366=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 366, 0, input);

                throw nvae;
            }

            switch (alt366) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13756:2: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13756:2: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13756:4: otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) )
                    {
                    otherlv_0=(Token)match(input,152,FollowSets002.FOLLOW_152_in_rulePojoEntityModifier231126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getPojoEntityModifier2Access().getExtendsKeyword_0_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13760:1: ( (otherlv_1= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13761:1: (otherlv_1= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13761:1: (otherlv_1= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13762:3: otherlv_1= RULE_IDENT
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
                      	        }
                              
                    }
                    otherlv_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoEntityModifier231146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_1, grammarAccess.getPojoEntityModifier2Access().getSuperTypePojoEntityCrossReference_0_1_0()); 
                      	
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13774:6: (otherlv_2= 'discriminator' ( ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13774:6: (otherlv_2= 'discriminator' ( ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13774:8: otherlv_2= 'discriminator' ( ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) ) )
                    {
                    otherlv_2=(Token)match(input,155,FollowSets002.FOLLOW_155_in_rulePojoEntityModifier231166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPojoEntityModifier2Access().getDiscriminatorKeyword_1_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13778:1: ( ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13779:1: ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13779:1: ( (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13780:1: (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13780:1: (lv_discriminator_3_1= RULE_IDENT | lv_discriminator_3_2= RULE_NUMBER )
                    int alt364=2;
                    int LA364_0 = input.LA(1);

                    if ( (LA364_0==RULE_IDENT) ) {
                        alt364=1;
                    }
                    else if ( (LA364_0==RULE_NUMBER) ) {
                        alt364=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 364, 0, input);

                        throw nvae;
                    }
                    switch (alt364) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13781:3: lv_discriminator_3_1= RULE_IDENT
                            {
                            lv_discriminator_3_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoEntityModifier231185); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_discriminator_3_1, grammarAccess.getPojoEntityModifier2Access().getDiscriminatorIDENTTerminalRuleCall_1_1_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"discriminator",
                                      		lv_discriminator_3_1, 
                                      		"IDENT");
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13796:8: lv_discriminator_3_2= RULE_NUMBER
                            {
                            lv_discriminator_3_2=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePojoEntityModifier231205); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_discriminator_3_2, grammarAccess.getPojoEntityModifier2Access().getDiscriminatorNUMBERTerminalRuleCall_1_1_0_1()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"discriminator",
                                      		lv_discriminator_3_2, 
                                      		"NUMBER");
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13815:6: ( ( (lv_operators_4_0= 'operators' ) ) ( (lv_operatorsSuffix_5_0= RULE_IDENT ) )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13815:6: ( ( (lv_operators_4_0= 'operators' ) ) ( (lv_operatorsSuffix_5_0= RULE_IDENT ) )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13815:7: ( (lv_operators_4_0= 'operators' ) ) ( (lv_operatorsSuffix_5_0= RULE_IDENT ) )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13815:7: ( (lv_operators_4_0= 'operators' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13816:1: (lv_operators_4_0= 'operators' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13816:1: (lv_operators_4_0= 'operators' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13817:3: lv_operators_4_0= 'operators'
                    {
                    lv_operators_4_0=(Token)match(input,156,FollowSets002.FOLLOW_156_in_rulePojoEntityModifier231239); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_operators_4_0, grammarAccess.getPojoEntityModifier2Access().getOperatorsOperatorsKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
                      	        }
                             		setWithLastConsumed(current, "operators", lv_operators_4_0, "operators");
                      	    
                    }

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13830:2: ( (lv_operatorsSuffix_5_0= RULE_IDENT ) )?
                    int alt365=2;
                    int LA365_0 = input.LA(1);

                    if ( (LA365_0==RULE_IDENT) ) {
                        alt365=1;
                    }
                    switch (alt365) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13831:1: (lv_operatorsSuffix_5_0= RULE_IDENT )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13831:1: (lv_operatorsSuffix_5_0= RULE_IDENT )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13832:3: lv_operatorsSuffix_5_0= RULE_IDENT
                            {
                            lv_operatorsSuffix_5_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoEntityModifier231269); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_operatorsSuffix_5_0, grammarAccess.getPojoEntityModifier2Access().getOperatorsSuffixIDENTTerminalRuleCall_2_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"operatorsSuffix",
                                      		lv_operatorsSuffix_5_0, 
                                      		"IDENT");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13849:6: (otherlv_6= 'serializable' ( (lv_sernum_7_0= RULE_NUMBER ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13849:6: (otherlv_6= 'serializable' ( (lv_sernum_7_0= RULE_NUMBER ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13849:8: otherlv_6= 'serializable' ( (lv_sernum_7_0= RULE_NUMBER ) )
                    {
                    otherlv_6=(Token)match(input,157,FollowSets002.FOLLOW_157_in_rulePojoEntityModifier231295); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getPojoEntityModifier2Access().getSerializableKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13853:1: ( (lv_sernum_7_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13854:1: (lv_sernum_7_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13854:1: (lv_sernum_7_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13855:3: lv_sernum_7_0= RULE_NUMBER
                    {
                    lv_sernum_7_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePojoEntityModifier231312); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_sernum_7_0, grammarAccess.getPojoEntityModifier2Access().getSernumNUMBERTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"sernum",
                              		lv_sernum_7_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoEntityModifier2"


    // $ANTLR start "entryRulePojoEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13879:1: entryRulePojoEntity returns [EObject current=null] : iv_rulePojoEntity= rulePojoEntity EOF ;
    public final EObject entryRulePojoEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoEntity = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13883:2: (iv_rulePojoEntity= rulePojoEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13884:2: iv_rulePojoEntity= rulePojoEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoEntity_in_entryRulePojoEntity31360);
            iv_rulePojoEntity=rulePojoEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoEntity31370); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoEntity"


    // $ANTLR start "rulePojoEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13894:1: rulePojoEntity returns [EObject current=null] : ( ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'pojo' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= rulePojoEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= rulePojoAnnotatedProperty ) )* this_RBRACE_6= RULE_RBRACE ) ;
    public final EObject rulePojoEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token this_LBRACE_4=null;
        Token this_RBRACE_6=null;
        EObject lv_modifiers1_0_0 = null;

        EObject lv_modifiers2_3_0 = null;

        EObject lv_features_5_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13898:28: ( ( ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'pojo' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= rulePojoEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= rulePojoAnnotatedProperty ) )* this_RBRACE_6= RULE_RBRACE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13899:1: ( ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'pojo' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= rulePojoEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= rulePojoAnnotatedProperty ) )* this_RBRACE_6= RULE_RBRACE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13899:1: ( ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'pojo' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= rulePojoEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= rulePojoAnnotatedProperty ) )* this_RBRACE_6= RULE_RBRACE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13899:2: ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'pojo' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= rulePojoEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= rulePojoAnnotatedProperty ) )* this_RBRACE_6= RULE_RBRACE
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13899:2: ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )*
            loop367:
            do {
                int alt367=2;
                int LA367_0 = input.LA(1);

                if ( ((LA367_0>=153 && LA367_0<=154)) ) {
                    alt367=1;
                }


                switch (alt367) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13900:1: (lv_modifiers1_0_0= rulePojoEntityModifier1 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13900:1: (lv_modifiers1_0_0= rulePojoEntityModifier1 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13901:3: lv_modifiers1_0_0= rulePojoEntityModifier1
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoEntityAccess().getModifiers1PojoEntityModifier1ParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier1_in_rulePojoEntity31420);
            	    lv_modifiers1_0_0=rulePojoEntityModifier1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers1",
            	              		lv_modifiers1_0_0, 
            	              		"PojoEntityModifier1");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop367;
                }
            } while (true);

            otherlv_1=(Token)match(input,129,FollowSets002.FOLLOW_129_in_rulePojoEntity31433); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPojoEntityAccess().getPojoKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13921:1: ( (lv_name_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13922:1: (lv_name_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13922:1: (lv_name_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13923:3: lv_name_2_0= RULE_IDENT
            {
            lv_name_2_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoEntity31450); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getPojoEntityAccess().getNameIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoEntityRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13939:2: ( (lv_modifiers2_3_0= rulePojoEntityModifier2 ) )*
            loop368:
            do {
                int alt368=2;
                int LA368_0 = input.LA(1);

                if ( (LA368_0==152||(LA368_0>=155 && LA368_0<=157)) ) {
                    alt368=1;
                }


                switch (alt368) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13940:1: (lv_modifiers2_3_0= rulePojoEntityModifier2 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13940:1: (lv_modifiers2_3_0= rulePojoEntityModifier2 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13941:3: lv_modifiers2_3_0= rulePojoEntityModifier2
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoEntityAccess().getModifiers2PojoEntityModifier2ParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier2_in_rulePojoEntity31476);
            	    lv_modifiers2_3_0=rulePojoEntityModifier2();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers2",
            	              		lv_modifiers2_3_0, 
            	              		"PojoEntityModifier2");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop368;
                }
            } while (true);

            this_LBRACE_4=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_rulePojoEntity31488); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LBRACE_4, grammarAccess.getPojoEntityAccess().getLBRACETerminalRuleCall_4()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13961:1: ( (lv_features_5_0= rulePojoAnnotatedProperty ) )*
            loop369:
            do {
                int alt369=2;
                int LA369_0 = input.LA(1);

                if ( (LA369_0==RULE_IDENT||LA369_0==RULE_AT) ) {
                    alt369=1;
                }


                switch (alt369) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13962:1: (lv_features_5_0= rulePojoAnnotatedProperty )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13962:1: (lv_features_5_0= rulePojoAnnotatedProperty )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13963:3: lv_features_5_0= rulePojoAnnotatedProperty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoEntityAccess().getFeaturesPojoAnnotatedPropertyParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoAnnotatedProperty_in_rulePojoEntity31508);
            	    lv_features_5_0=rulePojoAnnotatedProperty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"features",
            	              		lv_features_5_0, 
            	              		"PojoAnnotatedProperty");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop369;
                }
            } while (true);

            this_RBRACE_6=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_rulePojoEntity31520); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RBRACE_6, grammarAccess.getPojoEntityAccess().getRBRACETerminalRuleCall_6()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoEntity"


    // $ANTLR start "entryRulePojoAnnotatedProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13994:1: entryRulePojoAnnotatedProperty returns [EObject current=null] : iv_rulePojoAnnotatedProperty= rulePojoAnnotatedProperty EOF ;
    public final EObject entryRulePojoAnnotatedProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoAnnotatedProperty = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13995:2: (iv_rulePojoAnnotatedProperty= rulePojoAnnotatedProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13996:2: iv_rulePojoAnnotatedProperty= rulePojoAnnotatedProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoAnnotatedPropertyRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoAnnotatedProperty_in_entryRulePojoAnnotatedProperty31559);
            iv_rulePojoAnnotatedProperty=rulePojoAnnotatedProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoAnnotatedProperty; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoAnnotatedProperty31569); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoAnnotatedProperty"


    // $ANTLR start "rulePojoAnnotatedProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14003:1: rulePojoAnnotatedProperty returns [EObject current=null] : ( ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) ) | ( (lv_attributeAnnotations_5_0= ruleAnnotation ) ) ) )* ( (lv_feature_6_0= rulePojoProperty ) ) ) ;
    public final EObject rulePojoAnnotatedProperty() throws RecognitionException {
        EObject current = null;

        Token this_AT_0=null;
        Token this_AT_1=null;
        Token this_AT_2=null;
        EObject lv_setterAnnotations_3_0 = null;

        EObject lv_getterAnnotations_4_0 = null;

        EObject lv_attributeAnnotations_5_0 = null;

        EObject lv_feature_6_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14006:28: ( ( ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) ) | ( (lv_attributeAnnotations_5_0= ruleAnnotation ) ) ) )* ( (lv_feature_6_0= rulePojoProperty ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14007:1: ( ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) ) | ( (lv_attributeAnnotations_5_0= ruleAnnotation ) ) ) )* ( (lv_feature_6_0= rulePojoProperty ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14007:1: ( ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) ) | ( (lv_attributeAnnotations_5_0= ruleAnnotation ) ) ) )* ( (lv_feature_6_0= rulePojoProperty ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14007:2: ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) ) | ( (lv_attributeAnnotations_5_0= ruleAnnotation ) ) ) )* ( (lv_feature_6_0= rulePojoProperty ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14007:2: ( ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) ) | ( (lv_attributeAnnotations_5_0= ruleAnnotation ) ) ) )*
            loop372:
            do {
                int alt372=2;
                int LA372_0 = input.LA(1);

                if ( (LA372_0==RULE_AT) && (synpred16_InternalProcessorDsl())) {
                    alt372=1;
                }


                switch (alt372) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14007:3: ( ( RULE_AT )=>this_AT_0= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) ) | ( (lv_attributeAnnotations_5_0= ruleAnnotation ) ) )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14007:3: ( ( RULE_AT )=>this_AT_0= RULE_AT )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14007:4: ( RULE_AT )=>this_AT_0= RULE_AT
            	    {
            	    this_AT_0=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_rulePojoAnnotatedProperty31612); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_AT_0, grammarAccess.getPojoAnnotatedPropertyAccess().getATTerminalRuleCall_0_0()); 
            	          
            	    }

            	    }

            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:2: ( ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) ) | ( (lv_attributeAnnotations_5_0= ruleAnnotation ) ) )
            	    int alt371=2;
            	    int LA371_0 = input.LA(1);

            	    if ( (LA371_0==RULE_AT) && (synpred17_InternalProcessorDsl())) {
            	        alt371=1;
            	    }
            	    else if ( (LA371_0==RULE_IDENT||LA371_0==RULE_IDENT_DOT) ) {
            	        alt371=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 371, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt371) {
            	        case 1 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:3: ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) )
            	            {
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:3: ( ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) ) )
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:4: ( ( RULE_AT )=>this_AT_1= RULE_AT ) ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) )
            	            {
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:4: ( ( RULE_AT )=>this_AT_1= RULE_AT )
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:5: ( RULE_AT )=>this_AT_1= RULE_AT
            	            {
            	            this_AT_1=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_rulePojoAnnotatedProperty31631); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {
            	               
            	                  newLeafNode(this_AT_1, grammarAccess.getPojoAnnotatedPropertyAccess().getATTerminalRuleCall_0_1_0_0()); 
            	                  
            	            }

            	            }

            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14015:2: ( ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) ) | ( (lv_getterAnnotations_4_0= ruleAnnotation ) ) )
            	            int alt370=2;
            	            int LA370_0 = input.LA(1);

            	            if ( (LA370_0==RULE_AT) && (synpred18_InternalProcessorDsl())) {
            	                alt370=1;
            	            }
            	            else if ( (LA370_0==RULE_IDENT||LA370_0==RULE_IDENT_DOT) ) {
            	                alt370=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 370, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt370) {
            	                case 1 :
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14015:3: ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) )
            	                    {
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14015:3: ( ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) ) )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14015:4: ( ( RULE_AT )=>this_AT_2= RULE_AT ) ( (lv_setterAnnotations_3_0= ruleAnnotation ) )
            	                    {
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14015:4: ( ( RULE_AT )=>this_AT_2= RULE_AT )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14015:5: ( RULE_AT )=>this_AT_2= RULE_AT
            	                    {
            	                    this_AT_2=(Token)match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_rulePojoAnnotatedProperty31650); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {
            	                       
            	                          newLeafNode(this_AT_2, grammarAccess.getPojoAnnotatedPropertyAccess().getATTerminalRuleCall_0_1_0_1_0_0()); 
            	                          
            	                    }

            	                    }

            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14019:2: ( (lv_setterAnnotations_3_0= ruleAnnotation ) )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14020:1: (lv_setterAnnotations_3_0= ruleAnnotation )
            	                    {
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14020:1: (lv_setterAnnotations_3_0= ruleAnnotation )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14021:3: lv_setterAnnotations_3_0= ruleAnnotation
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getPojoAnnotatedPropertyAccess().getSetterAnnotationsAnnotationParserRuleCall_0_1_0_1_0_1_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_rulePojoAnnotatedProperty31671);
            	                    lv_setterAnnotations_3_0=ruleAnnotation();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getPojoAnnotatedPropertyRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"setterAnnotations",
            	                              		lv_setterAnnotations_3_0, 
            	                              		"Annotation");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14038:6: ( (lv_getterAnnotations_4_0= ruleAnnotation ) )
            	                    {
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14038:6: ( (lv_getterAnnotations_4_0= ruleAnnotation ) )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14039:1: (lv_getterAnnotations_4_0= ruleAnnotation )
            	                    {
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14039:1: (lv_getterAnnotations_4_0= ruleAnnotation )
            	                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14040:3: lv_getterAnnotations_4_0= ruleAnnotation
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getPojoAnnotatedPropertyAccess().getGetterAnnotationsAnnotationParserRuleCall_0_1_0_1_1_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_rulePojoAnnotatedProperty31699);
            	                    lv_getterAnnotations_4_0=ruleAnnotation();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getPojoAnnotatedPropertyRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"getterAnnotations",
            	                              		lv_getterAnnotations_4_0, 
            	                              		"Annotation");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14057:6: ( (lv_attributeAnnotations_5_0= ruleAnnotation ) )
            	            {
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14057:6: ( (lv_attributeAnnotations_5_0= ruleAnnotation ) )
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14058:1: (lv_attributeAnnotations_5_0= ruleAnnotation )
            	            {
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14058:1: (lv_attributeAnnotations_5_0= ruleAnnotation )
            	            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14059:3: lv_attributeAnnotations_5_0= ruleAnnotation
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getPojoAnnotatedPropertyAccess().getAttributeAnnotationsAnnotationParserRuleCall_0_1_1_0()); 
            	              	    
            	            }
            	            pushFollow(FollowSets002.FOLLOW_ruleAnnotation_in_rulePojoAnnotatedProperty31728);
            	            lv_attributeAnnotations_5_0=ruleAnnotation();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getPojoAnnotatedPropertyRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"attributeAnnotations",
            	                      		lv_attributeAnnotations_5_0, 
            	                      		"Annotation");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop372;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14075:5: ( (lv_feature_6_0= rulePojoProperty ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14076:1: (lv_feature_6_0= rulePojoProperty )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14076:1: (lv_feature_6_0= rulePojoProperty )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14077:3: lv_feature_6_0= rulePojoProperty
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPojoAnnotatedPropertyAccess().getFeaturePojoPropertyParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoProperty_in_rulePojoAnnotatedProperty31752);
            lv_feature_6_0=rulePojoProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPojoAnnotatedPropertyRule());
              	        }
                     		set(
                     			current, 
                     			"feature",
                      		lv_feature_6_0, 
                      		"PojoProperty");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoAnnotatedProperty"


    // $ANTLR start "entryRulePojoPropertyModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14101:1: entryRulePojoPropertyModifier returns [EObject current=null] : iv_rulePojoPropertyModifier= rulePojoPropertyModifier EOF ;
    public final EObject entryRulePojoPropertyModifier() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoPropertyModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14102:2: (iv_rulePojoPropertyModifier= rulePojoPropertyModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14103:2: iv_rulePojoPropertyModifier= rulePojoPropertyModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoPropertyModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoPropertyModifier_in_entryRulePojoPropertyModifier31788);
            iv_rulePojoPropertyModifier=rulePojoPropertyModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoPropertyModifier; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoPropertyModifier31798); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoPropertyModifier"


    // $ANTLR start "rulePojoPropertyModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14110:1: rulePojoPropertyModifier returns [EObject current=null] : ( ( (lv_required_0_0= 'required' ) ) | ( (lv_discriminator_1_0= 'discriminator' ) ) | ( (lv_primaryKey_2_0= 'primaryKey' ) ) | (otherlv_3= 'index' ( (lv_index_4_0= RULE_NUMBER ) ) ) | ( (lv_version_5_0= 'optLock' ) ) | (otherlv_6= 'updateCol' ( (lv_updateColumn1_7_0= RULE_IDENT ) ) otherlv_8= '->' ( (lv_updateColumn2_9_0= RULE_IDENT ) ) ) | (otherlv_10= 'createCol' ( (lv_createColumn1_11_0= RULE_IDENT ) ) otherlv_12= '->' ( (lv_createColumn2_13_0= RULE_IDENT ) ) ) ) ;
    public final EObject rulePojoPropertyModifier() throws RecognitionException {
        EObject current = null;

        Token lv_required_0_0=null;
        Token lv_discriminator_1_0=null;
        Token lv_primaryKey_2_0=null;
        Token otherlv_3=null;
        Token lv_index_4_0=null;
        Token lv_version_5_0=null;
        Token otherlv_6=null;
        Token lv_updateColumn1_7_0=null;
        Token otherlv_8=null;
        Token lv_updateColumn2_9_0=null;
        Token otherlv_10=null;
        Token lv_createColumn1_11_0=null;
        Token otherlv_12=null;
        Token lv_createColumn2_13_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14113:28: ( ( ( (lv_required_0_0= 'required' ) ) | ( (lv_discriminator_1_0= 'discriminator' ) ) | ( (lv_primaryKey_2_0= 'primaryKey' ) ) | (otherlv_3= 'index' ( (lv_index_4_0= RULE_NUMBER ) ) ) | ( (lv_version_5_0= 'optLock' ) ) | (otherlv_6= 'updateCol' ( (lv_updateColumn1_7_0= RULE_IDENT ) ) otherlv_8= '->' ( (lv_updateColumn2_9_0= RULE_IDENT ) ) ) | (otherlv_10= 'createCol' ( (lv_createColumn1_11_0= RULE_IDENT ) ) otherlv_12= '->' ( (lv_createColumn2_13_0= RULE_IDENT ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14114:1: ( ( (lv_required_0_0= 'required' ) ) | ( (lv_discriminator_1_0= 'discriminator' ) ) | ( (lv_primaryKey_2_0= 'primaryKey' ) ) | (otherlv_3= 'index' ( (lv_index_4_0= RULE_NUMBER ) ) ) | ( (lv_version_5_0= 'optLock' ) ) | (otherlv_6= 'updateCol' ( (lv_updateColumn1_7_0= RULE_IDENT ) ) otherlv_8= '->' ( (lv_updateColumn2_9_0= RULE_IDENT ) ) ) | (otherlv_10= 'createCol' ( (lv_createColumn1_11_0= RULE_IDENT ) ) otherlv_12= '->' ( (lv_createColumn2_13_0= RULE_IDENT ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14114:1: ( ( (lv_required_0_0= 'required' ) ) | ( (lv_discriminator_1_0= 'discriminator' ) ) | ( (lv_primaryKey_2_0= 'primaryKey' ) ) | (otherlv_3= 'index' ( (lv_index_4_0= RULE_NUMBER ) ) ) | ( (lv_version_5_0= 'optLock' ) ) | (otherlv_6= 'updateCol' ( (lv_updateColumn1_7_0= RULE_IDENT ) ) otherlv_8= '->' ( (lv_updateColumn2_9_0= RULE_IDENT ) ) ) | (otherlv_10= 'createCol' ( (lv_createColumn1_11_0= RULE_IDENT ) ) otherlv_12= '->' ( (lv_createColumn2_13_0= RULE_IDENT ) ) ) )
            int alt373=7;
            switch ( input.LA(1) ) {
            case 158:
                {
                alt373=1;
                }
                break;
            case 155:
                {
                alt373=2;
                }
                break;
            case 159:
                {
                alt373=3;
                }
                break;
            case 160:
                {
                alt373=4;
                }
                break;
            case 161:
                {
                alt373=5;
                }
                break;
            case 162:
                {
                alt373=6;
                }
                break;
            case 163:
                {
                alt373=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 373, 0, input);

                throw nvae;
            }

            switch (alt373) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14114:2: ( (lv_required_0_0= 'required' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14114:2: ( (lv_required_0_0= 'required' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14115:1: (lv_required_0_0= 'required' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14115:1: (lv_required_0_0= 'required' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14116:3: lv_required_0_0= 'required'
                    {
                    lv_required_0_0=(Token)match(input,158,FollowSets002.FOLLOW_158_in_rulePojoPropertyModifier31841); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_required_0_0, grammarAccess.getPojoPropertyModifierAccess().getRequiredRequiredKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
                      	        }
                             		setWithLastConsumed(current, "required", true, "required");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14130:6: ( (lv_discriminator_1_0= 'discriminator' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14130:6: ( (lv_discriminator_1_0= 'discriminator' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14131:1: (lv_discriminator_1_0= 'discriminator' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14131:1: (lv_discriminator_1_0= 'discriminator' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14132:3: lv_discriminator_1_0= 'discriminator'
                    {
                    lv_discriminator_1_0=(Token)match(input,155,FollowSets002.FOLLOW_155_in_rulePojoPropertyModifier31878); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_discriminator_1_0, grammarAccess.getPojoPropertyModifierAccess().getDiscriminatorDiscriminatorKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
                      	        }
                             		setWithLastConsumed(current, "discriminator", true, "discriminator");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14146:6: ( (lv_primaryKey_2_0= 'primaryKey' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14146:6: ( (lv_primaryKey_2_0= 'primaryKey' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14147:1: (lv_primaryKey_2_0= 'primaryKey' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14147:1: (lv_primaryKey_2_0= 'primaryKey' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14148:3: lv_primaryKey_2_0= 'primaryKey'
                    {
                    lv_primaryKey_2_0=(Token)match(input,159,FollowSets002.FOLLOW_159_in_rulePojoPropertyModifier31915); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_primaryKey_2_0, grammarAccess.getPojoPropertyModifierAccess().getPrimaryKeyPrimaryKeyKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
                      	        }
                             		setWithLastConsumed(current, "primaryKey", true, "primaryKey");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14162:6: (otherlv_3= 'index' ( (lv_index_4_0= RULE_NUMBER ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14162:6: (otherlv_3= 'index' ( (lv_index_4_0= RULE_NUMBER ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14162:8: otherlv_3= 'index' ( (lv_index_4_0= RULE_NUMBER ) )
                    {
                    otherlv_3=(Token)match(input,160,FollowSets002.FOLLOW_160_in_rulePojoPropertyModifier31947); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getPojoPropertyModifierAccess().getIndexKeyword_3_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14166:1: ( (lv_index_4_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14167:1: (lv_index_4_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14167:1: (lv_index_4_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14168:3: lv_index_4_0= RULE_NUMBER
                    {
                    lv_index_4_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePojoPropertyModifier31964); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_index_4_0, grammarAccess.getPojoPropertyModifierAccess().getIndexNUMBERTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"index",
                              		lv_index_4_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14185:6: ( (lv_version_5_0= 'optLock' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14185:6: ( (lv_version_5_0= 'optLock' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14186:1: (lv_version_5_0= 'optLock' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14186:1: (lv_version_5_0= 'optLock' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14187:3: lv_version_5_0= 'optLock'
                    {
                    lv_version_5_0=(Token)match(input,161,FollowSets002.FOLLOW_161_in_rulePojoPropertyModifier31994); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_version_5_0, grammarAccess.getPojoPropertyModifierAccess().getVersionOptLockKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
                      	        }
                             		setWithLastConsumed(current, "version", true, "optLock");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14201:6: (otherlv_6= 'updateCol' ( (lv_updateColumn1_7_0= RULE_IDENT ) ) otherlv_8= '->' ( (lv_updateColumn2_9_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14201:6: (otherlv_6= 'updateCol' ( (lv_updateColumn1_7_0= RULE_IDENT ) ) otherlv_8= '->' ( (lv_updateColumn2_9_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14201:8: otherlv_6= 'updateCol' ( (lv_updateColumn1_7_0= RULE_IDENT ) ) otherlv_8= '->' ( (lv_updateColumn2_9_0= RULE_IDENT ) )
                    {
                    otherlv_6=(Token)match(input,162,FollowSets002.FOLLOW_162_in_rulePojoPropertyModifier32026); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getPojoPropertyModifierAccess().getUpdateColKeyword_5_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14205:1: ( (lv_updateColumn1_7_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14206:1: (lv_updateColumn1_7_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14206:1: (lv_updateColumn1_7_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14207:3: lv_updateColumn1_7_0= RULE_IDENT
                    {
                    lv_updateColumn1_7_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoPropertyModifier32043); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_updateColumn1_7_0, grammarAccess.getPojoPropertyModifierAccess().getUpdateColumn1IDENTTerminalRuleCall_5_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"updateColumn1",
                              		lv_updateColumn1_7_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,41,FollowSets002.FOLLOW_41_in_rulePojoPropertyModifier32060); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPojoPropertyModifierAccess().getHyphenMinusGreaterThanSignKeyword_5_2());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14227:1: ( (lv_updateColumn2_9_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14228:1: (lv_updateColumn2_9_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14228:1: (lv_updateColumn2_9_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14229:3: lv_updateColumn2_9_0= RULE_IDENT
                    {
                    lv_updateColumn2_9_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoPropertyModifier32077); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_updateColumn2_9_0, grammarAccess.getPojoPropertyModifierAccess().getUpdateColumn2IDENTTerminalRuleCall_5_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"updateColumn2",
                              		lv_updateColumn2_9_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14246:6: (otherlv_10= 'createCol' ( (lv_createColumn1_11_0= RULE_IDENT ) ) otherlv_12= '->' ( (lv_createColumn2_13_0= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14246:6: (otherlv_10= 'createCol' ( (lv_createColumn1_11_0= RULE_IDENT ) ) otherlv_12= '->' ( (lv_createColumn2_13_0= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14246:8: otherlv_10= 'createCol' ( (lv_createColumn1_11_0= RULE_IDENT ) ) otherlv_12= '->' ( (lv_createColumn2_13_0= RULE_IDENT ) )
                    {
                    otherlv_10=(Token)match(input,163,FollowSets002.FOLLOW_163_in_rulePojoPropertyModifier32102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getPojoPropertyModifierAccess().getCreateColKeyword_6_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14250:1: ( (lv_createColumn1_11_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14251:1: (lv_createColumn1_11_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14251:1: (lv_createColumn1_11_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14252:3: lv_createColumn1_11_0= RULE_IDENT
                    {
                    lv_createColumn1_11_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoPropertyModifier32119); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_createColumn1_11_0, grammarAccess.getPojoPropertyModifierAccess().getCreateColumn1IDENTTerminalRuleCall_6_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"createColumn1",
                              		lv_createColumn1_11_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,41,FollowSets002.FOLLOW_41_in_rulePojoPropertyModifier32136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getPojoPropertyModifierAccess().getHyphenMinusGreaterThanSignKeyword_6_2());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14272:1: ( (lv_createColumn2_13_0= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14273:1: (lv_createColumn2_13_0= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14273:1: (lv_createColumn2_13_0= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14274:3: lv_createColumn2_13_0= RULE_IDENT
                    {
                    lv_createColumn2_13_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoPropertyModifier32153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_createColumn2_13_0, grammarAccess.getPojoPropertyModifierAccess().getCreateColumn2IDENTTerminalRuleCall_6_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"createColumn2",
                              		lv_createColumn2_13_0, 
                              		"IDENT");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoPropertyModifier"


    // $ANTLR start "entryRulePojoProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14298:1: entryRulePojoProperty returns [EObject current=null] : iv_rulePojoProperty= rulePojoProperty EOF ;
    public final EObject entryRulePojoProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoProperty = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14302:2: (iv_rulePojoProperty= rulePojoProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14303:2: iv_rulePojoProperty= rulePojoProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoPropertyRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoProperty_in_entryRulePojoProperty32201);
            iv_rulePojoProperty=rulePojoProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoProperty; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoProperty32211); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoProperty"


    // $ANTLR start "rulePojoProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14313:1: rulePojoProperty returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | ( (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )? ) ) ( (lv_array_13_0= '[]' ) )? ( (lv_modifiers_14_0= rulePojoPropertyModifier ) )* ) ;
    public final EObject rulePojoProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_native_1_1=null;
        Token lv_native_1_2=null;
        Token lv_native_1_3=null;
        Token lv_native_1_4=null;
        Token lv_native_1_5=null;
        Token lv_native_1_6=null;
        Token lv_native_1_7=null;
        Token lv_native_1_8=null;
        Token this_COLON_2=null;
        Token this_COLON_3=null;
        Token this_COLON_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token this_LESS_THAN_8=null;
        Token this_COLON_9=null;
        Token otherlv_10=null;
        Token this_MORE_THAN_12=null;
        Token lv_array_13_0=null;
        EObject lv_modifiers_14_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14317:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | ( (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )? ) ) ( (lv_array_13_0= '[]' ) )? ( (lv_modifiers_14_0= rulePojoPropertyModifier ) )* ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14318:1: ( ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | ( (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )? ) ) ( (lv_array_13_0= '[]' ) )? ( (lv_modifiers_14_0= rulePojoPropertyModifier ) )* )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14318:1: ( ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | ( (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )? ) ) ( (lv_array_13_0= '[]' ) )? ( (lv_modifiers_14_0= rulePojoPropertyModifier ) )* )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14318:2: ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | ( (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )? ) ) ( (lv_array_13_0= '[]' ) )? ( (lv_modifiers_14_0= rulePojoPropertyModifier ) )*
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14318:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14319:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14319:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14320:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoProperty32257); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getPojoPropertyAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14336:2: ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | ( (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )? ) )
            int alt380=2;
            int LA380_0 = input.LA(1);

            if ( ((LA380_0>=134 && LA380_0<=141)) ) {
                alt380=1;
            }
            else if ( (LA380_0==RULE_COLON) ) {
                alt380=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 380, 0, input);

                throw nvae;
            }
            switch (alt380) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14336:3: ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14336:3: ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14337:1: ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14337:1: ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14338:1: (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14338:1: (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' )
                    int alt374=8;
                    switch ( input.LA(1) ) {
                    case 134:
                        {
                        alt374=1;
                        }
                        break;
                    case 135:
                        {
                        alt374=2;
                        }
                        break;
                    case 136:
                        {
                        alt374=3;
                        }
                        break;
                    case 137:
                        {
                        alt374=4;
                        }
                        break;
                    case 138:
                        {
                        alt374=5;
                        }
                        break;
                    case 139:
                        {
                        alt374=6;
                        }
                        break;
                    case 140:
                        {
                        alt374=7;
                        }
                        break;
                    case 141:
                        {
                        alt374=8;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 374, 0, input);

                        throw nvae;
                    }

                    switch (alt374) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14339:3: lv_native_1_1= '_char'
                            {
                            lv_native_1_1=(Token)match(input,134,FollowSets002.FOLLOW_134_in_rulePojoProperty32283); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_1, grammarAccess.getPojoPropertyAccess().getNative_charKeyword_1_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_1, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14351:8: lv_native_1_2= '_byte'
                            {
                            lv_native_1_2=(Token)match(input,135,FollowSets002.FOLLOW_135_in_rulePojoProperty32312); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_2, grammarAccess.getPojoPropertyAccess().getNative_byteKeyword_1_0_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_2, null);
                              	    
                            }

                            }
                            break;
                        case 3 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14363:8: lv_native_1_3= '_short'
                            {
                            lv_native_1_3=(Token)match(input,136,FollowSets002.FOLLOW_136_in_rulePojoProperty32341); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_3, grammarAccess.getPojoPropertyAccess().getNative_shortKeyword_1_0_0_2());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_3, null);
                              	    
                            }

                            }
                            break;
                        case 4 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14375:8: lv_native_1_4= '_int'
                            {
                            lv_native_1_4=(Token)match(input,137,FollowSets002.FOLLOW_137_in_rulePojoProperty32370); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_4, grammarAccess.getPojoPropertyAccess().getNative_intKeyword_1_0_0_3());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_4, null);
                              	    
                            }

                            }
                            break;
                        case 5 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14387:8: lv_native_1_5= '_long'
                            {
                            lv_native_1_5=(Token)match(input,138,FollowSets002.FOLLOW_138_in_rulePojoProperty32399); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_5, grammarAccess.getPojoPropertyAccess().getNative_longKeyword_1_0_0_4());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_5, null);
                              	    
                            }

                            }
                            break;
                        case 6 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14399:8: lv_native_1_6= '_float'
                            {
                            lv_native_1_6=(Token)match(input,139,FollowSets002.FOLLOW_139_in_rulePojoProperty32428); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_6, grammarAccess.getPojoPropertyAccess().getNative_floatKeyword_1_0_0_5());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_6, null);
                              	    
                            }

                            }
                            break;
                        case 7 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14411:8: lv_native_1_7= '_double'
                            {
                            lv_native_1_7=(Token)match(input,140,FollowSets002.FOLLOW_140_in_rulePojoProperty32457); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_7, grammarAccess.getPojoPropertyAccess().getNative_doubleKeyword_1_0_0_6());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_7, null);
                              	    
                            }

                            }
                            break;
                        case 8 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14423:8: lv_native_1_8= '_boolean'
                            {
                            lv_native_1_8=(Token)match(input,141,FollowSets002.FOLLOW_141_in_rulePojoProperty32486); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_8, grammarAccess.getPojoPropertyAccess().getNative_booleanKeyword_1_0_0_7());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_8, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14439:6: ( (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )? )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14439:6: ( (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )? )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14439:7: (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )?
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14439:7: (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14439:8: this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) )
                    {
                    this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoProperty32521); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_2, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_1_1_0_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14443:1: ( (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) ) | ( ( ruleQualifiedName ) ) )
                    int alt377=2;
                    int LA377_0 = input.LA(1);

                    if ( (LA377_0==RULE_COLON) ) {
                        alt377=1;
                    }
                    else if ( (LA377_0==RULE_IDENT||LA377_0==RULE_IDENT_DOT) ) {
                        alt377=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 377, 0, input);

                        throw nvae;
                    }
                    switch (alt377) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14443:2: (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14443:2: (this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14443:3: this_COLON_3= RULE_COLON ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) )
                            {
                            this_COLON_3=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoProperty32533); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_3, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_1_1_0_1_0_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14447:1: ( (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* ) | ( (otherlv_6= RULE_IDENT ) ) )
                            int alt376=2;
                            int LA376_0 = input.LA(1);

                            if ( (LA376_0==RULE_COLON) ) {
                                alt376=1;
                            }
                            else if ( (LA376_0==RULE_IDENT) ) {
                                alt376=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 376, 0, input);

                                throw nvae;
                            }
                            switch (alt376) {
                                case 1 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14447:2: (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14447:2: (this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )* )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14447:3: this_COLON_4= RULE_COLON ( (otherlv_5= RULE_IDENT ) )*
                                    {
                                    this_COLON_4=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoProperty32545); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_COLON_4, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_1_1_0_1_0_1_0_0()); 
                                          
                                    }
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14451:1: ( (otherlv_5= RULE_IDENT ) )*
                                    loop375:
                                    do {
                                        int alt375=2;
                                        int LA375_0 = input.LA(1);

                                        if ( (LA375_0==RULE_IDENT) ) {
                                            int LA375_2 = input.LA(2);

                                            if ( (LA375_2==EOF||LA375_2==RULE_IDENT||LA375_2==RULE_RBRACE||LA375_2==RULE_AT||LA375_2==RULE_LESS_THAN||LA375_2==142||LA375_2==155||(LA375_2>=158 && LA375_2<=163)) ) {
                                                alt375=1;
                                            }


                                        }


                                        switch (alt375) {
                                    	case 1 :
                                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14452:1: (otherlv_5= RULE_IDENT )
                                    	    {
                                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14452:1: (otherlv_5= RULE_IDENT )
                                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14453:3: otherlv_5= RULE_IDENT
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      			if (current==null) {
                                    	      	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                                    	      	        }
                                    	              
                                    	    }
                                    	    otherlv_5=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoProperty32564); if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      		newLeafNode(otherlv_5, grammarAccess.getPojoPropertyAccess().getAttrsPojoPropertyCrossReference_1_1_0_1_0_1_0_1_0()); 
                                    	      	
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop375;
                                        }
                                    } while (true);


                                    }


                                    }
                                    break;
                                case 2 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14465:6: ( (otherlv_6= RULE_IDENT ) )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14465:6: ( (otherlv_6= RULE_IDENT ) )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14466:1: (otherlv_6= RULE_IDENT )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14466:1: (otherlv_6= RULE_IDENT )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14467:3: otherlv_6= RULE_IDENT
                                    {
                                    if ( state.backtracking==0 ) {

                                      			if (current==null) {
                                      	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                                      	        }
                                              
                                    }
                                    otherlv_6=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoProperty32592); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		newLeafNode(otherlv_6, grammarAccess.getPojoPropertyAccess().getRefEntityCrossReference_1_1_0_1_0_1_1_0()); 
                                      	
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14479:6: ( ( ruleQualifiedName ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14479:6: ( ( ruleQualifiedName ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14480:1: ( ruleQualifiedName )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14480:1: ( ruleQualifiedName )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14481:3: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getPojoPropertyAccess().getTypeJvmTypeCrossReference_1_1_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_rulePojoProperty32623);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14494:4: (this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN )?
                    int alt379=2;
                    int LA379_0 = input.LA(1);

                    if ( (LA379_0==RULE_LESS_THAN) ) {
                        alt379=1;
                    }
                    switch (alt379) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14494:5: this_LESS_THAN_8= RULE_LESS_THAN ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) ) this_MORE_THAN_12= RULE_MORE_THAN
                            {
                            this_LESS_THAN_8=(Token)match(input,RULE_LESS_THAN,FollowSets002.FOLLOW_RULE_LESS_THAN_in_rulePojoProperty32637); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_LESS_THAN_8, grammarAccess.getPojoPropertyAccess().getLESS_THANTerminalRuleCall_1_1_1_0()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14498:1: ( (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) ) | ( ( ruleQualifiedName ) ) )
                            int alt378=2;
                            int LA378_0 = input.LA(1);

                            if ( (LA378_0==RULE_COLON) ) {
                                alt378=1;
                            }
                            else if ( (LA378_0==RULE_IDENT||LA378_0==RULE_IDENT_DOT) ) {
                                alt378=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 378, 0, input);

                                throw nvae;
                            }
                            switch (alt378) {
                                case 1 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14498:2: (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14498:2: (this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) ) )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14498:3: this_COLON_9= RULE_COLON ( (otherlv_10= RULE_IDENT ) )
                                    {
                                    this_COLON_9=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoProperty32649); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_COLON_9, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_1_1_1_1_0_0()); 
                                          
                                    }
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14502:1: ( (otherlv_10= RULE_IDENT ) )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14503:1: (otherlv_10= RULE_IDENT )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14503:1: (otherlv_10= RULE_IDENT )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14504:3: otherlv_10= RULE_IDENT
                                    {
                                    if ( state.backtracking==0 ) {

                                      			if (current==null) {
                                      	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                                      	        }
                                              
                                    }
                                    otherlv_10=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoProperty32668); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		newLeafNode(otherlv_10, grammarAccess.getPojoPropertyAccess().getGrefPojoEntityCrossReference_1_1_1_1_0_1_0()); 
                                      	
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14516:6: ( ( ruleQualifiedName ) )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14516:6: ( ( ruleQualifiedName ) )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14517:1: ( ruleQualifiedName )
                                    {
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14517:1: ( ruleQualifiedName )
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14518:3: ruleQualifiedName
                                    {
                                    if ( state.backtracking==0 ) {

                                      			if (current==null) {
                                      	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                                      	        }
                                              
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getPojoPropertyAccess().getGtypeJvmTypeCrossReference_1_1_1_1_1_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_rulePojoProperty32698);
                                    ruleQualifiedName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {
                                       
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            this_MORE_THAN_12=(Token)match(input,RULE_MORE_THAN,FollowSets002.FOLLOW_RULE_MORE_THAN_in_rulePojoProperty32710); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_MORE_THAN_12, grammarAccess.getPojoPropertyAccess().getMORE_THANTerminalRuleCall_1_1_1_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14535:5: ( (lv_array_13_0= '[]' ) )?
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==142) ) {
                alt381=1;
            }
            switch (alt381) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14536:1: (lv_array_13_0= '[]' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14536:1: (lv_array_13_0= '[]' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14537:3: lv_array_13_0= '[]'
                    {
                    lv_array_13_0=(Token)match(input,142,FollowSets002.FOLLOW_142_in_rulePojoProperty32731); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_array_13_0, grammarAccess.getPojoPropertyAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoPropertyRule());
                      	        }
                             		setWithLastConsumed(current, "array", true, "[]");
                      	    
                    }

                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14550:3: ( (lv_modifiers_14_0= rulePojoPropertyModifier ) )*
            loop382:
            do {
                int alt382=2;
                int LA382_0 = input.LA(1);

                if ( (LA382_0==155||(LA382_0>=158 && LA382_0<=163)) ) {
                    alt382=1;
                }


                switch (alt382) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14551:1: (lv_modifiers_14_0= rulePojoPropertyModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14551:1: (lv_modifiers_14_0= rulePojoPropertyModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14552:3: lv_modifiers_14_0= rulePojoPropertyModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoPropertyAccess().getModifiersPojoPropertyModifierParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoPropertyModifier_in_rulePojoProperty32766);
            	    lv_modifiers_14_0=rulePojoPropertyModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoPropertyRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers",
            	              		lv_modifiers_14_0, 
            	              		"PojoPropertyModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop382;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoProperty"


    // $ANTLR start "entryRuleEnumEntityModifier1"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14579:1: entryRuleEnumEntityModifier1 returns [EObject current=null] : iv_ruleEnumEntityModifier1= ruleEnumEntityModifier1 EOF ;
    public final EObject entryRuleEnumEntityModifier1() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumEntityModifier1 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14580:2: (iv_ruleEnumEntityModifier1= ruleEnumEntityModifier1 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14581:2: iv_ruleEnumEntityModifier1= ruleEnumEntityModifier1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumEntityModifier1Rule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumEntityModifier1_in_entryRuleEnumEntityModifier132807);
            iv_ruleEnumEntityModifier1=ruleEnumEntityModifier1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumEntityModifier1; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumEntityModifier132817); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumEntityModifier1"


    // $ANTLR start "ruleEnumEntityModifier1"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14588:1: ruleEnumEntityModifier1 returns [EObject current=null] : ( (lv_final_0_0= 'final' ) ) ;
    public final EObject ruleEnumEntityModifier1() throws RecognitionException {
        EObject current = null;

        Token lv_final_0_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14591:28: ( ( (lv_final_0_0= 'final' ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14592:1: ( (lv_final_0_0= 'final' ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14592:1: ( (lv_final_0_0= 'final' ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14593:1: (lv_final_0_0= 'final' )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14593:1: (lv_final_0_0= 'final' )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14594:3: lv_final_0_0= 'final'
            {
            lv_final_0_0=(Token)match(input,153,FollowSets002.FOLLOW_153_in_ruleEnumEntityModifier132859); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_final_0_0, grammarAccess.getEnumEntityModifier1Access().getFinalFinalKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumEntityModifier1Rule());
              	        }
                     		setWithLastConsumed(current, "final", true, "final");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumEntityModifier1"


    // $ANTLR start "entryRuleEnumEntityModifier2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14615:1: entryRuleEnumEntityModifier2 returns [EObject current=null] : iv_ruleEnumEntityModifier2= ruleEnumEntityModifier2 EOF ;
    public final EObject entryRuleEnumEntityModifier2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumEntityModifier2 = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14616:2: (iv_ruleEnumEntityModifier2= ruleEnumEntityModifier2 EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14617:2: iv_ruleEnumEntityModifier2= ruleEnumEntityModifier2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumEntityModifier2Rule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumEntityModifier2_in_entryRuleEnumEntityModifier232907);
            iv_ruleEnumEntityModifier2=ruleEnumEntityModifier2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumEntityModifier2; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumEntityModifier232917); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumEntityModifier2"


    // $ANTLR start "ruleEnumEntityModifier2"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14624:1: ruleEnumEntityModifier2 returns [EObject current=null] : ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) ) ) ;
    public final EObject ruleEnumEntityModifier2() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_sernum_3_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14627:28: ( ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14628:1: ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14628:1: ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) ) )
            int alt383=2;
            int LA383_0 = input.LA(1);

            if ( (LA383_0==152) ) {
                alt383=1;
            }
            else if ( (LA383_0==157) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 0, input);

                throw nvae;
            }
            switch (alt383) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14628:2: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14628:2: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14628:4: otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) )
                    {
                    otherlv_0=(Token)match(input,152,FollowSets002.FOLLOW_152_in_ruleEnumEntityModifier232955); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getEnumEntityModifier2Access().getExtendsKeyword_0_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14632:1: ( (otherlv_1= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14633:1: (otherlv_1= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14633:1: (otherlv_1= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14634:3: otherlv_1= RULE_IDENT
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumEntityModifier2Rule());
                      	        }
                              
                    }
                    otherlv_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleEnumEntityModifier232975); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_1, grammarAccess.getEnumEntityModifier2Access().getSuperTypePojoEntityCrossReference_0_1_0()); 
                      	
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14646:6: (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14646:6: (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14646:8: otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) )
                    {
                    otherlv_2=(Token)match(input,157,FollowSets002.FOLLOW_157_in_ruleEnumEntityModifier232995); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getEnumEntityModifier2Access().getSerializableKeyword_1_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14650:1: ( (lv_sernum_3_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14651:1: (lv_sernum_3_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14651:1: (lv_sernum_3_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14652:3: lv_sernum_3_0= RULE_NUMBER
                    {
                    lv_sernum_3_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleEnumEntityModifier233012); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_sernum_3_0, grammarAccess.getEnumEntityModifier2Access().getSernumNUMBERTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumEntityModifier2Rule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"sernum",
                              		lv_sernum_3_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumEntityModifier2"


    // $ANTLR start "entryRuleEnumEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14676:1: entryRuleEnumEntity returns [EObject current=null] : iv_ruleEnumEntity= ruleEnumEntity EOF ;
    public final EObject entryRuleEnumEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumEntity = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14680:2: (iv_ruleEnumEntity= ruleEnumEntity EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14681:2: iv_ruleEnumEntity= ruleEnumEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumEntityRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumEntity_in_entryRuleEnumEntity33060);
            iv_ruleEnumEntity=ruleEnumEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumEntity; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumEntity33070); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleEnumEntity"


    // $ANTLR start "ruleEnumEntity"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14691:1: ruleEnumEntity returns [EObject current=null] : ( ( (lv_modifiers1_0_0= ruleEnumEntityModifier1 ) )* otherlv_1= 'enum' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= ruleEnumEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= ruleEnumProperty ) )* this_RBRACE_6= RULE_RBRACE ) ;
    public final EObject ruleEnumEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token this_LBRACE_4=null;
        Token this_RBRACE_6=null;
        EObject lv_modifiers1_0_0 = null;

        EObject lv_modifiers2_3_0 = null;

        EObject lv_features_5_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14695:28: ( ( ( (lv_modifiers1_0_0= ruleEnumEntityModifier1 ) )* otherlv_1= 'enum' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= ruleEnumEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= ruleEnumProperty ) )* this_RBRACE_6= RULE_RBRACE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14696:1: ( ( (lv_modifiers1_0_0= ruleEnumEntityModifier1 ) )* otherlv_1= 'enum' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= ruleEnumEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= ruleEnumProperty ) )* this_RBRACE_6= RULE_RBRACE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14696:1: ( ( (lv_modifiers1_0_0= ruleEnumEntityModifier1 ) )* otherlv_1= 'enum' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= ruleEnumEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= ruleEnumProperty ) )* this_RBRACE_6= RULE_RBRACE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14696:2: ( (lv_modifiers1_0_0= ruleEnumEntityModifier1 ) )* otherlv_1= 'enum' ( (lv_name_2_0= RULE_IDENT ) ) ( (lv_modifiers2_3_0= ruleEnumEntityModifier2 ) )* this_LBRACE_4= RULE_LBRACE ( (lv_features_5_0= ruleEnumProperty ) )* this_RBRACE_6= RULE_RBRACE
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14696:2: ( (lv_modifiers1_0_0= ruleEnumEntityModifier1 ) )*
            loop384:
            do {
                int alt384=2;
                int LA384_0 = input.LA(1);

                if ( (LA384_0==153) ) {
                    alt384=1;
                }


                switch (alt384) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14697:1: (lv_modifiers1_0_0= ruleEnumEntityModifier1 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14697:1: (lv_modifiers1_0_0= ruleEnumEntityModifier1 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14698:3: lv_modifiers1_0_0= ruleEnumEntityModifier1
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumEntityAccess().getModifiers1EnumEntityModifier1ParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleEnumEntityModifier1_in_ruleEnumEntity33120);
            	    lv_modifiers1_0_0=ruleEnumEntityModifier1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers1",
            	              		lv_modifiers1_0_0, 
            	              		"EnumEntityModifier1");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop384;
                }
            } while (true);

            otherlv_1=(Token)match(input,164,FollowSets002.FOLLOW_164_in_ruleEnumEntity33133); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEnumEntityAccess().getEnumKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14718:1: ( (lv_name_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14719:1: (lv_name_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14719:1: (lv_name_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14720:3: lv_name_2_0= RULE_IDENT
            {
            lv_name_2_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleEnumEntity33150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getEnumEntityAccess().getNameIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumEntityRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14736:2: ( (lv_modifiers2_3_0= ruleEnumEntityModifier2 ) )*
            loop385:
            do {
                int alt385=2;
                int LA385_0 = input.LA(1);

                if ( (LA385_0==152||LA385_0==157) ) {
                    alt385=1;
                }


                switch (alt385) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14737:1: (lv_modifiers2_3_0= ruleEnumEntityModifier2 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14737:1: (lv_modifiers2_3_0= ruleEnumEntityModifier2 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14738:3: lv_modifiers2_3_0= ruleEnumEntityModifier2
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumEntityAccess().getModifiers2EnumEntityModifier2ParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleEnumEntityModifier2_in_ruleEnumEntity33176);
            	    lv_modifiers2_3_0=ruleEnumEntityModifier2();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers2",
            	              		lv_modifiers2_3_0, 
            	              		"EnumEntityModifier2");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop385;
                }
            } while (true);

            this_LBRACE_4=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_ruleEnumEntity33188); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LBRACE_4, grammarAccess.getEnumEntityAccess().getLBRACETerminalRuleCall_4()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14758:1: ( (lv_features_5_0= ruleEnumProperty ) )*
            loop386:
            do {
                int alt386=2;
                int LA386_0 = input.LA(1);

                if ( (LA386_0==RULE_IDENT) ) {
                    alt386=1;
                }


                switch (alt386) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14759:1: (lv_features_5_0= ruleEnumProperty )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14759:1: (lv_features_5_0= ruleEnumProperty )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14760:3: lv_features_5_0= ruleEnumProperty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumEntityAccess().getFeaturesEnumPropertyParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleEnumProperty_in_ruleEnumEntity33208);
            	    lv_features_5_0=ruleEnumProperty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumEntityRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"features",
            	              		lv_features_5_0, 
            	              		"EnumProperty");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop386;
                }
            } while (true);

            this_RBRACE_6=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_ruleEnumEntity33220); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RBRACE_6, grammarAccess.getEnumEntityAccess().getRBRACETerminalRuleCall_6()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleEnumEntity"


    // $ANTLR start "entryRuleEnumProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14791:1: entryRuleEnumProperty returns [EObject current=null] : iv_ruleEnumProperty= ruleEnumProperty EOF ;
    public final EObject entryRuleEnumProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumProperty = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14795:2: (iv_ruleEnumProperty= ruleEnumProperty EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14796:2: iv_ruleEnumProperty= ruleEnumProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumPropertyRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleEnumProperty_in_entryRuleEnumProperty33265);
            iv_ruleEnumProperty=ruleEnumProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumProperty; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleEnumProperty33275); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleEnumProperty"


    // $ANTLR start "ruleEnumProperty"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14806:1: ruleEnumProperty returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) ) ) ;
    public final EObject ruleEnumProperty() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_native_1_1=null;
        Token lv_native_1_2=null;
        Token lv_native_1_3=null;
        Token lv_native_1_4=null;
        Token lv_native_1_5=null;
        Token lv_native_1_6=null;
        Token lv_native_1_7=null;
        Token lv_native_1_8=null;
        Token this_COLON_2=null;
        Token this_COLON_3=null;
        Token this_COLON_4=null;
        Token lv_value_5_1=null;
        Token lv_value_5_2=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14810:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14811:1: ( ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14811:1: ( ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14811:2: ( (lv_name_0_0= RULE_IDENT ) ) ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14811:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14812:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14812:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14813:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleEnumProperty33321); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getEnumPropertyAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14829:2: ( ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) ) | (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) ) ) )
            int alt390=2;
            int LA390_0 = input.LA(1);

            if ( ((LA390_0>=134 && LA390_0<=141)) ) {
                alt390=1;
            }
            else if ( (LA390_0==RULE_COLON) ) {
                alt390=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 390, 0, input);

                throw nvae;
            }
            switch (alt390) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14829:3: ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14829:3: ( ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14830:1: ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14830:1: ( (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14831:1: (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14831:1: (lv_native_1_1= '_char' | lv_native_1_2= '_byte' | lv_native_1_3= '_short' | lv_native_1_4= '_int' | lv_native_1_5= '_long' | lv_native_1_6= '_float' | lv_native_1_7= '_double' | lv_native_1_8= '_boolean' )
                    int alt387=8;
                    switch ( input.LA(1) ) {
                    case 134:
                        {
                        alt387=1;
                        }
                        break;
                    case 135:
                        {
                        alt387=2;
                        }
                        break;
                    case 136:
                        {
                        alt387=3;
                        }
                        break;
                    case 137:
                        {
                        alt387=4;
                        }
                        break;
                    case 138:
                        {
                        alt387=5;
                        }
                        break;
                    case 139:
                        {
                        alt387=6;
                        }
                        break;
                    case 140:
                        {
                        alt387=7;
                        }
                        break;
                    case 141:
                        {
                        alt387=8;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 387, 0, input);

                        throw nvae;
                    }

                    switch (alt387) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14832:3: lv_native_1_1= '_char'
                            {
                            lv_native_1_1=(Token)match(input,134,FollowSets002.FOLLOW_134_in_ruleEnumProperty33347); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_1, grammarAccess.getEnumPropertyAccess().getNative_charKeyword_1_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_1, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14844:8: lv_native_1_2= '_byte'
                            {
                            lv_native_1_2=(Token)match(input,135,FollowSets002.FOLLOW_135_in_ruleEnumProperty33376); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_2, grammarAccess.getEnumPropertyAccess().getNative_byteKeyword_1_0_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_2, null);
                              	    
                            }

                            }
                            break;
                        case 3 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14856:8: lv_native_1_3= '_short'
                            {
                            lv_native_1_3=(Token)match(input,136,FollowSets002.FOLLOW_136_in_ruleEnumProperty33405); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_3, grammarAccess.getEnumPropertyAccess().getNative_shortKeyword_1_0_0_2());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_3, null);
                              	    
                            }

                            }
                            break;
                        case 4 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14868:8: lv_native_1_4= '_int'
                            {
                            lv_native_1_4=(Token)match(input,137,FollowSets002.FOLLOW_137_in_ruleEnumProperty33434); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_4, grammarAccess.getEnumPropertyAccess().getNative_intKeyword_1_0_0_3());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_4, null);
                              	    
                            }

                            }
                            break;
                        case 5 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14880:8: lv_native_1_5= '_long'
                            {
                            lv_native_1_5=(Token)match(input,138,FollowSets002.FOLLOW_138_in_ruleEnumProperty33463); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_5, grammarAccess.getEnumPropertyAccess().getNative_longKeyword_1_0_0_4());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_5, null);
                              	    
                            }

                            }
                            break;
                        case 6 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14892:8: lv_native_1_6= '_float'
                            {
                            lv_native_1_6=(Token)match(input,139,FollowSets002.FOLLOW_139_in_ruleEnumProperty33492); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_6, grammarAccess.getEnumPropertyAccess().getNative_floatKeyword_1_0_0_5());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_6, null);
                              	    
                            }

                            }
                            break;
                        case 7 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14904:8: lv_native_1_7= '_double'
                            {
                            lv_native_1_7=(Token)match(input,140,FollowSets002.FOLLOW_140_in_ruleEnumProperty33521); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_7, grammarAccess.getEnumPropertyAccess().getNative_doubleKeyword_1_0_0_6());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_7, null);
                              	    
                            }

                            }
                            break;
                        case 8 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14916:8: lv_native_1_8= '_boolean'
                            {
                            lv_native_1_8=(Token)match(input,141,FollowSets002.FOLLOW_141_in_ruleEnumProperty33550); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_native_1_8, grammarAccess.getEnumPropertyAccess().getNative_booleanKeyword_1_0_0_7());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                              	        }
                                     		setWithLastConsumed(current, "native", lv_native_1_8, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14932:6: (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14932:6: (this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14932:7: this_COLON_2= RULE_COLON ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) )
                    {
                    this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleEnumProperty33584); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_2, grammarAccess.getEnumPropertyAccess().getCOLONTerminalRuleCall_1_1_0()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14936:1: ( (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) ) | ( ( ruleQualifiedName ) ) )
                    int alt389=2;
                    int LA389_0 = input.LA(1);

                    if ( (LA389_0==RULE_COLON) ) {
                        alt389=1;
                    }
                    else if ( (LA389_0==RULE_IDENT||LA389_0==RULE_IDENT_DOT) ) {
                        alt389=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 389, 0, input);

                        throw nvae;
                    }
                    switch (alt389) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14936:2: (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14936:2: (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14936:3: this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) )
                            {
                            this_COLON_3=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleEnumProperty33596); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_3, grammarAccess.getEnumPropertyAccess().getCOLONTerminalRuleCall_1_1_1_0_0()); 
                                  
                            }
                            this_COLON_4=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleEnumProperty33606); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_COLON_4, grammarAccess.getEnumPropertyAccess().getCOLONTerminalRuleCall_1_1_1_0_1()); 
                                  
                            }
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14944:1: ( ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14945:1: ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14945:1: ( (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14946:1: (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14946:1: (lv_value_5_1= RULE_NUMBER | lv_value_5_2= RULE_STRING_VALUE )
                            int alt388=2;
                            int LA388_0 = input.LA(1);

                            if ( (LA388_0==RULE_NUMBER) ) {
                                alt388=1;
                            }
                            else if ( (LA388_0==RULE_STRING_VALUE) ) {
                                alt388=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 388, 0, input);

                                throw nvae;
                            }
                            switch (alt388) {
                                case 1 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14947:3: lv_value_5_1= RULE_NUMBER
                                    {
                                    lv_value_5_1=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_ruleEnumProperty33624); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      			newLeafNode(lv_value_5_1, grammarAccess.getEnumPropertyAccess().getValueNUMBERTerminalRuleCall_1_1_1_0_2_0_0()); 
                                      		
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                                      	        }
                                             		setWithLastConsumed(
                                             			current, 
                                             			"value",
                                              		lv_value_5_1, 
                                              		"NUMBER");
                                      	    
                                    }

                                    }
                                    break;
                                case 2 :
                                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14962:8: lv_value_5_2= RULE_STRING_VALUE
                                    {
                                    lv_value_5_2=(Token)match(input,RULE_STRING_VALUE,FollowSets002.FOLLOW_RULE_STRING_VALUE_in_ruleEnumProperty33644); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      			newLeafNode(lv_value_5_2, grammarAccess.getEnumPropertyAccess().getValueSTRING_VALUETerminalRuleCall_1_1_1_0_2_0_1()); 
                                      		
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                                      	        }
                                             		setWithLastConsumed(
                                             			current, 
                                             			"value",
                                              		lv_value_5_2, 
                                              		"STRING_VALUE");
                                      	    
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14981:6: ( ( ruleQualifiedName ) )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14981:6: ( ( ruleQualifiedName ) )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14982:1: ( ruleQualifiedName )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14982:1: ( ruleQualifiedName )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14983:3: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumPropertyRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getEnumPropertyAccess().getTypeJvmTypeCrossReference_1_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleEnumProperty33682);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleEnumProperty"


    // $ANTLR start "entryRulePojoDaoModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15007:1: entryRulePojoDaoModifier returns [EObject current=null] : iv_rulePojoDaoModifier= rulePojoDaoModifier EOF ;
    public final EObject entryRulePojoDaoModifier() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoDaoModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15008:2: (iv_rulePojoDaoModifier= rulePojoDaoModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15009:2: iv_rulePojoDaoModifier= rulePojoDaoModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoDaoModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoDaoModifier_in_entryRulePojoDaoModifier33725);
            iv_rulePojoDaoModifier=rulePojoDaoModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoDaoModifier; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoDaoModifier33735); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoDaoModifier"


    // $ANTLR start "rulePojoDaoModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15016:1: rulePojoDaoModifier returns [EObject current=null] : ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) ) ) ;
    public final EObject rulePojoDaoModifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_sernum_3_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15019:28: ( ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15020:1: ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15020:1: ( (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) ) | (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) ) )
            int alt391=2;
            int LA391_0 = input.LA(1);

            if ( (LA391_0==152) ) {
                alt391=1;
            }
            else if ( (LA391_0==157) ) {
                alt391=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 391, 0, input);

                throw nvae;
            }
            switch (alt391) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15020:2: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15020:2: (otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15020:4: otherlv_0= 'extends' ( (otherlv_1= RULE_IDENT ) )
                    {
                    otherlv_0=(Token)match(input,152,FollowSets002.FOLLOW_152_in_rulePojoDaoModifier33773); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getPojoDaoModifierAccess().getExtendsKeyword_0_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15024:1: ( (otherlv_1= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15025:1: (otherlv_1= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15025:1: (otherlv_1= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15026:3: otherlv_1= RULE_IDENT
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoDaoModifierRule());
                      	        }
                              
                    }
                    otherlv_1=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoDaoModifier33793); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_1, grammarAccess.getPojoDaoModifierAccess().getSuperTypePojoDaoCrossReference_0_1_0()); 
                      	
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15038:6: (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15038:6: (otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15038:8: otherlv_2= 'serializable' ( (lv_sernum_3_0= RULE_NUMBER ) )
                    {
                    otherlv_2=(Token)match(input,157,FollowSets002.FOLLOW_157_in_rulePojoDaoModifier33813); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPojoDaoModifierAccess().getSerializableKeyword_1_0());
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15042:1: ( (lv_sernum_3_0= RULE_NUMBER ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15043:1: (lv_sernum_3_0= RULE_NUMBER )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15043:1: (lv_sernum_3_0= RULE_NUMBER )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15044:3: lv_sernum_3_0= RULE_NUMBER
                    {
                    lv_sernum_3_0=(Token)match(input,RULE_NUMBER,FollowSets002.FOLLOW_RULE_NUMBER_in_rulePojoDaoModifier33830); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_sernum_3_0, grammarAccess.getPojoDaoModifierAccess().getSernumNUMBERTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoDaoModifierRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"sernum",
                              		lv_sernum_3_0, 
                              		"NUMBER");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoDaoModifier"


    // $ANTLR start "entryRulePojoDao"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15068:1: entryRulePojoDao returns [EObject current=null] : iv_rulePojoDao= rulePojoDao EOF ;
    public final EObject entryRulePojoDao() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoDao = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15072:2: (iv_rulePojoDao= rulePojoDao EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15073:2: iv_rulePojoDao= rulePojoDao EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoDaoRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoDao_in_entryRulePojoDao33878);
            iv_rulePojoDao=rulePojoDao();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoDao; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoDao33888); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoDao"


    // $ANTLR start "rulePojoDao"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15083:1: rulePojoDao returns [EObject current=null] : ( ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'dao' ( (lv_name_2_0= RULE_IDENT ) ) (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( (lv_pojoGenerics_5_0= RULE_COLON ) )? ( (otherlv_6= RULE_IDENT ) ) )? ( (lv_modifiers2_7_0= rulePojoDaoModifier ) )* this_LBRACE_8= RULE_LBRACE ( (lv_methods_9_0= rulePojoMethod ) )* ( (lv_toInits_10_0= ruleToInitMethod ) )* this_RBRACE_11= RULE_RBRACE ) ;
    public final EObject rulePojoDao() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token this_COLON_3=null;
        Token this_COLON_4=null;
        Token lv_pojoGenerics_5_0=null;
        Token otherlv_6=null;
        Token this_LBRACE_8=null;
        Token this_RBRACE_11=null;
        EObject lv_modifiers1_0_0 = null;

        EObject lv_modifiers2_7_0 = null;

        EObject lv_methods_9_0 = null;

        EObject lv_toInits_10_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15087:28: ( ( ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'dao' ( (lv_name_2_0= RULE_IDENT ) ) (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( (lv_pojoGenerics_5_0= RULE_COLON ) )? ( (otherlv_6= RULE_IDENT ) ) )? ( (lv_modifiers2_7_0= rulePojoDaoModifier ) )* this_LBRACE_8= RULE_LBRACE ( (lv_methods_9_0= rulePojoMethod ) )* ( (lv_toInits_10_0= ruleToInitMethod ) )* this_RBRACE_11= RULE_RBRACE ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15088:1: ( ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'dao' ( (lv_name_2_0= RULE_IDENT ) ) (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( (lv_pojoGenerics_5_0= RULE_COLON ) )? ( (otherlv_6= RULE_IDENT ) ) )? ( (lv_modifiers2_7_0= rulePojoDaoModifier ) )* this_LBRACE_8= RULE_LBRACE ( (lv_methods_9_0= rulePojoMethod ) )* ( (lv_toInits_10_0= ruleToInitMethod ) )* this_RBRACE_11= RULE_RBRACE )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15088:1: ( ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'dao' ( (lv_name_2_0= RULE_IDENT ) ) (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( (lv_pojoGenerics_5_0= RULE_COLON ) )? ( (otherlv_6= RULE_IDENT ) ) )? ( (lv_modifiers2_7_0= rulePojoDaoModifier ) )* this_LBRACE_8= RULE_LBRACE ( (lv_methods_9_0= rulePojoMethod ) )* ( (lv_toInits_10_0= ruleToInitMethod ) )* this_RBRACE_11= RULE_RBRACE )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15088:2: ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )* otherlv_1= 'dao' ( (lv_name_2_0= RULE_IDENT ) ) (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( (lv_pojoGenerics_5_0= RULE_COLON ) )? ( (otherlv_6= RULE_IDENT ) ) )? ( (lv_modifiers2_7_0= rulePojoDaoModifier ) )* this_LBRACE_8= RULE_LBRACE ( (lv_methods_9_0= rulePojoMethod ) )* ( (lv_toInits_10_0= ruleToInitMethod ) )* this_RBRACE_11= RULE_RBRACE
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15088:2: ( (lv_modifiers1_0_0= rulePojoEntityModifier1 ) )*
            loop392:
            do {
                int alt392=2;
                int LA392_0 = input.LA(1);

                if ( ((LA392_0>=153 && LA392_0<=154)) ) {
                    alt392=1;
                }


                switch (alt392) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15089:1: (lv_modifiers1_0_0= rulePojoEntityModifier1 )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15089:1: (lv_modifiers1_0_0= rulePojoEntityModifier1 )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15090:3: lv_modifiers1_0_0= rulePojoEntityModifier1
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoDaoAccess().getModifiers1PojoEntityModifier1ParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoEntityModifier1_in_rulePojoDao33938);
            	    lv_modifiers1_0_0=rulePojoEntityModifier1();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoDaoRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers1",
            	              		lv_modifiers1_0_0, 
            	              		"PojoEntityModifier1");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop392;
                }
            } while (true);

            otherlv_1=(Token)match(input,165,FollowSets002.FOLLOW_165_in_rulePojoDao33951); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPojoDaoAccess().getDaoKeyword_1());
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15110:1: ( (lv_name_2_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15111:1: (lv_name_2_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15111:1: (lv_name_2_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15112:3: lv_name_2_0= RULE_IDENT
            {
            lv_name_2_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoDao33968); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getPojoDaoAccess().getNameIDENTTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoDaoRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15128:2: (this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( (lv_pojoGenerics_5_0= RULE_COLON ) )? ( (otherlv_6= RULE_IDENT ) ) )?
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==RULE_COLON) ) {
                alt394=1;
            }
            switch (alt394) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15128:3: this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON ( (lv_pojoGenerics_5_0= RULE_COLON ) )? ( (otherlv_6= RULE_IDENT ) )
                    {
                    this_COLON_3=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoDao33985); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_3, grammarAccess.getPojoDaoAccess().getCOLONTerminalRuleCall_3_0()); 
                          
                    }
                    this_COLON_4=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoDao33995); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_4, grammarAccess.getPojoDaoAccess().getCOLONTerminalRuleCall_3_1()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15136:1: ( (lv_pojoGenerics_5_0= RULE_COLON ) )?
                    int alt393=2;
                    int LA393_0 = input.LA(1);

                    if ( (LA393_0==RULE_COLON) ) {
                        alt393=1;
                    }
                    switch (alt393) {
                        case 1 :
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15137:1: (lv_pojoGenerics_5_0= RULE_COLON )
                            {
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15137:1: (lv_pojoGenerics_5_0= RULE_COLON )
                            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15138:3: lv_pojoGenerics_5_0= RULE_COLON
                            {
                            lv_pojoGenerics_5_0=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoDao34011); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_pojoGenerics_5_0, grammarAccess.getPojoDaoAccess().getPojoGenericsCOLONTerminalRuleCall_3_2_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getPojoDaoRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"pojoGenerics",
                                      		true, 
                                      		"COLON");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15154:3: ( (otherlv_6= RULE_IDENT ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15155:1: (otherlv_6= RULE_IDENT )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15155:1: (otherlv_6= RULE_IDENT )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15156:3: otherlv_6= RULE_IDENT
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoDaoRule());
                      	        }
                              
                    }
                    otherlv_6=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoDao34037); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_6, grammarAccess.getPojoDaoAccess().getPojoPojoEntityCrossReference_3_3_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15167:4: ( (lv_modifiers2_7_0= rulePojoDaoModifier ) )*
            loop395:
            do {
                int alt395=2;
                int LA395_0 = input.LA(1);

                if ( (LA395_0==152||LA395_0==157) ) {
                    alt395=1;
                }


                switch (alt395) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15168:1: (lv_modifiers2_7_0= rulePojoDaoModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15168:1: (lv_modifiers2_7_0= rulePojoDaoModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15169:3: lv_modifiers2_7_0= rulePojoDaoModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoDaoAccess().getModifiers2PojoDaoModifierParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoDaoModifier_in_rulePojoDao34060);
            	    lv_modifiers2_7_0=rulePojoDaoModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoDaoRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers2",
            	              		lv_modifiers2_7_0, 
            	              		"PojoDaoModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop395;
                }
            } while (true);

            this_LBRACE_8=(Token)match(input,RULE_LBRACE,FollowSets002.FOLLOW_RULE_LBRACE_in_rulePojoDao34072); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LBRACE_8, grammarAccess.getPojoDaoAccess().getLBRACETerminalRuleCall_5()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15189:1: ( (lv_methods_9_0= rulePojoMethod ) )*
            loop396:
            do {
                int alt396=2;
                int LA396_0 = input.LA(1);

                if ( (LA396_0==RULE_IDENT) ) {
                    int LA396_1 = input.LA(2);

                    if ( (LA396_1==RULE_IDENT||LA396_1==RULE_RBRACE||(LA396_1>=133 && LA396_1<=141)||(LA396_1>=166 && LA396_1<=170)) ) {
                        alt396=1;
                    }
                    else if ( (LA396_1==RULE_COLON) ) {
                        int LA396_4 = input.LA(3);

                        if ( (LA396_4==RULE_COLON) ) {
                            int LA396_5 = input.LA(4);

                            if ( (LA396_5==RULE_IDENT) ) {
                                alt396=1;
                            }


                        }
                        else if ( (LA396_4==RULE_IDENT||LA396_4==RULE_IDENT_DOT) ) {
                            alt396=1;
                        }


                    }


                }
                else if ( ((LA396_0>=166 && LA396_0<=170)) ) {
                    alt396=1;
                }


                switch (alt396) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15190:1: (lv_methods_9_0= rulePojoMethod )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15190:1: (lv_methods_9_0= rulePojoMethod )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15191:3: lv_methods_9_0= rulePojoMethod
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoDaoAccess().getMethodsPojoMethodParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoMethod_in_rulePojoDao34092);
            	    lv_methods_9_0=rulePojoMethod();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoDaoRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"methods",
            	              		lv_methods_9_0, 
            	              		"PojoMethod");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop396;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15207:3: ( (lv_toInits_10_0= ruleToInitMethod ) )*
            loop397:
            do {
                int alt397=2;
                int LA397_0 = input.LA(1);

                if ( (LA397_0==RULE_IDENT) ) {
                    alt397=1;
                }


                switch (alt397) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15208:1: (lv_toInits_10_0= ruleToInitMethod )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15208:1: (lv_toInits_10_0= ruleToInitMethod )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15209:3: lv_toInits_10_0= ruleToInitMethod
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoDaoAccess().getToInitsToInitMethodParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_ruleToInitMethod_in_rulePojoDao34114);
            	    lv_toInits_10_0=ruleToInitMethod();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoDaoRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"toInits",
            	              		lv_toInits_10_0, 
            	              		"ToInitMethod");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop397;
                }
            } while (true);

            this_RBRACE_11=(Token)match(input,RULE_RBRACE,FollowSets002.FOLLOW_RULE_RBRACE_in_rulePojoDao34126); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RBRACE_11, grammarAccess.getPojoDaoAccess().getRBRACETerminalRuleCall_8()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoDao"


    // $ANTLR start "entryRulePojoMethodModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15240:1: entryRulePojoMethodModifier returns [EObject current=null] : iv_rulePojoMethodModifier= rulePojoMethodModifier EOF ;
    public final EObject entryRulePojoMethodModifier() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoMethodModifier = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15241:2: (iv_rulePojoMethodModifier= rulePojoMethodModifier EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15242:2: iv_rulePojoMethodModifier= rulePojoMethodModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoMethodModifierRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoMethodModifier_in_entryRulePojoMethodModifier34165);
            iv_rulePojoMethodModifier=rulePojoMethodModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoMethodModifier; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoMethodModifier34175); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePojoMethodModifier"


    // $ANTLR start "rulePojoMethodModifier"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15249:1: rulePojoMethodModifier returns [EObject current=null] : ( ( (lv_callFunction_0_0= 'callFunction' ) ) | ( (lv_callUpdate_1_0= 'callUpdate' ) ) | ( (lv_callQuery_2_0= 'callQuery' ) ) | ( (lv_callQueryFunction_3_0= 'callQueryFunction' ) ) | ( (lv_callSelectFunction_4_0= 'callSelectFunction' ) ) ) ;
    public final EObject rulePojoMethodModifier() throws RecognitionException {
        EObject current = null;

        Token lv_callFunction_0_0=null;
        Token lv_callUpdate_1_0=null;
        Token lv_callQuery_2_0=null;
        Token lv_callQueryFunction_3_0=null;
        Token lv_callSelectFunction_4_0=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15252:28: ( ( ( (lv_callFunction_0_0= 'callFunction' ) ) | ( (lv_callUpdate_1_0= 'callUpdate' ) ) | ( (lv_callQuery_2_0= 'callQuery' ) ) | ( (lv_callQueryFunction_3_0= 'callQueryFunction' ) ) | ( (lv_callSelectFunction_4_0= 'callSelectFunction' ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15253:1: ( ( (lv_callFunction_0_0= 'callFunction' ) ) | ( (lv_callUpdate_1_0= 'callUpdate' ) ) | ( (lv_callQuery_2_0= 'callQuery' ) ) | ( (lv_callQueryFunction_3_0= 'callQueryFunction' ) ) | ( (lv_callSelectFunction_4_0= 'callSelectFunction' ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15253:1: ( ( (lv_callFunction_0_0= 'callFunction' ) ) | ( (lv_callUpdate_1_0= 'callUpdate' ) ) | ( (lv_callQuery_2_0= 'callQuery' ) ) | ( (lv_callQueryFunction_3_0= 'callQueryFunction' ) ) | ( (lv_callSelectFunction_4_0= 'callSelectFunction' ) ) )
            int alt398=5;
            switch ( input.LA(1) ) {
            case 166:
                {
                alt398=1;
                }
                break;
            case 167:
                {
                alt398=2;
                }
                break;
            case 168:
                {
                alt398=3;
                }
                break;
            case 169:
                {
                alt398=4;
                }
                break;
            case 170:
                {
                alt398=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 398, 0, input);

                throw nvae;
            }

            switch (alt398) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15253:2: ( (lv_callFunction_0_0= 'callFunction' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15253:2: ( (lv_callFunction_0_0= 'callFunction' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15254:1: (lv_callFunction_0_0= 'callFunction' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15254:1: (lv_callFunction_0_0= 'callFunction' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15255:3: lv_callFunction_0_0= 'callFunction'
                    {
                    lv_callFunction_0_0=(Token)match(input,166,FollowSets002.FOLLOW_166_in_rulePojoMethodModifier34218); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_callFunction_0_0, grammarAccess.getPojoMethodModifierAccess().getCallFunctionCallFunctionKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoMethodModifierRule());
                      	        }
                             		setWithLastConsumed(current, "callFunction", true, "callFunction");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15269:6: ( (lv_callUpdate_1_0= 'callUpdate' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15269:6: ( (lv_callUpdate_1_0= 'callUpdate' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15270:1: (lv_callUpdate_1_0= 'callUpdate' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15270:1: (lv_callUpdate_1_0= 'callUpdate' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15271:3: lv_callUpdate_1_0= 'callUpdate'
                    {
                    lv_callUpdate_1_0=(Token)match(input,167,FollowSets002.FOLLOW_167_in_rulePojoMethodModifier34255); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_callUpdate_1_0, grammarAccess.getPojoMethodModifierAccess().getCallUpdateCallUpdateKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoMethodModifierRule());
                      	        }
                             		setWithLastConsumed(current, "callUpdate", true, "callUpdate");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15285:6: ( (lv_callQuery_2_0= 'callQuery' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15285:6: ( (lv_callQuery_2_0= 'callQuery' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15286:1: (lv_callQuery_2_0= 'callQuery' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15286:1: (lv_callQuery_2_0= 'callQuery' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15287:3: lv_callQuery_2_0= 'callQuery'
                    {
                    lv_callQuery_2_0=(Token)match(input,168,FollowSets002.FOLLOW_168_in_rulePojoMethodModifier34292); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_callQuery_2_0, grammarAccess.getPojoMethodModifierAccess().getCallQueryCallQueryKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoMethodModifierRule());
                      	        }
                             		setWithLastConsumed(current, "callQuery", true, "callQuery");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15301:6: ( (lv_callQueryFunction_3_0= 'callQueryFunction' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15301:6: ( (lv_callQueryFunction_3_0= 'callQueryFunction' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15302:1: (lv_callQueryFunction_3_0= 'callQueryFunction' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15302:1: (lv_callQueryFunction_3_0= 'callQueryFunction' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15303:3: lv_callQueryFunction_3_0= 'callQueryFunction'
                    {
                    lv_callQueryFunction_3_0=(Token)match(input,169,FollowSets002.FOLLOW_169_in_rulePojoMethodModifier34329); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_callQueryFunction_3_0, grammarAccess.getPojoMethodModifierAccess().getCallQueryFunctionCallQueryFunctionKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoMethodModifierRule());
                      	        }
                             		setWithLastConsumed(current, "callQueryFunction", true, "callQueryFunction");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15317:6: ( (lv_callSelectFunction_4_0= 'callSelectFunction' ) )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15317:6: ( (lv_callSelectFunction_4_0= 'callSelectFunction' ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15318:1: (lv_callSelectFunction_4_0= 'callSelectFunction' )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15318:1: (lv_callSelectFunction_4_0= 'callSelectFunction' )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15319:3: lv_callSelectFunction_4_0= 'callSelectFunction'
                    {
                    lv_callSelectFunction_4_0=(Token)match(input,170,FollowSets002.FOLLOW_170_in_rulePojoMethodModifier34366); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_callSelectFunction_4_0, grammarAccess.getPojoMethodModifierAccess().getCallSelectFunctionCallSelectFunctionKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPojoMethodModifierRule());
                      	        }
                             		setWithLastConsumed(current, "callSelectFunction", true, "callSelectFunction");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePojoMethodModifier"


    // $ANTLR start "entryRulePojoMethod"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15340:1: entryRulePojoMethod returns [EObject current=null] : iv_rulePojoMethod= rulePojoMethod EOF ;
    public final EObject entryRulePojoMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoMethod = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15344:2: (iv_rulePojoMethod= rulePojoMethod EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15345:2: iv_rulePojoMethod= rulePojoMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoMethodRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoMethod_in_entryRulePojoMethod34421);
            iv_rulePojoMethod=rulePojoMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoMethod; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoMethod34431); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoMethod"


    // $ANTLR start "rulePojoMethod"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15355:1: rulePojoMethod returns [EObject current=null] : ( ( (lv_modifiers1_0_0= rulePojoMethodModifier ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( ( (lv_type_2_0= rulePojoType ) ) this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON this_COLON_5= RULE_COLON ( (lv_args_6_0= rulePojoMethodArg ) )+ )? ) ;
    public final EObject rulePojoMethod() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token this_COLON_3=null;
        Token this_COLON_4=null;
        Token this_COLON_5=null;
        EObject lv_modifiers1_0_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_args_6_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15359:28: ( ( ( (lv_modifiers1_0_0= rulePojoMethodModifier ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( ( (lv_type_2_0= rulePojoType ) ) this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON this_COLON_5= RULE_COLON ( (lv_args_6_0= rulePojoMethodArg ) )+ )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15360:1: ( ( (lv_modifiers1_0_0= rulePojoMethodModifier ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( ( (lv_type_2_0= rulePojoType ) ) this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON this_COLON_5= RULE_COLON ( (lv_args_6_0= rulePojoMethodArg ) )+ )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15360:1: ( ( (lv_modifiers1_0_0= rulePojoMethodModifier ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( ( (lv_type_2_0= rulePojoType ) ) this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON this_COLON_5= RULE_COLON ( (lv_args_6_0= rulePojoMethodArg ) )+ )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15360:2: ( (lv_modifiers1_0_0= rulePojoMethodModifier ) )* ( (lv_name_1_0= RULE_IDENT ) ) ( ( (lv_type_2_0= rulePojoType ) ) this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON this_COLON_5= RULE_COLON ( (lv_args_6_0= rulePojoMethodArg ) )+ )?
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15360:2: ( (lv_modifiers1_0_0= rulePojoMethodModifier ) )*
            loop399:
            do {
                int alt399=2;
                int LA399_0 = input.LA(1);

                if ( ((LA399_0>=166 && LA399_0<=170)) ) {
                    alt399=1;
                }


                switch (alt399) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15361:1: (lv_modifiers1_0_0= rulePojoMethodModifier )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15361:1: (lv_modifiers1_0_0= rulePojoMethodModifier )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15362:3: lv_modifiers1_0_0= rulePojoMethodModifier
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPojoMethodAccess().getModifiers1PojoMethodModifierParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoMethodModifier_in_rulePojoMethod34481);
            	    lv_modifiers1_0_0=rulePojoMethodModifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPojoMethodRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"modifiers1",
            	              		lv_modifiers1_0_0, 
            	              		"PojoMethodModifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop399;
                }
            } while (true);

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15378:3: ( (lv_name_1_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15379:1: (lv_name_1_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15379:1: (lv_name_1_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15380:3: lv_name_1_0= RULE_IDENT
            {
            lv_name_1_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoMethod34499); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getPojoMethodAccess().getNameIDENTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoMethodRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15396:2: ( ( (lv_type_2_0= rulePojoType ) ) this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON this_COLON_5= RULE_COLON ( (lv_args_6_0= rulePojoMethodArg ) )+ )?
            int alt401=2;
            int LA401_0 = input.LA(1);

            if ( (LA401_0==RULE_COLON||(LA401_0>=133 && LA401_0<=141)) ) {
                alt401=1;
            }
            switch (alt401) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15396:3: ( (lv_type_2_0= rulePojoType ) ) this_COLON_3= RULE_COLON this_COLON_4= RULE_COLON this_COLON_5= RULE_COLON ( (lv_args_6_0= rulePojoMethodArg ) )+
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15396:3: ( (lv_type_2_0= rulePojoType ) )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15397:1: (lv_type_2_0= rulePojoType )
                    {
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15397:1: (lv_type_2_0= rulePojoType )
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15398:3: lv_type_2_0= rulePojoType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPojoMethodAccess().getTypePojoTypeParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets002.FOLLOW_rulePojoType_in_rulePojoMethod34526);
                    lv_type_2_0=rulePojoType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPojoMethodRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_2_0, 
                              		"PojoType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    this_COLON_3=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoMethod34537); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_3, grammarAccess.getPojoMethodAccess().getCOLONTerminalRuleCall_2_1()); 
                          
                    }
                    this_COLON_4=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoMethod34547); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_4, grammarAccess.getPojoMethodAccess().getCOLONTerminalRuleCall_2_2()); 
                          
                    }
                    this_COLON_5=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_rulePojoMethod34557); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_COLON_5, grammarAccess.getPojoMethodAccess().getCOLONTerminalRuleCall_2_3()); 
                          
                    }
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15426:1: ( (lv_args_6_0= rulePojoMethodArg ) )+
                    int cnt400=0;
                    loop400:
                    do {
                        int alt400=2;
                        alt400 = dfa400.predict(input);
                        switch (alt400) {
                    	case 1 :
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15427:1: (lv_args_6_0= rulePojoMethodArg )
                    	    {
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15427:1: (lv_args_6_0= rulePojoMethodArg )
                    	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15428:3: lv_args_6_0= rulePojoMethodArg
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPojoMethodAccess().getArgsPojoMethodArgParserRuleCall_2_4_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets002.FOLLOW_rulePojoMethodArg_in_rulePojoMethod34577);
                    	    lv_args_6_0=rulePojoMethodArg();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPojoMethodRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"args",
                    	              		lv_args_6_0, 
                    	              		"PojoMethodArg");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt400 >= 1 ) break loop400;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(400, input);
                                throw eee;
                        }
                        cnt400++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoMethod"


    // $ANTLR start "entryRuleToInitMethod"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15455:1: entryRuleToInitMethod returns [EObject current=null] : iv_ruleToInitMethod= ruleToInitMethod EOF ;
    public final EObject entryRuleToInitMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleToInitMethod = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15459:2: (iv_ruleToInitMethod= ruleToInitMethod EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15460:2: iv_ruleToInitMethod= ruleToInitMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getToInitMethodRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleToInitMethod_in_entryRuleToInitMethod34626);
            iv_ruleToInitMethod=ruleToInitMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleToInitMethod; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleToInitMethod34636); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleToInitMethod"


    // $ANTLR start "ruleToInitMethod"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15470:1: ruleToInitMethod returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_args_4_0= rulePojoMethodArg ) )+ ) ;
    public final EObject ruleToInitMethod() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token this_COLON_1=null;
        Token this_COLON_2=null;
        Token this_COLON_3=null;
        EObject lv_args_4_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15474:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_args_4_0= rulePojoMethodArg ) )+ ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15475:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_args_4_0= rulePojoMethodArg ) )+ )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15475:1: ( ( (lv_name_0_0= RULE_IDENT ) ) this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_args_4_0= rulePojoMethodArg ) )+ )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15475:2: ( (lv_name_0_0= RULE_IDENT ) ) this_COLON_1= RULE_COLON this_COLON_2= RULE_COLON this_COLON_3= RULE_COLON ( (lv_args_4_0= rulePojoMethodArg ) )+
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15475:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15476:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15476:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15477:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleToInitMethod34682); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getToInitMethodAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getToInitMethodRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            this_COLON_1=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleToInitMethod34698); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_1, grammarAccess.getToInitMethodAccess().getCOLONTerminalRuleCall_1()); 
                  
            }
            this_COLON_2=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleToInitMethod34708); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_2, grammarAccess.getToInitMethodAccess().getCOLONTerminalRuleCall_2()); 
                  
            }
            this_COLON_3=(Token)match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_ruleToInitMethod34718); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COLON_3, grammarAccess.getToInitMethodAccess().getCOLONTerminalRuleCall_3()); 
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15505:1: ( (lv_args_4_0= rulePojoMethodArg ) )+
            int cnt402=0;
            loop402:
            do {
                int alt402=2;
                int LA402_0 = input.LA(1);

                if ( (LA402_0==RULE_IDENT) ) {
                    int LA402_2 = input.LA(2);

                    if ( ((LA402_2>=133 && LA402_2<=141)) ) {
                        alt402=1;
                    }
                    else if ( (LA402_2==RULE_COLON) ) {
                        int LA402_4 = input.LA(3);

                        if ( (LA402_4==RULE_COLON) ) {
                            int LA402_5 = input.LA(4);

                            if ( (LA402_5==RULE_IDENT) ) {
                                alt402=1;
                            }


                        }
                        else if ( (LA402_4==RULE_IDENT||LA402_4==RULE_IDENT_DOT) ) {
                            alt402=1;
                        }


                    }


                }


                switch (alt402) {
            	case 1 :
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15506:1: (lv_args_4_0= rulePojoMethodArg )
            	    {
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15506:1: (lv_args_4_0= rulePojoMethodArg )
            	    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15507:3: lv_args_4_0= rulePojoMethodArg
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getToInitMethodAccess().getArgsPojoMethodArgParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets002.FOLLOW_rulePojoMethodArg_in_ruleToInitMethod34738);
            	    lv_args_4_0=rulePojoMethodArg();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getToInitMethodRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"args",
            	              		lv_args_4_0, 
            	              		"PojoMethodArg");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt402 >= 1 ) break loop402;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(402, input);
                        throw eee;
                }
                cnt402++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleToInitMethod"


    // $ANTLR start "entryRulePojoMethodArg"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15534:1: entryRulePojoMethodArg returns [EObject current=null] : iv_rulePojoMethodArg= rulePojoMethodArg EOF ;
    public final EObject entryRulePojoMethodArg() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePojoMethodArg = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
        	
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15538:2: (iv_rulePojoMethodArg= rulePojoMethodArg EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15539:2: iv_rulePojoMethodArg= rulePojoMethodArg EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPojoMethodArgRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoMethodArg_in_entryRulePojoMethodArg34785);
            iv_rulePojoMethodArg=rulePojoMethodArg();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePojoMethodArg; 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRulePojoMethodArg34795); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRulePojoMethodArg"


    // $ANTLR start "rulePojoMethodArg"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15549:1: rulePojoMethodArg returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENT ) ) ( (lv_type_1_0= rulePojoType ) ) ) ;
    public final EObject rulePojoMethodArg() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_type_1_0 = null;


         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15553:28: ( ( ( (lv_name_0_0= RULE_IDENT ) ) ( (lv_type_1_0= rulePojoType ) ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15554:1: ( ( (lv_name_0_0= RULE_IDENT ) ) ( (lv_type_1_0= rulePojoType ) ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15554:1: ( ( (lv_name_0_0= RULE_IDENT ) ) ( (lv_type_1_0= rulePojoType ) ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15554:2: ( (lv_name_0_0= RULE_IDENT ) ) ( (lv_type_1_0= rulePojoType ) )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15554:2: ( (lv_name_0_0= RULE_IDENT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15555:1: (lv_name_0_0= RULE_IDENT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15555:1: (lv_name_0_0= RULE_IDENT )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15556:3: lv_name_0_0= RULE_IDENT
            {
            lv_name_0_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_rulePojoMethodArg34841); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getPojoMethodArgAccess().getNameIDENTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPojoMethodArgRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"IDENT");
              	    
            }

            }


            }

            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15572:2: ( (lv_type_1_0= rulePojoType ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15573:1: (lv_type_1_0= rulePojoType )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15573:1: (lv_type_1_0= rulePojoType )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15574:3: lv_type_1_0= rulePojoType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPojoMethodArgAccess().getTypePojoTypeParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets002.FOLLOW_rulePojoType_in_rulePojoMethodArg34867);
            lv_type_1_0=rulePojoType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPojoMethodArgRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"PojoType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "rulePojoMethodArg"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15601:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15602:2: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15603:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard34908);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard34919); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15610:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15613:28: ( (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15614:1: (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15614:1: (this_QualifiedName_0= ruleQualifiedName (kw= '.*' )? )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15615:5: this_QualifiedName_0= ruleQualifiedName (kw= '.*' )?
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard34966);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15625:1: (kw= '.*' )?
            int alt403=2;
            int LA403_0 = input.LA(1);

            if ( (LA403_0==171) ) {
                alt403=1;
            }
            switch (alt403) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15626:2: kw= '.*'
                    {
                    kw=(Token)match(input,171,FollowSets002.FOLLOW_171_in_ruleQualifiedNameWithWildcard34985); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleQualifiedName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15639:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15640:2: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15641:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FollowSets002.FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName35028);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FollowSets002.FOLLOW_EOF_in_entryRuleQualifiedName35039); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15648:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENT_0= RULE_IDENT | this_IDENT_DOT_1= RULE_IDENT_DOT ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENT_0=null;
        Token this_IDENT_DOT_1=null;

         enterRule(); 
            
        try {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15651:28: ( (this_IDENT_0= RULE_IDENT | this_IDENT_DOT_1= RULE_IDENT_DOT ) )
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15652:1: (this_IDENT_0= RULE_IDENT | this_IDENT_DOT_1= RULE_IDENT_DOT )
            {
            // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15652:1: (this_IDENT_0= RULE_IDENT | this_IDENT_DOT_1= RULE_IDENT_DOT )
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==RULE_IDENT) ) {
                alt404=1;
            }
            else if ( (LA404_0==RULE_IDENT_DOT) ) {
                alt404=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 404, 0, input);

                throw nvae;
            }
            switch (alt404) {
                case 1 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15652:6: this_IDENT_0= RULE_IDENT
                    {
                    this_IDENT_0=(Token)match(input,RULE_IDENT,FollowSets002.FOLLOW_RULE_IDENT_in_ruleQualifiedName35079); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_0, grammarAccess.getQualifiedNameAccess().getIDENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:15660:10: this_IDENT_DOT_1= RULE_IDENT_DOT
                    {
                    this_IDENT_DOT_1=(Token)match(input,RULE_IDENT_DOT,FollowSets002.FOLLOW_RULE_IDENT_DOT_in_ruleQualifiedName35105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENT_DOT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENT_DOT_1, grammarAccess.getQualifiedNameAccess().getIDENT_DOTTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"

    // $ANTLR start synpred1_InternalProcessorDsl
    public final void synpred1_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2417:6: ( RULE_COLON )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:2417:8: RULE_COLON
        {
        match(input,RULE_COLON,FollowSets002.FOLLOW_RULE_COLON_in_synpred1_InternalProcessorDsl4993); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalProcessorDsl

    // $ANTLR start synpred2_InternalProcessorDsl
    public final void synpred2_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6770:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:6770:4: ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE )
        {
        if ( (input.LA(1)>=RULE_WS && input.LA(1)<=RULE_MINUS)||(input.LA(1)>=RULE_COLON && input.LA(1)<=RULE_OPTION_TYPE) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred2_InternalProcessorDsl

    // $ANTLR start synpred3_InternalProcessorDsl
    public final void synpred3_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8042:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:8042:4: ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE )
        {
        if ( (input.LA(1)>=RULE_WS && input.LA(1)<=RULE_MINUS)||(input.LA(1)>=RULE_REST && input.LA(1)<=RULE_IDENT_DOT)||input.LA(1)==RULE_COMMA||(input.LA(1)>=RULE_RBRACE && input.LA(1)<=RULE_HASH)||(input.LA(1)>=RULE_CARET && input.LA(1)<=RULE_MORE_THAN)||(input.LA(1)>=RULE_DOT && input.LA(1)<=RULE_OPTION_TYPE) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred3_InternalProcessorDsl

    // $ANTLR start synpred4_InternalProcessorDsl
    public final void synpred4_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9166:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:9166:4: ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE )
        {
        if ( (input.LA(1)>=RULE_WS && input.LA(1)<=RULE_SEMICOLON)||(input.LA(1)>=RULE_REST && input.LA(1)<=RULE_IDENT_DOT)||input.LA(1)==RULE_COMMA||(input.LA(1)>=RULE_QUESTI && input.LA(1)<=RULE_BAND)||input.LA(1)==RULE_HASH||(input.LA(1)>=RULE_CARET && input.LA(1)<=RULE_MORE_THAN)||(input.LA(1)>=RULE_DOT && input.LA(1)<=RULE_OPTION_TYPE) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred4_InternalProcessorDsl

    // $ANTLR start synpred5_InternalProcessorDsl
    public final void synpred5_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10334:3: ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10334:4: ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE )
        {
        if ( (input.LA(1)>=RULE_WS && input.LA(1)<=RULE_SEMICOLON)||(input.LA(1)>=RULE_REST && input.LA(1)<=RULE_IDENT_DOT)||(input.LA(1)>=RULE_COMMA && input.LA(1)<=RULE_LBRACE)||(input.LA(1)>=RULE_QUESTI && input.LA(1)<=RULE_MORE_THAN)||(input.LA(1)>=RULE_DOT && input.LA(1)<=RULE_OPTION_TYPE) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred5_InternalProcessorDsl

    // $ANTLR start synpred6_InternalProcessorDsl
    public final void synpred6_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10641:3: ( ( ruleExtendedColumn ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10642:1: ( ruleExtendedColumn )
        {
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10642:1: ( ruleExtendedColumn )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10643:1: ruleExtendedColumn
        {
        pushFollow(FollowSets002.FOLLOW_ruleExtendedColumn_in_synpred6_InternalProcessorDsl24091);
        ruleExtendedColumn();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalProcessorDsl

    // $ANTLR start synpred7_InternalProcessorDsl
    public final void synpred7_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10702:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10702:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred7_InternalProcessorDsl24214); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalProcessorDsl

    // $ANTLR start synpred8_InternalProcessorDsl
    public final void synpred8_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10915:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:10915:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred8_InternalProcessorDsl24601); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_InternalProcessorDsl

    // $ANTLR start synpred9_InternalProcessorDsl
    public final void synpred9_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11122:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11122:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred9_InternalProcessorDsl24940); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalProcessorDsl

    // $ANTLR start synpred10_InternalProcessorDsl
    public final void synpred10_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11698:3: ( ( ruleExtendedMappingItem ) )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11699:1: ( ruleExtendedMappingItem )
        {
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11699:1: ( ruleExtendedMappingItem )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11700:1: ruleExtendedMappingItem
        {
        pushFollow(FollowSets002.FOLLOW_ruleExtendedMappingItem_in_synpred10_InternalProcessorDsl26099);
        ruleExtendedMappingItem();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred10_InternalProcessorDsl

    // $ANTLR start synpred11_InternalProcessorDsl
    public final void synpred11_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11759:4: ( RULE_LPAREN )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:11759:6: RULE_LPAREN
        {
        match(input,RULE_LPAREN,FollowSets002.FOLLOW_RULE_LPAREN_in_synpred11_InternalProcessorDsl26222); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_InternalProcessorDsl

    // $ANTLR start synpred12_InternalProcessorDsl
    public final void synpred12_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13084:4: ( RULE_AT )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13084:6: RULE_AT
        {
        match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_synpred12_InternalProcessorDsl29588); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred12_InternalProcessorDsl

    // $ANTLR start synpred13_InternalProcessorDsl
    public final void synpred13_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13088:5: ( RULE_AT )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13088:7: RULE_AT
        {
        match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_synpred13_InternalProcessorDsl29607); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_InternalProcessorDsl

    // $ANTLR start synpred14_InternalProcessorDsl
    public final void synpred14_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13092:5: ( RULE_AT )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13092:7: RULE_AT
        {
        match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_synpred14_InternalProcessorDsl29626); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_InternalProcessorDsl

    // $ANTLR start synpred15_InternalProcessorDsl
    public final void synpred15_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13096:5: ( RULE_AT )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:13096:7: RULE_AT
        {
        match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_synpred15_InternalProcessorDsl29645); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_InternalProcessorDsl

    // $ANTLR start synpred16_InternalProcessorDsl
    public final void synpred16_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14007:4: ( RULE_AT )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14007:6: RULE_AT
        {
        match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_synpred16_InternalProcessorDsl31607); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_InternalProcessorDsl

    // $ANTLR start synpred17_InternalProcessorDsl
    public final void synpred17_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:5: ( RULE_AT )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14011:7: RULE_AT
        {
        match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_synpred17_InternalProcessorDsl31626); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred17_InternalProcessorDsl

    // $ANTLR start synpred18_InternalProcessorDsl
    public final void synpred18_InternalProcessorDsl_fragment() throws RecognitionException {   
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14015:5: ( RULE_AT )
        // //home/hudec/git/sql-processor-eclipse/org.sqlproc.dsl/src-gen/org/sqlproc/dsl/parser/antlr/internal/InternalProcessorDsl.g:14015:7: RULE_AT
        {
        match(input,RULE_AT,FollowSets002.FOLLOW_RULE_AT_in_synpred18_InternalProcessorDsl31645); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred18_InternalProcessorDsl

    // Delegated rules

    public final boolean synpred8_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalProcessorDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalProcessorDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA11 dfa11 = new DFA11(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA185 dfa185 = new DFA185(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA188 dfa188 = new DFA188(this);
    protected DFA240 dfa240 = new DFA240(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA250 dfa250 = new DFA250(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA262 dfa262 = new DFA262(this);
    protected DFA282 dfa282 = new DFA282(this);
    protected DFA285 dfa285 = new DFA285(this);
    protected DFA291 dfa291 = new DFA291(this);
    protected DFA298 dfa298 = new DFA298(this);
    protected DFA306 dfa306 = new DFA306(this);
    protected DFA332 dfa332 = new DFA332(this);
    protected DFA338 dfa338 = new DFA338(this);
    protected DFA343 dfa343 = new DFA343(this);
    protected DFA400 dfa400 = new DFA400(this);
    static final String DFA11_eotS =
        "\15\uffff";
    static final String DFA11_eofS =
        "\1\1\14\uffff";
    static final String DFA11_minS =
        "\1\5\6\uffff\1\6\1\uffff\1\43\3\uffff";
    static final String DFA11_maxS =
        "\1\u008f\6\uffff\1\6\1\uffff\1\45\3\uffff";
    static final String DFA11_acceptS =
        "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\uffff\1\11\1\uffff\1\6\1\7\1"+
        "\10";
    static final String DFA11_specialS =
        "\15\uffff}>";
    static final String[] DFA11_transitionS = {
            "\1\7\44\uffff\10\2\117\uffff\1\3\1\4\1\5\1\6\12\uffff\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\11",
            "",
            "\1\12\1\13\1\14",
            "",
            "",
            ""
    };

    static final short[] DFA11_eot = DFA.unpackEncodedString(DFA11_eotS);
    static final short[] DFA11_eof = DFA.unpackEncodedString(DFA11_eofS);
    static final char[] DFA11_min = DFA.unpackEncodedStringToUnsignedChars(DFA11_minS);
    static final char[] DFA11_max = DFA.unpackEncodedStringToUnsignedChars(DFA11_maxS);
    static final short[] DFA11_accept = DFA.unpackEncodedString(DFA11_acceptS);
    static final short[] DFA11_special = DFA.unpackEncodedString(DFA11_specialS);
    static final short[][] DFA11_transition;

    static {
        int numStates = DFA11_transitionS.length;
        DFA11_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA11_transition[i] = DFA.unpackEncodedString(DFA11_transitionS[i]);
        }
    }

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = DFA11_eot;
            this.eof = DFA11_eof;
            this.min = DFA11_min;
            this.max = DFA11_max;
            this.accept = DFA11_accept;
            this.special = DFA11_special;
            this.transition = DFA11_transition;
        }
        public String getDescription() {
            return "()* loopback of 90:3: ( ( ( (lv_properties_2_0= ruleProperty ) ) (this_WS_3= RULE_WS )* ) | ( ( (lv_pojos_4_0= rulePojoDefinition ) ) (this_WS_5= RULE_WS )* ) | ( ( (lv_tables_6_0= ruleTableDefinition ) ) (this_WS_7= RULE_WS )* ) | ( ( (lv_procedures_8_0= ruleProcedureDefinition ) ) (this_WS_9= RULE_WS )* ) | ( ( (lv_functions_10_0= ruleFunctionDefinition ) ) (this_WS_11= RULE_WS )* ) | ( ( (lv_statements_12_0= ruleMetaStatement ) ) (this_WS_13= RULE_WS )* ) | ( ( (lv_mappings_14_0= ruleMappingRule ) ) (this_WS_15= RULE_WS )* ) | ( ( (lv_features_16_0= ruleOptionalFeature ) ) (this_WS_17= RULE_WS )* ) | ( ( (lv_pojoPackages_18_0= rulePackageDeclaration ) ) (this_WS_19= RULE_WS )* ) )*";
        }
    }
    static final String DFA23_eotS =
        "\4\uffff";
    static final String DFA23_eofS =
        "\1\2\3\uffff";
    static final String DFA23_minS =
        "\2\4\2\uffff";
    static final String DFA23_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA23_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA23_specialS =
        "\4\uffff}>";
    static final String[] DFA23_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\4\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA23_eot = DFA.unpackEncodedString(DFA23_eotS);
    static final short[] DFA23_eof = DFA.unpackEncodedString(DFA23_eofS);
    static final char[] DFA23_min = DFA.unpackEncodedStringToUnsignedChars(DFA23_minS);
    static final char[] DFA23_max = DFA.unpackEncodedStringToUnsignedChars(DFA23_maxS);
    static final short[] DFA23_accept = DFA.unpackEncodedString(DFA23_acceptS);
    static final short[] DFA23_special = DFA.unpackEncodedString(DFA23_specialS);
    static final short[][] DFA23_transition;

    static {
        int numStates = DFA23_transitionS.length;
        DFA23_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA23_transition[i] = DFA.unpackEncodedString(DFA23_transitionS[i]);
        }
    }

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = DFA23_eot;
            this.eof = DFA23_eof;
            this.min = DFA23_min;
            this.max = DFA23_max;
            this.accept = DFA23_accept;
            this.special = DFA23_special;
            this.transition = DFA23_transition;
        }
        public String getDescription() {
            return "1495:2: ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA22_eotS =
        "\4\uffff";
    static final String DFA22_eofS =
        "\1\2\3\uffff";
    static final String DFA22_minS =
        "\2\4\2\uffff";
    static final String DFA22_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA22_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA22_specialS =
        "\4\uffff}>";
    static final String[] DFA22_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\1\3\4\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA22_eot = DFA.unpackEncodedString(DFA22_eotS);
    static final short[] DFA22_eof = DFA.unpackEncodedString(DFA22_eofS);
    static final char[] DFA22_min = DFA.unpackEncodedStringToUnsignedChars(DFA22_minS);
    static final char[] DFA22_max = DFA.unpackEncodedStringToUnsignedChars(DFA22_maxS);
    static final short[] DFA22_accept = DFA.unpackEncodedString(DFA22_acceptS);
    static final short[] DFA22_special = DFA.unpackEncodedString(DFA22_specialS);
    static final short[][] DFA22_transition;

    static {
        int numStates = DFA22_transitionS.length;
        DFA22_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA22_transition[i] = DFA.unpackEncodedString(DFA22_transitionS[i]);
        }
    }

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = DFA22_eot;
            this.eof = DFA22_eof;
            this.min = DFA22_min;
            this.max = DFA22_max;
            this.accept = DFA22_accept;
            this.special = DFA22_special;
            this.transition = DFA22_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1503:1: ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA31_eotS =
        "\4\uffff";
    static final String DFA31_eofS =
        "\1\2\3\uffff";
    static final String DFA31_minS =
        "\2\4\2\uffff";
    static final String DFA31_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA31_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA31_specialS =
        "\4\uffff}>";
    static final String[] DFA31_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\4\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA31_eot = DFA.unpackEncodedString(DFA31_eotS);
    static final short[] DFA31_eof = DFA.unpackEncodedString(DFA31_eofS);
    static final char[] DFA31_min = DFA.unpackEncodedStringToUnsignedChars(DFA31_minS);
    static final char[] DFA31_max = DFA.unpackEncodedStringToUnsignedChars(DFA31_maxS);
    static final short[] DFA31_accept = DFA.unpackEncodedString(DFA31_acceptS);
    static final short[] DFA31_special = DFA.unpackEncodedString(DFA31_specialS);
    static final short[][] DFA31_transition;

    static {
        int numStates = DFA31_transitionS.length;
        DFA31_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA31_transition[i] = DFA.unpackEncodedString(DFA31_transitionS[i]);
        }
    }

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = DFA31_eot;
            this.eof = DFA31_eof;
            this.min = DFA31_min;
            this.max = DFA31_max;
            this.accept = DFA31_accept;
            this.special = DFA31_special;
            this.transition = DFA31_transition;
        }
        public String getDescription() {
            return "1591:2: ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA30_eotS =
        "\4\uffff";
    static final String DFA30_eofS =
        "\1\2\3\uffff";
    static final String DFA30_minS =
        "\2\4\2\uffff";
    static final String DFA30_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA30_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA30_specialS =
        "\4\uffff}>";
    static final String[] DFA30_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\1\3\4\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA30_eot = DFA.unpackEncodedString(DFA30_eotS);
    static final short[] DFA30_eof = DFA.unpackEncodedString(DFA30_eofS);
    static final char[] DFA30_min = DFA.unpackEncodedStringToUnsignedChars(DFA30_minS);
    static final char[] DFA30_max = DFA.unpackEncodedStringToUnsignedChars(DFA30_maxS);
    static final short[] DFA30_accept = DFA.unpackEncodedString(DFA30_acceptS);
    static final short[] DFA30_special = DFA.unpackEncodedString(DFA30_specialS);
    static final short[][] DFA30_transition;

    static {
        int numStates = DFA30_transitionS.length;
        DFA30_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA30_transition[i] = DFA.unpackEncodedString(DFA30_transitionS[i]);
        }
    }

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = DFA30_eot;
            this.eof = DFA30_eof;
            this.min = DFA30_min;
            this.max = DFA30_max;
            this.accept = DFA30_accept;
            this.special = DFA30_special;
            this.transition = DFA30_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1599:1: ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA39_eotS =
        "\4\uffff";
    static final String DFA39_eofS =
        "\1\2\3\uffff";
    static final String DFA39_minS =
        "\2\4\2\uffff";
    static final String DFA39_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA39_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA39_specialS =
        "\4\uffff}>";
    static final String[] DFA39_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\4\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "1687:2: ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA38_eotS =
        "\4\uffff";
    static final String DFA38_eofS =
        "\1\2\3\uffff";
    static final String DFA38_minS =
        "\2\4\2\uffff";
    static final String DFA38_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA38_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA38_specialS =
        "\4\uffff}>";
    static final String[] DFA38_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\1\3\4\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
    static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
    static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
    static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
    static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
    static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
    static final short[][] DFA38_transition;

    static {
        int numStates = DFA38_transitionS.length;
        DFA38_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
        }
    }

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = DFA38_eot;
            this.eof = DFA38_eof;
            this.min = DFA38_min;
            this.max = DFA38_max;
            this.accept = DFA38_accept;
            this.special = DFA38_special;
            this.transition = DFA38_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1695:1: ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA47_eotS =
        "\4\uffff";
    static final String DFA47_eofS =
        "\1\2\3\uffff";
    static final String DFA47_minS =
        "\2\4\2\uffff";
    static final String DFA47_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA47_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA47_specialS =
        "\4\uffff}>";
    static final String[] DFA47_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\4\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
    static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
    static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
    static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
    static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
    static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
    static final short[][] DFA47_transition;

    static {
        int numStates = DFA47_transitionS.length;
        DFA47_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
        }
    }

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = DFA47_eot;
            this.eof = DFA47_eof;
            this.min = DFA47_min;
            this.max = DFA47_max;
            this.accept = DFA47_accept;
            this.special = DFA47_special;
            this.transition = DFA47_transition;
        }
        public String getDescription() {
            return "1783:2: ( (this_WS_1= RULE_WS )+ this_PLUS_2= RULE_PLUS ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA46_eotS =
        "\4\uffff";
    static final String DFA46_eofS =
        "\1\2\3\uffff";
    static final String DFA46_minS =
        "\2\4\2\uffff";
    static final String DFA46_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA46_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA46_specialS =
        "\4\uffff}>";
    static final String[] DFA46_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\1\3\4\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
    static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
    static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
    static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
    static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
    static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
    static final short[][] DFA46_transition;

    static {
        int numStates = DFA46_transitionS.length;
        DFA46_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
        }
    }

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = DFA46_eot;
            this.eof = DFA46_eof;
            this.min = DFA46_min;
            this.max = DFA46_max;
            this.accept = DFA46_accept;
            this.special = DFA46_special;
            this.transition = DFA46_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1791:1: ( (this_WS_3= RULE_WS )+ ( (lv_dbTables_4_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA156_eotS =
        "\4\uffff";
    static final String DFA156_eofS =
        "\1\2\3\uffff";
    static final String DFA156_minS =
        "\2\4\2\uffff";
    static final String DFA156_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA156_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA156_specialS =
        "\4\uffff}>";
    static final String[] DFA156_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\4\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA156_eot = DFA.unpackEncodedString(DFA156_eotS);
    static final short[] DFA156_eof = DFA.unpackEncodedString(DFA156_eofS);
    static final char[] DFA156_min = DFA.unpackEncodedStringToUnsignedChars(DFA156_minS);
    static final char[] DFA156_max = DFA.unpackEncodedStringToUnsignedChars(DFA156_maxS);
    static final short[] DFA156_accept = DFA.unpackEncodedString(DFA156_acceptS);
    static final short[] DFA156_special = DFA.unpackEncodedString(DFA156_specialS);
    static final short[][] DFA156_transition;

    static {
        int numStates = DFA156_transitionS.length;
        DFA156_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA156_transition[i] = DFA.unpackEncodedString(DFA156_transitionS[i]);
        }
    }

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = DFA156_eot;
            this.eof = DFA156_eof;
            this.min = DFA156_min;
            this.max = DFA156_max;
            this.accept = DFA156_accept;
            this.special = DFA156_special;
            this.transition = DFA156_transition;
        }
        public String getDescription() {
            return "4655:2: ( (this_WS_145= RULE_WS )+ this_PLUS_146= RULE_PLUS ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA155_eotS =
        "\4\uffff";
    static final String DFA155_eofS =
        "\1\2\3\uffff";
    static final String DFA155_minS =
        "\2\4\2\uffff";
    static final String DFA155_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA155_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA155_specialS =
        "\4\uffff}>";
    static final String[] DFA155_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\1\3\4\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA155_eot = DFA.unpackEncodedString(DFA155_eotS);
    static final short[] DFA155_eof = DFA.unpackEncodedString(DFA155_eofS);
    static final char[] DFA155_min = DFA.unpackEncodedStringToUnsignedChars(DFA155_minS);
    static final char[] DFA155_max = DFA.unpackEncodedStringToUnsignedChars(DFA155_maxS);
    static final short[] DFA155_accept = DFA.unpackEncodedString(DFA155_acceptS);
    static final short[] DFA155_special = DFA.unpackEncodedString(DFA155_specialS);
    static final short[][] DFA155_transition;

    static {
        int numStates = DFA155_transitionS.length;
        DFA155_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA155_transition[i] = DFA.unpackEncodedString(DFA155_transitionS[i]);
        }
    }

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = DFA155_eot;
            this.eof = DFA155_eof;
            this.min = DFA155_min;
            this.max = DFA155_max;
            this.accept = DFA155_accept;
            this.special = DFA155_special;
            this.transition = DFA155_transition;
        }
        public String getDescription() {
            return "()+ loopback of 4663:1: ( (this_WS_147= RULE_WS )+ ( (lv_dbTables_148_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA174_eotS =
        "\4\uffff";
    static final String DFA174_eofS =
        "\1\2\3\uffff";
    static final String DFA174_minS =
        "\2\4\2\uffff";
    static final String DFA174_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA174_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA174_specialS =
        "\4\uffff}>";
    static final String[] DFA174_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\4\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA174_eot = DFA.unpackEncodedString(DFA174_eotS);
    static final short[] DFA174_eof = DFA.unpackEncodedString(DFA174_eofS);
    static final char[] DFA174_min = DFA.unpackEncodedStringToUnsignedChars(DFA174_minS);
    static final char[] DFA174_max = DFA.unpackEncodedStringToUnsignedChars(DFA174_maxS);
    static final short[] DFA174_accept = DFA.unpackEncodedString(DFA174_acceptS);
    static final short[] DFA174_special = DFA.unpackEncodedString(DFA174_specialS);
    static final short[][] DFA174_transition;

    static {
        int numStates = DFA174_transitionS.length;
        DFA174_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA174_transition[i] = DFA.unpackEncodedString(DFA174_transitionS[i]);
        }
    }

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = DFA174_eot;
            this.eof = DFA174_eof;
            this.min = DFA174_min;
            this.max = DFA174_max;
            this.accept = DFA174_accept;
            this.special = DFA174_special;
            this.transition = DFA174_transition;
        }
        public String getDescription() {
            return "5026:3: ( (this_WS_4= RULE_WS )+ this_PLUS_5= RULE_PLUS ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA173_eotS =
        "\4\uffff";
    static final String DFA173_eofS =
        "\1\2\3\uffff";
    static final String DFA173_minS =
        "\2\4\2\uffff";
    static final String DFA173_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA173_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA173_specialS =
        "\4\uffff}>";
    static final String[] DFA173_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\1\3\4\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA173_eot = DFA.unpackEncodedString(DFA173_eotS);
    static final short[] DFA173_eof = DFA.unpackEncodedString(DFA173_eofS);
    static final char[] DFA173_min = DFA.unpackEncodedStringToUnsignedChars(DFA173_minS);
    static final char[] DFA173_max = DFA.unpackEncodedStringToUnsignedChars(DFA173_maxS);
    static final short[] DFA173_accept = DFA.unpackEncodedString(DFA173_acceptS);
    static final short[] DFA173_special = DFA.unpackEncodedString(DFA173_specialS);
    static final short[][] DFA173_transition;

    static {
        int numStates = DFA173_transitionS.length;
        DFA173_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA173_transition[i] = DFA.unpackEncodedString(DFA173_transitionS[i]);
        }
    }

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = DFA173_eot;
            this.eof = DFA173_eof;
            this.min = DFA173_min;
            this.max = DFA173_max;
            this.accept = DFA173_accept;
            this.special = DFA173_special;
            this.transition = DFA173_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5034:1: ( (this_WS_6= RULE_WS )+ ( (lv_dbTables_7_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA185_eotS =
        "\4\uffff";
    static final String DFA185_eofS =
        "\1\2\3\uffff";
    static final String DFA185_minS =
        "\2\4\2\uffff";
    static final String DFA185_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA185_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA185_specialS =
        "\4\uffff}>";
    static final String[] DFA185_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\1\3\3\uffff\2\2",
            "",
            ""
    };

    static final short[] DFA185_eot = DFA.unpackEncodedString(DFA185_eotS);
    static final short[] DFA185_eof = DFA.unpackEncodedString(DFA185_eofS);
    static final char[] DFA185_min = DFA.unpackEncodedStringToUnsignedChars(DFA185_minS);
    static final char[] DFA185_max = DFA.unpackEncodedStringToUnsignedChars(DFA185_maxS);
    static final short[] DFA185_accept = DFA.unpackEncodedString(DFA185_acceptS);
    static final short[] DFA185_special = DFA.unpackEncodedString(DFA185_specialS);
    static final short[][] DFA185_transition;

    static {
        int numStates = DFA185_transitionS.length;
        DFA185_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA185_transition[i] = DFA.unpackEncodedString(DFA185_transitionS[i]);
        }
    }

    class DFA185 extends DFA {

        public DFA185(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 185;
            this.eot = DFA185_eot;
            this.eof = DFA185_eof;
            this.min = DFA185_min;
            this.max = DFA185_max;
            this.accept = DFA185_accept;
            this.special = DFA185_special;
            this.transition = DFA185_transition;
        }
        public String getDescription() {
            return "5184:2: ( (this_WS_20= RULE_WS )+ ( (lv_identity_21_0= RULE_IDENT ) ) ( (lv_type_22_0= RULE_IDENT ) )? )?";
        }
    }
    static final String DFA189_eotS =
        "\4\uffff";
    static final String DFA189_eofS =
        "\1\2\3\uffff";
    static final String DFA189_minS =
        "\2\4\2\uffff";
    static final String DFA189_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA189_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA189_specialS =
        "\4\uffff}>";
    static final String[] DFA189_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\4\uffff\1\3\1\2",
            "",
            ""
    };

    static final short[] DFA189_eot = DFA.unpackEncodedString(DFA189_eotS);
    static final short[] DFA189_eof = DFA.unpackEncodedString(DFA189_eofS);
    static final char[] DFA189_min = DFA.unpackEncodedStringToUnsignedChars(DFA189_minS);
    static final char[] DFA189_max = DFA.unpackEncodedStringToUnsignedChars(DFA189_maxS);
    static final short[] DFA189_accept = DFA.unpackEncodedString(DFA189_acceptS);
    static final short[] DFA189_special = DFA.unpackEncodedString(DFA189_specialS);
    static final short[][] DFA189_transition;

    static {
        int numStates = DFA189_transitionS.length;
        DFA189_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA189_transition[i] = DFA.unpackEncodedString(DFA189_transitionS[i]);
        }
    }

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = DFA189_eot;
            this.eof = DFA189_eof;
            this.min = DFA189_min;
            this.max = DFA189_max;
            this.accept = DFA189_accept;
            this.special = DFA189_special;
            this.transition = DFA189_transition;
        }
        public String getDescription() {
            return "5224:5: ( (this_WS_23= RULE_WS )+ this_PLUS_24= RULE_PLUS ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+ )?";
        }
    }
    static final String DFA188_eotS =
        "\4\uffff";
    static final String DFA188_eofS =
        "\1\2\3\uffff";
    static final String DFA188_minS =
        "\2\4\2\uffff";
    static final String DFA188_maxS =
        "\1\13\1\12\2\uffff";
    static final String DFA188_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA188_specialS =
        "\4\uffff}>";
    static final String[] DFA188_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\1\3\4\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA188_eot = DFA.unpackEncodedString(DFA188_eotS);
    static final short[] DFA188_eof = DFA.unpackEncodedString(DFA188_eofS);
    static final char[] DFA188_min = DFA.unpackEncodedStringToUnsignedChars(DFA188_minS);
    static final char[] DFA188_max = DFA.unpackEncodedStringToUnsignedChars(DFA188_maxS);
    static final short[] DFA188_accept = DFA.unpackEncodedString(DFA188_acceptS);
    static final short[] DFA188_special = DFA.unpackEncodedString(DFA188_specialS);
    static final short[][] DFA188_transition;

    static {
        int numStates = DFA188_transitionS.length;
        DFA188_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA188_transition[i] = DFA.unpackEncodedString(DFA188_transitionS[i]);
        }
    }

    class DFA188 extends DFA {

        public DFA188(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 188;
            this.eot = DFA188_eot;
            this.eof = DFA188_eof;
            this.min = DFA188_min;
            this.max = DFA188_max;
            this.accept = DFA188_accept;
            this.special = DFA188_special;
            this.transition = DFA188_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5232:1: ( (this_WS_25= RULE_WS )+ ( (lv_dbTables_26_0= RULE_IDENT ) ) )+";
        }
    }
    static final String DFA240_eotS =
        "\43\uffff";
    static final String DFA240_eofS =
        "\1\1\42\uffff";
    static final String DFA240_minS =
        "\1\4\1\uffff\1\0\40\uffff";
    static final String DFA240_maxS =
        "\1\45\1\uffff\1\0\40\uffff";
    static final String DFA240_acceptS =
        "\1\uffff\1\2\1\uffff\40\1";
    static final String DFA240_specialS =
        "\1\1\1\uffff\1\0\40\uffff}>";
    static final String[] DFA240_transitionS = {
            "\1\2\1\5\1\14\1\6\1\15\1\13\1\12\1\1\1\7\1\3\1\4\1\10\1\11\1"+
            "\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1"+
            "\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA240_eot = DFA.unpackEncodedString(DFA240_eotS);
    static final short[] DFA240_eof = DFA.unpackEncodedString(DFA240_eofS);
    static final char[] DFA240_min = DFA.unpackEncodedStringToUnsignedChars(DFA240_minS);
    static final char[] DFA240_max = DFA.unpackEncodedStringToUnsignedChars(DFA240_maxS);
    static final short[] DFA240_accept = DFA.unpackEncodedString(DFA240_acceptS);
    static final short[] DFA240_special = DFA.unpackEncodedString(DFA240_specialS);
    static final short[][] DFA240_transition;

    static {
        int numStates = DFA240_transitionS.length;
        DFA240_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA240_transition[i] = DFA.unpackEncodedString(DFA240_transitionS[i]);
        }
    }

    class DFA240 extends DFA {

        public DFA240(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 240;
            this.eot = DFA240_eot;
            this.eof = DFA240_eof;
            this.min = DFA240_min;
            this.max = DFA240_max;
            this.accept = DFA240_accept;
            this.special = DFA240_special;
            this.transition = DFA240_transition;
        }
        public String getDescription() {
            return "()* loopback of 6770:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COLON | RULE_STRING | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_PERCENT | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_32= RULE_REST | this_IDENT_DOT_33= RULE_IDENT_DOT | this_IDENT_34= RULE_IDENT | this_NUMBER_35= RULE_NUMBER | this_WS_36= RULE_WS | this_COLON_37= RULE_COLON | this_STRING_38= RULE_STRING | this_COMMA_39= RULE_COMMA | this_MINUS_40= RULE_MINUS | this_PLUS_41= RULE_PLUS | this_LPAREN_42= RULE_LPAREN | this_RPAREN_43= RULE_RPAREN | this_LBRACE_44= RULE_LBRACE | this_RBRACE_45= RULE_RBRACE | this_QUESTI_46= RULE_QUESTI | this_NOT_47= RULE_NOT | this_BAND_48= RULE_BAND | this_BOR_49= RULE_BOR | this_HASH_50= RULE_HASH | this_AT_51= RULE_AT | this_CARET_52= RULE_CARET | this_EQUALS_53= RULE_EQUALS | this_LESS_THAN_54= RULE_LESS_THAN | this_MORE_THAN_55= RULE_MORE_THAN | this_PERCENT_56= RULE_PERCENT | this_DOT_57= RULE_DOT | this_AND_58= RULE_AND | this_OR_59= RULE_OR | this_ESC_CHAR_60= RULE_ESC_CHAR | this_ON_OFF_61= RULE_ON_OFF | this_STATEMENT_TYPE_62= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_63= RULE_MAPPING_TYPE | this_OPTION_TYPE_64= RULE_OPTION_TYPE ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA240_2 = input.LA(1);

                         
                        int index240_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalProcessorDsl()) ) {s = 34;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index240_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA240_0 = input.LA(1);

                         
                        int index240_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA240_0==EOF||LA240_0==RULE_SEMICOLON) ) {s = 1;}

                        else if ( (LA240_0==RULE_WS) ) {s = 2;}

                        else if ( (LA240_0==RULE_REST) && (synpred2_InternalProcessorDsl())) {s = 3;}

                        else if ( (LA240_0==RULE_IDENT_DOT) && (synpred2_InternalProcessorDsl())) {s = 4;}

                        else if ( (LA240_0==RULE_IDENT) && (synpred2_InternalProcessorDsl())) {s = 5;}

                        else if ( (LA240_0==RULE_NUMBER) && (synpred2_InternalProcessorDsl())) {s = 6;}

                        else if ( (LA240_0==RULE_COLON) && (synpred2_InternalProcessorDsl())) {s = 7;}

                        else if ( (LA240_0==RULE_STRING) && (synpred2_InternalProcessorDsl())) {s = 8;}

                        else if ( (LA240_0==RULE_COMMA) && (synpred2_InternalProcessorDsl())) {s = 9;}

                        else if ( (LA240_0==RULE_MINUS) && (synpred2_InternalProcessorDsl())) {s = 10;}

                        else if ( (LA240_0==RULE_PLUS) && (synpred2_InternalProcessorDsl())) {s = 11;}

                        else if ( (LA240_0==RULE_LPAREN) && (synpred2_InternalProcessorDsl())) {s = 12;}

                        else if ( (LA240_0==RULE_RPAREN) && (synpred2_InternalProcessorDsl())) {s = 13;}

                        else if ( (LA240_0==RULE_LBRACE) && (synpred2_InternalProcessorDsl())) {s = 14;}

                        else if ( (LA240_0==RULE_RBRACE) && (synpred2_InternalProcessorDsl())) {s = 15;}

                        else if ( (LA240_0==RULE_QUESTI) && (synpred2_InternalProcessorDsl())) {s = 16;}

                        else if ( (LA240_0==RULE_NOT) && (synpred2_InternalProcessorDsl())) {s = 17;}

                        else if ( (LA240_0==RULE_BAND) && (synpred2_InternalProcessorDsl())) {s = 18;}

                        else if ( (LA240_0==RULE_BOR) && (synpred2_InternalProcessorDsl())) {s = 19;}

                        else if ( (LA240_0==RULE_HASH) && (synpred2_InternalProcessorDsl())) {s = 20;}

                        else if ( (LA240_0==RULE_AT) && (synpred2_InternalProcessorDsl())) {s = 21;}

                        else if ( (LA240_0==RULE_CARET) && (synpred2_InternalProcessorDsl())) {s = 22;}

                        else if ( (LA240_0==RULE_EQUALS) && (synpred2_InternalProcessorDsl())) {s = 23;}

                        else if ( (LA240_0==RULE_LESS_THAN) && (synpred2_InternalProcessorDsl())) {s = 24;}

                        else if ( (LA240_0==RULE_MORE_THAN) && (synpred2_InternalProcessorDsl())) {s = 25;}

                        else if ( (LA240_0==RULE_PERCENT) && (synpred2_InternalProcessorDsl())) {s = 26;}

                        else if ( (LA240_0==RULE_DOT) && (synpred2_InternalProcessorDsl())) {s = 27;}

                        else if ( (LA240_0==RULE_AND) && (synpred2_InternalProcessorDsl())) {s = 28;}

                        else if ( (LA240_0==RULE_OR) && (synpred2_InternalProcessorDsl())) {s = 29;}

                        else if ( (LA240_0==RULE_ESC_CHAR) && (synpred2_InternalProcessorDsl())) {s = 30;}

                        else if ( (LA240_0==RULE_ON_OFF) && (synpred2_InternalProcessorDsl())) {s = 31;}

                        else if ( (LA240_0==RULE_STATEMENT_TYPE) && (synpred2_InternalProcessorDsl())) {s = 32;}

                        else if ( (LA240_0==RULE_MAPPING_TYPE) && (synpred2_InternalProcessorDsl())) {s = 33;}

                        else if ( (LA240_0==RULE_OPTION_TYPE) && (synpred2_InternalProcessorDsl())) {s = 34;}

                         
                        input.seek(index240_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 240, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA247_eotS =
        "\13\uffff";
    static final String DFA247_eofS =
        "\13\uffff";
    static final String DFA247_minS =
        "\1\4\2\uffff\2\5\6\uffff";
    static final String DFA247_maxS =
        "\1\45\2\uffff\1\17\1\34\6\uffff";
    static final String DFA247_acceptS =
        "\1\uffff\1\1\1\2\2\uffff\1\7\1\10\1\3\1\5\1\4\1\6";
    static final String DFA247_specialS =
        "\13\uffff}>";
    static final String[] DFA247_transitionS = {
            "\7\1\1\uffff\1\4\2\1\1\3\1\1\1\5\6\1\1\2\4\1\1\6\10\1",
            "",
            "",
            "\1\7\3\uffff\2\7\3\uffff\1\7\1\10",
            "\1\11\1\uffff\1\11\1\uffff\2\11\1\uffff\1\12\1\uffff\1\11\13"+
            "\uffff\3\11",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA247_eot = DFA.unpackEncodedString(DFA247_eotS);
    static final short[] DFA247_eof = DFA.unpackEncodedString(DFA247_eofS);
    static final char[] DFA247_min = DFA.unpackEncodedStringToUnsignedChars(DFA247_minS);
    static final char[] DFA247_max = DFA.unpackEncodedStringToUnsignedChars(DFA247_maxS);
    static final short[] DFA247_accept = DFA.unpackEncodedString(DFA247_acceptS);
    static final short[] DFA247_special = DFA.unpackEncodedString(DFA247_specialS);
    static final short[][] DFA247_transition;

    static {
        int numStates = DFA247_transitionS.length;
        DFA247_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA247_transition[i] = DFA.unpackEncodedString(DFA247_transitionS[i]);
        }
    }

    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 247;
            this.eot = DFA247_eot;
            this.eof = DFA247_eof;
            this.min = DFA247_min;
            this.max = DFA247_max;
            this.accept = DFA247_accept;
            this.special = DFA247_special;
            this.transition = DFA247_transition;
        }
        public String getDescription() {
            return "7584:1: ( ( (lv_value_0_0= ruleSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_LBRACE_13= RULE_LBRACE ( (lv_meta_14_0= ruleMetaSql ) ) this_RBRACE_15= RULE_RBRACE ) | (this_PERCENT_16= RULE_PERCENT ( (this_PERCENT_17= RULE_PERCENT ( (lv_dbtab_18_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_19_0= ruleDatabaseColumn ) ) ) ) )";
        }
    }
    static final String DFA250_eotS =
        "\37\uffff";
    static final String DFA250_eofS =
        "\1\1\36\uffff";
    static final String DFA250_minS =
        "\1\4\1\uffff\34\0\1\uffff";
    static final String DFA250_maxS =
        "\1\45\1\uffff\34\0\1\uffff";
    static final String DFA250_acceptS =
        "\1\uffff\1\2\34\uffff\1\1";
    static final String DFA250_specialS =
        "\2\uffff\1\11\1\0\1\22\1\33\1\12\1\32\1\13\1\20\1\14\1\25\1\7\1"+
        "\1\1\17\1\5\1\23\1\26\1\10\1\27\1\15\1\6\1\24\1\2\1\30\1\3\1\21"+
        "\1\4\1\16\1\31\1\uffff}>";
    static final String[] DFA250_transitionS = {
            "\1\6\1\4\1\12\1\5\1\13\1\11\1\10\2\1\1\2\1\3\1\1\1\7\1\1\1\14"+
            "\1\15\1\16\1\17\1\20\1\21\1\1\1\22\1\23\1\24\1\25\1\1\1\26\1"+
            "\27\1\30\1\31\1\32\1\33\1\34\1\35",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA250_eot = DFA.unpackEncodedString(DFA250_eotS);
    static final short[] DFA250_eof = DFA.unpackEncodedString(DFA250_eofS);
    static final char[] DFA250_min = DFA.unpackEncodedStringToUnsignedChars(DFA250_minS);
    static final char[] DFA250_max = DFA.unpackEncodedStringToUnsignedChars(DFA250_maxS);
    static final short[] DFA250_accept = DFA.unpackEncodedString(DFA250_acceptS);
    static final short[] DFA250_special = DFA.unpackEncodedString(DFA250_specialS);
    static final short[][] DFA250_transition;

    static {
        int numStates = DFA250_transitionS.length;
        DFA250_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA250_transition[i] = DFA.unpackEncodedString(DFA250_transitionS[i]);
        }
    }

    class DFA250 extends DFA {

        public DFA250(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 250;
            this.eot = DFA250_eot;
            this.eof = DFA250_eof;
            this.min = DFA250_min;
            this.max = DFA250_max;
            this.accept = DFA250_accept;
            this.special = DFA250_special;
            this.transition = DFA250_transition;
        }
        public String getDescription() {
            return "()* loopback of 8042:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_RBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_28= RULE_REST | this_IDENT_DOT_29= RULE_IDENT_DOT | this_IDENT_30= RULE_IDENT | this_NUMBER_31= RULE_NUMBER | this_WS_32= RULE_WS | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_RBRACE_38= RULE_RBRACE | this_QUESTI_39= RULE_QUESTI | this_NOT_40= RULE_NOT | this_BAND_41= RULE_BAND | this_BOR_42= RULE_BOR | this_HASH_43= RULE_HASH | this_CARET_44= RULE_CARET | this_EQUALS_45= RULE_EQUALS | this_LESS_THAN_46= RULE_LESS_THAN | this_MORE_THAN_47= RULE_MORE_THAN | this_DOT_48= RULE_DOT | this_AND_49= RULE_AND | this_OR_50= RULE_OR | this_ESC_CHAR_51= RULE_ESC_CHAR | this_ON_OFF_52= RULE_ON_OFF | this_STATEMENT_TYPE_53= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_54= RULE_MAPPING_TYPE | this_OPTION_TYPE_55= RULE_OPTION_TYPE ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA250_3 = input.LA(1);

                         
                        int index250_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA250_13 = input.LA(1);

                         
                        int index250_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA250_23 = input.LA(1);

                         
                        int index250_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_23);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA250_25 = input.LA(1);

                         
                        int index250_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA250_27 = input.LA(1);

                         
                        int index250_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_27);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA250_15 = input.LA(1);

                         
                        int index250_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_15);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA250_21 = input.LA(1);

                         
                        int index250_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_21);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA250_12 = input.LA(1);

                         
                        int index250_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_12);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA250_18 = input.LA(1);

                         
                        int index250_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_18);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA250_2 = input.LA(1);

                         
                        int index250_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_2);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA250_6 = input.LA(1);

                         
                        int index250_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_6);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA250_8 = input.LA(1);

                         
                        int index250_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_8);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA250_10 = input.LA(1);

                         
                        int index250_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_10);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA250_20 = input.LA(1);

                         
                        int index250_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA250_28 = input.LA(1);

                         
                        int index250_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_28);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA250_14 = input.LA(1);

                         
                        int index250_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_14);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA250_9 = input.LA(1);

                         
                        int index250_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_9);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA250_26 = input.LA(1);

                         
                        int index250_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_26);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA250_4 = input.LA(1);

                         
                        int index250_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_4);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA250_16 = input.LA(1);

                         
                        int index250_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_16);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA250_22 = input.LA(1);

                         
                        int index250_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA250_11 = input.LA(1);

                         
                        int index250_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_11);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA250_17 = input.LA(1);

                         
                        int index250_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_17);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA250_19 = input.LA(1);

                         
                        int index250_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_19);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA250_24 = input.LA(1);

                         
                        int index250_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA250_29 = input.LA(1);

                         
                        int index250_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_29);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA250_7 = input.LA(1);

                         
                        int index250_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_7);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA250_5 = input.LA(1);

                         
                        int index250_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalProcessorDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index250_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 250, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA259_eotS =
        "\13\uffff";
    static final String DFA259_eofS =
        "\13\uffff";
    static final String DFA259_minS =
        "\1\4\2\uffff\2\5\6\uffff";
    static final String DFA259_maxS =
        "\1\45\2\uffff\1\17\1\34\6\uffff";
    static final String DFA259_acceptS =
        "\1\uffff\1\1\1\2\2\uffff\1\7\1\10\1\5\1\3\1\4\1\6";
    static final String DFA259_specialS =
        "\13\uffff}>";
    static final String[] DFA259_transitionS = {
            "\10\1\1\4\2\1\1\3\1\1\1\6\1\uffff\3\1\1\uffff\1\1\1\2\4\1\1"+
            "\5\10\1",
            "",
            "",
            "\1\10\3\uffff\2\10\3\uffff\1\10\1\7",
            "\1\11\1\uffff\1\11\1\uffff\2\11\1\uffff\1\12\1\uffff\1\11\13"+
            "\uffff\3\11",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA259_eot = DFA.unpackEncodedString(DFA259_eotS);
    static final short[] DFA259_eof = DFA.unpackEncodedString(DFA259_eofS);
    static final char[] DFA259_min = DFA.unpackEncodedStringToUnsignedChars(DFA259_minS);
    static final char[] DFA259_max = DFA.unpackEncodedStringToUnsignedChars(DFA259_maxS);
    static final short[] DFA259_accept = DFA.unpackEncodedString(DFA259_acceptS);
    static final short[] DFA259_special = DFA.unpackEncodedString(DFA259_specialS);
    static final short[][] DFA259_transition;

    static {
        int numStates = DFA259_transitionS.length;
        DFA259_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA259_transition[i] = DFA.unpackEncodedString(DFA259_transitionS[i]);
        }
    }

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = DFA259_eot;
            this.eof = DFA259_eof;
            this.min = DFA259_min;
            this.max = DFA259_max;
            this.accept = DFA259_accept;
            this.special = DFA259_special;
            this.transition = DFA259_transition;
        }
        public String getDescription() {
            return "8716:1: ( ( (lv_value_0_0= ruleIfSqlValue ) ) | (this_AT_1= RULE_AT ( (lv_col_2_0= ruleColumn ) ) ) | (this_STRING_3= RULE_STRING ( (lv_cnst_4_0= ruleConstant ) ) ) | (this_COLON_5= RULE_COLON ( (lv_ident_6_0= ruleIdentifier ) ) ) | (this_STRING_7= RULE_STRING this_STRING_8= RULE_STRING ( (lv_cnstOper_9_0= ruleConstantOperator ) ) ) | (this_COLON_10= RULE_COLON this_COLON_11= RULE_COLON ( (lv_identOper_12_0= ruleIdentifierOperator ) ) ) | (this_PERCENT_13= RULE_PERCENT ( (this_PERCENT_14= RULE_PERCENT ( (lv_dbtab_15_0= ruleDatabaseTable ) ) ) | ( (lv_dbcol_16_0= ruleDatabaseColumn ) ) ) ) | (this_LBRACE_17= RULE_LBRACE ( (lv_meta_18_0= ruleIfMetaSql ) ) this_RBRACE_19= RULE_RBRACE ) )";
        }
    }
    static final String DFA262_eotS =
        "\36\uffff";
    static final String DFA262_eofS =
        "\1\1\35\uffff";
    static final String DFA262_minS =
        "\1\4\1\uffff\33\0\1\uffff";
    static final String DFA262_maxS =
        "\1\45\1\uffff\33\0\1\uffff";
    static final String DFA262_acceptS =
        "\1\uffff\1\2\33\uffff\1\1";
    static final String DFA262_specialS =
        "\2\uffff\1\13\1\31\1\0\1\17\1\10\1\24\1\21\1\1\1\23\1\5\1\25\1\15"+
        "\1\4\1\20\1\30\1\14\1\27\1\6\1\26\1\7\1\32\1\11\1\3\1\22\1\2\1\12"+
        "\1\16\1\uffff}>";
    static final String[] DFA262_transitionS = {
            "\1\6\1\4\1\13\1\5\1\14\1\12\1\11\1\7\1\1\1\2\1\3\1\1\1\10\2"+
            "\1\1\15\1\16\1\17\1\1\1\20\1\1\1\21\1\22\1\23\1\24\1\1\1\25"+
            "\1\26\1\27\1\30\1\31\1\32\1\33\1\34",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA262_eot = DFA.unpackEncodedString(DFA262_eotS);
    static final short[] DFA262_eof = DFA.unpackEncodedString(DFA262_eofS);
    static final char[] DFA262_min = DFA.unpackEncodedStringToUnsignedChars(DFA262_minS);
    static final char[] DFA262_max = DFA.unpackEncodedStringToUnsignedChars(DFA262_maxS);
    static final short[] DFA262_accept = DFA.unpackEncodedString(DFA262_acceptS);
    static final short[] DFA262_special = DFA.unpackEncodedString(DFA262_specialS);
    static final short[][] DFA262_transition;

    static {
        int numStates = DFA262_transitionS.length;
        DFA262_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA262_transition[i] = DFA.unpackEncodedString(DFA262_transitionS[i]);
        }
    }

    class DFA262 extends DFA {

        public DFA262(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 262;
            this.eot = DFA262_eot;
            this.eof = DFA262_eof;
            this.min = DFA262_min;
            this.max = DFA262_max;
            this.accept = DFA262_accept;
            this.special = DFA262_special;
            this.transition = DFA262_transition;
        }
        public String getDescription() {
            return "()* loopback of 9166:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_HASH | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_27= RULE_REST | this_IDENT_DOT_28= RULE_IDENT_DOT | this_IDENT_29= RULE_IDENT | this_NUMBER_30= RULE_NUMBER | this_WS_31= RULE_WS | this_SEMICOLON_32= RULE_SEMICOLON | this_COMMA_33= RULE_COMMA | this_MINUS_34= RULE_MINUS | this_PLUS_35= RULE_PLUS | this_LPAREN_36= RULE_LPAREN | this_RPAREN_37= RULE_RPAREN | this_QUESTI_38= RULE_QUESTI | this_NOT_39= RULE_NOT | this_BAND_40= RULE_BAND | this_HASH_41= RULE_HASH | this_CARET_42= RULE_CARET | this_EQUALS_43= RULE_EQUALS | this_LESS_THAN_44= RULE_LESS_THAN | this_MORE_THAN_45= RULE_MORE_THAN | this_DOT_46= RULE_DOT | this_AND_47= RULE_AND | this_OR_48= RULE_OR | this_ESC_CHAR_49= RULE_ESC_CHAR | this_ON_OFF_50= RULE_ON_OFF | this_STATEMENT_TYPE_51= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_52= RULE_MAPPING_TYPE | this_OPTION_TYPE_53= RULE_OPTION_TYPE ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA262_4 = input.LA(1);

                         
                        int index262_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA262_9 = input.LA(1);

                         
                        int index262_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA262_26 = input.LA(1);

                         
                        int index262_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_26);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA262_24 = input.LA(1);

                         
                        int index262_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_24);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA262_14 = input.LA(1);

                         
                        int index262_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_14);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA262_11 = input.LA(1);

                         
                        int index262_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA262_19 = input.LA(1);

                         
                        int index262_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_19);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA262_21 = input.LA(1);

                         
                        int index262_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_21);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA262_6 = input.LA(1);

                         
                        int index262_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_6);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA262_23 = input.LA(1);

                         
                        int index262_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_23);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA262_27 = input.LA(1);

                         
                        int index262_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_27);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA262_2 = input.LA(1);

                         
                        int index262_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_2);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA262_17 = input.LA(1);

                         
                        int index262_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_17);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA262_13 = input.LA(1);

                         
                        int index262_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA262_28 = input.LA(1);

                         
                        int index262_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_28);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA262_5 = input.LA(1);

                         
                        int index262_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_5);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA262_15 = input.LA(1);

                         
                        int index262_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_15);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA262_8 = input.LA(1);

                         
                        int index262_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_8);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA262_25 = input.LA(1);

                         
                        int index262_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA262_10 = input.LA(1);

                         
                        int index262_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_10);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA262_7 = input.LA(1);

                         
                        int index262_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_7);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA262_12 = input.LA(1);

                         
                        int index262_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_12);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA262_20 = input.LA(1);

                         
                        int index262_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_20);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA262_18 = input.LA(1);

                         
                        int index262_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_18);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA262_16 = input.LA(1);

                         
                        int index262_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_16);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA262_3 = input.LA(1);

                         
                        int index262_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_3);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA262_22 = input.LA(1);

                         
                        int index262_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalProcessorDsl()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 262, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA282_eotS =
        "\41\uffff";
    static final String DFA282_eofS =
        "\1\1\40\uffff";
    static final String DFA282_minS =
        "\1\4\1\uffff\36\0\1\uffff";
    static final String DFA282_maxS =
        "\1\45\1\uffff\36\0\1\uffff";
    static final String DFA282_acceptS =
        "\1\uffff\1\2\36\uffff\1\1";
    static final String DFA282_specialS =
        "\2\uffff\1\2\1\24\1\5\1\32\1\23\1\1\1\22\1\31\1\10\1\34\1\15\1\35"+
        "\1\14\1\27\1\13\1\3\1\21\1\7\1\17\1\20\1\0\1\25\1\4\1\16\1\33\1"+
        "\6\1\26\1\12\1\30\1\11\1\uffff}>";
    static final String[] DFA282_transitionS = {
            "\1\6\1\4\1\13\1\5\1\14\1\12\1\11\1\7\1\1\1\2\1\3\1\1\1\10\1"+
            "\15\1\1\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1"+
            "\1\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA282_eot = DFA.unpackEncodedString(DFA282_eotS);
    static final short[] DFA282_eof = DFA.unpackEncodedString(DFA282_eofS);
    static final char[] DFA282_min = DFA.unpackEncodedStringToUnsignedChars(DFA282_minS);
    static final char[] DFA282_max = DFA.unpackEncodedStringToUnsignedChars(DFA282_maxS);
    static final short[] DFA282_accept = DFA.unpackEncodedString(DFA282_acceptS);
    static final short[] DFA282_special = DFA.unpackEncodedString(DFA282_specialS);
    static final short[][] DFA282_transition;

    static {
        int numStates = DFA282_transitionS.length;
        DFA282_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA282_transition[i] = DFA.unpackEncodedString(DFA282_transitionS[i]);
        }
    }

    class DFA282 extends DFA {

        public DFA282(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 282;
            this.eot = DFA282_eot;
            this.eof = DFA282_eof;
            this.min = DFA282_min;
            this.max = DFA282_max;
            this.accept = DFA282_accept;
            this.special = DFA282_special;
            this.transition = DFA282_transition;
        }
        public String getDescription() {
            return "()* loopback of 10334:2: ( ( ( RULE_REST | RULE_IDENT_DOT | RULE_IDENT | RULE_NUMBER | RULE_WS | RULE_SEMICOLON | RULE_COMMA | RULE_MINUS | RULE_PLUS | RULE_LPAREN | RULE_RPAREN | RULE_LBRACE | RULE_QUESTI | RULE_NOT | RULE_BAND | RULE_BOR | RULE_HASH | RULE_AT | RULE_CARET | RULE_EQUALS | RULE_LESS_THAN | RULE_MORE_THAN | RULE_DOT | RULE_AND | RULE_OR | RULE_ESC_CHAR | RULE_ON_OFF | RULE_STATEMENT_TYPE | RULE_MAPPING_TYPE | RULE_OPTION_TYPE ) )=> (this_REST_30= RULE_REST | this_IDENT_DOT_31= RULE_IDENT_DOT | this_IDENT_32= RULE_IDENT | this_NUMBER_33= RULE_NUMBER | this_WS_34= RULE_WS | this_SEMICOLON_35= RULE_SEMICOLON | this_COMMA_36= RULE_COMMA | this_MINUS_37= RULE_MINUS | this_PLUS_38= RULE_PLUS | this_LPAREN_39= RULE_LPAREN | this_RPAREN_40= RULE_RPAREN | this_LBRACE_41= RULE_LBRACE | this_QUESTI_42= RULE_QUESTI | this_NOT_43= RULE_NOT | this_BAND_44= RULE_BAND | this_BOR_45= RULE_BOR | this_HASH_46= RULE_HASH | this_AT_47= RULE_AT | this_CARET_48= RULE_CARET | this_EQUALS_49= RULE_EQUALS | this_LESS_THAN_50= RULE_LESS_THAN | this_MORE_THAN_51= RULE_MORE_THAN | this_DOT_52= RULE_DOT | this_AND_53= RULE_AND | this_OR_54= RULE_OR | this_ESC_CHAR_55= RULE_ESC_CHAR | this_ON_OFF_56= RULE_ON_OFF | this_STATEMENT_TYPE_57= RULE_STATEMENT_TYPE | this_MAPPING_TYPE_58= RULE_MAPPING_TYPE | this_OPTION_TYPE_59= RULE_OPTION_TYPE ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA282_22 = input.LA(1);

                         
                        int index282_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_22);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA282_7 = input.LA(1);

                         
                        int index282_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA282_2 = input.LA(1);

                         
                        int index282_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA282_17 = input.LA(1);

                         
                        int index282_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_17);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA282_24 = input.LA(1);

                         
                        int index282_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_24);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA282_4 = input.LA(1);

                         
                        int index282_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_4);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA282_27 = input.LA(1);

                         
                        int index282_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_27);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA282_19 = input.LA(1);

                         
                        int index282_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA282_10 = input.LA(1);

                         
                        int index282_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA282_31 = input.LA(1);

                         
                        int index282_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_31);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA282_29 = input.LA(1);

                         
                        int index282_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_29);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA282_16 = input.LA(1);

                         
                        int index282_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_16);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA282_14 = input.LA(1);

                         
                        int index282_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA282_12 = input.LA(1);

                         
                        int index282_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_12);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA282_25 = input.LA(1);

                         
                        int index282_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_25);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA282_20 = input.LA(1);

                         
                        int index282_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_20);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA282_21 = input.LA(1);

                         
                        int index282_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_21);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA282_18 = input.LA(1);

                         
                        int index282_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA282_8 = input.LA(1);

                         
                        int index282_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_8);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA282_6 = input.LA(1);

                         
                        int index282_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_6);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA282_3 = input.LA(1);

                         
                        int index282_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_3);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA282_23 = input.LA(1);

                         
                        int index282_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA282_28 = input.LA(1);

                         
                        int index282_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_28);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA282_15 = input.LA(1);

                         
                        int index282_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_15);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA282_30 = input.LA(1);

                         
                        int index282_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_30);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA282_9 = input.LA(1);

                         
                        int index282_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_9);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA282_5 = input.LA(1);

                         
                        int index282_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_5);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA282_26 = input.LA(1);

                         
                        int index282_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_26);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA282_11 = input.LA(1);

                         
                        int index282_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_11);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA282_13 = input.LA(1);

                         
                        int index282_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalProcessorDsl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index282_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 282, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA285_eotS =
        "\14\uffff";
    static final String DFA285_eofS =
        "\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff";
    static final String DFA285_minS =
        "\2\4\1\uffff\4\4\1\0\3\4\1\uffff";
    static final String DFA285_maxS =
        "\2\45\1\uffff\4\45\1\0\3\45\1\uffff";
    static final String DFA285_acceptS =
        "\2\uffff\1\2\10\uffff\1\1";
    static final String DFA285_specialS =
        "\7\uffff\1\0\4\uffff}>";
    static final String[] DFA285_transitionS = {
            "\2\2\1\1\37\2",
            "\1\2\1\4\1\2\1\5\14\2\1\3\21\2",
            "",
            "\1\2\1\4\1\2\1\5\36\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\11\1\2\1\12\14\2\1\10\21\2",
            "\1\uffff",
            "\1\2\1\11\1\2\1\12\36\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            ""
    };

    static final short[] DFA285_eot = DFA.unpackEncodedString(DFA285_eotS);
    static final short[] DFA285_eof = DFA.unpackEncodedString(DFA285_eofS);
    static final char[] DFA285_min = DFA.unpackEncodedStringToUnsignedChars(DFA285_minS);
    static final char[] DFA285_max = DFA.unpackEncodedStringToUnsignedChars(DFA285_maxS);
    static final short[] DFA285_accept = DFA.unpackEncodedString(DFA285_acceptS);
    static final short[] DFA285_special = DFA.unpackEncodedString(DFA285_specialS);
    static final short[][] DFA285_transition;

    static {
        int numStates = DFA285_transitionS.length;
        DFA285_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA285_transition[i] = DFA.unpackEncodedString(DFA285_transitionS[i]);
        }
    }

    class DFA285 extends DFA {

        public DFA285(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 285;
            this.eot = DFA285_eot;
            this.eof = DFA285_eof;
            this.min = DFA285_min;
            this.max = DFA285_max;
            this.accept = DFA285_accept;
            this.special = DFA285_special;
            this.transition = DFA285_transition;
        }
        public String getDescription() {
            return "10702:2: ( ( ( RULE_LPAREN )=>this_LPAREN_1= RULE_LPAREN ) ( (lv_modifiers_2_0= ruleModifier ) ) (this_COMMA_3= RULE_COMMA ( (lv_modifiers_4_0= ruleModifier ) ) )* this_RPAREN_5= RULE_RPAREN )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA285_7 = input.LA(1);

                         
                        int index285_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalProcessorDsl()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index285_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 285, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA291_eotS =
        "\14\uffff";
    static final String DFA291_eofS =
        "\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff";
    static final String DFA291_minS =
        "\2\4\1\uffff\4\4\1\0\3\4\1\uffff";
    static final String DFA291_maxS =
        "\2\45\1\uffff\4\45\1\0\3\45\1\uffff";
    static final String DFA291_acceptS =
        "\2\uffff\1\2\10\uffff\1\1";
    static final String DFA291_specialS =
        "\7\uffff\1\0\4\uffff}>";
    static final String[] DFA291_transitionS = {
            "\2\2\1\1\37\2",
            "\1\2\1\3\1\2\1\4\14\2\1\5\21\2",
            "",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\3\1\2\1\4\36\2",
            "\1\2\1\10\1\2\1\11\14\2\1\12\21\2",
            "\1\uffff",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\10\1\2\1\11\36\2",
            ""
    };

    static final short[] DFA291_eot = DFA.unpackEncodedString(DFA291_eotS);
    static final short[] DFA291_eof = DFA.unpackEncodedString(DFA291_eofS);
    static final char[] DFA291_min = DFA.unpackEncodedStringToUnsignedChars(DFA291_minS);
    static final char[] DFA291_max = DFA.unpackEncodedStringToUnsignedChars(DFA291_maxS);
    static final short[] DFA291_accept = DFA.unpackEncodedString(DFA291_acceptS);
    static final short[] DFA291_special = DFA.unpackEncodedString(DFA291_specialS);
    static final short[][] DFA291_transition;

    static {
        int numStates = DFA291_transitionS.length;
        DFA291_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA291_transition[i] = DFA.unpackEncodedString(DFA291_transitionS[i]);
        }
    }

    class DFA291 extends DFA {

        public DFA291(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 291;
            this.eot = DFA291_eot;
            this.eof = DFA291_eof;
            this.min = DFA291_min;
            this.max = DFA291_max;
            this.accept = DFA291_accept;
            this.special = DFA291_special;
            this.transition = DFA291_transition;
        }
        public String getDescription() {
            return "10915:2: ( ( ( RULE_LPAREN )=>this_LPAREN_2= RULE_LPAREN ) ( (lv_modifiers_3_0= ruleModifier ) ) (this_COMMA_4= RULE_COMMA ( (lv_modifiers_5_0= ruleModifier ) ) )* this_RPAREN_6= RULE_RPAREN )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA291_7 = input.LA(1);

                         
                        int index291_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalProcessorDsl()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index291_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 291, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA298_eotS =
        "\14\uffff";
    static final String DFA298_eofS =
        "\2\2\1\uffff\4\2\1\uffff\3\2\1\uffff";
    static final String DFA298_minS =
        "\2\4\1\uffff\4\4\1\0\3\4\1\uffff";
    static final String DFA298_maxS =
        "\2\45\1\uffff\4\45\1\0\3\45\1\uffff";
    static final String DFA298_acceptS =
        "\2\uffff\1\2\10\uffff\1\1";
    static final String DFA298_specialS =
        "\7\uffff\1\0\4\uffff}>";
    static final String[] DFA298_transitionS = {
            "\2\2\1\1\37\2",
            "\1\2\1\3\1\2\1\4\14\2\1\5\21\2",
            "",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\3\1\2\1\4\36\2",
            "\1\2\1\10\1\2\1\11\14\2\1\12\21\2",
            "\1\uffff",
            "\4\2\1\7\7\2\1\6\25\2",
            "\4\2\1\7\7\2\1\6\25\2",
            "\1\2\1\10\1\2\1\11\36\2",
            ""
    };

    static final short[] DFA298_eot = DFA.unpackEncodedString(DFA298_eotS);
    static final short[] DFA298_eof = DFA.unpackEncodedString(DFA298_eofS);
    static final char[] DFA298_min = DFA.unpackEncodedStringToUnsignedChars(DFA298_minS);
    static final char[] DFA298_max = DFA.unpackEncodedStringToUnsignedChars(DFA298_maxS);
    static final short[] DFA298_accept = DFA.unpackEncodedString(DFA298_acceptS);
    static final short[] DFA298_special = DFA.unpackEncodedString(DFA298_specialS);
    static final short[][] DFA298_transition;

    static {
        int numStates = DFA298_transitionS.length;
        DFA298_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA298_transition[i] = DFA.unpackEncodedString(DFA298_transitionS[i]);
        }
    }

    class DFA298 extends DFA {

        public DFA298(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 298;
            this.eot = DFA298_eot;
            this.eof = DFA298_eof;
            this.min = DFA298_min;
            this.max = DFA298_max;
            this.accept = DFA298_accept;
            this.special = DFA298_special;
            this.transition = DFA298_transition;
        }
        public String getDescription() {
            return "11122:2: ( ( ( RULE_LPAREN )=>this_LPAREN_3= RULE_LPAREN ) ( (lv_modifiers_4_0= ruleModifier ) ) (this_COMMA_5= RULE_COMMA ( (lv_modifiers_6_0= ruleModifier ) ) )* this_RPAREN_7= RULE_RPAREN )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA298_7 = input.LA(1);

                         
                        int index298_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalProcessorDsl()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index298_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 298, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA306_eotS =
        "\4\uffff";
    static final String DFA306_eofS =
        "\2\2\2\uffff";
    static final String DFA306_minS =
        "\2\4\2\uffff";
    static final String DFA306_maxS =
        "\2\13\2\uffff";
    static final String DFA306_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA306_specialS =
        "\4\uffff}>";
    static final String[] DFA306_transitionS = {
            "\1\1\6\uffff\1\2",
            "\1\1\1\3\1\uffff\1\3\3\uffff\1\2",
            "",
            ""
    };

    static final short[] DFA306_eot = DFA.unpackEncodedString(DFA306_eotS);
    static final short[] DFA306_eof = DFA.unpackEncodedString(DFA306_eofS);
    static final char[] DFA306_min = DFA.unpackEncodedStringToUnsignedChars(DFA306_minS);
    static final char[] DFA306_max = DFA.unpackEncodedStringToUnsignedChars(DFA306_maxS);
    static final short[] DFA306_accept = DFA.unpackEncodedString(DFA306_acceptS);
    static final short[] DFA306_special = DFA.unpackEncodedString(DFA306_specialS);
    static final short[][] DFA306_transition;

    static {
        int numStates = DFA306_transitionS.length;
        DFA306_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA306_transition[i] = DFA.unpackEncodedString(DFA306_transitionS[i]);
        }
    }

    class DFA306 extends DFA {

        public DFA306(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 306;
            this.eot = DFA306_eot;
            this.eof = DFA306_eof;
            this.min = DFA306_min;
            this.max = DFA306_max;
            this.accept = DFA306_accept;
            this.special = DFA306_special;
            this.transition = DFA306_transition;
        }
        public String getDescription() {
            return "()* loopback of 11554:2: ( (this_WS_2= RULE_WS )+ ( (lv_mappingItems_3_0= ruleMappingItem ) ) )*";
        }
    }
    static final String DFA332_eotS =
        "\12\uffff";
    static final String DFA332_eofS =
        "\1\1\5\uffff\3\1\1\3";
    static final String DFA332_minS =
        "\1\5\1\uffff\1\5\1\uffff\6\5";
    static final String DFA332_maxS =
        "\1\u00a4\1\uffff\1\u008d\1\uffff\1\16\1\14\3\u00a3\1\u00a4";
    static final String DFA332_acceptS =
        "\1\uffff\1\2\1\uffff\1\1\6\uffff";
    static final String DFA332_specialS =
        "\12\uffff}>";
    static final String[] DFA332_transitionS = {
            "\1\2\12\uffff\1\3\7\uffff\1\1\150\uffff\1\1\27\uffff\2\1\11"+
            "\uffff\1\1",
            "",
            "\1\3\1\uffff\1\3\4\uffff\1\4\31\uffff\1\3\137\uffff\10\1",
            "",
            "\1\6\6\uffff\1\5\1\uffff\1\7",
            "\1\10\6\uffff\1\1",
            "\1\11\1\uffff\1\3\12\uffff\1\1\5\uffff\1\1\2\uffff\1\1\12\uffff"+
            "\1\3\147\uffff\1\1\14\uffff\1\1\2\uffff\6\1",
            "\1\11\1\uffff\1\3\12\uffff\1\1\5\uffff\1\1\2\uffff\1\1\12\uffff"+
            "\1\3\147\uffff\1\1\14\uffff\1\1\2\uffff\6\1",
            "\1\11\1\uffff\1\3\12\uffff\1\1\5\uffff\1\1\2\uffff\1\1\12\uffff"+
            "\1\3\147\uffff\1\1\14\uffff\1\1\2\uffff\6\1",
            "\1\3\6\uffff\1\1\3\uffff\1\3\7\uffff\1\3\150\uffff\1\3\4\uffff"+
            "\10\1\13\uffff\2\3\11\uffff\1\3"
    };

    static final short[] DFA332_eot = DFA.unpackEncodedString(DFA332_eotS);
    static final short[] DFA332_eof = DFA.unpackEncodedString(DFA332_eofS);
    static final char[] DFA332_min = DFA.unpackEncodedStringToUnsignedChars(DFA332_minS);
    static final char[] DFA332_max = DFA.unpackEncodedStringToUnsignedChars(DFA332_maxS);
    static final short[] DFA332_accept = DFA.unpackEncodedString(DFA332_acceptS);
    static final short[] DFA332_special = DFA.unpackEncodedString(DFA332_specialS);
    static final short[][] DFA332_transition;

    static {
        int numStates = DFA332_transitionS.length;
        DFA332_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA332_transition[i] = DFA.unpackEncodedString(DFA332_transitionS[i]);
        }
    }

    class DFA332 extends DFA {

        public DFA332(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 332;
            this.eot = DFA332_eot;
            this.eof = DFA332_eof;
            this.min = DFA332_min;
            this.max = DFA332_max;
            this.accept = DFA332_accept;
            this.special = DFA332_special;
            this.transition = DFA332_transition;
        }
        public String getDescription() {
            return "()+ loopback of 12869:1: ( (lv_features_4_0= ruleAnnotationProperty ) )+";
        }
    }
    static final String DFA338_eotS =
        "\4\uffff";
    static final String DFA338_eofS =
        "\4\uffff";
    static final String DFA338_minS =
        "\2\u0081\2\uffff";
    static final String DFA338_maxS =
        "\2\u00a4\2\uffff";
    static final String DFA338_acceptS =
        "\2\uffff\1\1\1\2";
    static final String DFA338_specialS =
        "\4\uffff}>";
    static final String[] DFA338_transitionS = {
            "\1\2\27\uffff\1\1\1\2\11\uffff\1\3",
            "\1\2\27\uffff\1\1\1\2\11\uffff\1\3",
            "",
            ""
    };

    static final short[] DFA338_eot = DFA.unpackEncodedString(DFA338_eotS);
    static final short[] DFA338_eof = DFA.unpackEncodedString(DFA338_eofS);
    static final char[] DFA338_min = DFA.unpackEncodedStringToUnsignedChars(DFA338_minS);
    static final char[] DFA338_max = DFA.unpackEncodedStringToUnsignedChars(DFA338_maxS);
    static final short[] DFA338_accept = DFA.unpackEncodedString(DFA338_acceptS);
    static final short[] DFA338_special = DFA.unpackEncodedString(DFA338_specialS);
    static final short[][] DFA338_transition;

    static {
        int numStates = DFA338_transitionS.length;
        DFA338_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA338_transition[i] = DFA.unpackEncodedString(DFA338_transitionS[i]);
        }
    }

    class DFA338 extends DFA {

        public DFA338(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 338;
            this.eot = DFA338_eot;
            this.eof = DFA338_eof;
            this.min = DFA338_min;
            this.max = DFA338_max;
            this.accept = DFA338_accept;
            this.special = DFA338_special;
            this.transition = DFA338_transition;
        }
        public String getDescription() {
            return "13044:1: (this_PojoEntity_0= rulePojoEntity | this_EnumEntity_1= ruleEnumEntity )";
        }
    }
    static final String DFA343_eotS =
        "\13\uffff";
    static final String DFA343_eofS =
        "\13\uffff";
    static final String DFA343_minS =
        "\1\30\2\uffff\2\u0081\5\uffff\1\u0081";
    static final String DFA343_maxS =
        "\1\u00a5\2\uffff\2\u00a5\5\uffff\1\u00a5";
    static final String DFA343_acceptS =
        "\1\uffff\1\1\1\2\2\uffff\1\3\1\4\1\5\1\6\1\7\1\uffff";
    static final String DFA343_specialS =
        "\13\uffff}>";
    static final String[] DFA343_transitionS = {
            "\1\2\121\uffff\1\10\26\uffff\1\2\15\uffff\1\1\1\uffff\1\5\1"+
            "\6\5\uffff\1\7\1\3\1\4\11\uffff\1\2\1\11",
            "",
            "",
            "\1\2\27\uffff\1\3\1\4\11\uffff\1\2\1\11",
            "\1\2\27\uffff\1\12\1\4\12\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "\1\2\27\uffff\1\12\1\4\12\uffff\1\11"
    };

    static final short[] DFA343_eot = DFA.unpackEncodedString(DFA343_eotS);
    static final short[] DFA343_eof = DFA.unpackEncodedString(DFA343_eofS);
    static final char[] DFA343_min = DFA.unpackEncodedStringToUnsignedChars(DFA343_minS);
    static final char[] DFA343_max = DFA.unpackEncodedStringToUnsignedChars(DFA343_maxS);
    static final short[] DFA343_accept = DFA.unpackEncodedString(DFA343_acceptS);
    static final short[] DFA343_special = DFA.unpackEncodedString(DFA343_specialS);
    static final short[][] DFA343_transition;

    static {
        int numStates = DFA343_transitionS.length;
        DFA343_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA343_transition[i] = DFA.unpackEncodedString(DFA343_transitionS[i]);
        }
    }

    class DFA343 extends DFA {

        public DFA343(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 343;
            this.eot = DFA343_eot;
            this.eof = DFA343_eof;
            this.min = DFA343_min;
            this.max = DFA343_max;
            this.accept = DFA343_accept;
            this.special = DFA343_special;
            this.transition = DFA343_transition;
        }
        public String getDescription() {
            return "13221:1: (this_PackageDeclaration_0= rulePackageDeclaration | this_AnnotatedEntity_1= ruleAnnotatedEntity | this_Import_2= ruleImport | this_Implements_3= ruleImplements | this_Extends_4= ruleExtends | this_ImplPackage_5= ruleImplPackage | this_PojoDao_6= rulePojoDao )";
        }
    }
    static final String DFA400_eotS =
        "\31\uffff";
    static final String DFA400_eofS =
        "\1\2\2\uffff\11\16\1\uffff\1\16\2\uffff\3\16\5\uffff\1\16";
    static final String DFA400_minS =
        "\2\5\1\uffff\13\5\1\uffff\6\5\3\34\1\5";
    static final String DFA400_maxS =
        "\2\u00aa\1\uffff\11\u00aa\1\16\1\u00aa\1\uffff\1\14\3\u00aa\1\16"+
        "\1\5\3\34\1\u00aa";
    static final String DFA400_acceptS =
        "\2\uffff\1\2\13\uffff\1\1\12\uffff";
    static final String DFA400_specialS =
        "\31\uffff}>";
    static final String[] DFA400_transitionS = {
            "\1\1\14\uffff\1\2\u0093\uffff\5\2",
            "\1\2\6\uffff\1\14\5\uffff\1\2\162\uffff\1\3\1\4\1\5\1\6\1\7"+
            "\1\10\1\11\1\12\1\13\30\uffff\5\2",
            "",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16",
            "\1\20\6\uffff\1\17\1\uffff\1\21",
            "\1\16\6\uffff\1\2\5\uffff\1\16\u0093\uffff\5\16",
            "",
            "\1\22\6\uffff\1\2",
            "\1\16\6\uffff\1\2\5\uffff\1\16\10\uffff\1\23\162\uffff\1\15"+
            "\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\10\uffff\1\23\162\uffff\1\15"+
            "\27\uffff\5\16",
            "\1\16\6\uffff\1\2\5\uffff\1\16\10\uffff\1\23\162\uffff\1\15"+
            "\27\uffff\5\16",
            "\1\25\6\uffff\1\24\1\uffff\1\26",
            "\1\27",
            "\1\30",
            "\1\30",
            "\1\30",
            "\1\16\6\uffff\1\2\5\uffff\1\16\173\uffff\1\15\27\uffff\5\16"
    };

    static final short[] DFA400_eot = DFA.unpackEncodedString(DFA400_eotS);
    static final short[] DFA400_eof = DFA.unpackEncodedString(DFA400_eofS);
    static final char[] DFA400_min = DFA.unpackEncodedStringToUnsignedChars(DFA400_minS);
    static final char[] DFA400_max = DFA.unpackEncodedStringToUnsignedChars(DFA400_maxS);
    static final short[] DFA400_accept = DFA.unpackEncodedString(DFA400_acceptS);
    static final short[] DFA400_special = DFA.unpackEncodedString(DFA400_specialS);
    static final short[][] DFA400_transition;

    static {
        int numStates = DFA400_transitionS.length;
        DFA400_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA400_transition[i] = DFA.unpackEncodedString(DFA400_transitionS[i]);
        }
    }

    class DFA400 extends DFA {

        public DFA400(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 400;
            this.eot = DFA400_eot;
            this.eof = DFA400_eof;
            this.min = DFA400_min;
            this.max = DFA400_max;
            this.accept = DFA400_accept;
            this.special = DFA400_special;
            this.transition = DFA400_transition;
        }
        public String getDescription() {
            return "()+ loopback of 15426:1: ( (lv_args_6_0= rulePojoMethodArg ) )+";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_ruleArtifacts_in_entryRuleArtifacts75 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleArtifacts85 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts131 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_ruleProperty_in_ruleArtifacts155 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts167 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_rulePojoDefinition_in_ruleArtifacts197 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts209 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_ruleTableDefinition_in_ruleArtifacts239 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts251 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_ruleProcedureDefinition_in_ruleArtifacts281 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts293 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_ruleFunctionDefinition_in_ruleArtifacts323 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts335 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_ruleMetaStatement_in_ruleArtifacts365 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts377 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_ruleMappingRule_in_ruleArtifacts407 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts419 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_ruleOptionalFeature_in_ruleArtifacts449 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts461 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_rulePackageDeclaration_in_ruleArtifacts491 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_RULE_WS_in_ruleArtifacts503 = new BitSet(new long[]{0x0003FC0000000032L,0x0000000000000000L,0x000000000000801EL});
        public static final BitSet FOLLOW_ruleDatabaseCatalogAssignement_in_entryRuleDatabaseCatalogAssignement543 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseCatalogAssignement553 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseCatalogAssignement598 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseSchemaAssignement_in_entryRuleDatabaseSchemaAssignement633 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseSchemaAssignement643 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseSchemaAssignement688 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseTypeAssignement_in_entryRuleDatabaseTypeAssignement723 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseTypeAssignement733 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDatabaseTypeAssignement774 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseMetaInfoAssignement_in_entryRuleDatabaseMetaInfoAssignement814 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseMetaInfoAssignement824 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseMetaInfoAssignement869 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDriverMetaInfoAssignement_in_entryRuleDriverMetaInfoAssignement904 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDriverMetaInfoAssignement914 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDriverMetaInfoAssignement959 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDriverMethodOutputAssignement_in_entryRuleDriverMethodOutputAssignement994 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDriverMethodOutputAssignement1004 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDriverMethodOutputAssignement1046 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleDriverMethodOutputAssignement1063 = new BitSet(new long[]{0x0000007FFFFFF7E0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDriverMethodOutputAssignement1084 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSqlTypeAssignement_in_entryRuleSqlTypeAssignement1120 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSqlTypeAssignement1130 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleSqlTypeAssignement1172 = new BitSet(new long[]{0x0000020000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleSqlTypeAssignement1189 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleSqlTypeAssignement1205 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleSqlTypeAssignement1221 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleSqlTypeAssignement1234 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000000L,0x0000000000003FE0L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleSqlTypeAssignement1255 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_entryRuleColumnTypeAssignement1291 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleColumnTypeAssignement1301 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleColumnTypeAssignement1343 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleColumnTypeAssignement1360 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000000L,0x0000000000003FE0L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleColumnTypeAssignement1381 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleShowColumnTypeAssignement_in_entryRuleShowColumnTypeAssignement1417 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleShowColumnTypeAssignement1427 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleShowColumnTypeAssignement1469 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleShowColumnTypeAssignement1486 = new BitSet(new long[]{0x0000007FFFFFF7E0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleShowColumnTypeAssignement1507 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTableAssignement_in_entryRuleTableAssignement1543 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleTableAssignement1553 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleTableAssignement1595 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleTableAssignement1612 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleTableAssignement1629 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleJoinTableAssignement_in_entryRuleJoinTableAssignement1670 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleJoinTableAssignement1680 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleJoinTableAssignement1722 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleJoinTableAssignement1740 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleJoinTableAssignement1757 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_ruleColumnAssignement_in_entryRuleColumnAssignement1800 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleColumnAssignement1810 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleColumnAssignement1852 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleColumnAssignement1869 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleColumnAssignement1886 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImportAssignement_in_entryRuleImportAssignement1927 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImportAssignement1937 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImportAssignement1979 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleImportAssignement1996 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImportAssignement2013 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_41_in_ruleImportAssignement2031 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImportAssignement2048 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExportAssignement_in_entryRuleExportAssignement2091 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExportAssignement2101 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExportAssignement2143 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleExportAssignement2160 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExportAssignement2177 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_41_in_ruleExportAssignement2195 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExportAssignement2212 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleInheritanceAssignement_in_entryRuleInheritanceAssignement2255 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleInheritanceAssignement2265 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2307 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleInheritanceAssignement2324 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2341 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleInheritanceAssignement2359 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleInheritanceAssignement2376 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_ruleManyToManyAssignement_in_entryRuleManyToManyAssignement2419 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleManyToManyAssignement2429 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2471 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleManyToManyAssignement2488 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2505 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_41_in_ruleManyToManyAssignement2523 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleManyToManyAssignement2540 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_entryRuleDebugLevelAssignement2583 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDebugLevelAssignement2593 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDebugLevelAssignement2635 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDebugLevelAssignement2653 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDebugLevelAssignement2675 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleProcedurePojoAssignement_in_entryRuleProcedurePojoAssignement2713 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleProcedurePojoAssignement2723 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProcedurePojoAssignement2765 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleProcedurePojoAssignement2782 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000000L,0x0000000000003FE0L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleProcedurePojoAssignement2803 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunctionPojoAssignement_in_entryRuleFunctionPojoAssignement2839 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFunctionPojoAssignement2849 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleFunctionPojoAssignement2891 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleFunctionPojoAssignement2908 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000000L,0x0000000000003FE0L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleFunctionPojoAssignement2929 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplementsAssignement_in_entryRuleImplementsAssignement2965 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImplementsAssignement2975 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleImplementsAssignement3023 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignement3036 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleImplementsAssignement3048 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignement3060 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplementsAssignement3078 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignement3100 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleImplementsAssignement3112 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignement3124 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplementsAssignement3142 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleExtendsAssignement_in_entryRuleExtendsAssignement3187 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendsAssignement3197 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleExtendsAssignement3245 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignement3258 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleExtendsAssignement3270 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignement3282 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendsAssignement3300 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignement3322 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleExtendsAssignement3334 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignement3346 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendsAssignement3364 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleImplementsAssignementGenerics_in_entryRuleImplementsAssignementGenerics3409 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImplementsAssignementGenerics3419 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleImplementsAssignementGenerics3467 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3480 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleImplementsAssignementGenerics3492 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3504 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplementsAssignementGenerics3522 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3544 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleImplementsAssignementGenerics3556 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleImplementsAssignementGenerics3568 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplementsAssignementGenerics3586 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleExtendsAssignementGenerics_in_entryRuleExtendsAssignementGenerics3631 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendsAssignementGenerics3641 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleExtendsAssignementGenerics3689 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3702 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleExtendsAssignementGenerics3714 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3726 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendsAssignementGenerics3744 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3766 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleExtendsAssignementGenerics3778 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleExtendsAssignementGenerics3790 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendsAssignementGenerics3808 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleProperty_in_entryRuleProperty3853 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleProperty3863 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_42_in_ruleProperty3907 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_43_in_ruleProperty3944 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_44_in_ruleProperty3982 = new BitSet(new long[]{0xFFFC000000000000L,0x00000000000000FFL});
        public static final BitSet FOLLOW_ruleDatabaseProperty_in_ruleProperty4016 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_45_in_ruleProperty4042 = new BitSet(new long[]{0x0000000000000000L,0x0000FFFFFFFFFF10L});
        public static final BitSet FOLLOW_rulePojogenProperty_in_ruleProperty4076 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_46_in_ruleProperty4102 = new BitSet(new long[]{0x0000000000000000L,0xFFFF880400000010L,0x0000000000000001L});
        public static final BitSet FOLLOW_ruleMetagenProperty_in_ruleProperty4136 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_47_in_ruleProperty4162 = new BitSet(new long[]{0x0000000000000000L,0x10008C7800030010L});
        public static final BitSet FOLLOW_ruleDaogenProperty_in_ruleProperty4196 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_48_in_ruleProperty4222 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleProperty4247 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProperty4265 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleProperty4282 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleProperty4304 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_49_in_ruleProperty4330 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleProperty4355 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProperty4373 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleProperty4390 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleProperty4412 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleProperty4425 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseProperty_in_entryRuleDatabaseProperty4460 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseProperty4470 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_50_in_ruleDatabaseProperty4513 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_51_in_ruleDatabaseProperty4550 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_52_in_ruleDatabaseProperty4588 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4613 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4635 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_53_in_ruleDatabaseProperty4661 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4686 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4708 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_54_in_ruleDatabaseProperty4734 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4759 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty4781 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_55_in_ruleDatabaseProperty4807 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4832 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_ruleDatabaseCatalogAssignement_in_ruleDatabaseProperty4854 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_56_in_ruleDatabaseProperty4880 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4905 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_ruleDatabaseSchemaAssignement_in_ruleDatabaseProperty4927 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_57_in_ruleDatabaseProperty4953 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty4978 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleDatabaseProperty4998 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleDatabaseProperty5021 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5049 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_58_in_ruleDatabaseProperty5076 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5101 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5123 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_59_in_ruleDatabaseProperty5149 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5174 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5196 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_60_in_ruleDatabaseProperty5222 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5247 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDatabaseProperty5269 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_61_in_ruleDatabaseProperty5294 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_62_in_ruleDatabaseProperty5331 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_63_in_ruleDatabaseProperty5368 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_64_in_ruleDatabaseProperty5406 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5431 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDatabaseTypeAssignement_in_ruleDatabaseProperty5453 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_65_in_ruleDatabaseProperty5479 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5504 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_ruleDatabaseMetaInfoAssignement_in_ruleDatabaseProperty5526 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_66_in_ruleDatabaseProperty5552 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5577 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_ruleDriverMetaInfoAssignement_in_ruleDatabaseProperty5599 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_67_in_ruleDatabaseProperty5625 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5651 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDriverMethodOutputAssignement_in_ruleDatabaseProperty5673 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_68_in_ruleDatabaseProperty5701 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDatabaseProperty5726 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_ruleDatabaseProperty5748 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_69_in_ruleDatabaseProperty5773 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_70_in_ruleDatabaseProperty5810 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_71_in_ruleDatabaseProperty5847 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojogenProperty_in_entryRulePojogenProperty5896 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojogenProperty5906 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_72_in_rulePojogenProperty5950 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty5976 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleSqlTypeAssignement_in_rulePojogenProperty5998 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_73_in_rulePojogenProperty6026 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6051 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6069 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6087 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleSqlTypeAssignement_in_rulePojogenProperty6109 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_74_in_rulePojogenProperty6137 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6162 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6180 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6198 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6220 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_75_in_rulePojogenProperty6248 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6273 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6291 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6309 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6331 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_76_in_rulePojogenProperty6359 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6384 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6402 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6420 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty6442 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_77_in_rulePojogenProperty6470 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6495 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6513 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6530 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6552 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_78_in_rulePojogenProperty6578 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6603 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6621 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6638 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6660 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_79_in_rulePojogenProperty6686 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6711 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6729 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6746 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleShowColumnTypeAssignement_in_rulePojogenProperty6768 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_80_in_rulePojogenProperty6794 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6820 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6838 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_81_in_rulePojogenProperty6871 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6897 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6915 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_82_in_rulePojogenProperty6948 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty6974 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty6992 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_83_in_rulePojogenProperty7025 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7051 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleJoinTableAssignement_in_rulePojogenProperty7073 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_84_in_rulePojogenProperty7101 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7126 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7144 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7162 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7180 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_85_in_rulePojogenProperty7213 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7238 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7256 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7274 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7292 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_86_in_rulePojogenProperty7325 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7350 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7368 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7386 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7404 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_87_in_rulePojogenProperty7437 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7462 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7480 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7498 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnTypeAssignement_in_rulePojogenProperty7520 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_88_in_rulePojogenProperty7548 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7574 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleTableAssignement_in_rulePojogenProperty7596 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_89_in_rulePojogenProperty7624 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7649 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7667 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7685 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleColumnAssignement_in_rulePojogenProperty7707 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_90_in_rulePojogenProperty7735 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7760 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7778 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7796 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleExportAssignement_in_rulePojogenProperty7818 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_91_in_rulePojogenProperty7846 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7871 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty7889 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7907 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleImportAssignement_in_rulePojogenProperty7929 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_92_in_rulePojogenProperty7957 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty7982 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8000 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8018 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleImportAssignement_in_rulePojogenProperty8040 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_93_in_rulePojogenProperty8068 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8093 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8111 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8129 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleExportAssignement_in_rulePojogenProperty8151 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_94_in_rulePojogenProperty8179 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8204 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8222 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8240 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleImportAssignement_in_rulePojogenProperty8262 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_95_in_rulePojogenProperty8290 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8315 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8333 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8351 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleManyToManyAssignement_in_rulePojogenProperty8373 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_96_in_rulePojogenProperty8401 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8426 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8444 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8461 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8479 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8497 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleInheritanceAssignement_in_rulePojogenProperty8519 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_97_in_rulePojogenProperty8547 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8573 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8591 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_98_in_rulePojogenProperty8624 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8650 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty8668 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_99_in_rulePojogenProperty8701 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8726 = new BitSet(new long[]{0x0000000000004030L});
        public static final BitSet FOLLOW_ruleImplementsAssignement_in_rulePojogenProperty8748 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_100_in_rulePojogenProperty8774 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8799 = new BitSet(new long[]{0x0000000000004030L});
        public static final BitSet FOLLOW_ruleExtendsAssignement_in_rulePojogenProperty8821 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_101_in_rulePojogenProperty8847 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8872 = new BitSet(new long[]{0x0000000000004030L});
        public static final BitSet FOLLOW_ruleImplementsAssignementGenerics_in_rulePojogenProperty8894 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_102_in_rulePojogenProperty8920 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty8945 = new BitSet(new long[]{0x0000000000004030L});
        public static final BitSet FOLLOW_ruleExtendsAssignementGenerics_in_rulePojogenProperty8967 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_103_in_rulePojogenProperty8992 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_104_in_rulePojogenProperty9029 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_105_in_rulePojogenProperty9067 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9093 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9111 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_106_in_rulePojogenProperty9144 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9169 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9187 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_107_in_rulePojogenProperty9217 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_108_in_rulePojogenProperty9255 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9280 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9298 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9316 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_RULE_PLUS_in_rulePojogenProperty9328 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9340 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9358 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9380 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_MINUS_in_rulePojogenProperty9392 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9404 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojogenProperty9422 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_68_in_rulePojogenProperty9457 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9482 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_rulePojogenProperty9504 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_109_in_rulePojogenProperty9530 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9556 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleProcedurePojoAssignement_in_rulePojogenProperty9578 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_110_in_rulePojogenProperty9606 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9632 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleFunctionPojoAssignement_in_rulePojogenProperty9654 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_111_in_rulePojogenProperty9682 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePojogenProperty9707 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_rulePojogenProperty9729 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMetaTypeAssignement_in_entryRuleMetaTypeAssignement9766 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMetaTypeAssignement9776 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement9818 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_ruleMetaTypeAssignement9835 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement9852 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_41_in_ruleMetaTypeAssignement9870 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaTypeAssignement9887 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMetagenProperty_in_entryRuleMetagenProperty9930 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMetagenProperty9940 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_112_in_ruleMetagenProperty9984 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10009 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10027 = new BitSet(new long[]{0x0000000000000032L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10049 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10068 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleMetagenProperty10080 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10092 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10110 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10132 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleMetagenProperty10144 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10156 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10174 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_113_in_ruleMetagenProperty10209 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10234 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10252 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10269 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10287 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10305 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10323 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_114_in_ruleMetagenProperty10356 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10382 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10400 = new BitSet(new long[]{0x0000000000000032L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10422 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10443 = new BitSet(new long[]{0x0000000000000210L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleMetagenProperty10455 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10467 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10485 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10507 = new BitSet(new long[]{0x0000000000000410L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleMetagenProperty10519 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10531 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10549 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_115_in_ruleMetagenProperty10584 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10609 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10627 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10644 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10662 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10680 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10698 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_116_in_ruleMetagenProperty10731 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10756 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10774 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10792 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleMetaTypeAssignement_in_ruleMetagenProperty10814 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_117_in_ruleMetagenProperty10842 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10867 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty10885 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty10903 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleMetaTypeAssignement_in_ruleMetagenProperty10925 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_107_in_ruleMetagenProperty10952 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_118_in_ruleMetagenProperty10990 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11015 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11033 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11051 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11069 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_119_in_ruleMetagenProperty11102 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11127 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11145 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11163 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11181 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_120_in_ruleMetagenProperty11213 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_121_in_ruleMetagenProperty11250 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_122_in_ruleMetagenProperty11287 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_123_in_ruleMetagenProperty11324 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_124_in_ruleMetagenProperty11362 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11387 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11405 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11422 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11440 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_125_in_ruleMetagenProperty11471 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11496 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11514 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11531 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11549 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_126_in_ruleMetagenProperty11580 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11605 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11623 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11640 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11658 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_68_in_ruleMetagenProperty11689 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11714 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_ruleMetagenProperty11736 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_98_in_ruleMetagenProperty11761 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_127_in_ruleMetagenProperty11799 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11825 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11843 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_128_in_ruleMetagenProperty11876 = new BitSet(new long[]{0x0000000000000010L});
    }

    private static class FollowSets001 {
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11901 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11919 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty11937 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetagenProperty11955 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_111_in_ruleMetagenProperty11988 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetagenProperty12013 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleMetagenProperty12035 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDaogenProperty_in_entryRuleDaogenProperty12072 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDaogenProperty12082 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_80_in_ruleDaogenProperty12126 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12152 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDaogenProperty12170 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_81_in_ruleDaogenProperty12203 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12229 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDaogenProperty12247 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_106_in_ruleDaogenProperty12280 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12305 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDaogenProperty12323 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_99_in_ruleDaogenProperty12354 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12379 = new BitSet(new long[]{0x0000000000004030L});
        public static final BitSet FOLLOW_ruleImplementsAssignement_in_ruleDaogenProperty12401 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_100_in_ruleDaogenProperty12427 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12452 = new BitSet(new long[]{0x0000000000004030L});
        public static final BitSet FOLLOW_ruleExtendsAssignement_in_ruleDaogenProperty12474 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_101_in_ruleDaogenProperty12500 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12525 = new BitSet(new long[]{0x0000000000004030L});
        public static final BitSet FOLLOW_ruleImplementsAssignementGenerics_in_ruleDaogenProperty12547 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_102_in_ruleDaogenProperty12573 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12598 = new BitSet(new long[]{0x0000000000004030L});
        public static final BitSet FOLLOW_ruleExtendsAssignementGenerics_in_ruleDaogenProperty12620 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_107_in_ruleDaogenProperty12645 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_124_in_ruleDaogenProperty12683 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12708 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDaogenProperty12726 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12743 = new BitSet(new long[]{0x0000000000001010L,0x0000000000000000L,0x0000000000003FE0L});
        public static final BitSet FOLLOW_rulePojoType_in_ruleDaogenProperty12765 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_68_in_ruleDaogenProperty12791 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12816 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_ruleDebugLevelAssignement_in_ruleDaogenProperty12838 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_111_in_ruleDaogenProperty12864 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleDaogenProperty12889 = new BitSet(new long[]{0x0000007FFFFFF7F0L});
        public static final BitSet FOLLOW_rulePropertyValue_in_ruleDaogenProperty12911 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePropertyValue_in_entryRulePropertyValue12949 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePropertyValue12960 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_rulePropertyValue13002 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_rulePropertyValue13028 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePropertyValue13054 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePropertyValue13080 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePropertyValue13106 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_STRING_in_rulePropertyValue13132 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_rulePropertyValue13158 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_rulePropertyValue13184 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_rulePropertyValue13210 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePropertyValue13236 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePropertyValue13262 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePropertyValue13288 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePropertyValue13314 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_rulePropertyValue13340 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_NOT_in_rulePropertyValue13366 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_BAND_in_rulePropertyValue13392 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_BOR_in_rulePropertyValue13418 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_HASH_in_rulePropertyValue13444 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_AT_in_rulePropertyValue13470 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_CARET_in_rulePropertyValue13496 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_rulePropertyValue13522 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_rulePropertyValue13548 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_rulePropertyValue13574 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_rulePropertyValue13600 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_DOT_in_rulePropertyValue13626 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_AND_in_rulePropertyValue13652 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_OR_in_rulePropertyValue13678 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_rulePropertyValue13704 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_rulePropertyValue13730 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_rulePropertyValue13756 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_rulePropertyValue13782 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_rulePropertyValue13808 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_REST_in_rulePropertyValue14094 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_rulePropertyValue14120 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePropertyValue14146 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePropertyValue14172 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_WS_in_rulePropertyValue14198 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePropertyValue14224 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_STRING_in_rulePropertyValue14250 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_rulePropertyValue14276 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_rulePropertyValue14302 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_rulePropertyValue14328 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_rulePropertyValue14354 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_rulePropertyValue14380 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePropertyValue14406 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePropertyValue14432 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_rulePropertyValue14458 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_NOT_in_rulePropertyValue14484 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_BAND_in_rulePropertyValue14510 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_BOR_in_rulePropertyValue14536 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_HASH_in_rulePropertyValue14562 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_AT_in_rulePropertyValue14588 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_CARET_in_rulePropertyValue14614 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_rulePropertyValue14640 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_rulePropertyValue14666 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_rulePropertyValue14692 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_rulePropertyValue14718 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_DOT_in_rulePropertyValue14744 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_AND_in_rulePropertyValue14770 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_OR_in_rulePropertyValue14796 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_rulePropertyValue14822 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_rulePropertyValue14848 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_rulePropertyValue14874 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_rulePropertyValue14900 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_rulePropertyValue14926 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_RULE_STRING_VALUE_in_rulePropertyValue14956 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDefinition_in_entryRulePojoDefinition15007 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoDefinition15017 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_129_in_rulePojoDefinition15058 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDefinition15075 = new BitSet(new long[]{0x0000000000005020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDefinition15100 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_rulePojoDefinition15120 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoDefinition15146 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoDefinition15168 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_rulePojoDefinition15181 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleTableDefinition_in_entryRuleTableDefinition15226 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleTableDefinition15236 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_130_in_ruleTableDefinition15277 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleTableDefinition15294 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleTableDefinition15316 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleTableDefinition15332 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleProcedureDefinition_in_entryRuleProcedureDefinition15377 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleProcedureDefinition15387 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_131_in_ruleProcedureDefinition15428 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProcedureDefinition15445 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleProcedureDefinition15467 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleProcedureDefinition15483 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFunctionDefinition_in_entryRuleFunctionDefinition15528 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFunctionDefinition15538 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_132_in_ruleFunctionDefinition15579 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleFunctionDefinition15596 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleFunctionDefinition15618 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleFunctionDefinition15634 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMetaStatement_in_entryRuleMetaStatement15673 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMetaStatement15683 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaStatement15725 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleMetaStatement15741 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleMetaStatement15757 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleMetaStatement15774 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleStatementModifier_in_ruleMetaStatement15794 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleMetaStatement15807 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleMetaStatement15817 = new BitSet(new long[]{0x0000003FFFFFF7F0L});
        public static final BitSet FOLLOW_ruleSql_in_ruleMetaStatement15837 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleMetaStatement15848 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSql_in_entryRuleSql15883 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSql15893 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSqlFragment_in_ruleSql15938 = new BitSet(new long[]{0x0000003FFFFFF7F2L});
        public static final BitSet FOLLOW_ruleSqlFragment_in_entryRuleSqlFragment15974 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSqlFragment15984 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSqlValue_in_ruleSqlFragment16030 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleSqlFragment16048 = new BitSet(new long[]{0x00000000000040A0L});
        public static final BitSet FOLLOW_ruleColumn_in_ruleSqlFragment16068 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleSqlFragment16087 = new BitSet(new long[]{0x0000000000004620L});
        public static final BitSet FOLLOW_ruleConstant_in_ruleSqlFragment16107 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleSqlFragment16126 = new BitSet(new long[]{0x000000001C0046A0L});
        public static final BitSet FOLLOW_ruleIdentifier_in_ruleSqlFragment16146 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleSqlFragment16165 = new BitSet(new long[]{0x0000000000008000L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleSqlFragment16175 = new BitSet(new long[]{0x0000000004000020L});
        public static final BitSet FOLLOW_ruleConstantOperator_in_ruleSqlFragment16195 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleSqlFragment16214 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleSqlFragment16224 = new BitSet(new long[]{0x0000000004000020L});
        public static final BitSet FOLLOW_ruleIdentifierOperator_in_ruleSqlFragment16244 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleSqlFragment16263 = new BitSet(new long[]{0x0000000004E80010L});
        public static final BitSet FOLLOW_ruleMetaSql_in_ruleSqlFragment16283 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleSqlFragment16294 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleSqlFragment16312 = new BitSet(new long[]{0x0000000020004020L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleSqlFragment16324 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleDatabaseTable_in_ruleSqlFragment16344 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseColumn_in_ruleSqlFragment16372 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleSqlValue_in_entryRuleSqlValue16411 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleSqlValue16422 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleSqlValue16463 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleSqlValue16489 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleSqlValue16515 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleSqlValue16541 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleSqlValue16567 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleSqlValue16593 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleSqlValue16619 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleSqlValue16645 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleSqlValue16671 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleSqlValue16697 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleSqlValue16723 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleSqlValue16749 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleSqlValue16775 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleSqlValue16801 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleSqlValue16827 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleSqlValue16853 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleSqlValue16879 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleSqlValue16905 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleSqlValue16931 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleSqlValue16957 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleSqlValue16983 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleSqlValue17009 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleSqlValue17035 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleSqlValue17061 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleSqlValue17087 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleSqlValue17113 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleSqlValue17139 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleSqlValue17165 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleSqlValue17411 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleSqlValue17437 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleSqlValue17463 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleSqlValue17489 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleSqlValue17515 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleSqlValue17541 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleSqlValue17567 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleSqlValue17593 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleSqlValue17619 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleSqlValue17645 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleSqlValue17671 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleSqlValue17697 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleSqlValue17723 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleSqlValue17749 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleSqlValue17775 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleSqlValue17801 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleSqlValue17827 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleSqlValue17853 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleSqlValue17879 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleSqlValue17905 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleSqlValue17931 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleSqlValue17957 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleSqlValue17983 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleSqlValue18009 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleSqlValue18035 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleSqlValue18061 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleSqlValue18087 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleSqlValue18113 = new BitSet(new long[]{0x0000003FDEFD67F2L});
        public static final BitSet FOLLOW_ruleMetaSql_in_entryRuleMetaSql18161 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMetaSql18171 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetaSql18208 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18228 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18240 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18260 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleMetaSql18287 = new BitSet(new long[]{0x0000000000109050L});
        public static final BitSet FOLLOW_ruleIfSqlCond_in_ruleMetaSql18313 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18324 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18344 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18356 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18376 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleMetaSql18403 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18429 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18441 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18461 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18488 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18514 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleMetaSql18526 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18546 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleMetaSql18573 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMetaSql18590 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMetaSql18608 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleMetaSql18634 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleMetaSql18659 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMetaSql18675 = new BitSet(new long[]{0x0000003FFFFBFFF0L});
        public static final BitSet FOLLOW_ruleOrdSql_in_ruleMetaSql18695 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIfSql_in_entryRuleIfSql18732 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSql18742 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIfSqlFragment_in_ruleIfSql18787 = new BitSet(new long[]{0x0000003FFFBBFFF2L});
        public static final BitSet FOLLOW_ruleIfSqlFragment_in_entryRuleIfSqlFragment18823 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSqlFragment18833 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIfSqlValue_in_ruleIfSqlFragment18879 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleIfSqlFragment18897 = new BitSet(new long[]{0x00000000000040A0L});
        public static final BitSet FOLLOW_ruleColumn_in_ruleIfSqlFragment18917 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleIfSqlFragment18936 = new BitSet(new long[]{0x0000000000004620L});
        public static final BitSet FOLLOW_ruleConstant_in_ruleIfSqlFragment18956 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleIfSqlFragment18975 = new BitSet(new long[]{0x000000001C0046A0L});
        public static final BitSet FOLLOW_ruleIdentifier_in_ruleIfSqlFragment18995 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleIfSqlFragment19014 = new BitSet(new long[]{0x0000000000008000L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleIfSqlFragment19024 = new BitSet(new long[]{0x0000000004000020L});
        public static final BitSet FOLLOW_ruleConstantOperator_in_ruleIfSqlFragment19044 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleIfSqlFragment19063 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleIfSqlFragment19073 = new BitSet(new long[]{0x0000000004000020L});
        public static final BitSet FOLLOW_ruleIdentifierOperator_in_ruleIfSqlFragment19093 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleIfSqlFragment19112 = new BitSet(new long[]{0x0000000020004020L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleIfSqlFragment19124 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleDatabaseTable_in_ruleIfSqlFragment19144 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseColumn_in_ruleIfSqlFragment19172 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleIfSqlFragment19192 = new BitSet(new long[]{0x0000000000680010L});
        public static final BitSet FOLLOW_ruleIfMetaSql_in_ruleIfSqlFragment19212 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleIfSqlFragment19223 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIfSqlValue_in_entryRuleIfSqlValue19260 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSqlValue19271 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleIfSqlValue19312 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleIfSqlValue19338 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleIfSqlValue19364 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleIfSqlValue19390 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlValue19416 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleIfSqlValue19442 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleIfSqlValue19468 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleIfSqlValue19494 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleIfSqlValue19520 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleIfSqlValue19546 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleIfSqlValue19572 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleIfSqlValue19598 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlValue19624 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleIfSqlValue19650 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleIfSqlValue19676 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleIfSqlValue19702 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleIfSqlValue19728 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleIfSqlValue19754 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleIfSqlValue19780 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleIfSqlValue19806 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleIfSqlValue19832 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleIfSqlValue19858 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleIfSqlValue19884 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleIfSqlValue19910 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleIfSqlValue19936 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleIfSqlValue19962 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleIfSqlValue19988 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleIfSqlValue20226 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleIfSqlValue20252 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleIfSqlValue20278 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleIfSqlValue20304 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlValue20330 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleIfSqlValue20356 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleIfSqlValue20382 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleIfSqlValue20408 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleIfSqlValue20434 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleIfSqlValue20460 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleIfSqlValue20486 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleIfSqlValue20512 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlValue20538 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleIfSqlValue20564 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleIfSqlValue20590 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleIfSqlValue20616 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleIfSqlValue20642 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleIfSqlValue20668 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleIfSqlValue20694 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleIfSqlValue20720 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleIfSqlValue20746 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleIfSqlValue20772 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleIfSqlValue20798 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleIfSqlValue20824 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleIfSqlValue20850 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleIfSqlValue20876 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleIfSqlValue20902 = new BitSet(new long[]{0x0000003FDEB96FF2L});
        public static final BitSet FOLLOW_ruleIfMetaSql_in_entryRuleIfMetaSql20950 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfMetaSql20960 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfMetaSql20997 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21017 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21029 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21049 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleIfMetaSql21076 = new BitSet(new long[]{0x0000000000109050L});
        public static final BitSet FOLLOW_ruleIfSqlCond_in_ruleIfMetaSql21102 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21113 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21133 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21145 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21165 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleIfMetaSql21192 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21218 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21230 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21250 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21277 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21303 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleIfMetaSql21315 = new BitSet(new long[]{0x0000003FFFBBFFF0L});
        public static final BitSet FOLLOW_ruleIfSql_in_ruleIfMetaSql21335 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_ruleIfSqlCond_in_entryRuleIfSqlCond21374 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSqlCond21384 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlCond21421 = new BitSet(new long[]{0x0000000000109050L});
        public static final BitSet FOLLOW_ruleIfSqlBool_in_ruleIfSqlCond21443 = new BitSet(new long[]{0x0000000180000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlCond21455 = new BitSet(new long[]{0x0000000180000012L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleIfSqlCond21476 = new BitSet(new long[]{0x0000000000109050L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleIfSqlCond21496 = new BitSet(new long[]{0x0000000000109050L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlCond21516 = new BitSet(new long[]{0x0000000000109050L});
        public static final BitSet FOLLOW_ruleIfSqlBool_in_ruleIfSqlCond21538 = new BitSet(new long[]{0x0000000180000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleIfSqlCond21550 = new BitSet(new long[]{0x0000000180000012L});
        public static final BitSet FOLLOW_ruleIfSqlBool_in_entryRuleIfSqlBool21589 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIfSqlBool21599 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlBool21642 = new BitSet(new long[]{0x0000000000008000L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleIfSqlBool21659 = new BitSet(new long[]{0x0000000000004620L});
        public static final BitSet FOLLOW_ruleConstant_in_ruleIfSqlBool21679 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlBool21704 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleIfSqlBool21721 = new BitSet(new long[]{0x000000001C0046A0L});
        public static final BitSet FOLLOW_ruleIdentifier_in_ruleIfSqlBool21741 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleIfSqlBool21766 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleIfSqlBool21783 = new BitSet(new long[]{0x0000000000109050L});
        public static final BitSet FOLLOW_ruleIfSqlCond_in_ruleIfSqlBool21803 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleIfSqlBool21814 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrdSql_in_entryRuleOrdSql21850 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOrdSql21860 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrdSql2_in_ruleOrdSql21905 = new BitSet(new long[]{0x0000003FFFFBFFF2L});
        public static final BitSet FOLLOW_ruleOrdSql2_in_entryRuleOrdSql221941 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOrdSql221951 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrdSqlValue_in_ruleOrdSql221997 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleOrdSql222015 = new BitSet(new long[]{0x0000000000004620L});
        public static final BitSet FOLLOW_ruleConstant_in_ruleOrdSql222035 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleOrdSql222054 = new BitSet(new long[]{0x000000001C0046A0L});
        public static final BitSet FOLLOW_ruleIdentifier_in_ruleOrdSql222074 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleOrdSql222093 = new BitSet(new long[]{0x0000000020004020L});
        public static final BitSet FOLLOW_ruleDatabaseColumn_in_ruleOrdSql222113 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOrdSqlValue_in_entryRuleOrdSqlValue22151 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOrdSqlValue22162 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleOrdSqlValue22203 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleOrdSqlValue22229 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleOrdSqlValue22255 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleOrdSqlValue22281 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleOrdSqlValue22307 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleOrdSqlValue22333 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleOrdSqlValue22359 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleOrdSqlValue22385 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleOrdSqlValue22411 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleOrdSqlValue22437 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleOrdSqlValue22463 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleOrdSqlValue22489 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleOrdSqlValue22515 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleOrdSqlValue22541 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleOrdSqlValue22567 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleOrdSqlValue22593 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleOrdSqlValue22619 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleOrdSqlValue22645 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleOrdSqlValue22671 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleOrdSqlValue22697 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleOrdSqlValue22723 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleOrdSqlValue22749 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleOrdSqlValue22775 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleOrdSqlValue22801 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleOrdSqlValue22827 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleOrdSqlValue22853 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleOrdSqlValue22879 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleOrdSqlValue22905 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleOrdSqlValue22931 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleOrdSqlValue22957 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleOrdSqlValue23219 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleOrdSqlValue23245 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleOrdSqlValue23271 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleOrdSqlValue23297 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleOrdSqlValue23323 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleOrdSqlValue23349 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleOrdSqlValue23375 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleOrdSqlValue23401 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleOrdSqlValue23427 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleOrdSqlValue23453 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleOrdSqlValue23479 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleOrdSqlValue23505 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleOrdSqlValue23531 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleOrdSqlValue23557 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleOrdSqlValue23583 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleOrdSqlValue23609 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleOrdSqlValue23635 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleOrdSqlValue23661 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleOrdSqlValue23687 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleOrdSqlValue23713 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleOrdSqlValue23739 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleOrdSqlValue23765 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_DOT_in_ruleOrdSqlValue23791 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleOrdSqlValue23817 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleOrdSqlValue23843 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleOrdSqlValue23869 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleOrdSqlValue23895 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleOrdSqlValue23921 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleOrdSqlValue23947 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleOrdSqlValue23973 = new BitSet(new long[]{0x0000003FDFFB6FF2L});
        public static final BitSet FOLLOW_ruleColumn_in_entryRuleColumn24021 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleColumn24031 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedColumn_in_ruleColumn24077 = new BitSet(new long[]{0x00000000000040A2L});
        public static final BitSet FOLLOW_ruleExtendedColumn_in_ruleColumn24108 = new BitSet(new long[]{0x00000000000040A2L});
        public static final BitSet FOLLOW_ruleExtendedColumn_in_entryRuleExtendedColumn24145 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendedColumn24155 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedColumnName_in_ruleExtendedColumn24201 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleExtendedColumn24219 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleExtendedColumn24240 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleExtendedColumn24252 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleExtendedColumn24272 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleExtendedColumn24285 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedColumnName_in_entryRuleExtendedColumnName24322 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendedColumnName24332 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtendedColumnName24375 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleExtendedColumnName24395 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleExtendedColumnName24415 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleConstant_in_entryRuleConstant24458 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleConstant24468 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleConstant24512 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleConstant24532 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleConstant24560 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleConstant24580 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleConstant24606 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleConstant24627 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleConstant24639 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleConstant24659 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleConstant24672 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIdentifier_in_entryRuleIdentifier24709 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIdentifier24719 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleIdentifier24763 = new BitSet(new long[]{0x00000000000046A0L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleIdentifier24783 = new BitSet(new long[]{0x00000000000046A0L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleIdentifier24803 = new BitSet(new long[]{0x00000000000046A0L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleIdentifier24831 = new BitSet(new long[]{0x00000000000040A0L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleIdentifier24851 = new BitSet(new long[]{0x00000000000040A0L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleIdentifier24879 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleIdentifier24899 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleIdentifier24919 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleIdentifier24945 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleIdentifier24966 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleIdentifier24978 = new BitSet(new long[]{0x00000000001000A0L});
        public static final BitSet FOLLOW_ruleModifier_in_ruleIdentifier24998 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleIdentifier25011 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleConstantOperator_in_entryRuleConstantOperator25048 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleConstantOperator25058 = new BitSet(new long[]{0x0000000000000002L});
    }

    private static class FollowSets002 {
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleConstantOperator25101 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleConstantOperator25121 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleIdentifierOperator_in_entryRuleIdentifierOperator25164 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleIdentifierOperator25174 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleIdentifierOperator25217 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleIdentifierOperator25237 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseColumn_in_entryRuleDatabaseColumn25280 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseColumn25290 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDatabaseColumn25333 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleDatabaseColumn25353 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleDatabaseTable_in_entryRuleDatabaseTable25396 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleDatabaseTable25406 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleDatabaseTable25449 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleDatabaseTable25469 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingRule_in_entryRuleMappingRule25512 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingRule25522 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingRule25564 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleMappingRule25580 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleMappingRule25596 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleMappingRule25613 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleMappingRuleModifier_in_ruleMappingRule25633 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleMappingRule25646 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleMappingRule25656 = new BitSet(new long[]{0x00000000000000B0L});
        public static final BitSet FOLLOW_ruleMapping_in_ruleMappingRule25676 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleMappingRule25687 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMapping_in_entryRuleMapping25722 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMapping25732 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMapping25769 = new BitSet(new long[]{0x00000000000000B0L});
        public static final BitSet FOLLOW_ruleMappingItem_in_ruleMapping25791 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMapping25804 = new BitSet(new long[]{0x00000000000000B0L});
        public static final BitSet FOLLOW_ruleMappingItem_in_ruleMapping25826 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleMapping25840 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_ruleMappingItem_in_entryRuleMappingItem25877 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingItem25887 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingItem25931 = new BitSet(new long[]{0x0000000000008002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMappingItem25951 = new BitSet(new long[]{0x0000000000008002L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleMappingItem25971 = new BitSet(new long[]{0x00000000000040A0L});
        public static final BitSet FOLLOW_ruleMappingColumn_in_ruleMappingItem25991 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingColumn_in_entryRuleMappingColumn26029 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingColumn26039 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedMappingItem_in_ruleMappingColumn26085 = new BitSet(new long[]{0x00000000000040A2L});
        public static final BitSet FOLLOW_ruleExtendedMappingItem_in_ruleMappingColumn26116 = new BitSet(new long[]{0x00000000000040A2L});
        public static final BitSet FOLLOW_ruleExtendedMappingItem_in_entryRuleExtendedMappingItem26153 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtendedMappingItem26163 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingColumnName_in_ruleExtendedMappingItem26209 = new BitSet(new long[]{0x0000000000000042L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleExtendedMappingItem26227 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleMappingItemModifier_in_ruleExtendedMappingItem26248 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleExtendedMappingItem26260 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleMappingItemModifier_in_ruleExtendedMappingItem26280 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleExtendedMappingItem26293 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingColumnName_in_entryRuleMappingColumnName26330 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingColumnName26340 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingColumnName26383 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleMappingColumnName26403 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMappingColumnName26423 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOptionalFeature_in_entryRuleOptionalFeature26466 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOptionalFeature26476 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleOptionalFeature26518 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleOptionalFeature26534 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleOptionalFeature26550 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleOptionalFeature26567 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_ruleOptionalFeatureModifier_in_ruleOptionalFeature26587 = new BitSet(new long[]{0x0000000000010100L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleOptionalFeature26600 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleOptionalFeature26610 = new BitSet(new long[]{0x0000003FBFFFF7F0L});
        public static final BitSet FOLLOW_ruleFeatureValue_in_ruleOptionalFeature26630 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_RULE_SEMICOLON_in_ruleOptionalFeature26641 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleStatementModifier_in_entryRuleStatementModifier26677 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleStatementModifier26688 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleStatementModifier26728 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleStatementModifier26754 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingRuleModifier_in_entryRuleMappingRuleModifier26800 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingRuleModifier26811 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingRuleModifier26851 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMappingRuleModifier26877 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleMappingItemModifier_in_entryRuleMappingItemModifier26923 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleMappingItemModifier26934 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleMappingItemModifier26974 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleMappingItemModifier27000 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleOptionalFeatureModifier_in_entryRuleOptionalFeatureModifier27046 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleOptionalFeatureModifier27057 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleOptionalFeatureModifier27097 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleOptionalFeatureModifier27123 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleModifier_in_entryRuleModifier27169 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleModifier27180 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleModifier27221 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleModifier27244 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleModifier27270 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleFeatureValue_in_entryRuleFeatureValue27317 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleFeatureValue27328 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_REST_in_ruleFeatureValue27368 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleFeatureValue27394 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleFeatureValue27420 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleFeatureValue27446 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_WS_in_ruleFeatureValue27472 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleFeatureValue27498 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_STRING_in_ruleFeatureValue27524 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleFeatureValue27550 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_MINUS_in_ruleFeatureValue27576 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_PLUS_in_ruleFeatureValue27602 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_ruleFeatureValue27628 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_RPAREN_in_ruleFeatureValue27654 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleFeatureValue27680 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleFeatureValue27706 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_QUESTI_in_ruleFeatureValue27732 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_NOT_in_ruleFeatureValue27758 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_BAND_in_ruleFeatureValue27784 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_BOR_in_ruleFeatureValue27810 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_HASH_in_ruleFeatureValue27836 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleFeatureValue27862 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_CARET_in_ruleFeatureValue27888 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_EQUALS_in_ruleFeatureValue27914 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_ruleFeatureValue27940 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_ruleFeatureValue27966 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_PERCENT_in_ruleFeatureValue27992 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_AND_in_ruleFeatureValue28018 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_OR_in_ruleFeatureValue28044 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_ESC_CHAR_in_ruleFeatureValue28070 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_ON_OFF_in_ruleFeatureValue28096 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_STATEMENT_TYPE_in_ruleFeatureValue28122 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_MAPPING_TYPE_in_ruleFeatureValue28148 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_RULE_OPTION_TYPE_in_ruleFeatureValue28174 = new BitSet(new long[]{0x0000003FBFFFF7F2L});
        public static final BitSet FOLLOW_rulePojoType_in_entryRulePojoType28220 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoType28230 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_133_in_rulePojoType28276 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_134_in_rulePojoType28305 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_135_in_rulePojoType28334 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_136_in_rulePojoType28363 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_137_in_rulePojoType28392 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_138_in_rulePojoType28421 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_139_in_rulePojoType28450 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_140_in_rulePojoType28479 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_141_in_rulePojoType28508 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoType28543 = new BitSet(new long[]{0x0000000000005020L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoType28555 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoType28574 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoType28604 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_rulePojoType28618 = new BitSet(new long[]{0x0000000000005020L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoType28630 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoType28649 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoType28679 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_rulePojoType28691 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_142_in_rulePojoType28712 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePackageDeclaration_in_entryRulePackageDeclaration28768 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePackageDeclaration28778 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_143_in_rulePackageDeclaration28819 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePackageDeclaration28838 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000000010000L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_rulePackageDeclaration28858 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000000010000L});
        public static final BitSet FOLLOW_144_in_rulePackageDeclaration28879 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePackageDeclaration28898 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePackageDeclaration28918 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePackageDeclaration28939 = new BitSet(new long[]{0x0003FC0001040020L,0x0000040000000000L,0x000000300706801EL});
        public static final BitSet FOLLOW_ruleAbstractPojoEntity_in_rulePackageDeclaration28959 = new BitSet(new long[]{0x0003FC0001040020L,0x0000040000000000L,0x000000300706801EL});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePackageDeclaration28971 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotation_in_entryRuleAnnotation29010 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAnnotation29020 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleAnnotation29068 = new BitSet(new long[]{0x0000000000001002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleAnnotation29080 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleAnnotation29090 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleAnnotation29100 = new BitSet(new long[]{0x0000000000010020L});
        public static final BitSet FOLLOW_ruleAnnotationProperty_in_ruleAnnotation29120 = new BitSet(new long[]{0x0000000000010022L});
        public static final BitSet FOLLOW_ruleAnnotationProperty_in_entryRuleAnnotationProperty29159 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAnnotationProperty29169 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COMMA_in_ruleAnnotationProperty29206 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29224 = new BitSet(new long[]{0x00000040000010A0L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleAnnotationProperty29241 = new BitSet(new long[]{0x0000000000005020L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleAnnotationProperty29253 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29272 = new BitSet(new long[]{0x00000040000000A0L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleAnnotationProperty29302 = new BitSet(new long[]{0x00000040000000A0L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleAnnotationProperty29323 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_VALUE_in_ruleAnnotationProperty29351 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleAnnotationProperty29379 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEntity_in_entryRuleEntity29421 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEntity29431 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoEntity_in_ruleEntity29478 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumEntity_in_ruleEntity29505 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotatedEntity_in_entryRuleAnnotatedEntity29540 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAnnotatedEntity29550 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleAnnotatedEntity29593 = new BitSet(new long[]{0x0000000001004020L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleAnnotatedEntity29612 = new BitSet(new long[]{0x0000000001004020L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleAnnotatedEntity29631 = new BitSet(new long[]{0x0000000001004020L});
        public static final BitSet FOLLOW_RULE_AT_in_ruleAnnotatedEntity29650 = new BitSet(new long[]{0x0000000001004020L});
        public static final BitSet FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity29671 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000000L,0x0000001006000002L});
        public static final BitSet FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity29699 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000000L,0x0000001006000002L});
        public static final BitSet FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity29728 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000000L,0x0000001006000002L});
        public static final BitSet FOLLOW_ruleAnnotation_in_ruleAnnotatedEntity29757 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000000L,0x0000001006000002L});
        public static final BitSet FOLLOW_ruleEntity_in_ruleAnnotatedEntity29781 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAbstractPojoEntity_in_entryRuleAbstractPojoEntity29823 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleAbstractPojoEntity29833 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePackageDeclaration_in_ruleAbstractPojoEntity29884 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleAnnotatedEntity_in_ruleAbstractPojoEntity29911 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImport_in_ruleAbstractPojoEntity29938 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplements_in_ruleAbstractPojoEntity29965 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtends_in_ruleAbstractPojoEntity29992 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplPackage_in_ruleAbstractPojoEntity30019 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDao_in_ruleAbstractPojoEntity30046 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImport_in_entryRuleImport30091 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImport30101 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_145_in_ruleImport30142 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_ruleImport30163 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleImplements_in_entryRuleImplements30209 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImplements30219 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_146_in_ruleImplements30260 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleImplements30283 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000F80000L});
        public static final BitSet FOLLOW_147_in_ruleImplements30301 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000F00000L});
        public static final BitSet FOLLOW_148_in_ruleImplements30328 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000E00000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplements30348 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000E00000L});
        public static final BitSet FOLLOW_149_in_ruleImplements30364 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000C00000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplements30384 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000C00000L});
        public static final BitSet FOLLOW_150_in_ruleImplements30400 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplements30420 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_151_in_ruleImplements30436 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplements30456 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_ruleExtends_in_entryRuleExtends30505 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleExtends30515 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_152_in_ruleExtends30556 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleExtends30579 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000F80000L});
        public static final BitSet FOLLOW_147_in_ruleExtends30597 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000F00000L});
        public static final BitSet FOLLOW_148_in_ruleExtends30624 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000E00000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtends30644 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000E00000L});
        public static final BitSet FOLLOW_149_in_ruleExtends30660 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000C00000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtends30680 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000C00000L});
        public static final BitSet FOLLOW_150_in_ruleExtends30696 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtends30716 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_151_in_ruleExtends30732 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleExtends30752 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_ruleImplPackage_in_entryRuleImplPackage30801 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleImplPackage30811 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_106_in_ruleImplPackage30852 = new BitSet(new long[]{0x0000000000004020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleImplPackage30871 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleImplPackage30891 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoEntityModifier1_in_entryRulePojoEntityModifier130939 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoEntityModifier130949 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_153_in_rulePojoEntityModifier130992 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_154_in_rulePojoEntityModifier131029 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoEntityModifier2_in_entryRulePojoEntityModifier231078 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoEntityModifier231088 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_152_in_rulePojoEntityModifier231126 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoEntityModifier231146 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_155_in_rulePojoEntityModifier231166 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoEntityModifier231185 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePojoEntityModifier231205 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_156_in_rulePojoEntityModifier231239 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoEntityModifier231269 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_157_in_rulePojoEntityModifier231295 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePojoEntityModifier231312 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoEntity_in_entryRulePojoEntity31360 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoEntity31370 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoEntityModifier1_in_rulePojoEntity31420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000006000002L});
        public static final BitSet FOLLOW_129_in_rulePojoEntity31433 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoEntity31450 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000039000000L});
        public static final BitSet FOLLOW_rulePojoEntityModifier2_in_rulePojoEntity31476 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000039000000L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePojoEntity31488 = new BitSet(new long[]{0x0000000001040020L});
        public static final BitSet FOLLOW_rulePojoAnnotatedProperty_in_rulePojoEntity31508 = new BitSet(new long[]{0x0000000001040020L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePojoEntity31520 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoAnnotatedProperty_in_entryRulePojoAnnotatedProperty31559 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoAnnotatedProperty31569 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_rulePojoAnnotatedProperty31612 = new BitSet(new long[]{0x0000000001004020L});
        public static final BitSet FOLLOW_RULE_AT_in_rulePojoAnnotatedProperty31631 = new BitSet(new long[]{0x0000000001004020L});
        public static final BitSet FOLLOW_RULE_AT_in_rulePojoAnnotatedProperty31650 = new BitSet(new long[]{0x0000000001004020L});
        public static final BitSet FOLLOW_ruleAnnotation_in_rulePojoAnnotatedProperty31671 = new BitSet(new long[]{0x0000000001000020L});
        public static final BitSet FOLLOW_ruleAnnotation_in_rulePojoAnnotatedProperty31699 = new BitSet(new long[]{0x0000000001000020L});
        public static final BitSet FOLLOW_ruleAnnotation_in_rulePojoAnnotatedProperty31728 = new BitSet(new long[]{0x0000000001000020L});
        public static final BitSet FOLLOW_rulePojoProperty_in_rulePojoAnnotatedProperty31752 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoPropertyModifier_in_entryRulePojoPropertyModifier31788 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoPropertyModifier31798 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_158_in_rulePojoPropertyModifier31841 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_155_in_rulePojoPropertyModifier31878 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_159_in_rulePojoPropertyModifier31915 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_160_in_rulePojoPropertyModifier31947 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePojoPropertyModifier31964 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_161_in_rulePojoPropertyModifier31994 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_162_in_rulePojoPropertyModifier32026 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoPropertyModifier32043 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_rulePojoPropertyModifier32060 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoPropertyModifier32077 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_163_in_rulePojoPropertyModifier32102 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoPropertyModifier32119 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_41_in_rulePojoPropertyModifier32136 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoPropertyModifier32153 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoProperty_in_entryRulePojoProperty32201 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoProperty32211 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoProperty32257 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000000L,0x0000000000003FC0L});
        public static final BitSet FOLLOW_134_in_rulePojoProperty32283 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_135_in_rulePojoProperty32312 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_136_in_rulePojoProperty32341 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_137_in_rulePojoProperty32370 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_138_in_rulePojoProperty32399 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_139_in_rulePojoProperty32428 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_140_in_rulePojoProperty32457 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_141_in_rulePojoProperty32486 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoProperty32521 = new BitSet(new long[]{0x0000000000005020L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoProperty32533 = new BitSet(new long[]{0x0000000000001020L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoProperty32545 = new BitSet(new long[]{0x0000000008000022L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoProperty32564 = new BitSet(new long[]{0x0000000008000022L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoProperty32592 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoProperty32623 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_RULE_LESS_THAN_in_rulePojoProperty32637 = new BitSet(new long[]{0x0000000000005020L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoProperty32649 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoProperty32668 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_rulePojoProperty32698 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_RULE_MORE_THAN_in_rulePojoProperty32710 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8004000L});
        public static final BitSet FOLLOW_142_in_rulePojoProperty32731 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8000000L});
        public static final BitSet FOLLOW_rulePojoPropertyModifier_in_rulePojoProperty32766 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FC8000000L});
        public static final BitSet FOLLOW_ruleEnumEntityModifier1_in_entryRuleEnumEntityModifier132807 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumEntityModifier132817 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_153_in_ruleEnumEntityModifier132859 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumEntityModifier2_in_entryRuleEnumEntityModifier232907 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumEntityModifier232917 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_152_in_ruleEnumEntityModifier232955 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleEnumEntityModifier232975 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_157_in_ruleEnumEntityModifier232995 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleEnumEntityModifier233012 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumEntity_in_entryRuleEnumEntity33060 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumEntity33070 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumEntityModifier1_in_ruleEnumEntity33120 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001002000000L});
        public static final BitSet FOLLOW_164_in_ruleEnumEntity33133 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleEnumEntity33150 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000021000000L});
        public static final BitSet FOLLOW_ruleEnumEntityModifier2_in_ruleEnumEntity33176 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000021000000L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_ruleEnumEntity33188 = new BitSet(new long[]{0x0000000000040020L});
        public static final BitSet FOLLOW_ruleEnumProperty_in_ruleEnumEntity33208 = new BitSet(new long[]{0x0000000000040020L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_ruleEnumEntity33220 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleEnumProperty_in_entryRuleEnumProperty33265 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleEnumProperty33275 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleEnumProperty33321 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000000L,0x0000000000003FC0L});
        public static final BitSet FOLLOW_134_in_ruleEnumProperty33347 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_135_in_ruleEnumProperty33376 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_136_in_ruleEnumProperty33405 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_137_in_ruleEnumProperty33434 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_138_in_ruleEnumProperty33463 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_139_in_ruleEnumProperty33492 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_140_in_ruleEnumProperty33521 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_141_in_ruleEnumProperty33550 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleEnumProperty33584 = new BitSet(new long[]{0x0000000000005020L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleEnumProperty33596 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleEnumProperty33606 = new BitSet(new long[]{0x0000004000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_ruleEnumProperty33624 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_STRING_VALUE_in_ruleEnumProperty33644 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleEnumProperty33682 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDaoModifier_in_entryRulePojoDaoModifier33725 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoDaoModifier33735 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_152_in_rulePojoDaoModifier33773 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDaoModifier33793 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_157_in_rulePojoDaoModifier33813 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_RULE_NUMBER_in_rulePojoDaoModifier33830 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoDao_in_entryRulePojoDao33878 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoDao33888 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoEntityModifier1_in_rulePojoDao33938 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002006000000L});
        public static final BitSet FOLLOW_165_in_rulePojoDao33951 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDao33968 = new BitSet(new long[]{0x0000000000021000L,0x0000000000000000L,0x0000000021000000L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoDao33985 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoDao33995 = new BitSet(new long[]{0x0000000000001020L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoDao34011 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoDao34037 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000021000000L});
        public static final BitSet FOLLOW_rulePojoDaoModifier_in_rulePojoDao34060 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000021000000L});
        public static final BitSet FOLLOW_RULE_LBRACE_in_rulePojoDao34072 = new BitSet(new long[]{0x0000000000040020L,0x0000000000000000L,0x000007C000000000L});
        public static final BitSet FOLLOW_rulePojoMethod_in_rulePojoDao34092 = new BitSet(new long[]{0x0000000000040020L,0x0000000000000000L,0x000007C000000000L});
        public static final BitSet FOLLOW_ruleToInitMethod_in_rulePojoDao34114 = new BitSet(new long[]{0x0000000000040020L});
        public static final BitSet FOLLOW_RULE_RBRACE_in_rulePojoDao34126 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoMethodModifier_in_entryRulePojoMethodModifier34165 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoMethodModifier34175 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_166_in_rulePojoMethodModifier34218 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_167_in_rulePojoMethodModifier34255 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_168_in_rulePojoMethodModifier34292 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_169_in_rulePojoMethodModifier34329 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_170_in_rulePojoMethodModifier34366 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoMethod_in_entryRulePojoMethod34421 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoMethod34431 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_rulePojoMethodModifier_in_rulePojoMethod34481 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x000007C000000000L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoMethod34499 = new BitSet(new long[]{0x0000000000001002L,0x0000000000000000L,0x0000000000003FE0L});
        public static final BitSet FOLLOW_rulePojoType_in_rulePojoMethod34526 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoMethod34537 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoMethod34547 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_rulePojoMethod34557 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_rulePojoMethodArg_in_rulePojoMethod34577 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_ruleToInitMethod_in_entryRuleToInitMethod34626 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleToInitMethod34636 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleToInitMethod34682 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleToInitMethod34698 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleToInitMethod34708 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_RULE_COLON_in_ruleToInitMethod34718 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_rulePojoMethodArg_in_ruleToInitMethod34738 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_rulePojoMethodArg_in_entryRulePojoMethodArg34785 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRulePojoMethodArg34795 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_rulePojoMethodArg34841 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000000L,0x0000000000003FE0L});
        public static final BitSet FOLLOW_rulePojoType_in_rulePojoMethodArg34867 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard34908 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard34919 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard34966 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000080000000000L});
        public static final BitSet FOLLOW_171_in_ruleQualifiedNameWithWildcard34985 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName35028 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName35039 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_in_ruleQualifiedName35079 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_IDENT_DOT_in_ruleQualifiedName35105 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_COLON_in_synpred1_InternalProcessorDsl4993 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred2_InternalProcessorDsl13825 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred3_InternalProcessorDsl17182 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred4_InternalProcessorDsl20005 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_set_in_synpred5_InternalProcessorDsl22974 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedColumn_in_synpred6_InternalProcessorDsl24091 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred7_InternalProcessorDsl24214 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred8_InternalProcessorDsl24601 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred9_InternalProcessorDsl24940 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_ruleExtendedMappingItem_in_synpred10_InternalProcessorDsl26099 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_LPAREN_in_synpred11_InternalProcessorDsl26222 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_synpred12_InternalProcessorDsl29588 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_synpred13_InternalProcessorDsl29607 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_synpred14_InternalProcessorDsl29626 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_synpred15_InternalProcessorDsl29645 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_synpred16_InternalProcessorDsl31607 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_synpred17_InternalProcessorDsl31626 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_RULE_AT_in_synpred18_InternalProcessorDsl31645 = new BitSet(new long[]{0x0000000000000002L});
    }


}