/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package org.sqlproc.model;

import org.eclipse.xtext.common.types.access.IJvmTypeProvider;
import org.eclipse.xtext.common.types.xtext.AbstractTypeScopeProvider;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.resource.IDefaultResourceDescriptionStrategy;
import org.eclipse.xtext.resource.IResourceFactory;
import org.eclipse.xtext.xbase.compiler.ErrorSafeExtensions;
import org.eclipse.xtext.xbase.scoping.batch.XbaseBatchScopeProvider;
import org.sqlproc.model.AbstractProcessorModelRuntimeModule;
import org.sqlproc.model.ProcesorModelResourceDescriptionStrategy;
import org.sqlproc.model.ProcessorResourceFactory;
import org.sqlproc.model.generator.ProcessorModelErrorSafeExtensions;
import org.sqlproc.model.generator.ProcessorModelGenerator;
import org.sqlproc.model.property.ModelPropertyBean;
import org.sqlproc.model.scoping.ProcessorModelClasspathBasedTypeScopeProvider;
import org.sqlproc.model.scoping.ProcessorModelClasspathTypeProviderFactory;
import org.sqlproc.model.scoping.ProcessorModelScopeProvider;
import org.sqlproc.plugin.lib.property.ModelProperty;
import org.sqlproc.plugin.lib.resolver.DbResolver;
import org.sqlproc.plugin.lib.resolver.DbResolverBean;
import org.sqlproc.plugin.lib.resolver.PojoResolverFactory;
import org.sqlproc.plugin.lib.resolver.PojoResolverFactoryBean;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
@SuppressWarnings("all")
public class ProcessorModelRuntimeModule extends AbstractProcessorModelRuntimeModule {
  @Override
  public Class<? extends IGenerator> bindIGenerator() {
    return ProcessorModelGenerator.class;
  }
  
  public Class<? extends ModelProperty> bindModelProperty() {
    return ModelPropertyBean.class;
  }
  
  public Class<? extends PojoResolverFactory> bindPojoResolverFactory() {
    return PojoResolverFactoryBean.class;
  }
  
  public Class<? extends DbResolver> bindDbResolver() {
    return DbResolverBean.class;
  }
  
  @Override
  public Class<? extends IResourceFactory> bindIResourceFactory() {
    return ProcessorResourceFactory.class;
  }
  
  @Override
  public Class<? extends XbaseBatchScopeProvider> bindXbaseBatchScopeProvider() {
    return ProcessorModelScopeProvider.class;
  }
  
  @Override
  public Class<? extends IDefaultResourceDescriptionStrategy> bindIDefaultResourceDescriptionStrategy() {
    return ProcesorModelResourceDescriptionStrategy.class;
  }
  
  public Class<? extends ErrorSafeExtensions> bindErrorSafeExtensions() {
    return ProcessorModelErrorSafeExtensions.class;
  }
  
  @Override
  public Class<? extends IJvmTypeProvider.Factory> bindIJvmTypeProvider$Factory() {
    return ProcessorModelClasspathTypeProviderFactory.class;
  }
  
  @Override
  public Class<? extends AbstractTypeScopeProvider> bindAbstractTypeScopeProvider() {
    return ProcessorModelClasspathBasedTypeScopeProvider.class;
  }
}
